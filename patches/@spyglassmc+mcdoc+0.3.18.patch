diff --git a/node_modules/@spyglassmc/mcdoc/lib/runtime/checker/index.js b/node_modules/@spyglassmc/mcdoc/lib/runtime/checker/index.js
index 2d51735..e37d8cc 100644
--- a/node_modules/@spyglassmc/mcdoc/lib/runtime/checker/index.js
+++ b/node_modules/@spyglassmc/mcdoc/lib/runtime/checker/index.js
@@ -545,9 +545,9 @@ function simplifyReference(typeDef, context) {
         context.ctx.logger.warn(`Tried to access unknown reference ${typeDef.path}`);
         return { typeDef: { kind: 'union', members: [] } };
     }
-    if (data.simplifiedTypeDef) {
-        return { typeDef: data.simplifiedTypeDef };
-    }
+    // if (data.simplifiedTypeDef) {
+    //     return { typeDef: data.simplifiedTypeDef };
+    // }
     const simplifiedResult = simplify(data.typeDef, context);
     if (typeDef.attributes?.length) {
         simplifiedResult.typeDef = {
@@ -555,16 +555,16 @@ function simplifyReference(typeDef, context) {
             attributes: [...typeDef.attributes, ...simplifiedResult.typeDef.attributes ?? []],
         };
     }
-    if (!simplifiedResult.dynamicData) {
-        symbol.amend({
-            data: {
-                data: {
-                    ...data,
-                    simplifiedTypeDef: simplifiedResult.typeDef,
-                },
-            },
-        });
-    }
+    // if (!simplifiedResult.dynamicData) {
+    //     symbol.amend({
+    //         data: {
+    //             data: {
+    //                 ...data,
+    //                 simplifiedTypeDef: simplifiedResult.typeDef,
+    //             },
+    //         },
+    //     });
+    // }
     return simplifiedResult;
 }
 function simplifyDispatcher(typeDef, context) {
@@ -604,23 +604,23 @@ function resolveIndices(parallelIndices, symbolMap, symbolQuery, context) {
     let dynamicData = false;
     let values = [];
     function pushValue(key, data) {
-        if (data.simplifiedTypeDef) {
-            if (data.simplifiedTypeDef.kind === 'union') {
-                values.push(...data.simplifiedTypeDef.members);
-            }
-            else {
-                values.push(data.simplifiedTypeDef);
-            }
-        }
-        else {
+        // if (data.simplifiedTypeDef) {
+        //     if (data.simplifiedTypeDef.kind === 'union') {
+        //         values.push(...data.simplifiedTypeDef.members);
+        //     }
+        //     else {
+        //         values.push(data.simplifiedTypeDef);
+        //     }
+        // }
+        // else {
             const simplifiedResult = simplify(data.typeDef, context);
             if (simplifiedResult.dynamicData) {
                 dynamicData = true;
             }
             else if (symbolQuery) {
-                symbolQuery.member(key, s => s.amend({
-                    data: { data: { ...data, simplifiedTypeDef: simplifiedResult.typeDef } },
-                }));
+                // symbolQuery.member(key, s => s.amend({
+                //     data: { data: { ...data, simplifiedTypeDef: simplifiedResult.typeDef } },
+                // }));
             }
             if (simplifiedResult.typeDef.kind === 'union') {
                 values.push(...simplifiedResult.typeDef.members);
@@ -628,7 +628,7 @@ function resolveIndices(parallelIndices, symbolMap, symbolQuery, context) {
             else {
                 values.push(simplifiedResult.typeDef);
             }
-        }
+        // }
     }
     let unkownTypeDef = false;
     function getUnknownTypeDef() {
