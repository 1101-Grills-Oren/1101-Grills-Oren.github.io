{"version":3,"file":"vendor.5f8b9a3f.js","sources":["../../node_modules/preact/dist/preact.module.js","../../node_modules/preact-router/dist/preact-router.es.js","../../node_modules/preact/hooks/dist/hooks.module.js","../../node_modules/@mcschema/core/lib/model/Path.js","../../node_modules/@mcschema/core/lib/model/Errors.js","../../node_modules/@mcschema/core/lib/model/DataModel.js","../../node_modules/@mcschema/core/lib/nodes/Node.js","../../node_modules/@mcschema/core/lib/nodes/BooleanNode.js","../../node_modules/@mcschema/core/lib/nodes/ListNode.js","../../node_modules/@mcschema/core/lib/nodes/SwitchNode.js","../../node_modules/@mcschema/core/lib/nodes/ChoiceNode.js","../../node_modules/@mcschema/core/lib/nodes/MapNode.js","../../node_modules/@mcschema/core/lib/nodes/NumberNode.js","../../node_modules/@mcschema/core/lib/utils.js","../../node_modules/@mcschema/core/lib/nodes/ObjectNode.js","../../node_modules/@mcschema/core/lib/nodes/Reference.js","../../node_modules/@mcschema/core/lib/nodes/StringNode.js","../../node_modules/@mcschema/core/lib/Hook.js","../../node_modules/@mcschema/core/lib/Registries.js","../../node_modules/@mcschema/core/lib/ValidationOption.js","../../node_modules/@mcschema/core/lib/index.js","../../node_modules/seedrandom/lib/alea.js","../../node_modules/seedrandom/lib/xor128.js","../../node_modules/seedrandom/lib/xorwow.js","../../node_modules/seedrandom/lib/xorshift7.js","../../node_modules/seedrandom/lib/xor4096.js","../../node_modules/seedrandom/lib/tychei.js","../../__vite-browser-external","../../node_modules/seedrandom/seedrandom.js","../../node_modules/seedrandom/index.js","../../node_modules/@mcschema/java-1.15/lib/Collections.js","../../node_modules/@mcschema/java-1.15/lib/schemas/Common.js","../../node_modules/@mcschema/java-1.15/lib/schemas/Predicates.js","../../node_modules/@mcschema/java-1.15/lib/schemas/Advancement.js","../../node_modules/@mcschema/java-1.15/lib/schemas/Condition.js","../../node_modules/@mcschema/java-1.15/lib/LootContext.js","../../node_modules/@mcschema/java-1.15/lib/schemas/LootTable.js","../../node_modules/@mcschema/java-1.15/lib/schemas/PackMcmeta.js","../../node_modules/@mcschema/java-1.15/lib/schemas/Recipe.js","../../node_modules/@mcschema/java-1.15/lib/schemas/Tags.js","../../node_modules/@mcschema/java-1.15/lib/schemas/TextComponent.js","../../node_modules/@mcschema/java-1.15/lib/schemas/index.js","../../node_modules/@mcschema/java-1.15/lib/index.js","../../node_modules/@mcschema/java-1.16/lib/Collections.js","../../node_modules/@mcschema/java-1.16/lib/schemas/Common.js","../../node_modules/@mcschema/java-1.16/lib/schemas/Advancement.js","../../node_modules/@mcschema/java-1.16/lib/schemas/Condition.js","../../node_modules/@mcschema/java-1.16/lib/schemas/Dimension.js","../../node_modules/@mcschema/java-1.16/lib/schemas/DimensionType.js","../../node_modules/@mcschema/java-1.16/lib/LootContext.js","../../node_modules/@mcschema/java-1.16/lib/schemas/LootTable.js","../../node_modules/@mcschema/java-1.16/lib/schemas/PackMcmeta.js","../../node_modules/@mcschema/java-1.16/lib/schemas/Predicates.js","../../node_modules/@mcschema/java-1.16/lib/schemas/Recipe.js","../../node_modules/@mcschema/java-1.16/lib/schemas/Tags.js","../../node_modules/@mcschema/java-1.16/lib/schemas/TextComponent.js","../../node_modules/@mcschema/java-1.16/lib/schemas/worldgen/Biome.js","../../node_modules/@mcschema/java-1.16/lib/schemas/worldgen/Carver.js","../../node_modules/@mcschema/java-1.16/lib/schemas/worldgen/Decorator.js","../../node_modules/@mcschema/java-1.16/lib/schemas/worldgen/ProcessorList.js","../../node_modules/@mcschema/java-1.16/lib/schemas/worldgen/Feature.js","../../node_modules/@mcschema/java-1.16/lib/schemas/worldgen/NoiseSettings.js","../../node_modules/@mcschema/java-1.16/lib/schemas/worldgen/StructureFeature.js","../../node_modules/@mcschema/java-1.16/lib/schemas/worldgen/SurfaceBuilder.js","../../node_modules/@mcschema/java-1.16/lib/schemas/worldgen/TemplatePool.js","../../node_modules/@mcschema/java-1.16/lib/schemas/worldgen/index.js","../../node_modules/@mcschema/java-1.16/lib/schemas/WorldSettings.js","../../node_modules/@mcschema/java-1.16/lib/schemas/index.js","../../node_modules/@mcschema/java-1.16/lib/index.js","../../node_modules/@mcschema/java-1.17/lib/Collections.js","../../node_modules/@mcschema/java-1.17/lib/schemas/Advancement.js","../../node_modules/@mcschema/java-1.17/lib/schemas/Common.js","../../node_modules/@mcschema/java-1.17/lib/schemas/Condition.js","../../node_modules/@mcschema/java-1.17/lib/schemas/Dimension.js","../../node_modules/@mcschema/java-1.17/lib/schemas/DimensionType.js","../../node_modules/@mcschema/java-1.17/lib/schemas/ItemModifier.js","../../node_modules/@mcschema/java-1.17/lib/LootContext.js","../../node_modules/@mcschema/java-1.17/lib/schemas/LootTable.js","../../node_modules/@mcschema/java-1.17/lib/schemas/PackMcmeta.js","../../node_modules/@mcschema/java-1.17/lib/schemas/Predicates.js","../../node_modules/@mcschema/java-1.17/lib/schemas/Recipe.js","../../node_modules/@mcschema/java-1.17/lib/schemas/Tags.js","../../node_modules/@mcschema/java-1.17/lib/schemas/TextComponent.js","../../node_modules/@mcschema/java-1.17/lib/schemas/worldgen/Biome.js","../../node_modules/@mcschema/java-1.17/lib/schemas/worldgen/Carver.js","../../node_modules/@mcschema/java-1.17/lib/schemas/worldgen/Decorator.js","../../node_modules/@mcschema/java-1.17/lib/schemas/worldgen/ProcessorList.js","../../node_modules/@mcschema/java-1.17/lib/schemas/worldgen/Feature.js","../../node_modules/@mcschema/java-1.17/lib/schemas/worldgen/NoiseSettings.js","../../node_modules/@mcschema/java-1.17/lib/schemas/worldgen/StructureFeature.js","../../node_modules/@mcschema/java-1.17/lib/schemas/worldgen/SurfaceBuilder.js","../../node_modules/@mcschema/java-1.17/lib/schemas/worldgen/TemplatePool.js","../../node_modules/@mcschema/java-1.17/lib/schemas/worldgen/index.js","../../node_modules/@mcschema/java-1.17/lib/schemas/WorldSettings.js","../../node_modules/@mcschema/java-1.17/lib/schemas/index.js","../../node_modules/@mcschema/java-1.17/lib/index.js"],"sourcesContent":["var n,l,u,i,t,o,r={},f=[],e=/acit|ex(?:s|g|n|p|$)|rph|grid|ows|mnc|ntw|ine[ch]|zoo|^ord|itera/i;function c(n,l){for(var u in l)n[u]=l[u];return n}function s(n){var l=n.parentNode;l&&l.removeChild(n)}function a(n,l,u){var i,t,o,r=arguments,f={};for(o in l)\"key\"==o?i=l[o]:\"ref\"==o?t=l[o]:f[o]=l[o];if(arguments.length>3)for(u=[u],o=3;o<arguments.length;o++)u.push(r[o]);if(null!=u&&(f.children=u),\"function\"==typeof n&&null!=n.defaultProps)for(o in n.defaultProps)void 0===f[o]&&(f[o]=n.defaultProps[o]);return v(n,f,i,t,null)}function v(l,u,i,t,o){var r={type:l,props:u,key:i,ref:t,__k:null,__:null,__b:0,__e:null,__d:void 0,__c:null,__h:null,constructor:void 0,__v:null==o?++n.__v:o};return null!=n.vnode&&n.vnode(r),r}function h(){return{current:null}}function y(n){return n.children}function p(n,l){this.props=n,this.context=l}function d(n,l){if(null==l)return n.__?d(n.__,n.__.__k.indexOf(n)+1):null;for(var u;l<n.__k.length;l++)if(null!=(u=n.__k[l])&&null!=u.__e)return u.__e;return\"function\"==typeof n.type?d(n):null}function _(n){var l,u;if(null!=(n=n.__)&&null!=n.__c){for(n.__e=n.__c.base=null,l=0;l<n.__k.length;l++)if(null!=(u=n.__k[l])&&null!=u.__e){n.__e=n.__c.base=u.__e;break}return _(n)}}function k(l){(!l.__d&&(l.__d=!0)&&u.push(l)&&!b.__r++||t!==n.debounceRendering)&&((t=n.debounceRendering)||i)(b)}function b(){for(var n;b.__r=u.length;)n=u.sort(function(n,l){return n.__v.__b-l.__v.__b}),u=[],n.some(function(n){var l,u,i,t,o,r;n.__d&&(o=(t=(l=n).__v).__e,(r=l.__P)&&(u=[],(i=c({},t)).__v=t.__v+1,I(r,t,i,l.__n,void 0!==r.ownerSVGElement,null!=t.__h?[o]:null,u,null==o?d(t):o,t.__h),T(u,t),t.__e!=o&&_(t)))})}function m(n,l,u,i,t,o,e,c,s,a){var h,p,_,k,b,m,w,A=i&&i.__k||f,P=A.length;for(u.__k=[],h=0;h<l.length;h++)if(null!=(k=u.__k[h]=null==(k=l[h])||\"boolean\"==typeof k?null:\"string\"==typeof k||\"number\"==typeof k||\"bigint\"==typeof k?v(null,k,null,null,k):Array.isArray(k)?v(y,{children:k},null,null,null):k.__b>0?v(k.type,k.props,k.key,null,k.__v):k)){if(k.__=u,k.__b=u.__b+1,null===(_=A[h])||_&&k.key==_.key&&k.type===_.type)A[h]=void 0;else for(p=0;p<P;p++){if((_=A[p])&&k.key==_.key&&k.type===_.type){A[p]=void 0;break}_=null}I(n,k,_=_||r,t,o,e,c,s,a),b=k.__e,(p=k.ref)&&_.ref!=p&&(w||(w=[]),_.ref&&w.push(_.ref,null,k),w.push(p,k.__c||b,k)),null!=b?(null==m&&(m=b),\"function\"==typeof k.type&&null!=k.__k&&k.__k===_.__k?k.__d=s=g(k,s,n):s=x(n,k,_,A,b,s),a||\"option\"!==u.type?\"function\"==typeof u.type&&(u.__d=s):n.value=\"\"):s&&_.__e==s&&s.parentNode!=n&&(s=d(_))}for(u.__e=m,h=P;h--;)null!=A[h]&&(\"function\"==typeof u.type&&null!=A[h].__e&&A[h].__e==u.__d&&(u.__d=d(i,h+1)),L(A[h],A[h]));if(w)for(h=0;h<w.length;h++)z(w[h],w[++h],w[++h])}function g(n,l,u){var i,t;for(i=0;i<n.__k.length;i++)(t=n.__k[i])&&(t.__=n,l=\"function\"==typeof t.type?g(t,l,u):x(u,t,t,n.__k,t.__e,l));return l}function w(n,l){return l=l||[],null==n||\"boolean\"==typeof n||(Array.isArray(n)?n.some(function(n){w(n,l)}):l.push(n)),l}function x(n,l,u,i,t,o){var r,f,e;if(void 0!==l.__d)r=l.__d,l.__d=void 0;else if(null==u||t!=o||null==t.parentNode)n:if(null==o||o.parentNode!==n)n.appendChild(t),r=null;else{for(f=o,e=0;(f=f.nextSibling)&&e<i.length;e+=2)if(f==t)break n;n.insertBefore(t,o),r=o}return void 0!==r?r:t.nextSibling}function A(n,l,u,i,t){var o;for(o in u)\"children\"===o||\"key\"===o||o in l||C(n,o,null,u[o],i);for(o in l)t&&\"function\"!=typeof l[o]||\"children\"===o||\"key\"===o||\"value\"===o||\"checked\"===o||u[o]===l[o]||C(n,o,l[o],u[o],i)}function P(n,l,u){\"-\"===l[0]?n.setProperty(l,u):n[l]=null==u?\"\":\"number\"!=typeof u||e.test(l)?u:u+\"px\"}function C(n,l,u,i,t){var o;n:if(\"style\"===l)if(\"string\"==typeof u)n.style.cssText=u;else{if(\"string\"==typeof i&&(n.style.cssText=i=\"\"),i)for(l in i)u&&l in u||P(n.style,l,\"\");if(u)for(l in u)i&&u[l]===i[l]||P(n.style,l,u[l])}else if(\"o\"===l[0]&&\"n\"===l[1])o=l!==(l=l.replace(/Capture$/,\"\")),l=l.toLowerCase()in n?l.toLowerCase().slice(2):l.slice(2),n.l||(n.l={}),n.l[l+o]=u,u?i||n.addEventListener(l,o?H:$,o):n.removeEventListener(l,o?H:$,o);else if(\"dangerouslySetInnerHTML\"!==l){if(t)l=l.replace(/xlink[H:h]/,\"h\").replace(/sName$/,\"s\");else if(\"href\"!==l&&\"list\"!==l&&\"form\"!==l&&\"tabIndex\"!==l&&\"download\"!==l&&l in n)try{n[l]=null==u?\"\":u;break n}catch(n){}\"function\"==typeof u||(null!=u&&(!1!==u||\"a\"===l[0]&&\"r\"===l[1])?n.setAttribute(l,u):n.removeAttribute(l))}}function $(l){this.l[l.type+!1](n.event?n.event(l):l)}function H(l){this.l[l.type+!0](n.event?n.event(l):l)}function I(l,u,i,t,o,r,f,e,s){var a,v,h,d,_,k,b,g,w,x,A,P=u.type;if(void 0!==u.constructor)return null;null!=i.__h&&(s=i.__h,e=u.__e=i.__e,u.__h=null,r=[e]),(a=n.__b)&&a(u);try{n:if(\"function\"==typeof P){if(g=u.props,w=(a=P.contextType)&&t[a.__c],x=a?w?w.props.value:a.__:t,i.__c?b=(v=u.__c=i.__c).__=v.__E:(\"prototype\"in P&&P.prototype.render?u.__c=v=new P(g,x):(u.__c=v=new p(g,x),v.constructor=P,v.render=M),w&&w.sub(v),v.props=g,v.state||(v.state={}),v.context=x,v.__n=t,h=v.__d=!0,v.__h=[]),null==v.__s&&(v.__s=v.state),null!=P.getDerivedStateFromProps&&(v.__s==v.state&&(v.__s=c({},v.__s)),c(v.__s,P.getDerivedStateFromProps(g,v.__s))),d=v.props,_=v.state,h)null==P.getDerivedStateFromProps&&null!=v.componentWillMount&&v.componentWillMount(),null!=v.componentDidMount&&v.__h.push(v.componentDidMount);else{if(null==P.getDerivedStateFromProps&&g!==d&&null!=v.componentWillReceiveProps&&v.componentWillReceiveProps(g,x),!v.__e&&null!=v.shouldComponentUpdate&&!1===v.shouldComponentUpdate(g,v.__s,x)||u.__v===i.__v){v.props=g,v.state=v.__s,u.__v!==i.__v&&(v.__d=!1),v.__v=u,u.__e=i.__e,u.__k=i.__k,u.__k.forEach(function(n){n&&(n.__=u)}),v.__h.length&&f.push(v);break n}null!=v.componentWillUpdate&&v.componentWillUpdate(g,v.__s,x),null!=v.componentDidUpdate&&v.__h.push(function(){v.componentDidUpdate(d,_,k)})}v.context=x,v.props=g,v.state=v.__s,(a=n.__r)&&a(u),v.__d=!1,v.__v=u,v.__P=l,a=v.render(v.props,v.state,v.context),v.state=v.__s,null!=v.getChildContext&&(t=c(c({},t),v.getChildContext())),h||null==v.getSnapshotBeforeUpdate||(k=v.getSnapshotBeforeUpdate(d,_)),A=null!=a&&a.type===y&&null==a.key?a.props.children:a,m(l,Array.isArray(A)?A:[A],u,i,t,o,r,f,e,s),v.base=u.__e,u.__h=null,v.__h.length&&f.push(v),b&&(v.__E=v.__=null),v.__e=!1}else null==r&&u.__v===i.__v?(u.__k=i.__k,u.__e=i.__e):u.__e=j(i.__e,u,i,t,o,r,f,s);(a=n.diffed)&&a(u)}catch(l){u.__v=null,(s||null!=r)&&(u.__e=e,u.__h=!!s,r[r.indexOf(e)]=null),n.__e(l,u,i)}}function T(l,u){n.__c&&n.__c(u,l),l.some(function(u){try{l=u.__h,u.__h=[],l.some(function(n){n.call(u)})}catch(l){n.__e(l,u.__v)}})}function j(n,l,u,i,t,o,e,c){var a,v,h,y,p=u.props,d=l.props,_=l.type,k=0;if(\"svg\"===_&&(t=!0),null!=o)for(;k<o.length;k++)if((a=o[k])&&(a===n||(_?a.localName==_:3==a.nodeType))){n=a,o[k]=null;break}if(null==n){if(null===_)return document.createTextNode(d);n=t?document.createElementNS(\"http://www.w3.org/2000/svg\",_):document.createElement(_,d.is&&d),o=null,c=!1}if(null===_)p===d||c&&n.data===d||(n.data=d);else{if(o=o&&f.slice.call(n.childNodes),v=(p=u.props||r).dangerouslySetInnerHTML,h=d.dangerouslySetInnerHTML,!c){if(null!=o)for(p={},y=0;y<n.attributes.length;y++)p[n.attributes[y].name]=n.attributes[y].value;(h||v)&&(h&&(v&&h.__html==v.__html||h.__html===n.innerHTML)||(n.innerHTML=h&&h.__html||\"\"))}if(A(n,d,p,t,c),h)l.__k=[];else if(k=l.props.children,m(n,Array.isArray(k)?k:[k],l,u,i,t&&\"foreignObject\"!==_,o,e,n.firstChild,c),null!=o)for(k=o.length;k--;)null!=o[k]&&s(o[k]);c||(\"value\"in d&&void 0!==(k=d.value)&&(k!==n.value||\"progress\"===_&&!k)&&C(n,\"value\",k,p.value,!1),\"checked\"in d&&void 0!==(k=d.checked)&&k!==n.checked&&C(n,\"checked\",k,p.checked,!1))}return n}function z(l,u,i){try{\"function\"==typeof l?l(u):l.current=u}catch(l){n.__e(l,i)}}function L(l,u,i){var t,o,r;if(n.unmount&&n.unmount(l),(t=l.ref)&&(t.current&&t.current!==l.__e||z(t,null,u)),i||\"function\"==typeof l.type||(i=null!=(o=l.__e)),l.__e=l.__d=void 0,null!=(t=l.__c)){if(t.componentWillUnmount)try{t.componentWillUnmount()}catch(l){n.__e(l,u)}t.base=t.__P=null}if(t=l.__k)for(r=0;r<t.length;r++)t[r]&&L(t[r],u,i);null!=o&&s(o)}function M(n,l,u){return this.constructor(n,u)}function N(l,u,i){var t,o,e;n.__&&n.__(l,u),o=(t=\"function\"==typeof i)?null:i&&i.__k||u.__k,e=[],I(u,l=(!t&&i||u).__k=a(y,null,[l]),o||r,r,void 0!==u.ownerSVGElement,!t&&i?[i]:o?null:u.firstChild?f.slice.call(u.childNodes):null,e,!t&&i?i:o?o.__e:u.firstChild,t),T(e,l)}function O(n,l){N(n,l,O)}function S(n,l,u){var i,t,o,r=arguments,f=c({},n.props);for(o in l)\"key\"==o?i=l[o]:\"ref\"==o?t=l[o]:f[o]=l[o];if(arguments.length>3)for(u=[u],o=3;o<arguments.length;o++)u.push(r[o]);return null!=u&&(f.children=u),v(n.type,f,i||n.key,t||n.ref,null)}function q(n,l){var u={__c:l=\"__cC\"+o++,__:n,Consumer:function(n,l){return n.children(l)},Provider:function(n){var u,i;return this.getChildContext||(u=[],(i={})[l]=this,this.getChildContext=function(){return i},this.shouldComponentUpdate=function(n){this.props.value!==n.value&&u.some(k)},this.sub=function(n){u.push(n);var l=n.componentWillUnmount;n.componentWillUnmount=function(){u.splice(u.indexOf(n),1),l&&l.call(n)}}),n.children}};return u.Provider.__=u.Consumer.contextType=u}n={__e:function(n,l){for(var u,i,t;l=l.__;)if((u=l.__c)&&!u.__)try{if((i=u.constructor)&&null!=i.getDerivedStateFromError&&(u.setState(i.getDerivedStateFromError(n)),t=u.__d),null!=u.componentDidCatch&&(u.componentDidCatch(n),t=u.__d),t)return u.__E=u}catch(l){n=l}throw n},__v:0},l=function(n){return null!=n&&void 0===n.constructor},p.prototype.setState=function(n,l){var u;u=null!=this.__s&&this.__s!==this.state?this.__s:this.__s=c({},this.state),\"function\"==typeof n&&(n=n(c({},u),this.props)),n&&c(u,n),null!=n&&this.__v&&(l&&this.__h.push(l),k(this))},p.prototype.forceUpdate=function(n){this.__v&&(this.__e=!0,n&&this.__h.push(n),k(this))},p.prototype.render=y,u=[],i=\"function\"==typeof Promise?Promise.prototype.then.bind(Promise.resolve()):setTimeout,b.__r=0,o=0;export{N as render,O as hydrate,a as createElement,a as h,y as Fragment,h as createRef,l as isValidElement,p as Component,S as cloneElement,q as createContext,w as toChildArray,n as options};\n//# sourceMappingURL=preact.module.js.map\n","import { Component, cloneElement, createElement, toChildArray } from 'preact';\n\nvar EMPTY$1 = {};\n\nfunction assign(obj, props) {\n\t// eslint-disable-next-line guard-for-in\n\tfor (var i in props) {\n\t\tobj[i] = props[i];\n\t}\n\treturn obj;\n}\n\nfunction exec(url, route, opts) {\n\tvar reg = /(?:\\?([^#]*))?(#.*)?$/,\n\t\tc = url.match(reg),\n\t\tmatches = {},\n\t\tret;\n\tif (c && c[1]) {\n\t\tvar p = c[1].split('&');\n\t\tfor (var i=0; i<p.length; i++) {\n\t\t\tvar r = p[i].split('=');\n\t\t\tmatches[decodeURIComponent(r[0])] = decodeURIComponent(r.slice(1).join('='));\n\t\t}\n\t}\n\turl = segmentize(url.replace(reg, ''));\n\troute = segmentize(route || '');\n\tvar max = Math.max(url.length, route.length);\n\tfor (var i$1=0; i$1<max; i$1++) {\n\t\tif (route[i$1] && route[i$1].charAt(0)===':') {\n\t\t\tvar param = route[i$1].replace(/(^:|[+*?]+$)/g, ''),\n\t\t\t\tflags = (route[i$1].match(/[+*?]+$/) || EMPTY$1)[0] || '',\n\t\t\t\tplus = ~flags.indexOf('+'),\n\t\t\t\tstar = ~flags.indexOf('*'),\n\t\t\t\tval = url[i$1] || '';\n\t\t\tif (!val && !star && (flags.indexOf('?')<0 || plus)) {\n\t\t\t\tret = false;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tmatches[param] = decodeURIComponent(val);\n\t\t\tif (plus || star) {\n\t\t\t\tmatches[param] = url.slice(i$1).map(decodeURIComponent).join('/');\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\telse if (route[i$1]!==url[i$1]) {\n\t\t\tret = false;\n\t\t\tbreak;\n\t\t}\n\t}\n\tif (opts.default!==true && ret===false) { return false; }\n\treturn matches;\n}\n\nfunction pathRankSort(a, b) {\n\treturn (\n\t\t(a.rank < b.rank) ? 1 :\n\t\t\t(a.rank > b.rank) ? -1 :\n\t\t\t\t(a.index - b.index)\n\t);\n}\n\n// filter out VNodes without attributes (which are unrankeable), and add `index`/`rank` properties to be used in sorting.\nfunction prepareVNodeForRanking(vnode, index) {\n\tvnode.index = index;\n\tvnode.rank = rankChild(vnode);\n\treturn vnode.props;\n}\n\nfunction segmentize(url) {\n\treturn url.replace(/(^\\/+|\\/+$)/g, '').split('/');\n}\n\nfunction rankSegment(segment) {\n\treturn segment.charAt(0)==':' ? (1 + '*+?'.indexOf(segment.charAt(segment.length-1))) || 4 : 5;\n}\n\nfunction rank(path) {\n\treturn segmentize(path).map(rankSegment).join('');\n}\n\nfunction rankChild(vnode) {\n\treturn vnode.props.default ? 0 : rank(vnode.props.path);\n}\n\nvar customHistory = null;\n\nvar ROUTERS = [];\n\nvar subscribers = [];\n\nvar EMPTY = {};\n\nfunction setUrl(url, type) {\n\tif ( type === void 0 ) type='push';\n\n\tif (customHistory && customHistory[type]) {\n\t\tcustomHistory[type](url);\n\t}\n\telse if (typeof history!=='undefined' && history[type+'State']) {\n\t\thistory[type+'State'](null, null, url);\n\t}\n}\n\n\nfunction getCurrentUrl() {\n\tvar url;\n\tif (customHistory && customHistory.location) {\n\t\turl = customHistory.location;\n\t}\n\telse if (customHistory && customHistory.getCurrentLocation) {\n\t\turl = customHistory.getCurrentLocation();\n\t}\n\telse {\n\t\turl = typeof location!=='undefined' ? location : EMPTY;\n\t}\n\treturn (\"\" + (url.pathname || '') + (url.search || ''));\n}\n\n\n\nfunction route(url, replace) {\n\tif ( replace === void 0 ) replace=false;\n\n\tif (typeof url!=='string' && url.url) {\n\t\treplace = url.replace;\n\t\turl = url.url;\n\t}\n\n\t// only push URL into history if we can handle it\n\tif (canRoute(url)) {\n\t\tsetUrl(url, replace ? 'replace' : 'push');\n\t}\n\n\treturn routeTo(url);\n}\n\n\n/** Check if the given URL can be handled by any router instances. */\nfunction canRoute(url) {\n\tfor (var i=ROUTERS.length; i--; ) {\n\t\tif (ROUTERS[i].canRoute(url)) { return true; }\n\t}\n\treturn false;\n}\n\n\n/** Tell all router instances to handle the given URL.  */\nfunction routeTo(url) {\n\tvar didRoute = false;\n\tfor (var i=0; i<ROUTERS.length; i++) {\n\t\tif (ROUTERS[i].routeTo(url)===true) {\n\t\t\tdidRoute = true;\n\t\t}\n\t}\n\tfor (var i$1=subscribers.length; i$1--; ) {\n\t\tsubscribers[i$1](url);\n\t}\n\treturn didRoute;\n}\n\n\nfunction routeFromLink(node) {\n\t// only valid elements\n\tif (!node || !node.getAttribute) { return; }\n\n\tvar href = node.getAttribute('href'),\n\t\ttarget = node.getAttribute('target');\n\n\t// ignore links with targets and non-path URLs\n\tif (!href || !href.match(/^\\//g) || (target && !target.match(/^_?self$/i))) { return; }\n\n\t// attempt to route, if no match simply cede control to browser\n\treturn route(href);\n}\n\n\nfunction handleLinkClick(e) {\n\tif (e.ctrlKey || e.metaKey || e.altKey || e.shiftKey || e.button!==0) { return; }\n\trouteFromLink(e.currentTarget || e.target || this);\n\treturn prevent(e);\n}\n\n\nfunction prevent(e) {\n\tif (e) {\n\t\tif (e.stopImmediatePropagation) { e.stopImmediatePropagation(); }\n\t\tif (e.stopPropagation) { e.stopPropagation(); }\n\t\te.preventDefault();\n\t}\n\treturn false;\n}\n\n\nfunction delegateLinkHandler(e) {\n\t// ignore events the browser takes care of already:\n\tif (e.ctrlKey || e.metaKey || e.altKey || e.shiftKey || e.button!==0) { return; }\n\n\tvar t = e.target;\n\tdo {\n\t\tif (String(t.nodeName).toUpperCase()==='A' && t.getAttribute('href')) {\n\t\t\tif (t.hasAttribute('native')) { return; }\n\t\t\t// if link is handled by the router, prevent browser defaults\n\t\t\tif (routeFromLink(t)) {\n\t\t\t\treturn prevent(e);\n\t\t\t}\n\t\t}\n\t} while ((t=t.parentNode));\n}\n\n\nvar eventListenersInitialized = false;\n\nfunction initEventListeners() {\n\tif (eventListenersInitialized) { return; }\n\n\tif (typeof addEventListener==='function') {\n\t\tif (!customHistory) {\n\t\t\taddEventListener('popstate', function () {\n\t\t\t\trouteTo(getCurrentUrl());\n\t\t\t});\n\t\t}\n\t\taddEventListener('click', delegateLinkHandler);\n\t}\n\teventListenersInitialized = true;\n}\n\n\nvar Router = (function (Component$$1) {\n\tfunction Router(props) {\n\t\tComponent$$1.call(this, props);\n\t\tif (props.history) {\n\t\t\tcustomHistory = props.history;\n\t\t}\n\n\t\tthis.state = {\n\t\t\turl: props.url || getCurrentUrl()\n\t\t};\n\n\t\tinitEventListeners();\n\t}\n\n\tif ( Component$$1 ) Router.__proto__ = Component$$1;\n\tRouter.prototype = Object.create( Component$$1 && Component$$1.prototype );\n\tRouter.prototype.constructor = Router;\n\n\tRouter.prototype.shouldComponentUpdate = function shouldComponentUpdate (props) {\n\t\tif (props.static!==true) { return true; }\n\t\treturn props.url!==this.props.url || props.onChange!==this.props.onChange;\n\t};\n\n\t/** Check if the given URL can be matched against any children */\n\tRouter.prototype.canRoute = function canRoute (url) {\n\t\tvar children = toChildArray(this.props.children);\n\t\treturn this.getMatchingChildren(children, url, false).length > 0;\n\t};\n\n\t/** Re-render children with a new URL to match against. */\n\tRouter.prototype.routeTo = function routeTo (url) {\n\t\tthis.setState({ url: url });\n\n\t\tvar didRoute = this.canRoute(url);\n\n\t\t// trigger a manual re-route if we're not in the middle of an update:\n\t\tif (!this.updating) { this.forceUpdate(); }\n\n\t\treturn didRoute;\n\t};\n\n\tRouter.prototype.componentWillMount = function componentWillMount () {\n\t\tROUTERS.push(this);\n\t\tthis.updating = true;\n\t};\n\n\tRouter.prototype.componentDidMount = function componentDidMount () {\n\t\tvar this$1 = this;\n\n\t\tif (customHistory) {\n\t\t\tthis.unlisten = customHistory.listen(function (location) {\n\t\t\t\tthis$1.routeTo((\"\" + (location.pathname || '') + (location.search || '')));\n\t\t\t});\n\t\t}\n\t\tthis.updating = false;\n\t};\n\n\tRouter.prototype.componentWillUnmount = function componentWillUnmount () {\n\t\tif (typeof this.unlisten==='function') { this.unlisten(); }\n\t\tROUTERS.splice(ROUTERS.indexOf(this), 1);\n\t};\n\n\tRouter.prototype.componentWillUpdate = function componentWillUpdate () {\n\t\tthis.updating = true;\n\t};\n\n\tRouter.prototype.componentDidUpdate = function componentDidUpdate () {\n\t\tthis.updating = false;\n\t};\n\n\tRouter.prototype.getMatchingChildren = function getMatchingChildren (children, url, invoke) {\n\t\treturn children\n\t\t\t.filter(prepareVNodeForRanking)\n\t\t\t.sort(pathRankSort)\n\t\t\t.map( function (vnode) {\n\t\t\t\tvar matches = exec(url, vnode.props.path, vnode.props);\n\t\t\t\tif (matches) {\n\t\t\t\t\tif (invoke !== false) {\n\t\t\t\t\t\tvar newProps = { url: url, matches: matches };\n\t\t\t\t\t\tassign(newProps, matches);\n\t\t\t\t\t\tdelete newProps.ref;\n\t\t\t\t\t\tdelete newProps.key;\n\t\t\t\t\t\treturn cloneElement(vnode, newProps);\n\t\t\t\t\t}\n\t\t\t\t\treturn vnode;\n\t\t\t\t}\n\t\t\t}).filter(Boolean);\n\t};\n\n\tRouter.prototype.render = function render (ref, ref$1) {\n\t\tvar children = ref.children;\n\t\tvar onChange = ref.onChange;\n\t\tvar url = ref$1.url;\n\n\t\tvar active = this.getMatchingChildren(toChildArray(children), url, true);\n\n\t\tvar current = active[0] || null;\n\n\t\tvar previous = this.previousUrl;\n\t\tif (url!==previous) {\n\t\t\tthis.previousUrl = url;\n\t\t\tif (typeof onChange==='function') {\n\t\t\t\tonChange({\n\t\t\t\t\trouter: this,\n\t\t\t\t\turl: url,\n\t\t\t\t\tprevious: previous,\n\t\t\t\t\tactive: active,\n\t\t\t\t\tcurrent: current\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\treturn current;\n\t};\n\n\treturn Router;\n}(Component));\n\nvar Link = function (props) { return (\n\tcreateElement('a', assign({ onClick: handleLinkClick }, props))\n); };\n\nvar Route = function (props) { return createElement(props.component, props); };\n\nRouter.subscribers = subscribers;\nRouter.getCurrentUrl = getCurrentUrl;\nRouter.route = route;\nRouter.Router = Router;\nRouter.Route = Route;\nRouter.Link = Link;\nRouter.exec = exec;\n\nexport { subscribers, getCurrentUrl, route, Router, Route, Link, exec };export default Router;\n//# sourceMappingURL=preact-router.es.js.map\n","import{options as n}from\"preact\";var t,u,r,o=0,i=[],c=n.__b,f=n.__r,e=n.diffed,a=n.__c,v=n.unmount;function m(t,r){n.__h&&n.__h(u,t,o||r),o=0;var i=u.__H||(u.__H={__:[],__h:[]});return t>=i.__.length&&i.__.push({}),i.__[t]}function l(n){return o=1,p(w,n)}function p(n,r,o){var i=m(t++,2);return i.t=n,i.__c||(i.__=[o?o(r):w(void 0,r),function(n){var t=i.t(i.__[0],n);i.__[0]!==t&&(i.__=[t,i.__[1]],i.__c.setState({}))}],i.__c=u),i.__}function y(r,o){var i=m(t++,3);!n.__s&&k(i.__H,o)&&(i.__=r,i.__H=o,u.__H.__h.push(i))}function h(r,o){var i=m(t++,4);!n.__s&&k(i.__H,o)&&(i.__=r,i.__H=o,u.__h.push(i))}function s(n){return o=5,d(function(){return{current:n}},[])}function _(n,t,u){o=6,h(function(){\"function\"==typeof n?n(t()):n&&(n.current=t())},null==u?u:u.concat(n))}function d(n,u){var r=m(t++,7);return k(r.__H,u)&&(r.__=n(),r.__H=u,r.__h=n),r.__}function A(n,t){return o=8,d(function(){return n},t)}function F(n){var r=u.context[n.__c],o=m(t++,9);return o.__c=n,r?(null==o.__&&(o.__=!0,r.sub(u)),r.props.value):n.__}function T(t,u){n.useDebugValue&&n.useDebugValue(u?u(t):t)}function q(n){var r=m(t++,10),o=l();return r.__=n,u.componentDidCatch||(u.componentDidCatch=function(n){r.__&&r.__(n),o[1](n)}),[o[0],function(){o[1](void 0)}]}function x(){i.forEach(function(t){if(t.__P)try{t.__H.__h.forEach(g),t.__H.__h.forEach(j),t.__H.__h=[]}catch(u){t.__H.__h=[],n.__e(u,t.__v)}}),i=[]}n.__b=function(n){u=null,c&&c(n)},n.__r=function(n){f&&f(n),t=0;var r=(u=n.__c).__H;r&&(r.__h.forEach(g),r.__h.forEach(j),r.__h=[])},n.diffed=function(t){e&&e(t);var o=t.__c;o&&o.__H&&o.__H.__h.length&&(1!==i.push(o)&&r===n.requestAnimationFrame||((r=n.requestAnimationFrame)||function(n){var t,u=function(){clearTimeout(r),b&&cancelAnimationFrame(t),setTimeout(n)},r=setTimeout(u,100);b&&(t=requestAnimationFrame(u))})(x)),u=void 0},n.__c=function(t,u){u.some(function(t){try{t.__h.forEach(g),t.__h=t.__h.filter(function(n){return!n.__||j(n)})}catch(r){u.some(function(n){n.__h&&(n.__h=[])}),u=[],n.__e(r,t.__v)}}),a&&a(t,u)},n.unmount=function(t){v&&v(t);var u=t.__c;if(u&&u.__H)try{u.__H.__.forEach(g)}catch(t){n.__e(t,u.__v)}};var b=\"function\"==typeof requestAnimationFrame;function g(n){var t=u;\"function\"==typeof n.__c&&n.__c(),u=t}function j(n){var t=u;n.__c=n.__(),u=t}function k(n,t){return!n||n.length!==t.length||t.some(function(t,u){return t!==n[u]})}function w(n,t){return\"function\"==typeof t?t(n):t}export{l as useState,p as useReducer,y as useEffect,h as useLayoutEffect,s as useRef,_ as useImperativeHandle,d as useMemo,A as useCallback,F as useContext,T as useDebugValue,q as useErrorBoundary};\n//# sourceMappingURL=hooks.module.js.map\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.ModelPath = exports.Path = exports.relativePath = void 0;\r\nfunction relativePath(start, relativePath) {\r\n    return relativePath.reduce((path, e) => {\r\n        if (e === 'pop') {\r\n            return path.pop();\r\n        }\r\n        else {\r\n            return path.push(e.push);\r\n        }\r\n    }, start);\r\n}\r\nexports.relativePath = relativePath;\r\n/**\r\n * Immutable helper class to represent a path in data\r\n */\r\nclass Path {\r\n    /**\r\n     * @param modelArr Initial array of path model elements. Empty if not given\r\n     * @param contextArr Initial array of path context elements. Empty if not given\r\n     */\r\n    constructor(modelArr, contextArr) {\r\n        this.modelArr = modelArr !== null && modelArr !== void 0 ? modelArr : [];\r\n        this.contextArr = contextArr !== null && contextArr !== void 0 ? contextArr : [];\r\n    }\r\n    /**\r\n     * The last model element of this path\r\n     */\r\n    last() {\r\n        return this.modelArr[this.modelArr.length - 1];\r\n    }\r\n    /**\r\n     * A new path with the specific sliced module elements\r\n     */\r\n    slice(start, end) {\r\n        return new Path(this.modelArr.slice(start, end), this.contextArr);\r\n    }\r\n    /**\r\n     * A new path with the first model element removed\r\n     */\r\n    shift() {\r\n        return new Path(this.modelArr.slice(1), this.contextArr);\r\n    }\r\n    /**\r\n     * A new path with the last model element removed\r\n     */\r\n    pop() {\r\n        return new Path(this.modelArr.slice(0, -1), this.contextArr);\r\n    }\r\n    /**\r\n     * A new path with an element added at the end\r\n     * @param element element to push at the end of the array\r\n     */\r\n    push(element) {\r\n        return this.modelPush(element).contextPush(element);\r\n    }\r\n    /**\r\n     * Push an element exclusivly to the model array\r\n     * @param element\r\n     */\r\n    modelPush(element) {\r\n        return new Path([...this.modelArr, element], [...this.contextArr]);\r\n    }\r\n    /**\r\n     * Push an element exclusivly to the context array\r\n     * @param element\r\n     */\r\n    contextPush(element) {\r\n        if (typeof element === 'number')\r\n            return this.copy();\r\n        const newElement = element.startsWith('minecraft:') ? element.slice(10) : element;\r\n        return new Path([...this.modelArr], [...this.contextArr, newElement]);\r\n    }\r\n    copy() {\r\n        return new Path([...this.modelArr], [...this.contextArr]);\r\n    }\r\n    getArray() {\r\n        return this.modelArr;\r\n    }\r\n    /**\r\n     * Attaches a model to this path and all paths created from this\r\n     * @param model\r\n     */\r\n    withModel(model) {\r\n        return new ModelPath(model, this);\r\n    }\r\n    getContext() {\r\n        return this.contextArr;\r\n    }\r\n    /**\r\n     * Checks path equality\r\n     * @param other path to compare\r\n     */\r\n    equals(other) {\r\n        return other.modelArr.length === this.modelArr.length\r\n            && other.modelArr.every((v, i) => v === this.modelArr[i]);\r\n    }\r\n    /**\r\n     * Checks if this path starts with another path\r\n     * @param other path that this path should start with\r\n     */\r\n    startsWith(other) {\r\n        if (this.modelArr.length < other.modelArr.length)\r\n            return false;\r\n        return other.modelArr.every((v, i) => v === this.modelArr[i]);\r\n    }\r\n    /**\r\n     * Checks if this path ends with another path\r\n     * @param other parent path where this path should end with\r\n     */\r\n    endsWith(other) {\r\n        const offset = this.modelArr.length - other.modelArr.length;\r\n        if (offset < 0)\r\n            return false;\r\n        return other.modelArr.every((v, i) => v === this.modelArr[offset + i]);\r\n    }\r\n    toString() {\r\n        return this.modelArr\r\n            .map(e => (typeof e === 'string') ? `.${e}` : `[${e}]`)\r\n            .join('')\r\n            .replace(/^\\./, '');\r\n    }\r\n    forEach(fn, thisArg) {\r\n        return this.modelArr.forEach(fn, thisArg);\r\n    }\r\n}\r\nexports.Path = Path;\r\nclass ModelPath extends Path {\r\n    constructor(model, path) {\r\n        super(path === null || path === void 0 ? void 0 : path.modelArr, path === null || path === void 0 ? void 0 : path.contextArr);\r\n        this.model = model;\r\n    }\r\n    getModel() {\r\n        return this.model;\r\n    }\r\n    /**\r\n     * Gets the data from the model if it was attached\r\n     * @returns undefined, if no model was attached\r\n     */\r\n    get() {\r\n        var _a;\r\n        return (_a = this.model) === null || _a === void 0 ? void 0 : _a.get(this);\r\n    }\r\n    /**\r\n     * Sets the value to the model if it was attached\r\n     */\r\n    set(value) {\r\n        var _a;\r\n        (_a = this.model) === null || _a === void 0 ? void 0 : _a.set(this, value);\r\n    }\r\n    /**\r\n     * A new path with the specific sliced module elements\r\n     */\r\n    slice(start, end) {\r\n        return new ModelPath(this.model, super.slice(start, end));\r\n    }\r\n    /**\r\n     * A new path with the first model element removed\r\n     */\r\n    shift() {\r\n        return new ModelPath(this.model, super.shift());\r\n    }\r\n    /**\r\n     * A new path with the last model element removed\r\n     */\r\n    pop() {\r\n        return new ModelPath(this.model, super.pop());\r\n    }\r\n    /**\r\n     * A new path with an element added at the end\r\n     * @param element element to push at the end of the array\r\n     */\r\n    push(element) {\r\n        return this.modelPush(element).contextPush(element);\r\n    }\r\n    /**\r\n     * Push an element exclusivly to the model array\r\n     * @param element\r\n     */\r\n    modelPush(element) {\r\n        return new ModelPath(this.model, super.modelPush(element));\r\n    }\r\n    /**\r\n     * Push an element exclusivly to the context array\r\n     * @param element\r\n     */\r\n    contextPush(element) {\r\n        return new ModelPath(this.model, super.contextPush(element));\r\n    }\r\n    copy() {\r\n        return new ModelPath(this.model, super.copy());\r\n    }\r\n}\r\nexports.ModelPath = ModelPath;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Errors = void 0;\r\n/**\r\n * Collects errors from data paths\r\n */\r\nclass Errors {\r\n    constructor() {\r\n        this.errors = [];\r\n    }\r\n    add(path, error, ...params) {\r\n        this.errors.push({ path, error, params });\r\n        return false;\r\n    }\r\n    get(path, exact = false) {\r\n        return exact ? this.errors.filter(e => e.path.equals(path))\r\n            : this.errors.filter(e => e.path.startsWith(path));\r\n    }\r\n    getAll() {\r\n        return this.errors;\r\n    }\r\n    clear() {\r\n        this.errors = [];\r\n    }\r\n    count() {\r\n        return this.errors.length;\r\n    }\r\n    *[Symbol.iterator]() {\r\n        for (const e of this.errors) {\r\n            yield e;\r\n        }\r\n    }\r\n}\r\nexports.Errors = Errors;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.DataModel = void 0;\r\nconst Path_1 = require(\"./Path\");\r\nconst Errors_1 = require(\"./Errors\");\r\n/**\r\n * Holding the data linked to a given schema\r\n */\r\nclass DataModel {\r\n    /**\r\n     * @param schema node to use as schema for this model\r\n     */\r\n    constructor(schema, options) {\r\n        var _a;\r\n        this.schema = schema;\r\n        this.data = schema.default();\r\n        this.listeners = [];\r\n        this.errors = new Errors_1.Errors();\r\n        this.history = [JSON.stringify(this.data)];\r\n        this.historyIndex = 0;\r\n        this.historyMax = (_a = options === null || options === void 0 ? void 0 : options.historyMax) !== null && _a !== void 0 ? _a : 50;\r\n    }\r\n    /**\r\n     * Adds a listener to notify when the model is invalidated\r\n     * @param listener the listener to be notified\r\n     */\r\n    addListener(listener) {\r\n        this.listeners.push(listener);\r\n    }\r\n    /**\r\n     * Removes a listener from this model\r\n     * @param listener the listener to be removed\r\n     */\r\n    removeListener(listener) {\r\n        const index = this.listeners.indexOf(listener);\r\n        if (index > -1) {\r\n            this.listeners.splice(index, 1);\r\n        }\r\n    }\r\n    /**\r\n     * Updates the history and notifies all\r\n     * listeners that the model is invalidated\r\n     */\r\n    invalidate() {\r\n        const newHistory = JSON.stringify(this.data);\r\n        if (this.history[this.historyIndex] !== newHistory) {\r\n            this.historyIndex += 1;\r\n            this.history.splice(this.historyIndex, this.historyMax, newHistory);\r\n            if (this.history.length > this.historyMax) {\r\n                this.history.splice(0, 1);\r\n                this.historyIndex -= 1;\r\n            }\r\n        }\r\n        this.silentInvalidate();\r\n    }\r\n    /**\r\n     * Notifies all listeners that the model is invalidated\r\n     */\r\n    silentInvalidate() {\r\n        this.listeners.forEach(l => {\r\n            if (l.invalidated)\r\n                l.invalidated(this);\r\n            if (l.errors)\r\n                l.errors(this.errors);\r\n        });\r\n    }\r\n    /**\r\n     * Resets the full data and notifies listeners\r\n     * @param value new model data\r\n     */\r\n    reset(value, loose) {\r\n        this.data = value;\r\n        this.validate(loose);\r\n        this.invalidate();\r\n    }\r\n    /**\r\n     * Gets the data at a specified path\r\n     * @param path path at which to find the data\r\n     * @returns undefined, if the the path does not exist in the data\r\n     */\r\n    get(path) {\r\n        let node = this.data;\r\n        path.forEach(e => {\r\n            if (node === undefined)\r\n                return node;\r\n            node = node[e];\r\n        });\r\n        return node;\r\n    }\r\n    /**\r\n     * Updates the data on a path. Node will be removed when value is undefined\r\n     * @param path path to update\r\n     * @param value new data at the specified path\r\n     */\r\n    set(path, value, silent) {\r\n        if (path.getArray().length === 0) {\r\n            this.reset(value, true);\r\n            return;\r\n        }\r\n        let node = this.data;\r\n        path.pop().forEach(e => {\r\n            if (node[e] === undefined || typeof node[e] === 'string' || typeof node[e] === 'number') {\r\n                node[e] = {};\r\n            }\r\n            node = node[e];\r\n        });\r\n        if (value === undefined || (typeof value === 'number' && isNaN(value))) {\r\n            if (typeof path.last() === 'number') {\r\n                node.splice(path.last(), 1);\r\n            }\r\n            else {\r\n                delete node[path.last()];\r\n            }\r\n        }\r\n        else {\r\n            node[path.last()] = value;\r\n        }\r\n        if (silent)\r\n            return;\r\n        console.log('Set', path.toString(), JSON.stringify(value));\r\n        this.validate(true);\r\n        this.invalidate();\r\n    }\r\n    /**\r\n     * Go one step back in history\r\n     */\r\n    undo() {\r\n        if (this.historyIndex > 0) {\r\n            this.historyIndex -= 1;\r\n            this.data = JSON.parse(this.history[this.historyIndex]);\r\n            this.validate(false);\r\n            this.silentInvalidate();\r\n        }\r\n    }\r\n    /**\r\n     * Go one step forward in history.\r\n     */\r\n    redo() {\r\n        if (this.historyIndex < this.history.length - 1) {\r\n            this.historyIndex += 1;\r\n            this.data = JSON.parse(this.history[this.historyIndex]);\r\n            this.validate(false);\r\n            this.silentInvalidate();\r\n        }\r\n    }\r\n    /**\r\n     * Uses the schema to check whether the data is valid\r\n     */\r\n    validate(loose) {\r\n        var _a;\r\n        const path = new Path_1.Path().withModel(this);\r\n        this.errors.clear();\r\n        this.data = (_a = this.schema.validate(path, this.data, this.errors, { loose })) !== null && _a !== void 0 ? _a : {};\r\n    }\r\n    error(path, error, ...params) {\r\n        const tempErrors = new Errors_1.Errors();\r\n        tempErrors.add(path, error, params);\r\n        this.listeners.forEach(l => {\r\n            if (l.errors)\r\n                l.errors(tempErrors);\r\n        });\r\n    }\r\n}\r\nexports.DataModel = DataModel;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Keep = exports.Opt = exports.Has = exports.Mod = exports.Base = void 0;\r\nexports.Base = ({\r\n    type: () => 'base',\r\n    category: () => undefined,\r\n    default: () => undefined,\r\n    enabled: () => true,\r\n    keep: () => false,\r\n    optional: () => false,\r\n    navigate() { return this; },\r\n    pathPush: (p) => p,\r\n    suggest: () => [],\r\n    validate: (_, v) => v,\r\n    validationOption: () => undefined,\r\n    hook(hook, path, ...args) { return hook.base({ node: this }, path, ...args); },\r\n    canUpdate: () => false,\r\n    update: () => []\r\n});\r\nexports.Mod = (node, mods) => ({\r\n    ...node, ...(typeof mods === 'function' ? mods(node) : mods)\r\n});\r\nexports.Has = (key, node) => exports.Mod(node, {\r\n    enabled: (p) => p.push(key).get() !== undefined\r\n});\r\nfunction Opt(node) {\r\n    return {\r\n        ...node,\r\n        optional: () => true\r\n    };\r\n}\r\nexports.Opt = Opt;\r\nfunction Keep(node) {\r\n    return {\r\n        ...node,\r\n        keep: () => true\r\n    };\r\n}\r\nexports.Keep = Keep;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.BooleanNode = void 0;\r\nconst Node_1 = require(\"./Node\");\r\n/**\r\n * Boolean node with two buttons for true/false\r\n */\r\nexports.BooleanNode = () => {\r\n    return {\r\n        ...Node_1.Base,\r\n        type: () => 'boolean',\r\n        default: () => false,\r\n        suggest: () => ['false', 'true'],\r\n        validate(path, value, errors, options) {\r\n            if (options.loose && typeof value !== 'boolean') {\r\n                value = this.default();\r\n            }\r\n            if (typeof value !== 'boolean' || value === undefined) {\r\n                errors.add(path, 'error.expected_boolean');\r\n            }\r\n            return value;\r\n        },\r\n        hook(hook, path, ...args) {\r\n            var _a;\r\n            return ((_a = hook.boolean) !== null && _a !== void 0 ? _a : hook.base).call(hook, { node: this }, path, ...args);\r\n        }\r\n    };\r\n};\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.ListNode = void 0;\r\nconst Node_1 = require(\"./Node\");\r\nexports.ListNode = (children, config) => {\r\n    var _a, _b;\r\n    const min = (_a = config === null || config === void 0 ? void 0 : config.minLength) !== null && _a !== void 0 ? _a : 0;\r\n    const max = (_b = config === null || config === void 0 ? void 0 : config.maxLength) !== null && _b !== void 0 ? _b : Infinity;\r\n    const between = (config === null || config === void 0 ? void 0 : config.minLength) && (config === null || config === void 0 ? void 0 : config.maxLength);\r\n    return ({\r\n        ...Node_1.Base,\r\n        type: () => 'list',\r\n        default: () => (config === null || config === void 0 ? void 0 : config.minLength) ? [...Array(min)].map(_ => children.default()) : [],\r\n        navigate(path, index) {\r\n            const nextIndex = index + 1;\r\n            const pathElements = path.getArray();\r\n            if (pathElements.length <= nextIndex) {\r\n                return this;\r\n            }\r\n            return children.navigate(path, nextIndex);\r\n        },\r\n        pathPush(path, index) {\r\n            return path.push(parseInt(index.toString())).contextPush('entry');\r\n        },\r\n        validate(path, value, errors, options) {\r\n            if (options.loose && !Array.isArray(value)) {\r\n                value = this.default();\r\n            }\r\n            if (!Array.isArray(value)) {\r\n                errors.add(path, 'error.expected_list');\r\n                return value;\r\n            }\r\n            else if (between && (value.length < min || value.length > max)) {\r\n                if (min === max) {\r\n                    errors.add(path, 'error.invalid_list_range.exact', value.length, min);\r\n                }\r\n                else {\r\n                    errors.add(path, 'error.invalid_list_range.between', value.length, min, max);\r\n                }\r\n            }\r\n            else if (value.length < min) {\r\n                errors.add(path, 'error.invalid_list_range.smaller', value.length, min);\r\n            }\r\n            else if (value.length > max) {\r\n                errors.add(path, 'error.invalid_list_range.larger', value.length, max);\r\n            }\r\n            return value.map((obj, index) => children.validate(path.push(index), obj, errors, options));\r\n        },\r\n        hook(hook, path, ...args) {\r\n            var _a;\r\n            return ((_a = hook.list) !== null && _a !== void 0 ? _a : hook.base).call(hook, { node: this, children, config: config !== null && config !== void 0 ? config : {} }, path, ...args);\r\n        }\r\n    });\r\n};\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.SwitchNode = void 0;\r\nconst Node_1 = require(\"./Node\");\r\n/**\r\n * Node that allows multiple types\r\n */\r\nexports.SwitchNode = (cases) => {\r\n    return {\r\n        ...Node_1.Base,\r\n        type(path) {\r\n            return this.activeCase(path, true)\r\n                .node.type(path);\r\n        },\r\n        category(path) {\r\n            return this.activeCase(path, true)\r\n                .node.category(path);\r\n        },\r\n        default: () => cases[0].node.default(),\r\n        navigate(path, index) {\r\n            var _a;\r\n            const nextIndex = index + 1;\r\n            return (_a = this.activeCase(path.slice(0, nextIndex))) === null || _a === void 0 ? void 0 : _a.node.navigate(path, index);\r\n        },\r\n        pathPush(path, key) {\r\n            var _a, _b;\r\n            return (_b = (_a = this.activeCase(path)) === null || _a === void 0 ? void 0 : _a.node.pathPush(path, key)) !== null && _b !== void 0 ? _b : path;\r\n        },\r\n        suggest(path, value) {\r\n            var _a, _b;\r\n            return (_b = (_a = this.activeCase(path)) === null || _a === void 0 ? void 0 : _a.node.suggest(path, value)) !== null && _b !== void 0 ? _b : cases\r\n                .filter(c => c.match(path))\r\n                .map(c => c.node.suggest(path, value))\r\n                .reduce((p, c) => p.concat(c));\r\n        },\r\n        validate(path, value, errors, options) {\r\n            let c = this.activeCase(path);\r\n            if (c === undefined) {\r\n                return value;\r\n            }\r\n            return c.node.validate(path, value, errors, options);\r\n        },\r\n        validationOption(path) {\r\n            var _a;\r\n            return (_a = this.activeCase(path)) === null || _a === void 0 ? void 0 : _a.node.validationOption(path);\r\n        },\r\n        activeCase(path, fallback) {\r\n            const sorter = (a, b) => { var _a, _b; return ((_a = b.priority) !== null && _a !== void 0 ? _a : 0) - ((_b = a.priority) !== null && _b !== void 0 ? _b : 0); };\r\n            const matchedCases = cases.filter(c => c.match(path)).sort(sorter);\r\n            if (fallback && matchedCases.length === 0) {\r\n                return cases.sort(sorter)[0];\r\n            }\r\n            return (matchedCases.length > 0 ? matchedCases[0] : undefined);\r\n        },\r\n        hook(hook, path, ...args) {\r\n            return this.activeCase(path, true)\r\n                .node.hook(hook, path, ...args);\r\n        },\r\n    };\r\n};\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.ObjectOrPreset = exports.StringOrList = exports.ObjectOrList = exports.ChoiceNode = void 0;\r\nconst ListNode_1 = require(\"./ListNode\");\r\nconst SwitchNode_1 = require(\"./SwitchNode\");\r\n/**\r\n * Node that allows multiple types\r\n */\r\nexports.ChoiceNode = (choices, config) => {\r\n    const isValid = (choice, value) => {\r\n        if (choice.match) {\r\n            return choice.match(value);\r\n        }\r\n        switch (choice.type) {\r\n            case 'list': return Array.isArray(value);\r\n            case 'object': return typeof value === 'object' && !Array.isArray(value);\r\n            default: return typeof value === choice.type;\r\n        }\r\n    };\r\n    const switchNode = SwitchNode_1.SwitchNode(choices.map(c => ({\r\n        type: c.type,\r\n        priority: c.priority,\r\n        match: (path) => isValid(c, path.get()),\r\n        node: c.node\r\n    })));\r\n    return {\r\n        ...switchNode,\r\n        validate(path, value, errors, options) {\r\n            let choice = switchNode.activeCase(path, true);\r\n            if (choice.node.optional()) {\r\n                return value;\r\n            }\r\n            return choice.node.validate(path, value, errors, options);\r\n        },\r\n        hook(hook, path, ...args) {\r\n            var _a;\r\n            return ((_a = hook.choice) !== null && _a !== void 0 ? _a : hook.base).call(hook, { node: this, choices, config: config !== null && config !== void 0 ? config : {}, switchNode }, path, ...args);\r\n        }\r\n    };\r\n};\r\nconst XOrList = (x) => ((node, config) => {\r\n    return exports.ChoiceNode([\r\n        {\r\n            type: x,\r\n            node,\r\n            change: v => { var _a; return (_a = v[0]) !== null && _a !== void 0 ? _a : node.default(); }\r\n        },\r\n        {\r\n            type: 'list',\r\n            node: ListNode_1.ListNode(node),\r\n            change: v => v ? [v] : []\r\n        }\r\n    ], config);\r\n});\r\nexports.ObjectOrList = XOrList('object');\r\nexports.StringOrList = XOrList('string');\r\nexports.ObjectOrPreset = (presetNode, objectNode, presets) => {\r\n    return exports.ChoiceNode([\r\n        {\r\n            type: 'string',\r\n            priority: 1,\r\n            node: presetNode,\r\n            change: v => Object.keys(presets)[0]\r\n        },\r\n        {\r\n            type: 'object',\r\n            node: objectNode,\r\n            change: v => { var _a; return (_a = presets[v]) !== null && _a !== void 0 ? _a : presets[Object.keys(presets)[0]]; }\r\n        }\r\n    ]);\r\n};\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.MapNode = void 0;\r\nconst Node_1 = require(\"./Node\");\r\n/**\r\n * Map nodes similar to list nodes, but a string key is required to add children\r\n */\r\nexports.MapNode = (keys, children, config) => {\r\n    return {\r\n        ...Node_1.Base,\r\n        type: () => 'map',\r\n        default: () => ({}),\r\n        navigate(path, index) {\r\n            const nextIndex = index + 1;\r\n            const pathElements = path.getArray();\r\n            if (pathElements.length <= nextIndex) {\r\n                return this;\r\n            }\r\n            return children.navigate(path, nextIndex);\r\n        },\r\n        pathPush(path, key) {\r\n            return path.modelPush(key);\r\n        },\r\n        suggest: (path) => keys.suggest(path, ''),\r\n        validate(path, value, errors, options) {\r\n            if (options.loose && typeof value !== 'object') {\r\n                value = this.default();\r\n            }\r\n            if (value === null || typeof value !== 'object') {\r\n                errors.add(path, 'error.expected_object');\r\n                return value;\r\n            }\r\n            let res = {};\r\n            Object.keys(value).forEach(k => {\r\n                keys.validate(path, k, errors, options);\r\n                res[k] = children.validate(path.push(k), value[k], errors, options);\r\n            });\r\n            return res;\r\n        },\r\n        validationOption(path) {\r\n            var _a;\r\n            return (_a = config === null || config === void 0 ? void 0 : config.validation) !== null && _a !== void 0 ? _a : keys.validationOption(path.push(''));\r\n        },\r\n        hook(hook, path, ...args) {\r\n            var _a;\r\n            return ((_a = hook.map) !== null && _a !== void 0 ? _a : hook.base).call(hook, { node: this, keys, children, config: config !== null && config !== void 0 ? config : {} }, path, ...args);\r\n        }\r\n    };\r\n};\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.NumberNode = void 0;\r\nconst Node_1 = require(\"./Node\");\r\nexports.NumberNode = (config) => {\r\n    var _a, _b, _c;\r\n    const integer = (config === null || config === void 0 ? void 0 : config.color) ? true : (_a = config === null || config === void 0 ? void 0 : config.integer) !== null && _a !== void 0 ? _a : false;\r\n    const min = (config === null || config === void 0 ? void 0 : config.color) ? 0 : (_b = config === null || config === void 0 ? void 0 : config.min) !== null && _b !== void 0 ? _b : -Infinity;\r\n    const max = (config === null || config === void 0 ? void 0 : config.color) ? 16777215 : (_c = config === null || config === void 0 ? void 0 : config.max) !== null && _c !== void 0 ? _c : Infinity;\r\n    const between = (config === null || config === void 0 ? void 0 : config.min) !== undefined && (config === null || config === void 0 ? void 0 : config.max) !== undefined;\r\n    return {\r\n        ...Node_1.Base,\r\n        type: () => 'number',\r\n        default: () => min > 0 ? min : 0,\r\n        validate(path, value, errors, options) {\r\n            if (options.loose && typeof value !== 'number') {\r\n                value = this.default();\r\n            }\r\n            if (typeof value !== 'number') {\r\n                errors.add(path, 'error.expected_number');\r\n            }\r\n            else if (integer && !Number.isInteger(value)) {\r\n                errors.add(path, 'error.expected_integer');\r\n            }\r\n            else if (between && (value < min || value > max)) {\r\n                errors.add(path, 'error.invalid_number_range.between', value, min, max);\r\n            }\r\n            else if (value < min) {\r\n                errors.add(path, 'error.invalid_number_range.smaller', value, min);\r\n            }\r\n            else if (value > max) {\r\n                errors.add(path, 'error.invalid_number_range.larger', value, max);\r\n            }\r\n            return value;\r\n        },\r\n        hook(hook, path, ...args) {\r\n            var _a;\r\n            return ((_a = hook.number) !== null && _a !== void 0 ? _a : hook.base).call(hook, { node: this, integer, min, max, between, config: config !== null && config !== void 0 ? config : {} }, path, ...args);\r\n        }\r\n    };\r\n};\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.quoteString = exports.escapeString = void 0;\r\nfunction escapeString(str) {\r\n    return str.replace(/(\\\\|\")/g, '\\\\$1');\r\n}\r\nexports.escapeString = escapeString;\r\nfunction quoteString(str) {\r\n    return `\"${escapeString(str)}\"`;\r\n}\r\nexports.quoteString = quoteString;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.ObjectNode = exports.Case = exports.Switch = void 0;\r\nconst Node_1 = require(\"./Node\");\r\nconst Path_1 = require(\"../model/Path\");\r\nconst Errors_1 = require(\"../model/Errors\");\r\nconst utils_1 = require(\"../utils\");\r\nexports.Switch = Symbol('switch');\r\nexports.Case = Symbol('case');\r\nexports.ObjectNode = (fields, config) => {\r\n    const { [exports.Switch]: filter, [exports.Case]: cases, ...defaultFields } = fields;\r\n    const getActiveFields = (path) => {\r\n        if (filter === undefined)\r\n            return defaultFields;\r\n        const switchValue = Path_1.relativePath(path, filter).get();\r\n        const activeCase = cases[switchValue];\r\n        return { ...defaultFields, ...activeCase };\r\n    };\r\n    const getChildModelPath = (path, childKey) => {\r\n        var _a;\r\n        const switchValue = filter ? Path_1.relativePath(path, filter).get() : undefined;\r\n        const caseFields = filter ? ((_a = cases[switchValue]) !== null && _a !== void 0 ? _a : {}) : {};\r\n        const caseKeys = Object.keys(caseFields);\r\n        const pathWithContext = (config === null || config === void 0 ? void 0 : config.context) ?\r\n            new Path_1.ModelPath(path.getModel(), new Path_1.Path(path.getArray(), [config.context])) : path;\r\n        const pathWithFilter = !(config === null || config === void 0 ? void 0 : config.disableSwitchContext) && switchValue && caseKeys.includes(childKey) ?\r\n            pathWithContext.contextPush(switchValue) : pathWithContext;\r\n        return pathWithFilter.push(childKey);\r\n    };\r\n    return ({\r\n        ...Node_1.Base,\r\n        type: () => 'object',\r\n        category: () => config === null || config === void 0 ? void 0 : config.category,\r\n        default: () => ({}),\r\n        keep() {\r\n            return this.optional();\r\n        },\r\n        navigate(path, index) {\r\n            const nextIndex = index + 1;\r\n            const pathElements = path.getArray();\r\n            if (pathElements.length <= nextIndex) {\r\n                return this;\r\n            }\r\n            const activeFields = getActiveFields(path.slice(0, nextIndex));\r\n            const node = activeFields[pathElements[nextIndex]];\r\n            return node === null || node === void 0 ? void 0 : node.navigate(path, nextIndex);\r\n        },\r\n        pathPush(path, key) {\r\n            return getChildModelPath(path, key.toString());\r\n        },\r\n        suggest(path, value) {\r\n            const activeFields = getActiveFields(path);\r\n            const existingKeys = Object.keys(typeof value === 'object' ? value : {});\r\n            return Object.keys(activeFields)\r\n                .filter(k => activeFields[k].enabled(path))\r\n                .filter(k => !existingKeys.includes(k))\r\n                .map(utils_1.quoteString);\r\n        },\r\n        validate(path, value, errors, options) {\r\n            if (options.loose && typeof value !== 'object') {\r\n                value = this.default();\r\n            }\r\n            if (typeof value !== 'object') {\r\n                errors.add(path, 'error.expected_object');\r\n                return value;\r\n            }\r\n            let activeFields = defaultFields;\r\n            if (filter) {\r\n                const filterPath = Path_1.relativePath(path, filter);\r\n                let switchValue = filterPath.get();\r\n                if (path.equals(filterPath.pop())) {\r\n                    const filterField = filterPath.last();\r\n                    switchValue = defaultFields[filterField].validate(path.push(filterField), value[filterField], new Errors_1.Errors(), options);\r\n                }\r\n                activeFields = { ...activeFields, ...cases[switchValue] };\r\n            }\r\n            const activeKeys = Object.keys(activeFields);\r\n            const forcedKeys = activeKeys.filter(k => !activeFields[k].optional());\r\n            const keys = new Set([...forcedKeys, ...Object.keys(value)]);\r\n            let res = {};\r\n            keys.forEach(k => {\r\n                if (activeKeys.includes(k)) {\r\n                    if (!activeFields[k].enabled(path))\r\n                        return;\r\n                    const newValue = activeFields[k].validate(path.push(k), value[k], errors, options);\r\n                    if (!activeFields[k].keep() && activeFields[k].optional()\r\n                        && (newValue === undefined\r\n                            || (Array.isArray(newValue) && newValue.length === 0)\r\n                            || (newValue.constructor === Object && Object.keys(newValue).length === 0))) {\r\n                        res[k] = undefined;\r\n                    }\r\n                    else {\r\n                        res[k] = newValue;\r\n                        path.getModel().set(path.push(k), newValue, true);\r\n                    }\r\n                }\r\n                else {\r\n                    res[k] = value[k];\r\n                }\r\n            });\r\n            return res;\r\n        },\r\n        hook(hook, path, ...args) {\r\n            var _a;\r\n            return ((_a = hook.object) !== null && _a !== void 0 ? _a : hook.base).call(hook, { node: this, fields: defaultFields, filter, cases, getActiveFields, getChildModelPath }, path, ...args);\r\n        }\r\n    });\r\n};\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Reference = void 0;\r\nexports.Reference = (schemas, schema) => ({\r\n    type(path) {\r\n        return schemas.get(schema).type.bind(this)(path);\r\n    },\r\n    category(path) {\r\n        return schemas.get(schema).category.bind(this)(path);\r\n    },\r\n    default() {\r\n        return schemas.get(schema).default.bind(this)();\r\n    },\r\n    transform(path, value) {\r\n        return schemas.get(schema).transform(path, value);\r\n    },\r\n    enabled(path) {\r\n        return schemas.get(schema).enabled.bind(this)(path);\r\n    },\r\n    keep() {\r\n        return schemas.get(schema).keep.bind(this)();\r\n    },\r\n    optional() {\r\n        return schemas.get(schema).optional.bind(this)();\r\n    },\r\n    navigate(path, index) {\r\n        return schemas.get(schema).navigate.bind(this)(path, index);\r\n    },\r\n    pathPush(path, key) {\r\n        return schemas.get(schema).pathPush.bind(this)(path, key);\r\n    },\r\n    suggest(path, value) {\r\n        return schemas.get(schema).suggest.bind(this)(path, value);\r\n    },\r\n    validate(path, value, errors, options) {\r\n        return schemas.get(schema).validate.bind(this)(path, value, errors, options);\r\n    },\r\n    validationOption(path) {\r\n        return schemas.get(schema).validationOption.bind(this)(path);\r\n    },\r\n    hook(hook, path, ...args) {\r\n        return schemas.get(schema).hook.bind(this)(hook, path, ...args);\r\n    },\r\n    activeCase(path, fallback) {\r\n        return schemas.get(schema).activeCase.bind(this)(path, fallback);\r\n    },\r\n    canUpdate(path, value) {\r\n        return schemas.get(schema).canUpdate.bind(this)(path, value);\r\n    },\r\n    update(path, value) {\r\n        return schemas.get(schema).update.bind(this)(path, value);\r\n    }\r\n});\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.StringNode = void 0;\r\nconst Node_1 = require(\"./Node\");\r\nconst utils_1 = require(\"../utils\");\r\nconst isEnum = (value) => {\r\n    var _a;\r\n    return !!((_a = value) === null || _a === void 0 ? void 0 : _a.enum);\r\n};\r\nconst isValidator = (value) => {\r\n    var _a;\r\n    return !!((_a = value) === null || _a === void 0 ? void 0 : _a.validator);\r\n};\r\n/**\r\n * Simple string node with one text field\r\n */\r\nexports.StringNode = (collections, config) => {\r\n    const getValues = isEnum(config)\r\n        ? ((typeof config.enum === 'string')\r\n            ? () => { var _a; return (_a = collections === null || collections === void 0 ? void 0 : collections.get(config.enum)) !== null && _a !== void 0 ? _a : []; }\r\n            : () => config.enum)\r\n        : (((config === null || config === void 0 ? void 0 : config.validator) === 'resource')\r\n            ? ((typeof config.params.pool === 'string')\r\n                ? (config.params.pool.startsWith('$')\r\n                    ? () => { var _a; return (_a = collections === null || collections === void 0 ? void 0 : collections.get(config.params.pool.slice(1))) !== null && _a !== void 0 ? _a : []; }\r\n                    : () => { var _a; return (_a = collections === null || collections === void 0 ? void 0 : collections.get(config.params.pool)) !== null && _a !== void 0 ? _a : []; })\r\n                : () => config.params.pool)\r\n            : () => []);\r\n    return {\r\n        ...Node_1.Base,\r\n        type: () => 'string',\r\n        default: () => '',\r\n        validate(path, value, errors, options) {\r\n            if (options.loose && typeof value !== 'string') {\r\n                value = this.default() || undefined;\r\n            }\r\n            if (typeof value !== 'string') {\r\n                errors.add(path, 'error.expected_string');\r\n                return value;\r\n            }\r\n            if (isValidator(config)) {\r\n                if (config.validator === 'resource' && value.length > 0 && !value.includes(':')) {\r\n                    value = value[0] === '#'\r\n                        ? '#minecraft:' + value.slice(1)\r\n                        : 'minecraft:' + value;\r\n                }\r\n                if (config.validator === 'resource' && ((typeof config.params.pool === 'string' && config.params.pool.startsWith('$')) ||\r\n                    (config.params.allowTag && value[0] === '#') ||\r\n                    config.params.isDefinition ||\r\n                    config.params.allowUnknown)) {\r\n                    return value;\r\n                }\r\n            }\r\n            if ((isEnum(config) && config.additional)) {\r\n                return value;\r\n            }\r\n            const values = getValues();\r\n            if (values.length > 0 && !values.includes(value)) {\r\n                errors.add(path, 'error.invalid_enum_option', value);\r\n            }\r\n            return value;\r\n        },\r\n        suggest: () => getValues().map(utils_1.quoteString),\r\n        validationOption() {\r\n            return isValidator(config) ? config : undefined;\r\n        },\r\n        hook(hook, path, ...args) {\r\n            var _a;\r\n            return ((_a = hook.string) !== null && _a !== void 0 ? _a : hook.base).call(hook, { node: this, getValues, config }, path, ...args);\r\n        }\r\n    };\r\n};\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.CollectionRegistry = exports.SchemaRegistry = void 0;\r\n/**\r\n * Registry for schemas\r\n */\r\nclass SchemaRegistry {\r\n    constructor() {\r\n        this.registry = {};\r\n    }\r\n    register(id, node) {\r\n        this.registry[id] = node;\r\n    }\r\n    get(id) {\r\n        const node = this.registry[id];\r\n        if (node === undefined) {\r\n            console.error(`Tried to access schema \"${id}\", but that doesn't exist.`);\r\n        }\r\n        return node;\r\n    }\r\n}\r\nexports.SchemaRegistry = SchemaRegistry;\r\n/**\r\n * Registry for collections\r\n */\r\nclass CollectionRegistry {\r\n    constructor() {\r\n        this.registry = {};\r\n    }\r\n    register(id, list) {\r\n        this.registry[id] = list;\r\n    }\r\n    get(id) {\r\n        const list = this.registry[id];\r\n        if (list === undefined) {\r\n            console.warn(`Tried to access collection \"${id}\", but that doesn't exist.`);\r\n        }\r\n        return list !== null && list !== void 0 ? list : [];\r\n    }\r\n}\r\nexports.CollectionRegistry = CollectionRegistry;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n","\"use strict\";\r\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}));\r\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) __createBinding(exports, m, p);\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n__exportStar(require(\"./model/DataModel\"), exports);\r\n__exportStar(require(\"./model/Path\"), exports);\r\n__exportStar(require(\"./model/Errors\"), exports);\r\n__exportStar(require(\"./nodes/Node\"), exports);\r\n__exportStar(require(\"./nodes/BooleanNode\"), exports);\r\n__exportStar(require(\"./nodes/ChoiceNode\"), exports);\r\n__exportStar(require(\"./nodes/ListNode\"), exports);\r\n__exportStar(require(\"./nodes/MapNode\"), exports);\r\n__exportStar(require(\"./nodes/NumberNode\"), exports);\r\n__exportStar(require(\"./nodes/ObjectNode\"), exports);\r\n__exportStar(require(\"./nodes/Reference\"), exports);\r\n__exportStar(require(\"./nodes/StringNode\"), exports);\r\n__exportStar(require(\"./nodes/SwitchNode\"), exports);\r\n__exportStar(require(\"./Hook\"), exports);\r\n__exportStar(require(\"./Registries\"), exports);\r\n__exportStar(require(\"./ValidationOption\"), exports);\r\n","// A port of an algorithm by Johannes Baagøe <baagoe@baagoe.com>, 2010\n// http://baagoe.com/en/RandomMusings/javascript/\n// https://github.com/nquinlan/better-random-numbers-for-javascript-mirror\n// Original work is under MIT license -\n\n// Copyright (C) 2010 by Johannes Baagøe <baagoe@baagoe.org>\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n\n\n(function(global, module, define) {\n\nfunction Alea(seed) {\n  var me = this, mash = Mash();\n\n  me.next = function() {\n    var t = 2091639 * me.s0 + me.c * 2.3283064365386963e-10; // 2^-32\n    me.s0 = me.s1;\n    me.s1 = me.s2;\n    return me.s2 = t - (me.c = t | 0);\n  };\n\n  // Apply the seeding algorithm from Baagoe.\n  me.c = 1;\n  me.s0 = mash(' ');\n  me.s1 = mash(' ');\n  me.s2 = mash(' ');\n  me.s0 -= mash(seed);\n  if (me.s0 < 0) { me.s0 += 1; }\n  me.s1 -= mash(seed);\n  if (me.s1 < 0) { me.s1 += 1; }\n  me.s2 -= mash(seed);\n  if (me.s2 < 0) { me.s2 += 1; }\n  mash = null;\n}\n\nfunction copy(f, t) {\n  t.c = f.c;\n  t.s0 = f.s0;\n  t.s1 = f.s1;\n  t.s2 = f.s2;\n  return t;\n}\n\nfunction impl(seed, opts) {\n  var xg = new Alea(seed),\n      state = opts && opts.state,\n      prng = xg.next;\n  prng.int32 = function() { return (xg.next() * 0x100000000) | 0; }\n  prng.double = function() {\n    return prng() + (prng() * 0x200000 | 0) * 1.1102230246251565e-16; // 2^-53\n  };\n  prng.quick = prng;\n  if (state) {\n    if (typeof(state) == 'object') copy(state, xg);\n    prng.state = function() { return copy(xg, {}); }\n  }\n  return prng;\n}\n\nfunction Mash() {\n  var n = 0xefc8249d;\n\n  var mash = function(data) {\n    data = String(data);\n    for (var i = 0; i < data.length; i++) {\n      n += data.charCodeAt(i);\n      var h = 0.02519603282416938 * n;\n      n = h >>> 0;\n      h -= n;\n      h *= n;\n      n = h >>> 0;\n      h -= n;\n      n += h * 0x100000000; // 2^32\n    }\n    return (n >>> 0) * 2.3283064365386963e-10; // 2^-32\n  };\n\n  return mash;\n}\n\n\nif (module && module.exports) {\n  module.exports = impl;\n} else if (define && define.amd) {\n  define(function() { return impl; });\n} else {\n  this.alea = impl;\n}\n\n})(\n  this,\n  (typeof module) == 'object' && module,    // present in node.js\n  (typeof define) == 'function' && define   // present with an AMD loader\n);\n\n\n","// A Javascript implementaion of the \"xor128\" prng algorithm by\n// George Marsaglia.  See http://www.jstatsoft.org/v08/i14/paper\n\n(function(global, module, define) {\n\nfunction XorGen(seed) {\n  var me = this, strseed = '';\n\n  me.x = 0;\n  me.y = 0;\n  me.z = 0;\n  me.w = 0;\n\n  // Set up generator function.\n  me.next = function() {\n    var t = me.x ^ (me.x << 11);\n    me.x = me.y;\n    me.y = me.z;\n    me.z = me.w;\n    return me.w ^= (me.w >>> 19) ^ t ^ (t >>> 8);\n  };\n\n  if (seed === (seed | 0)) {\n    // Integer seed.\n    me.x = seed;\n  } else {\n    // String seed.\n    strseed += seed;\n  }\n\n  // Mix in string seed, then discard an initial batch of 64 values.\n  for (var k = 0; k < strseed.length + 64; k++) {\n    me.x ^= strseed.charCodeAt(k) | 0;\n    me.next();\n  }\n}\n\nfunction copy(f, t) {\n  t.x = f.x;\n  t.y = f.y;\n  t.z = f.z;\n  t.w = f.w;\n  return t;\n}\n\nfunction impl(seed, opts) {\n  var xg = new XorGen(seed),\n      state = opts && opts.state,\n      prng = function() { return (xg.next() >>> 0) / 0x100000000; };\n  prng.double = function() {\n    do {\n      var top = xg.next() >>> 11,\n          bot = (xg.next() >>> 0) / 0x100000000,\n          result = (top + bot) / (1 << 21);\n    } while (result === 0);\n    return result;\n  };\n  prng.int32 = xg.next;\n  prng.quick = prng;\n  if (state) {\n    if (typeof(state) == 'object') copy(state, xg);\n    prng.state = function() { return copy(xg, {}); }\n  }\n  return prng;\n}\n\nif (module && module.exports) {\n  module.exports = impl;\n} else if (define && define.amd) {\n  define(function() { return impl; });\n} else {\n  this.xor128 = impl;\n}\n\n})(\n  this,\n  (typeof module) == 'object' && module,    // present in node.js\n  (typeof define) == 'function' && define   // present with an AMD loader\n);\n\n\n","// A Javascript implementaion of the \"xorwow\" prng algorithm by\n// George Marsaglia.  See http://www.jstatsoft.org/v08/i14/paper\n\n(function(global, module, define) {\n\nfunction XorGen(seed) {\n  var me = this, strseed = '';\n\n  // Set up generator function.\n  me.next = function() {\n    var t = (me.x ^ (me.x >>> 2));\n    me.x = me.y; me.y = me.z; me.z = me.w; me.w = me.v;\n    return (me.d = (me.d + 362437 | 0)) +\n       (me.v = (me.v ^ (me.v << 4)) ^ (t ^ (t << 1))) | 0;\n  };\n\n  me.x = 0;\n  me.y = 0;\n  me.z = 0;\n  me.w = 0;\n  me.v = 0;\n\n  if (seed === (seed | 0)) {\n    // Integer seed.\n    me.x = seed;\n  } else {\n    // String seed.\n    strseed += seed;\n  }\n\n  // Mix in string seed, then discard an initial batch of 64 values.\n  for (var k = 0; k < strseed.length + 64; k++) {\n    me.x ^= strseed.charCodeAt(k) | 0;\n    if (k == strseed.length) {\n      me.d = me.x << 10 ^ me.x >>> 4;\n    }\n    me.next();\n  }\n}\n\nfunction copy(f, t) {\n  t.x = f.x;\n  t.y = f.y;\n  t.z = f.z;\n  t.w = f.w;\n  t.v = f.v;\n  t.d = f.d;\n  return t;\n}\n\nfunction impl(seed, opts) {\n  var xg = new XorGen(seed),\n      state = opts && opts.state,\n      prng = function() { return (xg.next() >>> 0) / 0x100000000; };\n  prng.double = function() {\n    do {\n      var top = xg.next() >>> 11,\n          bot = (xg.next() >>> 0) / 0x100000000,\n          result = (top + bot) / (1 << 21);\n    } while (result === 0);\n    return result;\n  };\n  prng.int32 = xg.next;\n  prng.quick = prng;\n  if (state) {\n    if (typeof(state) == 'object') copy(state, xg);\n    prng.state = function() { return copy(xg, {}); }\n  }\n  return prng;\n}\n\nif (module && module.exports) {\n  module.exports = impl;\n} else if (define && define.amd) {\n  define(function() { return impl; });\n} else {\n  this.xorwow = impl;\n}\n\n})(\n  this,\n  (typeof module) == 'object' && module,    // present in node.js\n  (typeof define) == 'function' && define   // present with an AMD loader\n);\n\n\n","// A Javascript implementaion of the \"xorshift7\" algorithm by\n// François Panneton and Pierre L'ecuyer:\n// \"On the Xorgshift Random Number Generators\"\n// http://saluc.engr.uconn.edu/refs/crypto/rng/panneton05onthexorshift.pdf\n\n(function(global, module, define) {\n\nfunction XorGen(seed) {\n  var me = this;\n\n  // Set up generator function.\n  me.next = function() {\n    // Update xor generator.\n    var X = me.x, i = me.i, t, v, w;\n    t = X[i]; t ^= (t >>> 7); v = t ^ (t << 24);\n    t = X[(i + 1) & 7]; v ^= t ^ (t >>> 10);\n    t = X[(i + 3) & 7]; v ^= t ^ (t >>> 3);\n    t = X[(i + 4) & 7]; v ^= t ^ (t << 7);\n    t = X[(i + 7) & 7]; t = t ^ (t << 13); v ^= t ^ (t << 9);\n    X[i] = v;\n    me.i = (i + 1) & 7;\n    return v;\n  };\n\n  function init(me, seed) {\n    var j, w, X = [];\n\n    if (seed === (seed | 0)) {\n      // Seed state array using a 32-bit integer.\n      w = X[0] = seed;\n    } else {\n      // Seed state using a string.\n      seed = '' + seed;\n      for (j = 0; j < seed.length; ++j) {\n        X[j & 7] = (X[j & 7] << 15) ^\n            (seed.charCodeAt(j) + X[(j + 1) & 7] << 13);\n      }\n    }\n    // Enforce an array length of 8, not all zeroes.\n    while (X.length < 8) X.push(0);\n    for (j = 0; j < 8 && X[j] === 0; ++j);\n    if (j == 8) w = X[7] = -1; else w = X[j];\n\n    me.x = X;\n    me.i = 0;\n\n    // Discard an initial 256 values.\n    for (j = 256; j > 0; --j) {\n      me.next();\n    }\n  }\n\n  init(me, seed);\n}\n\nfunction copy(f, t) {\n  t.x = f.x.slice();\n  t.i = f.i;\n  return t;\n}\n\nfunction impl(seed, opts) {\n  if (seed == null) seed = +(new Date);\n  var xg = new XorGen(seed),\n      state = opts && opts.state,\n      prng = function() { return (xg.next() >>> 0) / 0x100000000; };\n  prng.double = function() {\n    do {\n      var top = xg.next() >>> 11,\n          bot = (xg.next() >>> 0) / 0x100000000,\n          result = (top + bot) / (1 << 21);\n    } while (result === 0);\n    return result;\n  };\n  prng.int32 = xg.next;\n  prng.quick = prng;\n  if (state) {\n    if (state.x) copy(state, xg);\n    prng.state = function() { return copy(xg, {}); }\n  }\n  return prng;\n}\n\nif (module && module.exports) {\n  module.exports = impl;\n} else if (define && define.amd) {\n  define(function() { return impl; });\n} else {\n  this.xorshift7 = impl;\n}\n\n})(\n  this,\n  (typeof module) == 'object' && module,    // present in node.js\n  (typeof define) == 'function' && define   // present with an AMD loader\n);\n\n","// A Javascript implementaion of Richard Brent's Xorgens xor4096 algorithm.\n//\n// This fast non-cryptographic random number generator is designed for\n// use in Monte-Carlo algorithms. It combines a long-period xorshift\n// generator with a Weyl generator, and it passes all common batteries\n// of stasticial tests for randomness while consuming only a few nanoseconds\n// for each prng generated.  For background on the generator, see Brent's\n// paper: \"Some long-period random number generators using shifts and xors.\"\n// http://arxiv.org/pdf/1004.3115v1.pdf\n//\n// Usage:\n//\n// var xor4096 = require('xor4096');\n// random = xor4096(1);                        // Seed with int32 or string.\n// assert.equal(random(), 0.1520436450538547); // (0, 1) range, 53 bits.\n// assert.equal(random.int32(), 1806534897);   // signed int32, 32 bits.\n//\n// For nonzero numeric keys, this impelementation provides a sequence\n// identical to that by Brent's xorgens 3 implementaion in C.  This\n// implementation also provides for initalizing the generator with\n// string seeds, or for saving and restoring the state of the generator.\n//\n// On Chrome, this prng benchmarks about 2.1 times slower than\n// Javascript's built-in Math.random().\n\n(function(global, module, define) {\n\nfunction XorGen(seed) {\n  var me = this;\n\n  // Set up generator function.\n  me.next = function() {\n    var w = me.w,\n        X = me.X, i = me.i, t, v;\n    // Update Weyl generator.\n    me.w = w = (w + 0x61c88647) | 0;\n    // Update xor generator.\n    v = X[(i + 34) & 127];\n    t = X[i = ((i + 1) & 127)];\n    v ^= v << 13;\n    t ^= t << 17;\n    v ^= v >>> 15;\n    t ^= t >>> 12;\n    // Update Xor generator array state.\n    v = X[i] = v ^ t;\n    me.i = i;\n    // Result is the combination.\n    return (v + (w ^ (w >>> 16))) | 0;\n  };\n\n  function init(me, seed) {\n    var t, v, i, j, w, X = [], limit = 128;\n    if (seed === (seed | 0)) {\n      // Numeric seeds initialize v, which is used to generates X.\n      v = seed;\n      seed = null;\n    } else {\n      // String seeds are mixed into v and X one character at a time.\n      seed = seed + '\\0';\n      v = 0;\n      limit = Math.max(limit, seed.length);\n    }\n    // Initialize circular array and weyl value.\n    for (i = 0, j = -32; j < limit; ++j) {\n      // Put the unicode characters into the array, and shuffle them.\n      if (seed) v ^= seed.charCodeAt((j + 32) % seed.length);\n      // After 32 shuffles, take v as the starting w value.\n      if (j === 0) w = v;\n      v ^= v << 10;\n      v ^= v >>> 15;\n      v ^= v << 4;\n      v ^= v >>> 13;\n      if (j >= 0) {\n        w = (w + 0x61c88647) | 0;     // Weyl.\n        t = (X[j & 127] ^= (v + w));  // Combine xor and weyl to init array.\n        i = (0 == t) ? i + 1 : 0;     // Count zeroes.\n      }\n    }\n    // We have detected all zeroes; make the key nonzero.\n    if (i >= 128) {\n      X[(seed && seed.length || 0) & 127] = -1;\n    }\n    // Run the generator 512 times to further mix the state before using it.\n    // Factoring this as a function slows the main generator, so it is just\n    // unrolled here.  The weyl generator is not advanced while warming up.\n    i = 127;\n    for (j = 4 * 128; j > 0; --j) {\n      v = X[(i + 34) & 127];\n      t = X[i = ((i + 1) & 127)];\n      v ^= v << 13;\n      t ^= t << 17;\n      v ^= v >>> 15;\n      t ^= t >>> 12;\n      X[i] = v ^ t;\n    }\n    // Storing state as object members is faster than using closure variables.\n    me.w = w;\n    me.X = X;\n    me.i = i;\n  }\n\n  init(me, seed);\n}\n\nfunction copy(f, t) {\n  t.i = f.i;\n  t.w = f.w;\n  t.X = f.X.slice();\n  return t;\n};\n\nfunction impl(seed, opts) {\n  if (seed == null) seed = +(new Date);\n  var xg = new XorGen(seed),\n      state = opts && opts.state,\n      prng = function() { return (xg.next() >>> 0) / 0x100000000; };\n  prng.double = function() {\n    do {\n      var top = xg.next() >>> 11,\n          bot = (xg.next() >>> 0) / 0x100000000,\n          result = (top + bot) / (1 << 21);\n    } while (result === 0);\n    return result;\n  };\n  prng.int32 = xg.next;\n  prng.quick = prng;\n  if (state) {\n    if (state.X) copy(state, xg);\n    prng.state = function() { return copy(xg, {}); }\n  }\n  return prng;\n}\n\nif (module && module.exports) {\n  module.exports = impl;\n} else if (define && define.amd) {\n  define(function() { return impl; });\n} else {\n  this.xor4096 = impl;\n}\n\n})(\n  this,                                     // window object or global\n  (typeof module) == 'object' && module,    // present in node.js\n  (typeof define) == 'function' && define   // present with an AMD loader\n);\n","// A Javascript implementaion of the \"Tyche-i\" prng algorithm by\n// Samuel Neves and Filipe Araujo.\n// See https://eden.dei.uc.pt/~sneves/pubs/2011-snfa2.pdf\n\n(function(global, module, define) {\n\nfunction XorGen(seed) {\n  var me = this, strseed = '';\n\n  // Set up generator function.\n  me.next = function() {\n    var b = me.b, c = me.c, d = me.d, a = me.a;\n    b = (b << 25) ^ (b >>> 7) ^ c;\n    c = (c - d) | 0;\n    d = (d << 24) ^ (d >>> 8) ^ a;\n    a = (a - b) | 0;\n    me.b = b = (b << 20) ^ (b >>> 12) ^ c;\n    me.c = c = (c - d) | 0;\n    me.d = (d << 16) ^ (c >>> 16) ^ a;\n    return me.a = (a - b) | 0;\n  };\n\n  /* The following is non-inverted tyche, which has better internal\n   * bit diffusion, but which is about 25% slower than tyche-i in JS.\n  me.next = function() {\n    var a = me.a, b = me.b, c = me.c, d = me.d;\n    a = (me.a + me.b | 0) >>> 0;\n    d = me.d ^ a; d = d << 16 ^ d >>> 16;\n    c = me.c + d | 0;\n    b = me.b ^ c; b = b << 12 ^ d >>> 20;\n    me.a = a = a + b | 0;\n    d = d ^ a; me.d = d = d << 8 ^ d >>> 24;\n    me.c = c = c + d | 0;\n    b = b ^ c;\n    return me.b = (b << 7 ^ b >>> 25);\n  }\n  */\n\n  me.a = 0;\n  me.b = 0;\n  me.c = 2654435769 | 0;\n  me.d = 1367130551;\n\n  if (seed === Math.floor(seed)) {\n    // Integer seed.\n    me.a = (seed / 0x100000000) | 0;\n    me.b = seed | 0;\n  } else {\n    // String seed.\n    strseed += seed;\n  }\n\n  // Mix in string seed, then discard an initial batch of 64 values.\n  for (var k = 0; k < strseed.length + 20; k++) {\n    me.b ^= strseed.charCodeAt(k) | 0;\n    me.next();\n  }\n}\n\nfunction copy(f, t) {\n  t.a = f.a;\n  t.b = f.b;\n  t.c = f.c;\n  t.d = f.d;\n  return t;\n};\n\nfunction impl(seed, opts) {\n  var xg = new XorGen(seed),\n      state = opts && opts.state,\n      prng = function() { return (xg.next() >>> 0) / 0x100000000; };\n  prng.double = function() {\n    do {\n      var top = xg.next() >>> 11,\n          bot = (xg.next() >>> 0) / 0x100000000,\n          result = (top + bot) / (1 << 21);\n    } while (result === 0);\n    return result;\n  };\n  prng.int32 = xg.next;\n  prng.quick = prng;\n  if (state) {\n    if (typeof(state) == 'object') copy(state, xg);\n    prng.state = function() { return copy(xg, {}); }\n  }\n  return prng;\n}\n\nif (module && module.exports) {\n  module.exports = impl;\n} else if (define && define.amd) {\n  define(function() { return impl; });\n} else {\n  this.tychei = impl;\n}\n\n})(\n  this,\n  (typeof module) == 'object' && module,    // present in node.js\n  (typeof define) == 'function' && define   // present with an AMD loader\n);\n\n\n","export default {}","/*\nCopyright 2019 David Bau.\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n*/\n\n(function (global, pool, math) {\n//\n// The following constants are related to IEEE 754 limits.\n//\n\nvar width = 256,        // each RC4 output is 0 <= x < 256\n    chunks = 6,         // at least six RC4 outputs for each double\n    digits = 52,        // there are 52 significant digits in a double\n    rngname = 'random', // rngname: name for Math.random and Math.seedrandom\n    startdenom = math.pow(width, chunks),\n    significance = math.pow(2, digits),\n    overflow = significance * 2,\n    mask = width - 1,\n    nodecrypto;         // node.js crypto module, initialized at the bottom.\n\n//\n// seedrandom()\n// This is the seedrandom function described above.\n//\nfunction seedrandom(seed, options, callback) {\n  var key = [];\n  options = (options == true) ? { entropy: true } : (options || {});\n\n  // Flatten the seed string or build one from local entropy if needed.\n  var shortseed = mixkey(flatten(\n    options.entropy ? [seed, tostring(pool)] :\n    (seed == null) ? autoseed() : seed, 3), key);\n\n  // Use the seed to initialize an ARC4 generator.\n  var arc4 = new ARC4(key);\n\n  // This function returns a random double in [0, 1) that contains\n  // randomness in every bit of the mantissa of the IEEE 754 value.\n  var prng = function() {\n    var n = arc4.g(chunks),             // Start with a numerator n < 2 ^ 48\n        d = startdenom,                 //   and denominator d = 2 ^ 48.\n        x = 0;                          //   and no 'extra last byte'.\n    while (n < significance) {          // Fill up all significant digits by\n      n = (n + x) * width;              //   shifting numerator and\n      d *= width;                       //   denominator and generating a\n      x = arc4.g(1);                    //   new least-significant-byte.\n    }\n    while (n >= overflow) {             // To avoid rounding up, before adding\n      n /= 2;                           //   last byte, shift everything\n      d /= 2;                           //   right using integer math until\n      x >>>= 1;                         //   we have exactly the desired bits.\n    }\n    return (n + x) / d;                 // Form the number within [0, 1).\n  };\n\n  prng.int32 = function() { return arc4.g(4) | 0; }\n  prng.quick = function() { return arc4.g(4) / 0x100000000; }\n  prng.double = prng;\n\n  // Mix the randomness into accumulated entropy.\n  mixkey(tostring(arc4.S), pool);\n\n  // Calling convention: what to return as a function of prng, seed, is_math.\n  return (options.pass || callback ||\n      function(prng, seed, is_math_call, state) {\n        if (state) {\n          // Load the arc4 state from the given state if it has an S array.\n          if (state.S) { copy(state, arc4); }\n          // Only provide the .state method if requested via options.state.\n          prng.state = function() { return copy(arc4, {}); }\n        }\n\n        // If called as a method of Math (Math.seedrandom()), mutate\n        // Math.random because that is how seedrandom.js has worked since v1.0.\n        if (is_math_call) { math[rngname] = prng; return seed; }\n\n        // Otherwise, it is a newer calling convention, so return the\n        // prng directly.\n        else return prng;\n      })(\n  prng,\n  shortseed,\n  'global' in options ? options.global : (this == math),\n  options.state);\n}\n\n//\n// ARC4\n//\n// An ARC4 implementation.  The constructor takes a key in the form of\n// an array of at most (width) integers that should be 0 <= x < (width).\n//\n// The g(count) method returns a pseudorandom integer that concatenates\n// the next (count) outputs from ARC4.  Its return value is a number x\n// that is in the range 0 <= x < (width ^ count).\n//\nfunction ARC4(key) {\n  var t, keylen = key.length,\n      me = this, i = 0, j = me.i = me.j = 0, s = me.S = [];\n\n  // The empty key [] is treated as [0].\n  if (!keylen) { key = [keylen++]; }\n\n  // Set up S using the standard key scheduling algorithm.\n  while (i < width) {\n    s[i] = i++;\n  }\n  for (i = 0; i < width; i++) {\n    s[i] = s[j = mask & (j + key[i % keylen] + (t = s[i]))];\n    s[j] = t;\n  }\n\n  // The \"g\" method returns the next (count) outputs as one number.\n  (me.g = function(count) {\n    // Using instance members instead of closure state nearly doubles speed.\n    var t, r = 0,\n        i = me.i, j = me.j, s = me.S;\n    while (count--) {\n      t = s[i = mask & (i + 1)];\n      r = r * width + s[mask & ((s[i] = s[j = mask & (j + t)]) + (s[j] = t))];\n    }\n    me.i = i; me.j = j;\n    return r;\n    // For robust unpredictability, the function call below automatically\n    // discards an initial batch of values.  This is called RC4-drop[256].\n    // See http://google.com/search?q=rsa+fluhrer+response&btnI\n  })(width);\n}\n\n//\n// copy()\n// Copies internal state of ARC4 to or from a plain object.\n//\nfunction copy(f, t) {\n  t.i = f.i;\n  t.j = f.j;\n  t.S = f.S.slice();\n  return t;\n};\n\n//\n// flatten()\n// Converts an object tree to nested arrays of strings.\n//\nfunction flatten(obj, depth) {\n  var result = [], typ = (typeof obj), prop;\n  if (depth && typ == 'object') {\n    for (prop in obj) {\n      try { result.push(flatten(obj[prop], depth - 1)); } catch (e) {}\n    }\n  }\n  return (result.length ? result : typ == 'string' ? obj : obj + '\\0');\n}\n\n//\n// mixkey()\n// Mixes a string seed into a key that is an array of integers, and\n// returns a shortened string seed that is equivalent to the result key.\n//\nfunction mixkey(seed, key) {\n  var stringseed = seed + '', smear, j = 0;\n  while (j < stringseed.length) {\n    key[mask & j] =\n      mask & ((smear ^= key[mask & j] * 19) + stringseed.charCodeAt(j++));\n  }\n  return tostring(key);\n}\n\n//\n// autoseed()\n// Returns an object for autoseeding, using window.crypto and Node crypto\n// module if available.\n//\nfunction autoseed() {\n  try {\n    var out;\n    if (nodecrypto && (out = nodecrypto.randomBytes)) {\n      // The use of 'out' to remember randomBytes makes tight minified code.\n      out = out(width);\n    } else {\n      out = new Uint8Array(width);\n      (global.crypto || global.msCrypto).getRandomValues(out);\n    }\n    return tostring(out);\n  } catch (e) {\n    var browser = global.navigator,\n        plugins = browser && browser.plugins;\n    return [+new Date, global, plugins, global.screen, tostring(pool)];\n  }\n}\n\n//\n// tostring()\n// Converts an array of charcodes to a string\n//\nfunction tostring(a) {\n  return String.fromCharCode.apply(0, a);\n}\n\n//\n// When seedrandom.js is loaded, we immediately mix a few bits\n// from the built-in RNG into the entropy pool.  Because we do\n// not want to interfere with deterministic PRNG state later,\n// seedrandom will not call math.random on its own again after\n// initialization.\n//\nmixkey(math.random(), pool);\n\n//\n// Nodejs and AMD support: export the implementation as a module using\n// either convention.\n//\nif ((typeof module) == 'object' && module.exports) {\n  module.exports = seedrandom;\n  // When in node.js, try using crypto package for autoseeding.\n  try {\n    nodecrypto = require('crypto');\n  } catch (ex) {}\n} else if ((typeof define) == 'function' && define.amd) {\n  define(function() { return seedrandom; });\n} else {\n  // When included as a plain script, set up Math.seedrandom global.\n  math['seed' + rngname] = seedrandom;\n}\n\n\n// End anonymous scope, and pass initial values.\n})(\n  // global: `self` in browsers (including strict mode and web workers),\n  // otherwise `this` in Node and other environments\n  (typeof self !== 'undefined') ? self : this,\n  [],     // pool: entropy pool starts empty\n  Math    // math: package containing random, pow, and seedrandom\n);\n","// A library of seedable RNGs implemented in Javascript.\n//\n// Usage:\n//\n// var seedrandom = require('seedrandom');\n// var random = seedrandom(1); // or any seed.\n// var x = random();       // 0 <= x < 1.  Every bit is random.\n// var x = random.quick(); // 0 <= x < 1.  32 bits of randomness.\n\n// alea, a 53-bit multiply-with-carry generator by Johannes Baagøe.\n// Period: ~2^116\n// Reported to pass all BigCrush tests.\nvar alea = require('./lib/alea');\n\n// xor128, a pure xor-shift generator by George Marsaglia.\n// Period: 2^128-1.\n// Reported to fail: MatrixRank and LinearComp.\nvar xor128 = require('./lib/xor128');\n\n// xorwow, George Marsaglia's 160-bit xor-shift combined plus weyl.\n// Period: 2^192-2^32\n// Reported to fail: CollisionOver, SimpPoker, and LinearComp.\nvar xorwow = require('./lib/xorwow');\n\n// xorshift7, by François Panneton and Pierre L'ecuyer, takes\n// a different approach: it adds robustness by allowing more shifts\n// than Marsaglia's original three.  It is a 7-shift generator\n// with 256 bits, that passes BigCrush with no systmatic failures.\n// Period 2^256-1.\n// No systematic BigCrush failures reported.\nvar xorshift7 = require('./lib/xorshift7');\n\n// xor4096, by Richard Brent, is a 4096-bit xor-shift with a\n// very long period that also adds a Weyl generator. It also passes\n// BigCrush with no systematic failures.  Its long period may\n// be useful if you have many generators and need to avoid\n// collisions.\n// Period: 2^4128-2^32.\n// No systematic BigCrush failures reported.\nvar xor4096 = require('./lib/xor4096');\n\n// Tyche-i, by Samuel Neves and Filipe Araujo, is a bit-shifting random\n// number generator derived from ChaCha, a modern stream cipher.\n// https://eden.dei.uc.pt/~sneves/pubs/2011-snfa2.pdf\n// Period: ~2^127\n// No systematic BigCrush failures reported.\nvar tychei = require('./lib/tychei');\n\n// The original ARC4-based prng included in this library.\n// Period: ~2^1600\nvar sr = require('./seedrandom');\n\nsr.alea = alea;\nsr.xor128 = xor128;\nsr.xorwow = xorwow;\nsr.xorshift7 = xorshift7;\nsr.xor4096 = xor4096;\nsr.tychei = tychei;\n\nmodule.exports = sr;\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.initCollections = void 0;\r\nfunction initCollections(collections) {\r\n    collections.register('advancement_trigger', [\r\n        'minecraft:bee_nest_destroyed',\r\n        'minecraft:bred_animals',\r\n        'minecraft:brewed_potion',\r\n        'minecraft:changed_dimension',\r\n        'minecraft:channeled_lightning',\r\n        'minecraft:construct_beacon',\r\n        'minecraft:consume_item',\r\n        'minecraft:cured_zombie_villager',\r\n        'minecraft:effects_changed',\r\n        'minecraft:enchanted_item',\r\n        'minecraft:enter_block',\r\n        'minecraft:entity_hurt_player',\r\n        'minecraft:entity_killed_player',\r\n        'minecraft:filled_bucket',\r\n        'minecraft:fishing_rod_hooked',\r\n        'minecraft:hero_of_the_village',\r\n        'minecraft:impossible',\r\n        'minecraft:inventory_changed',\r\n        'minecraft:item_durability_changed',\r\n        'minecraft:killed_by_crossbow',\r\n        'minecraft:levitation',\r\n        'minecraft:location',\r\n        'minecraft:nether_travel',\r\n        'minecraft:placed_block',\r\n        'minecraft:player_hurt_entity',\r\n        'minecraft:player_killed_entity',\r\n        'minecraft:recipe_unlocked',\r\n        'minecraft:shot_crossbow',\r\n        'minecraft:safely_harvest_honey',\r\n        'minecraft:slept_in_bed',\r\n        'minecraft:slide_down_block',\r\n        'minecraft:summoned_entity',\r\n        'minecraft:tame_animal',\r\n        'minecraft:tick',\r\n        'minecraft:used_ender_eye',\r\n        'minecraft:used_totem',\r\n        'minecraft:villager_trade',\r\n        'minecraft:voluntary_exile'\r\n    ]);\r\n    collections.register('loot_pool_entry_type', [\r\n        'minecraft:empty',\r\n        'minecraft:item',\r\n        'minecraft:tag',\r\n        'minecraft:loot_table',\r\n        'minecraft:alternatives',\r\n        'minecraft:sequence',\r\n        'minecraft:group',\r\n        'minecraft:dynamic'\r\n    ]);\r\n    collections.register('loot_condition_type', [\r\n        'minecraft:alternative',\r\n        'minecraft:inverted',\r\n        'minecraft:reference',\r\n        'minecraft:entity_properties',\r\n        'minecraft:block_state_property',\r\n        'minecraft:match_tool',\r\n        'minecraft:damage_source_properties',\r\n        'minecraft:location_check',\r\n        'minecraft:weather_check',\r\n        'minecraft:time_check',\r\n        'minecraft:entity_scores',\r\n        'minecraft:random_chance',\r\n        'minecraft:random_chance_with_looting',\r\n        'minecraft:table_bonus',\r\n        'minecraft:killed_by_player',\r\n        'minecraft:survives_explosion'\r\n    ]);\r\n    collections.register('loot_function_type', [\r\n        'minecraft:set_count',\r\n        'minecraft:set_damage',\r\n        'minecraft:set_name',\r\n        'minecraft:set_lore',\r\n        'minecraft:set_nbt',\r\n        'minecraft:set_attributes',\r\n        'minecraft:set_contents',\r\n        'minecraft:enchant_randomly',\r\n        'minecraft:enchant_with_levels',\r\n        'minecraft:looting_enchant',\r\n        'minecraft:limit_count',\r\n        'minecraft:furnace_smelt',\r\n        'minecraft:explosion_decay',\r\n        'minecraft:fill_player_head',\r\n        'minecraft:copy_name',\r\n        'minecraft:copy_nbt',\r\n        'minecraft:copy_state',\r\n        'minecraft:apply_bonus',\r\n        'minecraft:exploration_map',\r\n        'minecraft:set_stew_effect'\r\n    ]);\r\n    collections.register('attribute', [\r\n        'generic.maxHealth',\r\n        'generic.followRange',\r\n        'generic.knockbackResistance',\r\n        'generic.movementSpeed',\r\n        'generic.attackDamage',\r\n        'generic.armor',\r\n        'generic.armorToughness',\r\n        'generic.attackSpeed',\r\n        'generic.luck',\r\n        'horse.jumpStrength',\r\n        'generic.attackKnockback',\r\n        'generic.flyingSpeed',\r\n        'zombie.spawnReinforcements'\r\n    ]);\r\n    collections.register('structure_feature', [\r\n        'pillager_outpost',\r\n        'mineshaft',\r\n        'mansion',\r\n        'jungle_pyramid',\r\n        'desert_pyramid',\r\n        'igloo',\r\n        'shipwreck',\r\n        'swamp_hut',\r\n        'stronghold',\r\n        'monument',\r\n        'ocean_ruin',\r\n        'fortress',\r\n        'endcity',\r\n        'buried_treasure',\r\n        'village'\r\n    ]);\r\n    collections.register('dimension', [\r\n        'minecraft:overworld',\r\n        'minecraft:the_nether',\r\n        'minecraft:the_end'\r\n    ]);\r\n    collections.register('keybind', [\r\n        'key.advancements',\r\n        'key.attack',\r\n        'key.back',\r\n        'key.chat',\r\n        'key.command',\r\n        'key.drop',\r\n        'key.forward',\r\n        'key.fullscreen',\r\n        'key.hotbar.1',\r\n        'key.hotbar.2',\r\n        'key.hotbar.3',\r\n        'key.hotbar.4',\r\n        'key.hotbar.5',\r\n        'key.hotbar.6',\r\n        'key.hotbar.7',\r\n        'key.hotbar.8',\r\n        'key.hotbar.9',\r\n        'key.inventory',\r\n        'key.jump',\r\n        'key.left',\r\n        'key.loadToolbarActivator',\r\n        'key.pickItem',\r\n        'key.playerlist',\r\n        'key.right',\r\n        'key.saveToolbarActivator',\r\n        'key.screenshot',\r\n        'key.smoothCamera',\r\n        'key.sneak',\r\n        'key.spectatorOutlines',\r\n        'key.sprint',\r\n        'key.swapOffhand',\r\n        'key.togglePerspective',\r\n        'key.use'\r\n    ]);\r\n    collections.register('slot', [\r\n        'mainhand',\r\n        'offhand',\r\n        'head',\r\n        'chest',\r\n        'legs',\r\n        'feet'\r\n    ]);\r\n    collections.register('gamemode', [\r\n        'survival',\r\n        'creative',\r\n        'adventure',\r\n        'spectator'\r\n    ]);\r\n    collections.register('entity_source', [\r\n        'this',\r\n        'direct_killer',\r\n        'killer',\r\n        'killer_player'\r\n    ]);\r\n    collections.register('copy_source', [\r\n        'block_entity',\r\n        'this',\r\n        'killer',\r\n        'killer_player'\r\n    ]);\r\n    collections.register('loot_table_apply_bonus_formula', [\r\n        'minecraft:uniform_bonus_count',\r\n        'minecraft:binomial_with_bonus_count',\r\n        'minecraft:ore_drops'\r\n    ]);\r\n    collections.register('map_decoration', [\r\n        'mansion',\r\n        'monument',\r\n        'player',\r\n        'frame',\r\n        'red_marker',\r\n        'blue_marker',\r\n        'target_x',\r\n        'target_point',\r\n        'player_off_map',\r\n        'player_off_limits',\r\n        'red_x',\r\n        'banner_white',\r\n        'banner_orange',\r\n        'banner_magenta',\r\n        'banner_light_blue',\r\n        'banner_yellow',\r\n        'banner_lime',\r\n        'banner_pink',\r\n        'banner_gray',\r\n        'banner_light_gray',\r\n        'banner_cyan',\r\n        'banner_purple',\r\n        'banner_blue',\r\n        'banner_brown',\r\n        'banner_green',\r\n        'banner_red',\r\n        'banner_black'\r\n    ]);\r\n    collections.register('recipe_group', [\r\n        'bed',\r\n        'light_gray_dye',\r\n        'iron_ingot',\r\n        'wooden_stairs',\r\n        'black_dye',\r\n        'stained_terracotta',\r\n        'dyed_bed',\r\n        'magenta_dye',\r\n        'bark',\r\n        'rabbit_stew',\r\n        'light_blue_dye',\r\n        'wooden_fence_gate',\r\n        'planks',\r\n        'stained_glass',\r\n        'wooden_door',\r\n        'stained_glass_pane',\r\n        'wooden_fence',\r\n        'sticks',\r\n        'concrete_powder',\r\n        'wooden_pressure_plate',\r\n        'boat',\r\n        'brown_dye',\r\n        'yellow_dye',\r\n        'bonemeal',\r\n        'red_dye',\r\n        'wooden_trapdoor',\r\n        'wooden_button',\r\n        'gold_ingot',\r\n        'pink_dye',\r\n        'wooden_slab',\r\n        'orange_dye',\r\n        'carpet',\r\n        'sign',\r\n        'wool',\r\n        'sugar',\r\n        'blue_dye',\r\n        'white_dye',\r\n        'banner',\r\n        'netherite_ingot'\r\n    ]);\r\n    collections.register('loot_context_type', [\r\n        'minecraft:empty',\r\n        'minecraft:chest',\r\n        'minecraft:command',\r\n        'minecraft:selector',\r\n        'minecraft:fishing',\r\n        'minecraft:entity',\r\n        'minecraft:gift',\r\n        'minecraft:barter',\r\n        'minecraft:advancement_reward',\r\n        'minecraft:advancement_entity',\r\n        'minecraft:generic',\r\n        'minecraft:block'\r\n    ]);\r\n}\r\nexports.initCollections = initCollections;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.initCommonSchemas = exports.Range = exports.ConditionCases = void 0;\r\nconst core_1 = require(\"@mcschema/core\");\r\nfunction initCommonSchemas(schemas, collections) {\r\n    const StringNode = core_1.StringNode.bind(undefined, collections);\r\n    const Reference = core_1.Reference.bind(undefined, schemas);\r\n    schemas.register('block_state', core_1.Mod(core_1.ObjectNode({\r\n        Name: StringNode({ validator: 'resource', params: { pool: 'block' } }),\r\n        Properties: core_1.Opt(core_1.MapNode(StringNode(), StringNode(), { validation: { validator: 'block_state_map', params: { id: ['pop', { push: 'Name' }] } } }))\r\n    }, { context: 'block_state' }), {\r\n        default: () => ({\r\n            Name: 'minecraft:stone'\r\n        })\r\n    }));\r\n    schemas.register('fluid_state', core_1.Mod(core_1.ObjectNode({\r\n        Name: StringNode({ validator: 'resource', params: { pool: 'fluid' } }),\r\n        Properties: core_1.Opt(core_1.MapNode(StringNode(), StringNode()))\r\n    }, { context: 'fluid_state' }), {\r\n        default: () => ({\r\n            Name: 'minecraft:water',\r\n            Properties: {\r\n                'level': '0'\r\n            }\r\n        })\r\n    }));\r\n    schemas.register('block_pos', core_1.Mod(core_1.ListNode(core_1.NumberNode({ integer: true })), {\r\n        default: () => [0, 0, 0]\r\n    }));\r\n    exports.Range = (config) => core_1.ChoiceNode([\r\n        ...((config === null || config === void 0 ? void 0 : config.forceRange) ? [] : [{\r\n                type: 'number',\r\n                node: core_1.NumberNode(config),\r\n                change: (v) => { var _a, _b, _c; return v === undefined ? 0 : (_c = (_b = (_a = v.min) !== null && _a !== void 0 ? _a : v.max) !== null && _b !== void 0 ? _b : v.n) !== null && _c !== void 0 ? _c : 0; }\r\n            }]),\r\n        {\r\n            type: 'object',\r\n            priority: -1,\r\n            node: core_1.ObjectNode({\r\n                min: (config === null || config === void 0 ? void 0 : config.bounds) ? core_1.NumberNode(config) : core_1.Opt(core_1.NumberNode(config)),\r\n                max: (config === null || config === void 0 ? void 0 : config.bounds) ? core_1.NumberNode(config) : core_1.Opt(core_1.NumberNode(config))\r\n            }, { context: 'range' }),\r\n            change: (v) => ({\r\n                min: typeof v === 'number' ? v : v === undefined ? 1 : v.n,\r\n                max: typeof v === 'number' ? v : v === undefined ? 1 : v.n\r\n            })\r\n        },\r\n        ...((config === null || config === void 0 ? void 0 : config.allowBinomial) ? [{\r\n                type: 'binomial',\r\n                node: core_1.ObjectNode({\r\n                    type: StringNode({ enum: ['minecraft:binomial'] }),\r\n                    n: core_1.NumberNode({ integer: true, min: 0 }),\r\n                    p: core_1.NumberNode({ min: 0, max: 1 })\r\n                }, { context: 'range' }),\r\n                match: (v) => v !== undefined && v.type === 'minecraft:binomial',\r\n                change: (v) => {\r\n                    var _a, _b;\r\n                    return ({\r\n                        type: 'minecraft:binomial',\r\n                        n: typeof v === 'number' ? v : v === undefined ? 1 : ((_b = (_a = v.min) !== null && _a !== void 0 ? _a : v.max) !== null && _b !== void 0 ? _b : 1),\r\n                        p: 0.5\r\n                    });\r\n                }\r\n            }] : [])\r\n    ], { choiceContext: 'range' });\r\n    exports.ConditionCases = {\r\n        'minecraft:alternative': {\r\n            terms: core_1.ListNode(Reference('condition'))\r\n        },\r\n        'minecraft:block_state_property': {\r\n            block: StringNode({ validator: 'resource', params: { pool: 'block' } }),\r\n            properties: core_1.MapNode(StringNode(), StringNode(), { validation: { validator: 'block_state_map', params: { id: ['pop', { push: 'block' }] } } })\r\n        },\r\n        'minecraft:damage_source_properties': {\r\n            predicate: Reference('damage_source_predicate')\r\n        },\r\n        'minecraft:entity_properties': {\r\n            entity: StringNode({ enum: 'entity_source' }),\r\n            predicate: Reference('entity_predicate')\r\n        },\r\n        'minecraft:entity_scores': {\r\n            entity: StringNode({ enum: 'entity_source' }),\r\n            scores: core_1.MapNode(StringNode({ validator: 'objective' }), exports.Range({ forceRange: true, bounds: true }))\r\n        },\r\n        'minecraft:inverted': {\r\n            term: Reference('condition')\r\n        },\r\n        'minecraft:killed_by_player': {\r\n            inverse: core_1.Opt(core_1.BooleanNode())\r\n        },\r\n        'minecraft:location_check': {\r\n            offsetX: core_1.Opt(core_1.NumberNode({ integer: true })),\r\n            offsetY: core_1.Opt(core_1.NumberNode({ integer: true })),\r\n            offsetZ: core_1.Opt(core_1.NumberNode({ integer: true })),\r\n            predicate: Reference('location_predicate')\r\n        },\r\n        'minecraft:match_tool': {\r\n            predicate: Reference('item_predicate')\r\n        },\r\n        'minecraft:random_chance': {\r\n            chance: core_1.NumberNode({ min: 0, max: 1 })\r\n        },\r\n        'minecraft:random_chance_with_looting': {\r\n            chance: core_1.NumberNode({ min: 0, max: 1 }),\r\n            looting_multiplier: core_1.NumberNode()\r\n        },\r\n        'minecraft:requirements': {\r\n            terms: core_1.ListNode(Reference('condition')),\r\n        },\r\n        'minecraft:reference': {\r\n            name: StringNode({ validator: 'resource', params: { pool: '$predicate' } })\r\n        },\r\n        'minecraft:table_bonus': {\r\n            enchantment: StringNode({ validator: 'resource', params: { pool: 'enchantment' } }),\r\n            chances: core_1.ListNode(core_1.NumberNode({ min: 0, max: 1 }))\r\n        },\r\n        'minecraft:time_check': {\r\n            value: exports.Range(),\r\n            period: core_1.Opt(core_1.NumberNode())\r\n        },\r\n        'minecraft:weather_check': {\r\n            raining: core_1.Opt(core_1.BooleanNode()),\r\n            thundering: core_1.Opt(core_1.BooleanNode())\r\n        }\r\n    };\r\n}\r\nexports.initCommonSchemas = initCommonSchemas;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.initPredicatesSchemas = exports.LocationFields = void 0;\r\nconst core_1 = require(\"@mcschema/core\");\r\nconst Common_1 = require(\"./Common\");\r\nfunction initPredicatesSchemas(schemas, collections) {\r\n    const Reference = core_1.Reference.bind(undefined, schemas);\r\n    const StringNode = core_1.StringNode.bind(undefined, collections);\r\n    const StateChoice = core_1.ChoiceNode([\r\n        {\r\n            type: 'string',\r\n            node: StringNode(),\r\n            change: v => (typeof v === 'boolean' || typeof v === 'number') ? v.toString() : ''\r\n        },\r\n        {\r\n            type: 'number',\r\n            node: core_1.NumberNode(),\r\n            change: v => (typeof v === 'string') ? parseInt(v) : 0\r\n        },\r\n        {\r\n            type: 'object',\r\n            node: core_1.ObjectNode({\r\n                min: core_1.Opt(core_1.NumberNode({ integer: true })),\r\n                max: core_1.Opt(core_1.NumberNode({ integer: true }))\r\n            }),\r\n            change: v => (typeof v === 'number') ? ({ min: v, max: v }) : ({})\r\n        },\r\n        {\r\n            type: 'boolean',\r\n            node: core_1.BooleanNode(),\r\n            change: v => v === 'true' || v === 1\r\n        }\r\n    ]);\r\n    schemas.register('item_predicate', core_1.ObjectNode({\r\n        item: core_1.Opt(StringNode({ validator: 'resource', params: { pool: 'item' } })),\r\n        tag: core_1.Opt(StringNode({ validator: 'resource', params: { pool: '$tag/item' } })),\r\n        count: core_1.Opt(Common_1.Range()),\r\n        durability: core_1.Opt(Common_1.Range()),\r\n        potion: core_1.Opt(StringNode({ validator: 'resource', params: { pool: 'potion' } })),\r\n        nbt: core_1.Opt(StringNode({ validator: 'nbt', params: { registry: { category: 'minecraft:item', id: ['pop', { push: 'item' }] } } })),\r\n        enchantments: core_1.Opt(core_1.ListNode(Reference('enchantment_predicate')))\r\n    }, { context: 'item' }));\r\n    schemas.register('enchantment_predicate', core_1.ObjectNode({\r\n        enchantment: core_1.Opt(StringNode({ validator: 'resource', params: { pool: 'enchantment' } })),\r\n        levels: core_1.Opt(Common_1.Range())\r\n    }, { context: 'enchantment' }));\r\n    schemas.register('block_predicate', core_1.ObjectNode({\r\n        block: core_1.Opt(StringNode({ validator: 'resource', params: { pool: 'block' } })),\r\n        tag: core_1.Opt(StringNode({ validator: 'resource', params: { pool: '$tag/block' } })),\r\n        nbt: core_1.Opt(StringNode({ validator: 'nbt', params: { registry: { category: 'minecraft:block', id: ['pop', { push: 'block' }] } } })),\r\n        state: core_1.Opt(core_1.MapNode(StringNode(), StateChoice, { validation: { validator: 'block_state_map', params: { id: ['pop', { push: 'block' }] } } }))\r\n    }, { context: 'block' }));\r\n    schemas.register('fluid_predicate', core_1.ObjectNode({\r\n        fluid: core_1.Opt(StringNode({ validator: 'resource', params: { pool: 'fluid' } })),\r\n        tag: core_1.Opt(StringNode({ validator: 'resource', params: { pool: '$tag/fluid' } })),\r\n        state: core_1.Opt(core_1.MapNode(StringNode(), StateChoice))\r\n    }, { context: 'fluid' }));\r\n    exports.LocationFields = {\r\n        position: core_1.Opt(core_1.ObjectNode({\r\n            x: core_1.Opt(Common_1.Range()),\r\n            y: core_1.Opt(Common_1.Range()),\r\n            z: core_1.Opt(Common_1.Range())\r\n        })),\r\n        biome: core_1.Opt(StringNode({ enum: 'biome' })),\r\n        feature: core_1.Opt(StringNode({ enum: 'structure_feature' })),\r\n        dimension: core_1.Opt(StringNode({ enum: 'dimension' })),\r\n        light: core_1.Opt(core_1.ObjectNode({\r\n            light: core_1.Opt(Common_1.Range({ integer: true, min: 0, max: 15 }))\r\n        })),\r\n        block: core_1.Opt(Reference('block_predicate')),\r\n        fluid: core_1.Opt(Reference('fluid_predicate'))\r\n    };\r\n    schemas.register('location_predicate', core_1.ObjectNode(exports.LocationFields, { context: 'location' }));\r\n    schemas.register('statistic_predicate', core_1.ObjectNode({\r\n        type: StringNode({ validator: 'resource', params: { pool: 'stat_type' } }),\r\n        stat: StringNode(),\r\n        value: Common_1.Range(),\r\n        [core_1.Switch]: [{ push: 'type' }],\r\n        [core_1.Case]: {\r\n            'minecraft:mined': {\r\n                stat: StringNode({ validator: 'resource', params: { pool: 'block' } })\r\n            },\r\n            'minecraft:crafted': {\r\n                stat: StringNode({ validator: 'resource', params: { pool: 'item' } })\r\n            },\r\n            'minecraft:used': {\r\n                stat: StringNode({ validator: 'resource', params: { pool: 'item' } })\r\n            },\r\n            'minecraft:broken': {\r\n                stat: StringNode({ validator: 'resource', params: { pool: 'item' } })\r\n            },\r\n            'minecraft:picked_up': {\r\n                stat: StringNode({ validator: 'resource', params: { pool: 'item' } })\r\n            },\r\n            'minecraft:dropped': {\r\n                stat: StringNode({ validator: 'resource', params: { pool: 'item' } })\r\n            },\r\n            'minecraft:killed': {\r\n                stat: StringNode({ validator: 'resource', params: { pool: 'entity_type' } })\r\n            },\r\n            'minecraft:killed_by': {\r\n                stat: StringNode({ validator: 'resource', params: { pool: 'entity_type' } })\r\n            },\r\n            'minecraft:custom': {\r\n                stat: StringNode({ validator: 'resource', params: { pool: 'custom_stat' } })\r\n            }\r\n        }\r\n    }));\r\n    schemas.register('player_predicate', core_1.ObjectNode({\r\n        gamemode: core_1.Opt(StringNode({ enum: 'gamemode' })),\r\n        level: core_1.Opt(Common_1.Range()),\r\n        advancements: core_1.Opt(core_1.MapNode(StringNode({ validator: 'resource', params: { pool: '$advancement' } }), core_1.ChoiceNode([\r\n            { type: 'boolean', node: core_1.BooleanNode(), change: _ => true },\r\n            {\r\n                type: 'object', node: core_1.MapNode(StringNode(), core_1.BooleanNode())\r\n            }\r\n        ]))),\r\n        recipes: core_1.Opt(core_1.MapNode(StringNode({ validator: 'resource', params: { pool: '$recipe' } }), core_1.BooleanNode())),\r\n        stats: core_1.Opt(core_1.ListNode(Reference('statistic_predicate')))\r\n    }, { context: 'player' }));\r\n    schemas.register('status_effect_predicate', core_1.ObjectNode({\r\n        amplifier: core_1.Opt(Common_1.Range()),\r\n        duration: core_1.Opt(Common_1.Range()),\r\n        ambient: core_1.Opt(core_1.BooleanNode()),\r\n        visible: core_1.Opt(core_1.BooleanNode())\r\n    }, { context: 'status_effect' }));\r\n    schemas.register('distance_predicate', core_1.ObjectNode({\r\n        x: core_1.Opt(Common_1.Range()),\r\n        y: core_1.Opt(Common_1.Range()),\r\n        z: core_1.Opt(Common_1.Range()),\r\n        absolute: core_1.Opt(Common_1.Range()),\r\n        horizontal: core_1.Opt(Common_1.Range())\r\n    }, { context: 'distance' }));\r\n    schemas.register('entity_predicate', core_1.ObjectNode({\r\n        type: core_1.Opt(StringNode({ validator: 'resource', params: { pool: 'entity_type', allowTag: true } })),\r\n        nbt: core_1.Opt(StringNode({ validator: 'nbt', params: { registry: { category: 'minecraft:entity', id: ['pop', { push: 'type' }] } } })),\r\n        team: core_1.Opt(StringNode({ validator: 'team' })),\r\n        location: core_1.Opt(Reference('location_predicate')),\r\n        distance: core_1.Opt(Reference('distance_predicate')),\r\n        flags: core_1.Opt(core_1.ObjectNode({\r\n            is_on_fire: core_1.Opt(core_1.BooleanNode()),\r\n            is_sneaking: core_1.Opt(core_1.BooleanNode()),\r\n            is_sprinting: core_1.Opt(core_1.BooleanNode()),\r\n            is_swimming: core_1.Opt(core_1.BooleanNode()),\r\n            is_baby: core_1.Opt(core_1.BooleanNode())\r\n        })),\r\n        equipment: core_1.Opt(core_1.MapNode(StringNode({ enum: 'slot' }), Reference('item_predicate'))),\r\n        player: core_1.Opt(Reference('player_predicate')),\r\n        effects: core_1.Opt(core_1.MapNode(StringNode({ validator: 'resource', params: { pool: 'mob_effect' } }), Reference('status_effect_predicate')))\r\n    }, { context: 'entity' }));\r\n    schemas.register('damage_source_predicate', core_1.ObjectNode({\r\n        is_explosion: core_1.Opt(core_1.BooleanNode()),\r\n        is_fire: core_1.Opt(core_1.BooleanNode()),\r\n        is_magic: core_1.Opt(core_1.BooleanNode()),\r\n        is_projectile: core_1.Opt(core_1.BooleanNode()),\r\n        is_lightning: core_1.Opt(core_1.BooleanNode()),\r\n        bypasses_armor: core_1.Opt(core_1.BooleanNode()),\r\n        bypasses_invulnerability: core_1.Opt(core_1.BooleanNode()),\r\n        bypasses_magic: core_1.Opt(core_1.BooleanNode()),\r\n        source_entity: core_1.Opt(Reference('entity_predicate')),\r\n        direct_entity: core_1.Opt(Reference('entity_predicate'))\r\n    }, { context: 'damage_source' }));\r\n    schemas.register('damage_predicate', core_1.ObjectNode({\r\n        dealt: core_1.Opt(Common_1.Range()),\r\n        taken: core_1.Opt(Common_1.Range()),\r\n        blocked: core_1.Opt(core_1.BooleanNode()),\r\n        source_entity: core_1.Opt(Reference('entity_predicate')),\r\n        type: core_1.Opt(Reference('damage_source_predicate'))\r\n    }, { context: 'damage' }));\r\n}\r\nexports.initPredicatesSchemas = initPredicatesSchemas;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.initAdvancementSchemas = void 0;\r\nconst core_1 = require(\"@mcschema/core\");\r\nconst Common_1 = require(\"./Common\");\r\nconst Predicates_1 = require(\"./Predicates\");\r\nfunction initAdvancementSchemas(schemas, collections) {\r\n    const Reference = core_1.Reference.bind(undefined, schemas);\r\n    const StringNode = core_1.StringNode.bind(undefined, collections);\r\n    schemas.register('advancement', core_1.Mod(core_1.ObjectNode({\r\n        display: core_1.Opt(core_1.Mod(core_1.ObjectNode({\r\n            icon: core_1.ObjectNode({\r\n                item: StringNode({ validator: 'resource', params: { pool: 'item' } }),\r\n                nbt: core_1.Opt(StringNode({ validator: 'nbt', params: { registry: { category: 'minecraft:item', id: ['pop', { push: 'item' }] } } }))\r\n            }),\r\n            title: Reference('text_component'),\r\n            description: Reference('text_component'),\r\n            background: core_1.Opt(StringNode()),\r\n            frame: core_1.Opt(StringNode({ enum: ['task', 'challenge', 'goal'] })),\r\n            show_toast: core_1.Opt(core_1.BooleanNode()),\r\n            announce_to_chat: core_1.Opt(core_1.BooleanNode()),\r\n            hidden: core_1.Opt(core_1.BooleanNode())\r\n        }), {\r\n            default: () => ({\r\n                icon: {\r\n                    item: 'minecraft:stone'\r\n                },\r\n                title: '',\r\n                description: ''\r\n            })\r\n        })),\r\n        parent: core_1.Opt(StringNode({ validator: 'resource', params: { pool: '$advancement' } })),\r\n        criteria: core_1.MapNode(StringNode(), Reference('advancement_criteria')),\r\n        requirements: core_1.Opt(core_1.ListNode(core_1.ListNode(StringNode() // TODO: add validation\r\n        ))),\r\n        rewards: core_1.Opt(core_1.ObjectNode({\r\n            function: core_1.Opt(StringNode({ validator: 'resource', params: { pool: '$function' } })),\r\n            loot: core_1.Opt(core_1.ListNode(StringNode({ validator: 'resource', params: { pool: '$loot_table' } }))),\r\n            recipes: core_1.Opt(core_1.ListNode(StringNode({ validator: 'resource', params: { pool: '$recipe' } }))),\r\n            experience: core_1.Opt(core_1.NumberNode({ integer: true }))\r\n        })),\r\n    }, { context: 'advancement' }), {\r\n        default: () => ({\r\n            criteria: {\r\n                requirement: {\r\n                    trigger: 'minecraft:location'\r\n                }\r\n            }\r\n        })\r\n    }));\r\n    schemas.register('advancement_criteria', core_1.ObjectNode({\r\n        trigger: StringNode({ validator: 'resource', params: { pool: collections.get('advancement_trigger') } }),\r\n        conditions: core_1.Opt(core_1.ObjectNode({\r\n            [core_1.Switch]: ['pop', { push: 'trigger' }],\r\n            [core_1.Case]: {\r\n                'minecraft:bee_nest_destroyed': {\r\n                    block: core_1.Opt(StringNode({ validator: 'resource', params: { pool: 'block' } })),\r\n                    num_bees_inside: core_1.Opt(core_1.NumberNode({ integer: true })),\r\n                    item: core_1.Opt(Reference('item_predicate'))\r\n                },\r\n                'minecraft:bred_animals': {\r\n                    parent: core_1.Opt(Reference('entity_predicate')),\r\n                    partner: core_1.Opt(Reference('entity_predicate')),\r\n                    child: core_1.Opt(Reference('entity_predicate'))\r\n                },\r\n                'minecraft:brewed_potion': {\r\n                    potion: core_1.Opt(StringNode({ validator: 'resource', params: { pool: 'potion' } }))\r\n                },\r\n                'minecraft:changed_dimension': {\r\n                    from: core_1.Opt(StringNode({ enum: 'dimension' })),\r\n                    to: core_1.Opt(StringNode({ enum: 'dimension' }))\r\n                },\r\n                'minecraft:channeled_lightning': {\r\n                    victims: core_1.Opt(core_1.ListNode(core_1.Opt(Reference('entity_predicate'))))\r\n                },\r\n                'minecraft:construct_beacon': {\r\n                    level: core_1.Opt(Common_1.Range())\r\n                },\r\n                'minecraft:consume_item': {\r\n                    item: core_1.Opt(Reference('item_predicate'))\r\n                },\r\n                'minecraft:cured_zombie_villager': {\r\n                    villager: core_1.Opt(Reference('entity_predicate')),\r\n                    zombie: core_1.Opt(Reference('entity_predicate'))\r\n                },\r\n                'minecraft:effects_changed': {\r\n                    effects: core_1.Opt(core_1.MapNode(StringNode({ validator: 'resource', params: { pool: 'mob_effect' } }), core_1.ObjectNode({\r\n                        amplifier: Common_1.Range(),\r\n                        duration: Common_1.Range()\r\n                    })))\r\n                },\r\n                'minecraft:enter_block': {\r\n                    block: core_1.Opt(StringNode({ validator: 'resource', params: { pool: 'block' } })),\r\n                    state: core_1.Opt(core_1.MapNode(StringNode(), StringNode(), { validation: { validator: 'block_state_map', params: { id: ['pop', { push: 'block' }] } } }))\r\n                },\r\n                'minecraft:enchanted_item': {\r\n                    levels: core_1.Opt(Common_1.Range()),\r\n                    item: core_1.Opt(Reference('item_predicate'))\r\n                },\r\n                'minecraft:entity_hurt_player': {\r\n                    damage: core_1.Opt(Reference('damage_predicate'))\r\n                },\r\n                'minecraft:entity_killed_player': {\r\n                    entity: core_1.Opt(Reference('entity_predicate')),\r\n                    killing_blow: core_1.Opt(Reference('damage_source_predicate'))\r\n                },\r\n                'minecraft:filled_bucket': {\r\n                    item: core_1.Opt(Reference('item_predicate'))\r\n                },\r\n                'minecraft:fishing_rod_hooked': {\r\n                    entity: core_1.Opt(Reference('entity_predicate')),\r\n                    item: core_1.Opt(Reference('item_predicate'))\r\n                },\r\n                'minecraft:hero_of_the_village': Predicates_1.LocationFields,\r\n                'minecraft:inventory_changed': {\r\n                    slots: core_1.Opt(core_1.ObjectNode({\r\n                        empty: core_1.Opt(Common_1.Range()),\r\n                        occupied: core_1.Opt(Common_1.Range()),\r\n                        full: core_1.Opt(Common_1.Range())\r\n                    })),\r\n                    items: core_1.Opt(core_1.ListNode(Reference('item_predicate')))\r\n                },\r\n                'minecraft:item_durability_changed': {\r\n                    delta: core_1.Opt(Common_1.Range()),\r\n                    durability: core_1.Opt(Common_1.Range()),\r\n                    item: core_1.Opt(Reference('item_predicate'))\r\n                },\r\n                'minecraft:killed_by_crossbow': {\r\n                    unique_entity_types: core_1.Opt(Common_1.Range()),\r\n                    victims: core_1.Opt(core_1.ListNode(core_1.Opt(Reference('entity_predicate'))))\r\n                },\r\n                'minecraft:levitation': {\r\n                    distance: core_1.Opt(Common_1.Range()),\r\n                    duration: core_1.Opt(Common_1.Range())\r\n                },\r\n                'minecraft:location': Predicates_1.LocationFields,\r\n                'minecraft:nether_travel': {\r\n                    distance: core_1.Opt(Common_1.Range()),\r\n                    entered: core_1.Opt(Reference('location_predicate')),\r\n                    exited: core_1.Opt(Reference('location_predicate'))\r\n                },\r\n                'minecraft:placed_block': {\r\n                    block: core_1.Opt(StringNode({ validator: 'resource', params: { pool: 'block' } })),\r\n                    state: core_1.Opt(core_1.MapNode(StringNode(), StringNode(), { validation: { validator: 'block_state_map', params: { id: ['pop', { push: 'block' }] } } })),\r\n                    item: core_1.Opt(Reference('item_predicate')),\r\n                    location: core_1.Opt(Reference('location_predicate'))\r\n                },\r\n                'minecraft:player_hurt_entity': {\r\n                    damage: core_1.Opt(Reference('damage_predicate')),\r\n                    entity: core_1.Opt(Reference('entity_predicate'))\r\n                },\r\n                'minecraft:player_killed_entity': {\r\n                    entity: core_1.Opt(Reference('entity_predicate')),\r\n                    killing_blow: core_1.Opt(Reference('damage_source_predicate'))\r\n                },\r\n                'minecraft:recipe_unlocked': {\r\n                    recipe: StringNode({ validator: 'resource', params: { pool: '$recipe' } })\r\n                },\r\n                'minecraft:safely_harvest_honey': {\r\n                    block: core_1.Opt(core_1.ObjectNode({\r\n                        block: core_1.Opt(StringNode({ validator: 'resource', params: { pool: 'block' } })),\r\n                        tag: core_1.Opt(StringNode({ validator: 'resource', params: { pool: '$tag/block' } }))\r\n                    })),\r\n                    item: core_1.Opt(Reference('item_predicate'))\r\n                },\r\n                'minecraft:slept_in_bed': Predicates_1.LocationFields,\r\n                'minecraft:slide_down_block': {\r\n                    block: core_1.Opt(StringNode({ validator: 'resource', params: { pool: 'block' } }))\r\n                },\r\n                'minecraft:shot_crossbow': {\r\n                    item: core_1.Opt(Reference('item_predicate'))\r\n                },\r\n                'minecraft:summoned_entity': {\r\n                    entity: core_1.Opt(Reference('entity_predicate'))\r\n                },\r\n                'minecraft:tame_animal': {\r\n                    entity: core_1.Opt(Reference('entity_predicate'))\r\n                },\r\n                'minecraft:used_ender_eye': {\r\n                    distance: core_1.Opt(Common_1.Range())\r\n                },\r\n                'minecraft:used_totem': {\r\n                    item: core_1.Opt(Reference('item_predicate'))\r\n                },\r\n                'minecraft:villager_trade': {\r\n                    villager: core_1.Opt(Reference('entity_predicate')),\r\n                    item: core_1.Opt(Reference('item_predicate'))\r\n                },\r\n                'minecraft:voluntary_exile': Predicates_1.LocationFields\r\n            }\r\n        }, { context: 'criterion' }))\r\n    }, { category: 'predicate', context: 'criterion' }));\r\n}\r\nexports.initAdvancementSchemas = initAdvancementSchemas;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.initConditionSchemas = void 0;\r\nconst core_1 = require(\"@mcschema/core\");\r\nconst Common_1 = require(\"./Common\");\r\nfunction initConditionSchemas(schemas, collections) {\r\n    const Reference = core_1.Reference.bind(undefined, schemas);\r\n    const StringNode = core_1.StringNode.bind(undefined, collections);\r\n    schemas.register('predicate', core_1.ObjectOrList(Reference('condition'), { choiceContext: 'condition' }));\r\n    schemas.register('condition', core_1.Mod(core_1.ObjectNode({\r\n        condition: StringNode({ validator: 'resource', params: { pool: 'loot_condition_type' } }),\r\n        [core_1.Switch]: [{ push: 'condition' }],\r\n        [core_1.Case]: Common_1.ConditionCases\r\n    }, { category: 'predicate', context: 'condition' }), {\r\n        default: () => ({\r\n            condition: 'minecraft:entity_properties',\r\n            entity: 'this'\r\n        })\r\n    }));\r\n}\r\nexports.initConditionSchemas = initConditionSchemas;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.LootFunctions = exports.LootConditions = exports.LootCopySources = exports.LootEntitySources = exports.LootTableTypes = void 0;\r\nexports.LootTableTypes = new Map([\r\n    ['minecraft:advancement_entity', { requires: [7 /* Origin */, 8 /* ThisEntity */], allows: [] }],\r\n    ['minecraft:advancement_reward', { requires: [7 /* Origin */, 8 /* ThisEntity */], allows: [] }],\r\n    ['minecraft:barter', { requires: [8 /* ThisEntity */], allows: [] }],\r\n    ['minecraft:block', { requires: [1 /* BlockState */, 7 /* Origin */, 9 /* Tool */], allows: [0 /* BlockEntity */, 4 /* ExplosionRadius */, 8 /* ThisEntity */] }],\r\n    ['minecraft:chest', { requires: [7 /* Origin */], allows: [8 /* ThisEntity */] }],\r\n    ['minecraft:command', { requires: [7 /* Origin */], allows: [8 /* ThisEntity */] }],\r\n    ['minecraft:empty', { requires: [], allows: [] }],\r\n    ['minecraft:entity', { requires: [2 /* DamageSource */, 7 /* Origin */, 8 /* ThisEntity */], allows: [3 /* DirectKillerEntity */, 5 /* KillerEntity */, 6 /* LastDamagePlayer */] }],\r\n    ['minecraft:fishing', { requires: [7 /* Origin */, 9 /* Tool */], allows: [8 /* ThisEntity */] }],\r\n    ['minecraft:generic', { requires: [2 /* DamageSource */, 0 /* BlockEntity */, 1 /* BlockState */, 3 /* DirectKillerEntity */, 4 /* ExplosionRadius */, 5 /* KillerEntity */, 6 /* LastDamagePlayer */, 7 /* Origin */, 8 /* ThisEntity */, 9 /* Tool */], allows: [] }],\r\n    ['minecraft:gift', { requires: [7 /* Origin */, 8 /* ThisEntity */], allows: [] }],\r\n    ['minecraft:selector', { requires: [7 /* Origin */], allows: [8 /* ThisEntity */] }]\r\n]);\r\n/**\r\n * A map from loot entity sources to an array of their required context.\r\n */\r\nexports.LootEntitySources = new Map([\r\n    ['direct_killer', [3 /* DirectKillerEntity */]],\r\n    ['killer', [5 /* KillerEntity */]],\r\n    ['killer_player', [5 /* KillerEntity */]],\r\n    ['this', [8 /* ThisEntity */]]\r\n]);\r\n/**\r\n * A map from loot copy sources to an array of their required context.\r\n */\r\nexports.LootCopySources = new Map([\r\n    ['block_entity', [0 /* BlockEntity */]],\r\n    ['killer', [5 /* KillerEntity */]],\r\n    ['killer_player', [5 /* KillerEntity */]],\r\n    ['this', [8 /* ThisEntity */]]\r\n]);\r\n/**\r\n * A map from loot condition IDs to an array of their required context.\r\n */\r\nexports.LootConditions = new Map([\r\n    ['minecraft:alternative', []],\r\n    ['minecraft:block_state_property', [1 /* BlockState */]],\r\n    ['minecraft:damage_source_properties', [2 /* DamageSource */]],\r\n    ['minecraft:entity_properties', [7 /* Origin */]],\r\n    ['minecraft:entity_scores', []],\r\n    ['minecraft:inverted', []],\r\n    ['minecraft:killed_by_player', [6 /* LastDamagePlayer */]],\r\n    ['minecraft:location_check', []],\r\n    ['minecraft:match_tool', [9 /* Tool */]],\r\n    ['minecraft:random_chance', []],\r\n    ['minecraft:random_chance_with_looting', [5 /* KillerEntity */]],\r\n    ['minecraft:reference', []],\r\n    ['minecraft:survives_explosion', [4 /* ExplosionRadius */]],\r\n    ['minecraft:table_bonus', [9 /* Tool */]],\r\n    ['minecraft:time_check', []],\r\n    ['minecraft:weather_check', []]\r\n]);\r\n/**\r\n * A map from loot function IDs to an array of their required context.\r\n */\r\nexports.LootFunctions = new Map([\r\n    ['minecraft:apply_bonus', [9 /* Tool */]],\r\n    ['minecraft:copy_name', []],\r\n    ['minecraft:copy_nbt', []],\r\n    ['minecraft:copy_state', [1 /* BlockState */]],\r\n    ['minecraft:enchant_randomly', []],\r\n    ['minecraft:enchant_with_levels', []],\r\n    ['minecraft:exploration_map', [7 /* Origin */]],\r\n    ['minecraft:explosion_decay', []],\r\n    ['minecraft:fill_player_head', []],\r\n    ['minecraft:furnace_smelt', []],\r\n    ['minecraft:limit_count', []],\r\n    ['minecraft:looting_enchant', [5 /* KillerEntity */]],\r\n    ['minecraft:set_attributes', []],\r\n    ['minecraft:set_contents', []],\r\n    ['minecraft:set_count', []],\r\n    ['minecraft:set_damage', []],\r\n    ['minecraft:set_loot_table', []],\r\n    ['minecraft:set_lore', []],\r\n    ['minecraft:set_name', []],\r\n    ['minecraft:set_nbt', []],\r\n    ['minecraft:set_stew_effect', []]\r\n]);\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.initLootTableSchemas = void 0;\r\nconst core_1 = require(\"@mcschema/core\");\r\nconst LootContext_1 = require(\"../LootContext\");\r\nconst Common_1 = require(\"./Common\");\r\nfunction initLootTableSchemas(schemas, collections) {\r\n    const Reference = core_1.Reference.bind(undefined, schemas);\r\n    const StringNode = core_1.StringNode.bind(undefined, collections);\r\n    const conditions = {\r\n        conditions: core_1.Opt(core_1.ListNode(Reference('loot_condition')))\r\n    };\r\n    const functionsAndConditions = {\r\n        functions: core_1.Opt(core_1.ListNode(Reference('loot_function'))),\r\n        ...conditions\r\n    };\r\n    function compileSwitchNode(contextMap, collectionID, getNode) {\r\n        const cases = [];\r\n        const getAvailableOptions = (providedContext) => collections\r\n            .get(collectionID)\r\n            .filter(t => {\r\n            var _a;\r\n            const requiredContext = (_a = contextMap.get(t)) !== null && _a !== void 0 ? _a : [];\r\n            return requiredContext.every(c => providedContext.includes(c));\r\n        });\r\n        for (const [tableType, { allows, requires }] of LootContext_1.LootTableTypes) {\r\n            const providedContext = [...allows, ...requires];\r\n            cases.push({\r\n                match: path => path.getModel().get(new core_1.Path(['type'])) === tableType,\r\n                node: getNode(getAvailableOptions(providedContext))\r\n            });\r\n        }\r\n        cases.push({ match: _ => true, node: getNode(collectionID) });\r\n        return core_1.SwitchNode(cases);\r\n    }\r\n    const conditionSwtichNode = compileSwitchNode(LootContext_1.LootConditions, 'loot_condition_type', type => StringNode({ validator: 'resource', params: { pool: type instanceof Array ? type : `loot_condition_type` } }));\r\n    const functionSwtichNode = compileSwitchNode(LootContext_1.LootFunctions, 'loot_function_type', type => StringNode({ validator: 'resource', params: { pool: type instanceof Array ? type : `loot_function_type` } }));\r\n    const entitySourceSwtichNode = compileSwitchNode(LootContext_1.LootEntitySources, 'entity_source', type => StringNode({ enum: type }));\r\n    const copySourceSwtichNode = compileSwitchNode(LootContext_1.LootCopySources, 'copy_source', type => StringNode({ enum: type }));\r\n    schemas.register('loot_table', core_1.Mod(core_1.ObjectNode({\r\n        type: core_1.Opt(StringNode({ validator: \"resource\", params: { pool: collections.get('loot_context_type') } })),\r\n        pools: core_1.Opt(core_1.ListNode(core_1.Mod(core_1.ObjectNode({\r\n            rolls: Common_1.Range({ allowBinomial: true, integer: true }),\r\n            bonus_rolls: core_1.Opt(Common_1.Range({ integer: true })),\r\n            entries: core_1.ListNode(Reference('loot_entry')),\r\n            ...functionsAndConditions\r\n        }, { category: 'pool', context: 'loot_pool' }), {\r\n            default: () => ({\r\n                rolls: 1,\r\n                entries: [{\r\n                        type: 'minecraft:item',\r\n                        name: 'minecraft:stone'\r\n                    }]\r\n            })\r\n        }))),\r\n        functions: core_1.Opt(core_1.ListNode(Reference('loot_function')))\r\n    }, { context: 'loot_table' }), {\r\n        default: () => ({\r\n            pools: [{\r\n                    rolls: 1,\r\n                    entries: [{\r\n                            type: 'minecraft:item',\r\n                            name: 'minecraft:stone'\r\n                        }]\r\n                }]\r\n        })\r\n    }));\r\n    const weightMod = {\r\n        enabled: path => {\r\n            var _a;\r\n            return ((_a = path.pop().get()) === null || _a === void 0 ? void 0 : _a.length) > 1\r\n                && !['minecraft:alternatives', 'minecraft:group', 'minecraft:sequence'].includes(path.push('type').get());\r\n        }\r\n    };\r\n    schemas.register('loot_entry', core_1.Mod(core_1.ObjectNode({\r\n        type: StringNode({ validator: 'resource', params: { pool: 'loot_pool_entry_type' } }),\r\n        weight: core_1.Opt(core_1.Mod(core_1.NumberNode({ integer: true, min: 1 }), weightMod)),\r\n        quality: core_1.Opt(core_1.Mod(core_1.NumberNode({ integer: true }), weightMod)),\r\n        [core_1.Switch]: [{ push: 'type' }],\r\n        [core_1.Case]: {\r\n            'minecraft:alternatives': {\r\n                children: core_1.ListNode(Reference('loot_entry')),\r\n                ...functionsAndConditions\r\n            },\r\n            'minecraft:dynamic': {\r\n                name: StringNode(),\r\n                ...functionsAndConditions\r\n            },\r\n            'minecraft:group': {\r\n                children: core_1.ListNode(Reference('loot_entry')),\r\n                ...functionsAndConditions\r\n            },\r\n            'minecraft:item': {\r\n                name: StringNode({ validator: 'resource', params: { pool: 'item' } }),\r\n                ...functionsAndConditions\r\n            },\r\n            'minecraft:loot_table': {\r\n                name: StringNode({ validator: 'resource', params: { pool: '$loot_table' } }),\r\n                ...functionsAndConditions\r\n            },\r\n            'minecraft:sequence': {\r\n                children: core_1.ListNode(Reference('loot_entry')),\r\n                ...functionsAndConditions\r\n            },\r\n            'minecraft:tag': {\r\n                name: StringNode({ validator: 'resource', params: { pool: '$tag/item' } }),\r\n                expand: core_1.Opt(core_1.BooleanNode()),\r\n                ...functionsAndConditions\r\n            }\r\n        }\r\n    }, { context: 'loot_entry' }), {\r\n        default: () => ({\r\n            type: 'minecraft:item',\r\n            name: 'minecraft:stone'\r\n        })\r\n    }));\r\n    schemas.register('loot_function', core_1.Mod(core_1.ObjectNode({\r\n        function: functionSwtichNode,\r\n        [core_1.Switch]: [{ push: 'function' }],\r\n        [core_1.Case]: {\r\n            'minecraft:apply_bonus': {\r\n                enchantment: StringNode({ validator: 'resource', params: { pool: 'enchantment' } }),\r\n                formula: StringNode({ validator: 'resource', params: { pool: collections.get('loot_table_apply_bonus_formula') } }),\r\n                parameters: core_1.Mod(core_1.ObjectNode({\r\n                    bonusMultiplier: core_1.Mod(core_1.NumberNode(), {\r\n                        enabled: path => path.pop().push('formula').get() === 'minecraft:uniform_bonus_count'\r\n                    }),\r\n                    extra: core_1.Mod(core_1.NumberNode(), {\r\n                        enabled: path => path.pop().push('formula').get() === 'minecraft:binomial_with_bonus_count'\r\n                    }),\r\n                    probability: core_1.Mod(core_1.NumberNode(), {\r\n                        enabled: path => path.pop().push('formula').get() === 'minecraft:binomial_with_bonus_count'\r\n                    })\r\n                }), {\r\n                    enabled: path => path.push('formula').get() !== 'minecraft:ore_drops'\r\n                }),\r\n                ...conditions\r\n            },\r\n            'minecraft:copy_name': {\r\n                source: copySourceSwtichNode,\r\n                ...conditions\r\n            },\r\n            'minecraft:copy_nbt': {\r\n                source: copySourceSwtichNode,\r\n                ops: core_1.ListNode(core_1.ObjectNode({\r\n                    source: StringNode({ validator: 'nbt_path', params: { category: { getter: 'copy_source', path: ['pop', 'pop', 'pop', { push: 'source' }] } } }),\r\n                    target: StringNode({ validator: 'nbt_path', params: { category: 'minecraft:item' } }),\r\n                    op: StringNode({ enum: ['replace', 'append', 'merge'] })\r\n                }, { context: 'nbt_operation' })),\r\n                ...conditions\r\n            },\r\n            'minecraft:copy_state': {\r\n                block: StringNode({ validator: 'resource', params: { pool: 'block' } }),\r\n                properties: core_1.ListNode(StringNode({ validator: 'block_state_key', params: { id: ['pop', 'pop', { push: 'block' }] } })),\r\n                ...conditions\r\n            },\r\n            'minecraft:enchant_randomly': {\r\n                enchantments: core_1.Opt(core_1.ListNode(StringNode({ validator: 'resource', params: { pool: 'enchantment' } }))),\r\n                ...conditions\r\n            },\r\n            'minecraft:enchant_with_levels': {\r\n                levels: Common_1.Range({ allowBinomial: true }),\r\n                treasure: core_1.Opt(core_1.BooleanNode()),\r\n                ...conditions\r\n            },\r\n            'minecraft:exploration_map': {\r\n                destination: core_1.Opt(StringNode({ enum: 'structure_feature' })),\r\n                decoration: core_1.Opt(StringNode({ enum: 'map_decoration' })),\r\n                zoom: core_1.Opt(core_1.NumberNode({ integer: true })),\r\n                search_radius: core_1.Opt(core_1.NumberNode({ integer: true })),\r\n                skip_existing_chunks: core_1.Opt(core_1.BooleanNode()),\r\n                ...conditions\r\n            },\r\n            'minecraft:fill_player_head': {\r\n                entity: entitySourceSwtichNode,\r\n                ...conditions\r\n            },\r\n            'minecraft:limit_count': {\r\n                limit: Common_1.Range({ bounds: true }),\r\n                ...conditions\r\n            },\r\n            'minecraft:looting_enchant': {\r\n                count: Common_1.Range({ bounds: true }),\r\n                limit: core_1.Opt(core_1.NumberNode({ integer: true })),\r\n                ...conditions\r\n            },\r\n            'minecraft:set_attributes': {\r\n                modifiers: core_1.ListNode(Reference('attribute_modifier')),\r\n                ...conditions\r\n            },\r\n            'minecraft:set_contents': {\r\n                entries: core_1.ListNode(Reference('loot_entry')),\r\n                ...conditions\r\n            },\r\n            'minecraft:set_count': {\r\n                count: Common_1.Range({ allowBinomial: true }),\r\n                ...conditions\r\n            },\r\n            'minecraft:set_damage': {\r\n                damage: Common_1.Range({ forceRange: true }),\r\n                ...conditions\r\n            },\r\n            'minecraft:set_loot_table': {\r\n                name: StringNode({ validator: 'resource', params: { pool: '$loot_table' } }),\r\n                seed: core_1.Opt(core_1.NumberNode({ integer: true }))\r\n            },\r\n            'minecraft:set_lore': {\r\n                entity: core_1.Opt(entitySourceSwtichNode),\r\n                lore: core_1.ListNode(Reference('text_component')),\r\n                replace: core_1.Opt(core_1.BooleanNode()),\r\n                ...conditions\r\n            },\r\n            'minecraft:set_name': {\r\n                entity: core_1.Opt(entitySourceSwtichNode),\r\n                name: core_1.Opt(Reference('text_component')),\r\n                ...conditions\r\n            },\r\n            'minecraft:set_nbt': {\r\n                tag: StringNode({ validator: 'nbt', params: { registry: { category: 'minecraft:item' } } }),\r\n                ...conditions\r\n            },\r\n            'minecraft:set_stew_effect': {\r\n                effects: core_1.Opt(core_1.ListNode(core_1.ObjectNode({\r\n                    type: StringNode({ validator: 'resource', params: { pool: 'mob_effect' } }),\r\n                    duration: Common_1.Range()\r\n                }))),\r\n                ...conditions\r\n            }\r\n        }\r\n    }, { category: 'function', context: 'function' }), {\r\n        default: () => ({\r\n            function: 'minecraft:set_count',\r\n            count: 1\r\n        })\r\n    }));\r\n    schemas.register('loot_condition', core_1.Mod(core_1.ObjectNode({\r\n        condition: conditionSwtichNode,\r\n        [core_1.Switch]: [{ push: 'condition' }],\r\n        [core_1.Case]: {\r\n            ...Common_1.ConditionCases,\r\n            'minecraft:entity_properties': {\r\n                entity: entitySourceSwtichNode,\r\n                predicate: Reference('entity_predicate')\r\n            },\r\n            'minecraft:entity_scores': {\r\n                entity: entitySourceSwtichNode,\r\n                scores: core_1.MapNode(StringNode({ validator: 'objective' }), Common_1.Range({ bounds: true }))\r\n            }\r\n        }\r\n    }, { category: 'predicate', context: 'condition' }), {\r\n        default: () => ({\r\n            condition: 'minecraft:random_chance',\r\n            chance: 0.5\r\n        })\r\n    }));\r\n    schemas.register('attribute_modifier', core_1.Mod(core_1.ObjectNode({\r\n        attribute: StringNode({ validator: 'resource', params: { pool: 'attribute' } }),\r\n        name: StringNode(),\r\n        amount: Common_1.Range({ bounds: true }),\r\n        operation: StringNode({ enum: ['addition', 'multiply_base', 'multiply_total'] }),\r\n        slot: core_1.StringOrList(StringNode({ enum: 'slot' }))\r\n    }, { context: 'attribute_modifier' }), {\r\n        default: () => ({\r\n            attribute: 'minecraft:generic.max_health',\r\n            name: '',\r\n            amount: 1,\r\n            operation: 'addition',\r\n            slot: 'mainhand'\r\n        })\r\n    }));\r\n}\r\nexports.initLootTableSchemas = initLootTableSchemas;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.initPackMcmetaSchemas = void 0;\r\nconst core_1 = require(\"@mcschema/core\");\r\nfunction initPackMcmetaSchemas(schemas, _) {\r\n    const getSimpleString = (jsonText) => { var _a, _b; return jsonText instanceof Array ? getSimpleString(jsonText[0]) : (_b = (_a = jsonText === null || jsonText === void 0 ? void 0 : jsonText.text) !== null && _a !== void 0 ? _a : jsonText === null || jsonText === void 0 ? void 0 : jsonText.toString()) !== null && _b !== void 0 ? _b : ''; };\r\n    schemas.register('pack_mcmeta', core_1.Mod(core_1.ObjectNode({\r\n        pack: core_1.Mod(core_1.ObjectNode({\r\n            pack_format: core_1.Mod(core_1.NumberNode({ integer: true, min: 5, max: 5 }), { default: () => 5 }),\r\n            description: core_1.Reference(schemas, 'text_component')\r\n        }), {\r\n            default: () => ({\r\n                pack_format: 5,\r\n                description: ''\r\n            })\r\n        })\r\n    }), {\r\n        default: () => ({\r\n            pack: {\r\n                pack_format: 5,\r\n                description: ''\r\n            }\r\n        })\r\n    }));\r\n}\r\nexports.initPackMcmetaSchemas = initPackMcmetaSchemas;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.initRecipeSchemas = void 0;\r\nconst core_1 = require(\"@mcschema/core\");\r\nfunction initRecipeSchemas(schemas, collections) {\r\n    const Reference = core_1.Reference.bind(undefined, schemas);\r\n    const StringNode = core_1.StringNode.bind(undefined, collections);\r\n    schemas.register('recipe', core_1.Mod(core_1.ObjectNode({\r\n        type: StringNode({ validator: 'resource', params: { pool: 'recipe_serializer' } }),\r\n        [core_1.Switch]: [{ push: 'type' }],\r\n        [core_1.Case]: {\r\n            'minecraft:crafting_shaped': {\r\n                group: core_1.Opt(StringNode({ enum: 'recipe_group', additional: true })),\r\n                pattern: core_1.ListNode(StringNode()),\r\n                key: core_1.MapNode(StringNode(), // TODO: add validation\r\n                Reference('recipe_ingredient')),\r\n                result: Reference('recipe_result')\r\n            },\r\n            'minecraft:crafting_shapeless': {\r\n                group: core_1.Opt(StringNode()),\r\n                ingredients: core_1.ListNode(Reference('recipe_ingredient')),\r\n                result: Reference('recipe_result')\r\n            },\r\n            'minecraft:smelting': {\r\n                group: core_1.Opt(StringNode()),\r\n                ingredient: Reference('recipe_ingredient'),\r\n                result: StringNode({ validator: 'resource', params: { pool: 'item' } }),\r\n                experience: core_1.Opt(core_1.NumberNode()),\r\n                cookingtime: core_1.Opt(core_1.Mod(core_1.NumberNode({ integer: true }), { default: () => 200 }))\r\n            },\r\n            'minecraft:blasting': {\r\n                group: core_1.Opt(StringNode()),\r\n                ingredient: Reference('recipe_ingredient'),\r\n                result: StringNode({ validator: 'resource', params: { pool: 'item' } }),\r\n                experience: core_1.Opt(core_1.NumberNode()),\r\n                cookingtime: core_1.Opt(core_1.Mod(core_1.NumberNode({ integer: true }), { default: () => 100 }))\r\n            },\r\n            'minecraft:smoking': {\r\n                group: core_1.Opt(StringNode()),\r\n                ingredient: Reference('recipe_ingredient'),\r\n                result: StringNode({ validator: 'resource', params: { pool: 'item' } }),\r\n                experience: core_1.Opt(core_1.NumberNode()),\r\n                cookingtime: core_1.Opt(core_1.Mod(core_1.NumberNode({ integer: true }), { default: () => 100 }))\r\n            },\r\n            'minecraft:campfire_cooking': {\r\n                group: core_1.Opt(StringNode()),\r\n                ingredient: Reference('recipe_ingredient'),\r\n                result: StringNode({ validator: 'resource', params: { pool: 'item' } }),\r\n                experience: core_1.Opt(core_1.NumberNode()),\r\n                cookingtime: core_1.Opt(core_1.Mod(core_1.NumberNode({ integer: true }), { default: () => 100 }))\r\n            },\r\n            'minecraft:stonecutting': {\r\n                group: core_1.Opt(StringNode()),\r\n                ingredient: Reference('recipe_ingredient'),\r\n                result: StringNode({ validator: 'resource', params: { pool: 'item' } }),\r\n                count: core_1.NumberNode({ integer: true })\r\n            },\r\n            'minecraft:smithing': {\r\n                group: core_1.Opt(StringNode()),\r\n                base: Reference('recipe_ingredient_object'),\r\n                addition: Reference('recipe_ingredient_object'),\r\n                result: Reference('recipe_result')\r\n            }\r\n        }\r\n    }, { context: 'recipe' }), {\r\n        default: () => ({\r\n            type: 'minecraft:crafting_shaped'\r\n        })\r\n    }));\r\n    schemas.register('recipe_ingredient', core_1.Mod(core_1.ChoiceNode([\r\n        {\r\n            type: 'object',\r\n            node: Reference('recipe_ingredient_object'),\r\n            change: v => v[0]\r\n        },\r\n        {\r\n            type: 'list',\r\n            node: core_1.ListNode(Reference('recipe_ingredient_object')),\r\n            change: v => [v]\r\n        }\r\n    ]), {\r\n        default: () => ({\r\n            item: 'minecraft:stone'\r\n        })\r\n    }));\r\n    schemas.register('recipe_ingredient_object', core_1.Mod(core_1.ObjectNode({\r\n        item: core_1.Opt(StringNode({ validator: 'resource', params: { pool: 'item' } })),\r\n        tag: core_1.Opt(StringNode({ validator: 'resource', params: { pool: '$tag/item' } }))\r\n    }), {\r\n        default: () => ({\r\n            item: 'minecraft:stone'\r\n        })\r\n    }));\r\n    schemas.register('recipe_result', core_1.Mod(core_1.ObjectNode({\r\n        item: StringNode({ validator: 'resource', params: { pool: 'item' } }),\r\n        count: core_1.Opt(core_1.Mod(core_1.NumberNode({ integer: true }), { default: () => 1 }))\r\n    }), {\r\n        default: () => ({\r\n            item: 'minecraft:stone'\r\n        })\r\n    }));\r\n}\r\nexports.initRecipeSchemas = initRecipeSchemas;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.initTagsSchemas = void 0;\r\nconst core_1 = require(\"@mcschema/core\");\r\nfunction initTagsSchemas(schemas, collections) {\r\n    const StringNode = core_1.StringNode.bind(undefined, collections);\r\n    const TagBase = (type) => core_1.Mod(core_1.ObjectNode({\r\n        replace: core_1.Opt(core_1.BooleanNode()),\r\n        values: core_1.ListNode(core_1.ChoiceNode([\r\n            {\r\n                type: 'string',\r\n                node: StringNode({ validator: 'resource', params: { pool: type, allowTag: true } }),\r\n                change: v => v.id\r\n            },\r\n            {\r\n                type: 'object',\r\n                node: core_1.ObjectNode({\r\n                    id: StringNode({ validator: 'resource', params: { pool: type, allowTag: true, allowUnknown: true } }),\r\n                    required: core_1.BooleanNode()\r\n                }),\r\n                change: v => ({ id: v })\r\n            }\r\n        ])),\r\n    }, { context: 'tag' }), {\r\n        default: () => ({\r\n            values: []\r\n        })\r\n    });\r\n    schemas.register('block_tag', TagBase('block'));\r\n    schemas.register('entity_type_tag', TagBase('entity_type'));\r\n    schemas.register('fluid_tag', TagBase('fluid'));\r\n    schemas.register('function_tag', TagBase('$function'));\r\n    schemas.register('item_tag', TagBase('item'));\r\n}\r\nexports.initTagsSchemas = initTagsSchemas;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.initTextComponentSchemas = void 0;\r\nconst core_1 = require(\"@mcschema/core\");\r\nfunction initTextComponentSchemas(schemas, collections) {\r\n    const Reference = core_1.Reference.bind(undefined, schemas);\r\n    const StringNode = core_1.StringNode.bind(undefined, collections);\r\n    const getSimpleString = (v) => { var _a; return v instanceof Array ? getSimpleString(v[0]) : (_a = v === null || v === void 0 ? void 0 : v.text) !== null && _a !== void 0 ? _a : (typeof v === 'object' ? '' : v === null || v === void 0 ? void 0 : v.toString()); };\r\n    schemas.register('text_component', core_1.Mod(core_1.ChoiceNode([\r\n        {\r\n            type: 'object',\r\n            node: Reference('text_component_object'),\r\n            change: v => v instanceof Array ? (typeof v[0] === 'object' ? v[0] : { text: getSimpleString(v[0]) }) : typeof v === 'object' ? v : { text: getSimpleString(v) }\r\n        },\r\n        {\r\n            type: 'list',\r\n            node: Reference('text_component_list'),\r\n            change: v => [v]\r\n        },\r\n        {\r\n            type: 'string',\r\n            priority: 1,\r\n            node: StringNode(),\r\n            change: getSimpleString\r\n        },\r\n        {\r\n            type: 'number',\r\n            node: core_1.NumberNode(),\r\n            change: v => {\r\n                const n = parseFloat(getSimpleString(v));\r\n                return isFinite(n) ? n : (!!v ? 1 : 0);\r\n            }\r\n        },\r\n        {\r\n            type: 'boolean',\r\n            node: core_1.BooleanNode(),\r\n            change: v => {\r\n                const s = getSimpleString(v);\r\n                return s === 'true' || s === 'false' ? s === 'true' : !!s;\r\n            }\r\n        }\r\n    ], { context: 'text_component' }), {\r\n        default: () => ({\r\n            text: \"\"\r\n        })\r\n    }));\r\n    const CommonFields = {\r\n        bold: core_1.Opt(core_1.BooleanNode()),\r\n        italic: core_1.Opt(core_1.BooleanNode()),\r\n        underlined: core_1.Opt(core_1.BooleanNode()),\r\n        strikethrough: core_1.Opt(core_1.BooleanNode()),\r\n        obfuscated: core_1.Opt(core_1.BooleanNode()),\r\n        insertion: core_1.Opt(StringNode()),\r\n        clickEvent: core_1.Opt(core_1.ObjectNode({\r\n            action: StringNode({ enum: ['open_url', 'open_file', 'run_command', 'suggest_command', 'change_page', 'copy_to_clipboard'] }),\r\n            [core_1.Switch]: [{ push: 'action' }],\r\n            [core_1.Case]: {\r\n                'change_page': {\r\n                    value: StringNode()\r\n                },\r\n                'copy_to_clipboard': {\r\n                    value: StringNode()\r\n                },\r\n                'open_file': {\r\n                    value: StringNode()\r\n                },\r\n                'open_url': {\r\n                    value: StringNode()\r\n                },\r\n                'run_command': {\r\n                    value: StringNode({ validator: 'command', params: { leadingSlash: true, allowPartial: true } })\r\n                },\r\n                'suggest_command': {\r\n                    value: StringNode({ validator: 'command', params: { leadingSlash: true, allowPartial: true } })\r\n                }\r\n            }\r\n        })),\r\n        hoverEvent: core_1.Opt(core_1.ObjectNode({\r\n            action: StringNode({ enum: ['show_text', 'show_item', 'show_entity'] }),\r\n            [core_1.Switch]: [{ push: 'action' }],\r\n            [core_1.Case]: {\r\n                'show_text': {\r\n                    value: core_1.Opt(Reference('text_component'))\r\n                },\r\n                'show_item': {\r\n                    value: core_1.Opt(StringNode({ validator: 'nbt', params: { module: 'util::InventoryItem' } }))\r\n                },\r\n                'show_entity': {\r\n                    value: core_1.Opt(core_1.ObjectNode({\r\n                        name: core_1.Opt(StringNode()),\r\n                        type: core_1.Opt(StringNode()),\r\n                        id: core_1.Opt(StringNode())\r\n                    }))\r\n                }\r\n            }\r\n        })),\r\n        extra: core_1.Opt(Reference('text_component_list'))\r\n    };\r\n    schemas.register('text_component_object', core_1.Mod(core_1.ChoiceNode([\r\n        {\r\n            type: 'text',\r\n            match: v => typeof v === 'object',\r\n            change: v => ({ text: '' }),\r\n            priority: -1,\r\n            node: core_1.ObjectNode({\r\n                text: StringNode(),\r\n                ...CommonFields\r\n            })\r\n        },\r\n        {\r\n            type: 'translation',\r\n            match: v => (v === null || v === void 0 ? void 0 : v.translate) !== undefined,\r\n            change: v => ({ translate: '' }),\r\n            node: core_1.ObjectNode({\r\n                translate: StringNode(),\r\n                with: core_1.Opt(Reference('text_component_list')),\r\n                ...CommonFields\r\n            })\r\n        },\r\n        {\r\n            type: 'score',\r\n            match: v => (v === null || v === void 0 ? void 0 : v.score) !== undefined,\r\n            change: v => ({ score: {} }),\r\n            node: core_1.ObjectNode({\r\n                score: core_1.ObjectNode({\r\n                    name: StringNode({ validator: 'entity', params: { amount: 'single', type: 'entities', isScoreHolder: true } }),\r\n                    objective: StringNode({ validator: 'objective' }),\r\n                    value: core_1.Opt(StringNode())\r\n                }),\r\n                ...CommonFields\r\n            })\r\n        },\r\n        {\r\n            type: 'selector',\r\n            match: v => (v === null || v === void 0 ? void 0 : v.selector) !== undefined,\r\n            change: v => ({ selector: '' }),\r\n            node: core_1.ObjectNode({\r\n                selector: StringNode({ validator: 'entity', params: { amount: 'multiple', type: 'entities' } }),\r\n                ...CommonFields\r\n            })\r\n        },\r\n        {\r\n            type: 'keybind',\r\n            match: v => (v === null || v === void 0 ? void 0 : v.keybind) !== undefined,\r\n            change: v => ({ keybind: '' }),\r\n            node: core_1.ObjectNode({\r\n                keybind: StringNode({ enum: 'keybind', additional: true }),\r\n                ...CommonFields\r\n            })\r\n        },\r\n        {\r\n            type: 'nbt',\r\n            match: v => (v === null || v === void 0 ? void 0 : v.nbt) !== undefined,\r\n            change: v => ({ nbt: '' }),\r\n            node: core_1.ObjectNode({\r\n                nbt: StringNode({ validator: 'nbt_path' }),\r\n                block: core_1.Opt(StringNode({ validator: 'vector', params: { dimension: 3, isInteger: true } })),\r\n                entity: core_1.Opt(StringNode({ validator: 'entity', params: { amount: 'single', type: 'entities' } })),\r\n                storage: core_1.Opt(StringNode({ validator: 'resource', params: { pool: '$storage' } })),\r\n                interpret: core_1.Opt(core_1.BooleanNode()),\r\n                ...CommonFields\r\n            })\r\n        }\r\n    ], { context: 'text_component_object', choiceContext: 'text_component.object' }), {\r\n        default: () => ({\r\n            text: \"\"\r\n        })\r\n    }));\r\n    schemas.register('text_component_list', core_1.Mod(core_1.ListNode(Reference('text_component')), {\r\n        default: () => [{\r\n                text: \"\"\r\n            }]\r\n    }));\r\n}\r\nexports.initTextComponentSchemas = initTextComponentSchemas;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.initSchemas = void 0;\r\nconst Advancement_1 = require(\"./Advancement\");\r\nconst Common_1 = require(\"./Common\");\r\nconst Condition_1 = require(\"./Condition\");\r\nconst LootTable_1 = require(\"./LootTable\");\r\nconst PackMcmeta_1 = require(\"./PackMcmeta\");\r\nconst Predicates_1 = require(\"./Predicates\");\r\nconst Recipe_1 = require(\"./Recipe\");\r\nconst Tags_1 = require(\"./Tags\");\r\nconst TextComponent_1 = require(\"./TextComponent\");\r\nfunction initSchemas(schemas, collections) {\r\n    // `Common.ts` and `Predicates.ts` are files that have exports. They should be initialized first. \r\n    Common_1.initCommonSchemas(schemas, collections);\r\n    Predicates_1.initPredicatesSchemas(schemas, collections);\r\n    Advancement_1.initAdvancementSchemas(schemas, collections);\r\n    Condition_1.initConditionSchemas(schemas, collections);\r\n    LootTable_1.initLootTableSchemas(schemas, collections);\r\n    PackMcmeta_1.initPackMcmetaSchemas(schemas, collections);\r\n    Recipe_1.initRecipeSchemas(schemas, collections);\r\n    Tags_1.initTagsSchemas(schemas, collections);\r\n    TextComponent_1.initTextComponentSchemas(schemas, collections);\r\n}\r\nexports.initSchemas = initSchemas;\r\n","\"use strict\";\r\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}));\r\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n});\r\nvar __importStar = (this && this.__importStar) || function (mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.getSchemas = exports.getCollections = exports.lootContext = void 0;\r\nconst core_1 = require(\"@mcschema/core\");\r\nconst Collections_1 = require(\"./Collections\");\r\nconst schemas_1 = require(\"./schemas\");\r\nexports.lootContext = __importStar(require(\"./LootContext\"));\r\nfunction getCollections() {\r\n    const collections = new core_1.CollectionRegistry();\r\n    Collections_1.initCollections(collections);\r\n    return collections;\r\n}\r\nexports.getCollections = getCollections;\r\n/**\r\n * @param collections The CollectionRegistry for this version. Note that apart from\r\n * the built-in collections, the client of this module is responsible for futhermore\r\n * adding the vanilla registries to it: the collection IDs shouldn't contain the\r\n * namespace (`minecraft:`) part, while the values within the collections should.\r\n *\r\n * @example\r\n * for (const key in VANILLA_REGISTRIES>) {\r\n *   collections.register(\r\n *     key.replace(/^minecraft:/, ''),\r\n *     Object.keys(VANILLA_REGISTRIES[key].entries)\r\n *   )\r\n * }\r\n */\r\nfunction getSchemas(collections) {\r\n    const schemas = new core_1.SchemaRegistry();\r\n    schemas_1.initSchemas(schemas, collections);\r\n    return schemas;\r\n}\r\nexports.getSchemas = getSchemas;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.initCollections = void 0;\r\nfunction initCollections(collections) {\r\n    collections.register('advancement_trigger', [\r\n        'minecraft:bee_nest_destroyed',\r\n        'minecraft:bred_animals',\r\n        'minecraft:brewed_potion',\r\n        'minecraft:changed_dimension',\r\n        'minecraft:channeled_lightning',\r\n        'minecraft:construct_beacon',\r\n        'minecraft:consume_item',\r\n        'minecraft:cured_zombie_villager',\r\n        'minecraft:effects_changed',\r\n        'minecraft:enchanted_item',\r\n        'minecraft:enter_block',\r\n        'minecraft:entity_hurt_player',\r\n        'minecraft:entity_killed_player',\r\n        'minecraft:filled_bucket',\r\n        'minecraft:fishing_rod_hooked',\r\n        'minecraft:hero_of_the_village',\r\n        'minecraft:impossible',\r\n        'minecraft:inventory_changed',\r\n        'minecraft:item_durability_changed',\r\n        'minecraft:item_used_on_block',\r\n        'minecraft:killed_by_crossbow',\r\n        'minecraft:levitation',\r\n        'minecraft:location',\r\n        'minecraft:nether_travel',\r\n        'minecraft:placed_block',\r\n        'minecraft:player_generates_container_loot',\r\n        'minecraft:player_hurt_entity',\r\n        'minecraft:player_interacted_with_entity',\r\n        'minecraft:player_killed_entity',\r\n        'minecraft:recipe_unlocked',\r\n        'minecraft:shot_crossbow',\r\n        'minecraft:slept_in_bed',\r\n        'minecraft:slide_down_block',\r\n        'minecraft:summoned_entity',\r\n        'minecraft:tame_animal',\r\n        'minecraft:target_hit',\r\n        'minecraft:tick',\r\n        'minecraft:thrown_item_picked_up_by_entity',\r\n        'minecraft:used_ender_eye',\r\n        'minecraft:used_totem',\r\n        'minecraft:villager_trade',\r\n        'minecraft:voluntary_exile'\r\n    ]);\r\n    collections.register('dimension', [\r\n        'minecraft:overworld',\r\n        'minecraft:the_nether',\r\n        'minecraft:the_end'\r\n    ]);\r\n    collections.register('dimension_type', [\r\n        'minecraft:overworld',\r\n        'minecraft:the_nether',\r\n        'minecraft:the_end'\r\n    ]);\r\n    collections.register('keybind', [\r\n        'key.advancements',\r\n        'key.attack',\r\n        'key.back',\r\n        'key.chat',\r\n        'key.command',\r\n        'key.drop',\r\n        'key.forward',\r\n        'key.fullscreen',\r\n        'key.hotbar.1',\r\n        'key.hotbar.2',\r\n        'key.hotbar.3',\r\n        'key.hotbar.4',\r\n        'key.hotbar.5',\r\n        'key.hotbar.6',\r\n        'key.hotbar.7',\r\n        'key.hotbar.8',\r\n        'key.hotbar.9',\r\n        'key.inventory',\r\n        'key.jump',\r\n        'key.left',\r\n        'key.loadToolbarActivator',\r\n        'key.pickItem',\r\n        'key.playerlist',\r\n        'key.right',\r\n        'key.saveToolbarActivator',\r\n        'key.screenshot',\r\n        'key.smoothCamera',\r\n        'key.sneak',\r\n        'key.spectatorOutlines',\r\n        'key.sprint',\r\n        'key.swapOffhand',\r\n        'key.togglePerspective',\r\n        'key.use'\r\n    ]);\r\n    collections.register('slot', [\r\n        'mainhand',\r\n        'offhand',\r\n        'head',\r\n        'chest',\r\n        'legs',\r\n        'feet'\r\n    ]);\r\n    collections.register('gamemode', [\r\n        'survival',\r\n        'creative',\r\n        'adventure',\r\n        'spectator'\r\n    ]);\r\n    collections.register('worldgen/noise_settings', [\r\n        'minecraft:overworld',\r\n        'minecraft:nether',\r\n        'minecraft:end',\r\n        'minecraft:amplified',\r\n        'minecraft:caves',\r\n        'minecraft:floating_islands'\r\n    ]);\r\n    collections.register('entity_source', [\r\n        'this',\r\n        'direct_killer',\r\n        'killer',\r\n        'killer_player'\r\n    ]);\r\n    collections.register('copy_source', [\r\n        'block_entity',\r\n        'this',\r\n        'killer',\r\n        'killer_player'\r\n    ]);\r\n    collections.register('loot_table_apply_bonus_formula', [\r\n        'minecraft:uniform_bonus_count',\r\n        'minecraft:binomial_with_bonus_count',\r\n        'minecraft:ore_drops'\r\n    ]);\r\n    collections.register('map_decoration', [\r\n        'mansion',\r\n        'monument',\r\n        'player',\r\n        'frame',\r\n        'red_marker',\r\n        'blue_marker',\r\n        'target_x',\r\n        'target_point',\r\n        'player_off_map',\r\n        'player_off_limits',\r\n        'red_x',\r\n        'banner_white',\r\n        'banner_orange',\r\n        'banner_magenta',\r\n        'banner_light_blue',\r\n        'banner_yellow',\r\n        'banner_lime',\r\n        'banner_pink',\r\n        'banner_gray',\r\n        'banner_light_gray',\r\n        'banner_cyan',\r\n        'banner_purple',\r\n        'banner_blue',\r\n        'banner_brown',\r\n        'banner_green',\r\n        'banner_red',\r\n        'banner_black'\r\n    ]);\r\n    collections.register('map_feature', [\r\n        'bastion_remnant',\r\n        'buried_treasure',\r\n        'desert_pyramid',\r\n        'endcity',\r\n        'fortress',\r\n        'igloo',\r\n        'jungle_pyramid',\r\n        'mansion',\r\n        'mineshaft',\r\n        'monument',\r\n        'nether_fossil',\r\n        'ocean_ruin',\r\n        'pillager_outpost',\r\n        'ruined_portal',\r\n        'shipwreck',\r\n        'stronghold',\r\n        'swamp_hut',\r\n        'village'\r\n    ]);\r\n    collections.register('recipe_group', [\r\n        'bed',\r\n        'light_gray_dye',\r\n        'iron_ingot',\r\n        'wooden_stairs',\r\n        'black_dye',\r\n        'stained_terracotta',\r\n        'dyed_bed',\r\n        'magenta_dye',\r\n        'bark',\r\n        'rabbit_stew',\r\n        'light_blue_dye',\r\n        'wooden_fence_gate',\r\n        'planks',\r\n        'stained_glass',\r\n        'wooden_door',\r\n        'stained_glass_pane',\r\n        'wooden_fence',\r\n        'sticks',\r\n        'concrete_powder',\r\n        'wooden_pressure_plate',\r\n        'boat',\r\n        'brown_dye',\r\n        'yellow_dye',\r\n        'bonemeal',\r\n        'red_dye',\r\n        'wooden_trapdoor',\r\n        'wooden_button',\r\n        'gold_ingot',\r\n        'pink_dye',\r\n        'wooden_slab',\r\n        'orange_dye',\r\n        'carpet',\r\n        'sign',\r\n        'wool',\r\n        'sugar',\r\n        'blue_dye',\r\n        'white_dye',\r\n        'banner',\r\n        'netherite_ingot'\r\n    ]);\r\n    collections.register('worldgen/configured_feature', [\r\n        'minecraft:acacia',\r\n        'minecraft:bamboo_light',\r\n        'minecraft:bamboo_vegetation',\r\n        'minecraft:bamboo',\r\n        'minecraft:basalt_blobs',\r\n        'minecraft:basalt_pillar',\r\n        'minecraft:birch_bees_0002',\r\n        'minecraft:birch_bees_002',\r\n        'minecraft:birch_bees_005',\r\n        'minecraft:birch_other',\r\n        'minecraft:birch_tall',\r\n        'minecraft:birch',\r\n        'minecraft:blackstone_blobs',\r\n        'minecraft:blue_ice',\r\n        'minecraft:bonus_chest',\r\n        'minecraft:brown_mushroom_giant',\r\n        'minecraft:brown_mushroom_nether',\r\n        'minecraft:brown_mushroom_normal',\r\n        'minecraft:brown_mushroom_swamp',\r\n        'minecraft:brown_mushroom_taiga',\r\n        'minecraft:chorus_plant',\r\n        'minecraft:crimson_forest_vegetation',\r\n        'minecraft:crimson_fungi_planted',\r\n        'minecraft:crimson_fungi',\r\n        'minecraft:dark_forest_vegetation_brown',\r\n        'minecraft:dark_forest_vegetation_red',\r\n        'minecraft:dark_oak',\r\n        'minecraft:delta',\r\n        'minecraft:desert_well',\r\n        'minecraft:disk_clay',\r\n        'minecraft:disk_gravel',\r\n        'minecraft:disk_sand',\r\n        'minecraft:end_gateway_delayed',\r\n        'minecraft:end_gateway',\r\n        'minecraft:end_island_decorated',\r\n        'minecraft:end_island',\r\n        'minecraft:end_spike',\r\n        'minecraft:fancy_oak_bees_0002',\r\n        'minecraft:fancy_oak_bees_002',\r\n        'minecraft:fancy_oak_bees_005',\r\n        'minecraft:fancy_oak',\r\n        'minecraft:flower_default',\r\n        'minecraft:flower_forest',\r\n        'minecraft:flower_plain_decorated',\r\n        'minecraft:flower_plain',\r\n        'minecraft:flower_swamp',\r\n        'minecraft:flower_warm',\r\n        'minecraft:forest_flower_trees',\r\n        'minecraft:forest_flower_vegetation_common',\r\n        'minecraft:forest_flower_vegetation',\r\n        'minecraft:forest_rock',\r\n        'minecraft:fossil',\r\n        'minecraft:freeze_top_layer',\r\n        'minecraft:glowstone_extra',\r\n        'minecraft:glowstone',\r\n        'minecraft:huge_brown_mushroom',\r\n        'minecraft:huge_red_mushroom',\r\n        'minecraft:ice_patch',\r\n        'minecraft:ice_spike',\r\n        'minecraft:iceberg_blue',\r\n        'minecraft:iceberg_packed',\r\n        'minecraft:jungle_bush',\r\n        'minecraft:jungle_tree_no_vine',\r\n        'minecraft:jungle_tree',\r\n        'minecraft:kelp_cold',\r\n        'minecraft:kelp_warm',\r\n        'minecraft:lake_lava',\r\n        'minecraft:lake_water',\r\n        'minecraft:large_basalt_columns',\r\n        'minecraft:mega_jungle_tree',\r\n        'minecraft:mega_pine',\r\n        'minecraft:mega_spruce',\r\n        'minecraft:monster_room',\r\n        'minecraft:mushroom_field_vegetation',\r\n        'minecraft:nether_sprouts',\r\n        'minecraft:oak_badlands',\r\n        'minecraft:oak_bees_0002',\r\n        'minecraft:oak_bees_002',\r\n        'minecraft:oak_bees_005',\r\n        'minecraft:oak',\r\n        'minecraft:ore_andesite',\r\n        'minecraft:ore_blackstone',\r\n        'minecraft:ore_coal',\r\n        'minecraft:ore_debris_large',\r\n        'minecraft:ore_debris_small',\r\n        'minecraft:ore_diamond',\r\n        'minecraft:ore_diorite',\r\n        'minecraft:ore_dirt',\r\n        'minecraft:ore_emerald',\r\n        'minecraft:ore_gold_deltas',\r\n        'minecraft:ore_gold_extra',\r\n        'minecraft:ore_gold_nether',\r\n        'minecraft:ore_gold',\r\n        'minecraft:ore_granite',\r\n        'minecraft:ore_gravel_nether',\r\n        'minecraft:ore_gravel',\r\n        'minecraft:ore_infested',\r\n        'minecraft:ore_iron',\r\n        'minecraft:ore_lapis',\r\n        'minecraft:ore_magma',\r\n        'minecraft:ore_quartz_deltas',\r\n        'minecraft:ore_quartz_nether',\r\n        'minecraft:ore_redstone',\r\n        'minecraft:ore_soul_sand',\r\n        'minecraft:patch_berry_bush',\r\n        'minecraft:patch_berry_decorated',\r\n        'minecraft:patch_berry_sparse',\r\n        'minecraft:patch_brown_mushroom',\r\n        'minecraft:patch_cactus_decorated',\r\n        'minecraft:patch_cactus_desert',\r\n        'minecraft:patch_cactus',\r\n        'minecraft:patch_crimson_roots',\r\n        'minecraft:patch_dead_bush_2',\r\n        'minecraft:patch_dead_bush_badlands',\r\n        'minecraft:patch_dead_bush',\r\n        'minecraft:patch_fire',\r\n        'minecraft:patch_grass_badlands',\r\n        'minecraft:patch_grass_forest',\r\n        'minecraft:patch_grass_jungle',\r\n        'minecraft:patch_grass_normal',\r\n        'minecraft:patch_grass_plain',\r\n        'minecraft:patch_grass_savanna',\r\n        'minecraft:patch_grass_taiga_2',\r\n        'minecraft:patch_grass_taiga',\r\n        'minecraft:patch_large_fern',\r\n        'minecraft:patch_melon',\r\n        'minecraft:patch_pumpkin',\r\n        'minecraft:patch_red_mushroom',\r\n        'minecraft:patch_soul_fire',\r\n        'minecraft:patch_sugar_cane_badlands',\r\n        'minecraft:patch_sugar_cane_desert',\r\n        'minecraft:patch_sugar_cane_swamp',\r\n        'minecraft:patch_sugar_cane',\r\n        'minecraft:patch_sunflower',\r\n        'minecraft:patch_taiga_grass',\r\n        'minecraft:patch_tall_grass_2',\r\n        'minecraft:patch_tall_grass',\r\n        'minecraft:patch_waterlilly',\r\n        'minecraft:pile_hay',\r\n        'minecraft:pile_ice',\r\n        'minecraft:pile_melon',\r\n        'minecraft:pile_pumpkin',\r\n        'minecraft:pile_snow',\r\n        'minecraft:pine',\r\n        'minecraft:plain_vegetation',\r\n        'minecraft:red_mushroom_giant',\r\n        'minecraft:red_mushroom_nether',\r\n        'minecraft:red_mushroom_normal',\r\n        'minecraft:red_mushroom_swamp',\r\n        'minecraft:red_mushroom_taiga',\r\n        'minecraft:sea_pickle',\r\n        'minecraft:seagrass_cold',\r\n        'minecraft:seagrass_deep_cold',\r\n        'minecraft:seagrass_deep_warm',\r\n        'minecraft:seagrass_deep',\r\n        'minecraft:seagrass_normal',\r\n        'minecraft:seagrass_river',\r\n        'minecraft:seagrass_simple',\r\n        'minecraft:seagrass_swamp',\r\n        'minecraft:seagrass_warm',\r\n        'minecraft:small_basalt_columns',\r\n        'minecraft:spring_closed_double',\r\n        'minecraft:spring_closed',\r\n        'minecraft:spring_delta',\r\n        'minecraft:spring_lava_double',\r\n        'minecraft:spring_lava',\r\n        'minecraft:spring_open',\r\n        'minecraft:spring_water',\r\n        'minecraft:spruce_snowy',\r\n        'minecraft:spruce',\r\n        'minecraft:super_birch_bees_0002',\r\n        'minecraft:swamp_tree',\r\n        'minecraft:taiga_vegetation',\r\n        'minecraft:trees_birch',\r\n        'minecraft:trees_giant_spruce',\r\n        'minecraft:trees_giant',\r\n        'minecraft:trees_jungle_edge',\r\n        'minecraft:trees_jungle',\r\n        'minecraft:trees_mountain_edge',\r\n        'minecraft:trees_mountain',\r\n        'minecraft:trees_savanna',\r\n        'minecraft:trees_shattered_savanna',\r\n        'minecraft:trees_water',\r\n        'minecraft:twisting_vines',\r\n        'minecraft:vines',\r\n        'minecraft:void_start_platform',\r\n        'minecraft:warm_ocean_vegetation',\r\n        'minecraft:warped_forest_vegetation',\r\n        'minecraft:warped_fungi_planted',\r\n        'minecraft:warped_fungi',\r\n        'minecraft:weeping_vines'\r\n    ]);\r\n    collections.register('worldgen/configured_structure_feature', [\r\n        'minecraft:bastion_remnant',\r\n        'minecraft:buried_treasure',\r\n        'minecraft:desert_pyramid',\r\n        'minecraft:end_city',\r\n        'minecraft:fortress',\r\n        'minecraft:igloo',\r\n        'minecraft:jungle_pyramid',\r\n        'minecraft:mansion',\r\n        'minecraft:mineshaft_mesa',\r\n        'minecraft:mineshaft',\r\n        'minecraft:monument',\r\n        'minecraft:nether_fossil',\r\n        'minecraft:ocean_ruin_cold',\r\n        'minecraft:ocean_ruin_warm',\r\n        'minecraft:pillager_outpost',\r\n        'minecraft:ruined_portal_desert',\r\n        'minecraft:ruined_portal_jungle',\r\n        'minecraft:ruined_portal_mountain',\r\n        'minecraft:ruined_portal_nether',\r\n        'minecraft:ruined_portal_ocean',\r\n        'minecraft:ruined_portal_swamp',\r\n        'minecraft:ruined_portal',\r\n        'minecraft:shipwreck_beached',\r\n        'minecraft:shipwreck',\r\n        'minecraft:stronghold',\r\n        'minecraft:swamp_hut',\r\n        'minecraft:village_desert',\r\n        'minecraft:village_plains',\r\n        'minecraft:village_savanna',\r\n        'minecraft:village_snowy',\r\n        'minecraft:village_taiga'\r\n    ]);\r\n    collections.register('worldgen/configured_surface_builder', [\r\n        'minecraft:badlands',\r\n        'minecraft:basalt_deltas',\r\n        'minecraft:crimson_forest',\r\n        'minecraft:desert',\r\n        'minecraft:end',\r\n        'minecraft:eroded_badlands',\r\n        'minecraft:frozen_ocean',\r\n        'minecraft:full_sand',\r\n        'minecraft:giant_tree_taiga',\r\n        'minecraft:grass',\r\n        'minecraft:gravelly_mountain',\r\n        'minecraft:ice_spikes',\r\n        'minecraft:mountain',\r\n        'minecraft:mycelium',\r\n        'minecraft:nether',\r\n        'minecraft:nope',\r\n        'minecraft:ocean_sand',\r\n        'minecraft:shattered_savanna',\r\n        'minecraft:soul_sand_valley',\r\n        'minecraft:stone',\r\n        'minecraft:swamp',\r\n        'minecraft:warped_forest',\r\n        'minecraft:wooded_badlands'\r\n    ]);\r\n    collections.register('biome_category', [\r\n        'beach',\r\n        'desert',\r\n        'extreme_hills',\r\n        'forest',\r\n        'icy',\r\n        'jungle',\r\n        'mesa',\r\n        'mushroom',\r\n        'nether',\r\n        'none',\r\n        'ocean',\r\n        'plains',\r\n        'river',\r\n        'savanna',\r\n        'swamp',\r\n        'taiga',\r\n        'the_end'\r\n    ]);\r\n    collections.register('heightmap_type', [\r\n        'MOTION_BLOCKING',\r\n        'MOTION_BLOCKING_NO_LEAVES',\r\n        'OCEAN_FLOOR',\r\n        'OCEAN_FLOOR_WG',\r\n        'WORLD_SURFACE',\r\n        'WORLD_SURFACE_WG'\r\n    ]);\r\n    collections.register('generation_step', [\r\n        'air',\r\n        'liquid'\r\n    ]);\r\n    collections.register('loot_context_type', [\r\n        'minecraft:empty',\r\n        'minecraft:chest',\r\n        'minecraft:command',\r\n        'minecraft:selector',\r\n        'minecraft:fishing',\r\n        'minecraft:entity',\r\n        'minecraft:gift',\r\n        'minecraft:barter',\r\n        'minecraft:advancement_reward',\r\n        'minecraft:advancement_entity',\r\n        'minecraft:generic',\r\n        'minecraft:block'\r\n    ]);\r\n}\r\nexports.initCollections = initCollections;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.initCommonSchemas = exports.UniformInt = exports.Range = exports.NoiseSettingsPresets = exports.DefaultNoiseSettings = exports.DimensionTypePresets = exports.DefaultDimensionType = exports.ConditionCases = void 0;\r\nconst core_1 = require(\"@mcschema/core\");\r\nexports.DefaultDimensionType = {\r\n    ultrawarm: false,\r\n    natural: true,\r\n    piglin_safe: false,\r\n    respawn_anchor_works: false,\r\n    bed_works: true,\r\n    has_raids: true,\r\n    has_skylight: true,\r\n    has_ceiling: false,\r\n    coordinate_scale: 1,\r\n    ambient_light: 0,\r\n    logical_height: 256,\r\n    infiniburn: 'minecraft:infiniburn_overworld',\r\n};\r\nexports.DefaultNoiseSettings = {\r\n    name: 'minecraft:overworld',\r\n    bedrock_roof_position: -10,\r\n    bedrock_floor_position: 0,\r\n    sea_level: 63,\r\n    disable_mob_generation: false,\r\n    noise: {\r\n        density_factor: 1,\r\n        density_offset: -0.46875,\r\n        simplex_surface_noise: true,\r\n        random_density_offset: true,\r\n        size_horizontal: 1,\r\n        size_vertical: 2,\r\n        height: 256,\r\n        sampling: {\r\n            xz_scale: 1,\r\n            y_scale: 1,\r\n            xz_factor: 80,\r\n            y_factor: 160\r\n        },\r\n        top_slide: {\r\n            target: -10,\r\n            size: 3,\r\n            offset: 0\r\n        },\r\n        bottom_slide: {\r\n            target: -30,\r\n            size: 0,\r\n            offset: 0\r\n        }\r\n    },\r\n    default_block: {\r\n        Name: \"minecraft:stone\"\r\n    },\r\n    default_fluid: {\r\n        Name: \"minecraft:water\",\r\n        Properties: {\r\n            level: \"0\"\r\n        }\r\n    }\r\n};\r\nfunction initCommonSchemas(schemas, collections) {\r\n    const StringNode = core_1.StringNode.bind(undefined, collections);\r\n    const Reference = core_1.Reference.bind(undefined, schemas);\r\n    schemas.register('block_state', core_1.Mod(core_1.ObjectNode({\r\n        Name: StringNode({ validator: 'resource', params: { pool: 'block' } }),\r\n        Properties: core_1.Opt(core_1.MapNode(StringNode(), StringNode(), { validation: { validator: 'block_state_map', params: { id: ['pop', { push: 'Name' }] } } }))\r\n    }, { context: 'block_state' }), {\r\n        default: () => ({\r\n            Name: 'minecraft:stone'\r\n        })\r\n    }));\r\n    schemas.register('fluid_state', core_1.Mod(core_1.ObjectNode({\r\n        Name: StringNode({ validator: 'resource', params: { pool: 'fluid' } }),\r\n        Properties: core_1.Opt(core_1.MapNode(StringNode(), StringNode()))\r\n    }, { context: 'fluid_state' }), {\r\n        default: () => ({\r\n            Name: 'minecraft:water',\r\n            Properties: {\r\n                'level': '0'\r\n            }\r\n        })\r\n    }));\r\n    schemas.register('block_pos', core_1.Mod(core_1.ListNode(core_1.NumberNode({ integer: true }), { minLength: 3, maxLength: 3 }), {\r\n        default: () => [0, 0, 0]\r\n    }));\r\n    exports.Range = (config) => core_1.ChoiceNode([\r\n        ...((config === null || config === void 0 ? void 0 : config.forceRange) ? [] : [{\r\n                type: 'number',\r\n                node: core_1.NumberNode(config),\r\n                change: (v) => { var _a, _b, _c; return v === undefined ? 0 : (_c = (_b = (_a = v.min) !== null && _a !== void 0 ? _a : v.max) !== null && _b !== void 0 ? _b : v.n) !== null && _c !== void 0 ? _c : 0; }\r\n            }]),\r\n        {\r\n            type: 'object',\r\n            priority: -1,\r\n            node: core_1.ObjectNode({\r\n                min: (config === null || config === void 0 ? void 0 : config.bounds) ? core_1.NumberNode(config) : core_1.Opt(core_1.NumberNode(config)),\r\n                max: (config === null || config === void 0 ? void 0 : config.bounds) ? core_1.NumberNode(config) : core_1.Opt(core_1.NumberNode(config))\r\n            }, { context: 'range' }),\r\n            change: (v) => ({\r\n                min: typeof v === 'number' ? v : v === undefined ? 1 : v.n,\r\n                max: typeof v === 'number' ? v : v === undefined ? 1 : v.n\r\n            })\r\n        },\r\n        ...((config === null || config === void 0 ? void 0 : config.allowBinomial) ? [{\r\n                type: 'binomial',\r\n                node: core_1.ObjectNode({\r\n                    type: StringNode({ enum: ['minecraft:binomial'] }),\r\n                    n: core_1.NumberNode({ integer: true, min: 0 }),\r\n                    p: core_1.NumberNode({ min: 0, max: 1 })\r\n                }, { context: 'range' }),\r\n                match: (v) => v !== undefined && v.type === 'minecraft:binomial',\r\n                change: (v) => {\r\n                    var _a, _b;\r\n                    return ({\r\n                        type: 'minecraft:binomial',\r\n                        n: typeof v === 'number' ? v : v === undefined ? 1 : ((_b = (_a = v.min) !== null && _a !== void 0 ? _a : v.max) !== null && _b !== void 0 ? _b : 1),\r\n                        p: 0.5\r\n                    });\r\n                }\r\n            }] : [])\r\n    ], { choiceContext: 'range' });\r\n    exports.UniformInt = (config) => core_1.ChoiceNode([\r\n        {\r\n            type: 'number',\r\n            node: core_1.NumberNode({ integer: true, min: config === null || config === void 0 ? void 0 : config.min, max: config === null || config === void 0 ? void 0 : config.max }),\r\n            change: v => v.base\r\n        },\r\n        {\r\n            type: 'object',\r\n            node: core_1.ObjectNode({\r\n                base: core_1.NumberNode({ integer: true, min: config === null || config === void 0 ? void 0 : config.min, max: config === null || config === void 0 ? void 0 : config.max }),\r\n                spread: core_1.NumberNode({ integer: true, min: 0, max: config === null || config === void 0 ? void 0 : config.maxSpread })\r\n            }),\r\n            change: v => ({\r\n                base: v,\r\n                spread: 0\r\n            })\r\n        }\r\n    ], { context: 'uniform_int' });\r\n    exports.ConditionCases = {\r\n        'minecraft:alternative': {\r\n            terms: core_1.ListNode(Reference('condition'))\r\n        },\r\n        'minecraft:block_state_property': {\r\n            block: StringNode({ validator: 'resource', params: { pool: 'block' } }),\r\n            properties: core_1.MapNode(StringNode(), StringNode(), { validation: { validator: 'block_state_map', params: { id: ['pop', { push: 'block' }] } } })\r\n        },\r\n        'minecraft:damage_source_properties': {\r\n            predicate: Reference('damage_source_predicate')\r\n        },\r\n        'minecraft:entity_properties': {\r\n            entity: StringNode({ enum: 'entity_source' }),\r\n            predicate: Reference('entity_predicate')\r\n        },\r\n        'minecraft:entity_scores': {\r\n            entity: StringNode({ enum: 'entity_source' }),\r\n            scores: core_1.MapNode(StringNode({ validator: 'objective' }), exports.Range({ forceRange: true }))\r\n        },\r\n        'minecraft:inverted': {\r\n            term: Reference('condition')\r\n        },\r\n        'minecraft:killed_by_player': {\r\n            inverse: core_1.Opt(core_1.BooleanNode())\r\n        },\r\n        'minecraft:location_check': {\r\n            offsetX: core_1.Opt(core_1.NumberNode({ integer: true })),\r\n            offsetY: core_1.Opt(core_1.NumberNode({ integer: true })),\r\n            offsetZ: core_1.Opt(core_1.NumberNode({ integer: true })),\r\n            predicate: Reference('location_predicate')\r\n        },\r\n        'minecraft:match_tool': {\r\n            predicate: Reference('item_predicate')\r\n        },\r\n        'minecraft:random_chance': {\r\n            chance: core_1.NumberNode({ min: 0, max: 1 })\r\n        },\r\n        'minecraft:random_chance_with_looting': {\r\n            chance: core_1.NumberNode({ min: 0, max: 1 }),\r\n            looting_multiplier: core_1.NumberNode()\r\n        },\r\n        'minecraft:reference': {\r\n            name: StringNode({ validator: 'resource', params: { pool: '$predicate' } })\r\n        },\r\n        'minecraft:table_bonus': {\r\n            enchantment: StringNode({ validator: 'resource', params: { pool: 'enchantment' } }),\r\n            chances: core_1.ListNode(core_1.NumberNode({ min: 0, max: 1 }))\r\n        },\r\n        'minecraft:time_check': {\r\n            value: exports.Range(),\r\n            period: core_1.Opt(core_1.NumberNode())\r\n        },\r\n        'minecraft:weather_check': {\r\n            raining: core_1.Opt(core_1.BooleanNode()),\r\n            thundering: core_1.Opt(core_1.BooleanNode())\r\n        }\r\n    };\r\n    exports.DimensionTypePresets = (node) => core_1.ObjectOrPreset(StringNode({ validator: 'resource', params: { pool: '$dimension_type' } }), node, {\r\n        'minecraft:overworld': exports.DefaultDimensionType,\r\n        'minecraft:the_nether': {\r\n            name: 'minecraft:the_nether',\r\n            ultrawarm: true,\r\n            natural: false,\r\n            shrunk: true,\r\n            piglin_safe: true,\r\n            respawn_anchor_works: true,\r\n            bed_works: false,\r\n            has_raids: false,\r\n            has_skylight: false,\r\n            has_ceiling: true,\r\n            ambient_light: 0.1,\r\n            fixed_time: 18000,\r\n            logical_height: 128,\r\n            effects: 'minecraft:the_nether',\r\n            infiniburn: 'minecraft:infiniburn_nether',\r\n        },\r\n        'minecraft:the_end': {\r\n            name: 'minecraft:the_end',\r\n            ultrawarm: false,\r\n            natural: false,\r\n            shrunk: false,\r\n            piglin_safe: false,\r\n            respawn_anchor_works: false,\r\n            bed_works: false,\r\n            has_raids: true,\r\n            has_skylight: false,\r\n            has_ceiling: false,\r\n            ambient_light: 0,\r\n            fixed_time: 6000,\r\n            logical_height: 256,\r\n            effects: 'minecraft:the_end',\r\n            infiniburn: 'minecraft:infiniburn_end',\r\n        }\r\n    });\r\n    exports.NoiseSettingsPresets = (node) => core_1.ObjectOrPreset(StringNode({ validator: 'resource', params: { pool: '$worldgen/noise_settings' } }), node, {\r\n        'minecraft:overworld': exports.DefaultNoiseSettings,\r\n        'minecraft:nether': {\r\n            name: 'minecraft:nether',\r\n            bedrock_roof_position: 0,\r\n            bedrock_floor_position: 0,\r\n            sea_level: 32,\r\n            disable_mob_generation: true,\r\n            noise: {\r\n                density_factor: 0,\r\n                density_offset: 0.019921875,\r\n                simplex_surface_noise: false,\r\n                random_density_offset: false,\r\n                size_horizontal: 1,\r\n                size_vertical: 2,\r\n                height: 128,\r\n                sampling: {\r\n                    xz_scale: 1,\r\n                    y_scale: 3,\r\n                    xz_factor: 80,\r\n                    y_factor: 60\r\n                },\r\n                top_slide: {\r\n                    target: 120,\r\n                    size: 3,\r\n                    offset: 0\r\n                },\r\n                bottom_slide: {\r\n                    target: 320,\r\n                    size: 4,\r\n                    offset: -1\r\n                }\r\n            },\r\n            default_block: {\r\n                Name: \"minecraft:netherrack\"\r\n            },\r\n            default_fluid: {\r\n                Name: \"minecraft:lava\",\r\n                Properties: {\r\n                    level: \"0\"\r\n                }\r\n            }\r\n        },\r\n        'minecraft:end': {\r\n            name: 'minecraft:end',\r\n            bedrock_roof_position: -10,\r\n            bedrock_floor_position: -10,\r\n            sea_level: 0,\r\n            disable_mob_generation: true,\r\n            noise: {\r\n                density_factor: 0,\r\n                density_offset: 0,\r\n                simplex_surface_noise: true,\r\n                random_density_offset: false,\r\n                island_noise_override: true,\r\n                size_horizontal: 2,\r\n                size_vertical: 1,\r\n                height: 128,\r\n                sampling: {\r\n                    xz_scale: 2,\r\n                    y_scale: 1,\r\n                    xz_factor: 80,\r\n                    y_factor: 160\r\n                },\r\n                top_slide: {\r\n                    target: -3000,\r\n                    size: 64,\r\n                    offset: -46\r\n                },\r\n                bottom_slide: {\r\n                    target: -30,\r\n                    size: 7,\r\n                    offset: 1\r\n                }\r\n            },\r\n            default_block: {\r\n                Name: \"minecraft:end_stone\"\r\n            },\r\n            default_fluid: {\r\n                Name: \"minecraft:air\"\r\n            }\r\n        },\r\n        'minecraft:amplified': {\r\n            name: 'minecraft:amplified',\r\n            bedrock_roof_position: -10,\r\n            bedrock_floor_position: 0,\r\n            sea_level: 63,\r\n            disable_mob_generation: false,\r\n            noise: {\r\n                density_factor: 1,\r\n                density_offset: -0.46875,\r\n                simplex_surface_noise: true,\r\n                random_density_offset: true,\r\n                amplified: true,\r\n                size_horizontal: 1,\r\n                size_vertical: 2,\r\n                height: 256,\r\n                sampling: {\r\n                    xz_scale: 1,\r\n                    y_scale: 1,\r\n                    xz_factor: 80,\r\n                    y_factor: 160\r\n                },\r\n                top_slide: {\r\n                    target: -10,\r\n                    size: 3,\r\n                    offset: 0\r\n                },\r\n                bottom_slide: {\r\n                    target: -30,\r\n                    size: 0,\r\n                    offset: 0\r\n                }\r\n            },\r\n            default_block: {\r\n                Name: \"minecraft:stone\"\r\n            },\r\n            default_fluid: {\r\n                Name: \"minecraft:water\",\r\n                Properties: {\r\n                    level: \"0\"\r\n                }\r\n            }\r\n        },\r\n        'minecraft:caves': {\r\n            name: 'minecraft:caves',\r\n            bedrock_roof_position: 0,\r\n            bedrock_floor_position: 0,\r\n            sea_level: 32,\r\n            disable_mob_generation: true,\r\n            noise: {\r\n                density_factor: 0,\r\n                density_offset: 0.019921875,\r\n                simplex_surface_noise: false,\r\n                random_density_offset: false,\r\n                size_horizontal: 1,\r\n                size_vertical: 2,\r\n                height: 128,\r\n                sampling: {\r\n                    xz_scale: 1,\r\n                    y_scale: 3,\r\n                    xz_factor: 80,\r\n                    y_factor: 60\r\n                },\r\n                top_slide: {\r\n                    target: 120,\r\n                    size: 3,\r\n                    offset: 0\r\n                },\r\n                bottom_slide: {\r\n                    target: 320,\r\n                    size: 4,\r\n                    offset: -1\r\n                }\r\n            },\r\n            default_block: {\r\n                Name: \"minecraft:stone\"\r\n            },\r\n            default_fluid: {\r\n                Name: \"minecraft:water\",\r\n                Properties: {\r\n                    level: \"0\"\r\n                }\r\n            }\r\n        },\r\n        'minecraft:floating_islands': {\r\n            name: 'minecraft:floating_islands',\r\n            bedrock_roof_position: -10,\r\n            bedrock_floor_position: -10,\r\n            sea_level: 0,\r\n            disable_mob_generation: true,\r\n            noise: {\r\n                density_factor: 0,\r\n                density_offset: 0,\r\n                simplex_surface_noise: true,\r\n                random_density_offset: false,\r\n                island_noise_override: true,\r\n                size_horizontal: 2,\r\n                size_vertical: 1,\r\n                height: 128,\r\n                sampling: {\r\n                    xz_scale: 2,\r\n                    y_scale: 1,\r\n                    xz_factor: 80,\r\n                    y_factor: 160\r\n                },\r\n                top_slide: {\r\n                    target: -3000,\r\n                    size: 64,\r\n                    offset: -46\r\n                },\r\n                bottom_slide: {\r\n                    target: -30,\r\n                    size: 7,\r\n                    offset: 1\r\n                }\r\n            },\r\n            default_block: {\r\n                Name: \"minecraft:stone\"\r\n            },\r\n            default_fluid: {\r\n                Name: \"minecraft:water\",\r\n                Properties: {\r\n                    level: \"0\"\r\n                }\r\n            }\r\n        }\r\n    });\r\n}\r\nexports.initCommonSchemas = initCommonSchemas;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.initAdvancementSchemas = void 0;\r\nconst core_1 = require(\"@mcschema/core\");\r\nconst Common_1 = require(\"./Common\");\r\nfunction initAdvancementSchemas(schemas, collections) {\r\n    const Reference = core_1.Reference.bind(undefined, schemas);\r\n    const StringNode = core_1.StringNode.bind(undefined, collections);\r\n    const EntityPredicate = core_1.ChoiceNode([\r\n        {\r\n            type: 'object',\r\n            node: core_1.Opt(Reference('entity_predicate')),\r\n            change: v => { var _a, _b; return (_b = (_a = v[0]) === null || _a === void 0 ? void 0 : _a.predicate) !== null && _b !== void 0 ? _b : ({}); }\r\n        },\r\n        {\r\n            type: 'list',\r\n            node: core_1.ListNode(Reference('condition')),\r\n            change: v => [{\r\n                    condition: 'minecraft:entity_properties',\r\n                    predicate: v\r\n                }]\r\n        }\r\n    ], { context: 'conditions' });\r\n    schemas.register('advancement', core_1.Mod(core_1.ObjectNode({\r\n        display: core_1.Opt(core_1.Mod(core_1.ObjectNode({\r\n            icon: core_1.ObjectNode({\r\n                item: StringNode({ validator: 'resource', params: { pool: 'item' } }),\r\n                nbt: core_1.Opt(StringNode({ validator: 'nbt', params: { registry: { category: 'minecraft:item', id: ['pop', { push: 'item' }] } } }))\r\n            }),\r\n            title: Reference('text_component'),\r\n            description: Reference('text_component'),\r\n            background: core_1.Opt(StringNode()),\r\n            frame: core_1.Opt(StringNode({ enum: ['task', 'challenge', 'goal'] })),\r\n            show_toast: core_1.Opt(core_1.BooleanNode()),\r\n            announce_to_chat: core_1.Opt(core_1.BooleanNode()),\r\n            hidden: core_1.Opt(core_1.BooleanNode())\r\n        }), {\r\n            default: () => ({\r\n                icon: {\r\n                    item: 'minecraft:stone'\r\n                },\r\n                title: '',\r\n                description: ''\r\n            })\r\n        })),\r\n        parent: core_1.Opt(StringNode({ validator: 'resource', params: { pool: '$advancement' } })),\r\n        criteria: core_1.MapNode(StringNode(), Reference('advancement_criteria')),\r\n        requirements: core_1.Opt(core_1.ListNode(core_1.ListNode(StringNode() // TODO: add validation\r\n        ))),\r\n        rewards: core_1.Opt(core_1.ObjectNode({\r\n            function: core_1.Opt(StringNode({ validator: 'resource', params: { pool: '$function' } })),\r\n            loot: core_1.Opt(core_1.ListNode(StringNode({ validator: 'resource', params: { pool: '$loot_table' } }))),\r\n            recipes: core_1.Opt(core_1.ListNode(StringNode({ validator: 'resource', params: { pool: '$recipe' } }))),\r\n            experience: core_1.Opt(core_1.NumberNode({ integer: true }))\r\n        })),\r\n    }, { context: 'advancement' }), {\r\n        default: () => ({\r\n            criteria: {\r\n                requirement: {\r\n                    trigger: 'minecraft:location'\r\n                }\r\n            }\r\n        })\r\n    }));\r\n    schemas.register('advancement_criteria', core_1.ObjectNode({\r\n        trigger: StringNode({ validator: 'resource', params: { pool: collections.get('advancement_trigger') } }),\r\n        conditions: core_1.Opt(core_1.ObjectNode({\r\n            player: core_1.Mod(EntityPredicate, {\r\n                enabled: path => path.pop().push('trigger').get() !== 'minecraft:impossible'\r\n            }),\r\n            [core_1.Switch]: ['pop', { push: 'trigger' }],\r\n            [core_1.Case]: {\r\n                'minecraft:bee_nest_destroyed': {\r\n                    block: core_1.Opt(StringNode({ validator: 'resource', params: { pool: 'block' } })),\r\n                    num_bees_inside: core_1.Opt(core_1.NumberNode({ integer: true })),\r\n                    item: core_1.Opt(Reference('item_predicate'))\r\n                },\r\n                'minecraft:bred_animals': {\r\n                    parent: EntityPredicate,\r\n                    partner: EntityPredicate,\r\n                    child: EntityPredicate\r\n                },\r\n                'minecraft:brewed_potion': {\r\n                    potion: core_1.Opt(StringNode({ validator: 'resource', params: { pool: 'potion' } }))\r\n                },\r\n                'minecraft:changed_dimension': {\r\n                    from: core_1.Opt(StringNode({ validator: 'resource', params: { pool: '$dimension' } })),\r\n                    to: core_1.Opt(StringNode({ validator: 'resource', params: { pool: '$dimension' } }))\r\n                },\r\n                'minecraft:channeled_lightning': {\r\n                    victims: core_1.Opt(core_1.ListNode(EntityPredicate))\r\n                },\r\n                'minecraft:construct_beacon': {\r\n                    level: core_1.Opt(Common_1.Range())\r\n                },\r\n                'minecraft:consume_item': {\r\n                    item: core_1.Opt(Reference('item_predicate'))\r\n                },\r\n                'minecraft:cured_zombie_villager': {\r\n                    villager: EntityPredicate,\r\n                    zombie: EntityPredicate\r\n                },\r\n                'minecraft:effects_changed': {\r\n                    effects: core_1.Opt(core_1.MapNode(StringNode({ validator: 'resource', params: { pool: 'mob_effect' } }), Reference('status_effect_predicate')))\r\n                },\r\n                'minecraft:enter_block': {\r\n                    block: core_1.Opt(StringNode({ validator: 'resource', params: { pool: 'block' } })),\r\n                    state: core_1.Opt(core_1.MapNode(StringNode(), StringNode(), { validation: { validator: 'block_state_map', params: { id: ['pop', { push: 'block' }] } } }))\r\n                },\r\n                'minecraft:enchanted_item': {\r\n                    levels: core_1.Opt(Common_1.Range()),\r\n                    item: core_1.Opt(Reference('item_predicate'))\r\n                },\r\n                'minecraft:entity_hurt_player': {\r\n                    damage: core_1.Opt(Reference('damage_predicate'))\r\n                },\r\n                'minecraft:entity_killed_player': {\r\n                    entity: EntityPredicate,\r\n                    killing_blow: core_1.Opt(Reference('damage_source_predicate'))\r\n                },\r\n                'minecraft:filled_bucket': {\r\n                    item: core_1.Opt(Reference('item_predicate'))\r\n                },\r\n                'minecraft:fishing_rod_hooked': {\r\n                    entity: EntityPredicate,\r\n                    item: core_1.Opt(Reference('item_predicate'))\r\n                },\r\n                'minecraft:hero_of_the_village': {\r\n                    location: core_1.Opt(Reference('location_predicate'))\r\n                },\r\n                'minecraft:inventory_changed': {\r\n                    slots: core_1.Opt(core_1.ObjectNode({\r\n                        empty: core_1.Opt(Common_1.Range()),\r\n                        occupied: core_1.Opt(Common_1.Range()),\r\n                        full: core_1.Opt(Common_1.Range())\r\n                    })),\r\n                    items: core_1.Opt(core_1.ListNode(Reference('item_predicate')))\r\n                },\r\n                'minecraft:item_durability_changed': {\r\n                    delta: core_1.Opt(Common_1.Range()),\r\n                    durability: core_1.Opt(Common_1.Range()),\r\n                    item: core_1.Opt(Reference('item_predicate'))\r\n                },\r\n                'minecraft:item_used_on_block': {\r\n                    item: core_1.Opt(Reference('item_predicate')),\r\n                    location: core_1.Opt(Reference('location_predicate'))\r\n                },\r\n                'minecraft:killed_by_crossbow': {\r\n                    unique_entity_types: core_1.Opt(Common_1.Range()),\r\n                    victims: core_1.Opt(core_1.ListNode(EntityPredicate))\r\n                },\r\n                'minecraft:levitation': {\r\n                    distance: core_1.Opt(Common_1.Range()),\r\n                    duration: core_1.Opt(Common_1.Range())\r\n                },\r\n                'minecraft:location': {\r\n                    location: core_1.Opt(Reference('location_predicate'))\r\n                },\r\n                'minecraft:nether_travel': {\r\n                    distance: core_1.Opt(Common_1.Range()),\r\n                    entered: core_1.Opt(Reference('location_predicate')),\r\n                    exited: core_1.Opt(Reference('location_predicate'))\r\n                },\r\n                'minecraft:placed_block': {\r\n                    block: core_1.Opt(StringNode({ validator: 'resource', params: { pool: 'block' } })),\r\n                    state: core_1.Opt(core_1.MapNode(StringNode(), StringNode(), { validation: { validator: 'block_state_map', params: { id: ['pop', { push: 'block' }] } } })),\r\n                    item: core_1.Opt(Reference('item_predicate')),\r\n                    location: core_1.Opt(Reference('location_predicate'))\r\n                },\r\n                'minecraft:player_generates_container_loot': {\r\n                    loot_table: StringNode({ validator: 'resource', params: { pool: '$loot_table' } })\r\n                },\r\n                'minecraft:player_hurt_entity': {\r\n                    damage: core_1.Opt(Reference('damage_predicate')),\r\n                    entity: EntityPredicate\r\n                },\r\n                'minecraft:player_interacted_with_entity': {\r\n                    item: core_1.Opt(Reference('item_predicate')),\r\n                    entity: EntityPredicate\r\n                },\r\n                'minecraft:player_killed_entity': {\r\n                    entity: EntityPredicate,\r\n                    killing_blow: core_1.Opt(Reference('damage_source_predicate'))\r\n                },\r\n                'minecraft:recipe_unlocked': {\r\n                    recipe: StringNode({ validator: 'resource', params: { pool: '$recipe' } })\r\n                },\r\n                'minecraft:slept_in_bed': {\r\n                    location: core_1.Opt(Reference('location_predicate'))\r\n                },\r\n                'minecraft:slide_down_block': {\r\n                    block: core_1.Opt(StringNode({ validator: 'resource', params: { pool: 'block' } }))\r\n                },\r\n                'minecraft:shot_crossbow': {\r\n                    item: core_1.Opt(Reference('item_predicate'))\r\n                },\r\n                'minecraft:summoned_entity': {\r\n                    entity: EntityPredicate\r\n                },\r\n                'minecraft:tame_animal': {\r\n                    entity: EntityPredicate\r\n                },\r\n                'minecraft:target_hit': {\r\n                    projectile: EntityPredicate,\r\n                    shooter: EntityPredicate,\r\n                    signal_strength: core_1.Opt(Common_1.Range({ integer: true }))\r\n                },\r\n                'minecraft:thrown_item_picked_up_by_entity': {\r\n                    entity: core_1.Opt(Reference('entity_predicate')),\r\n                    item: core_1.Opt(Reference('item_predicate'))\r\n                },\r\n                'minecraft:used_ender_eye': {\r\n                    distance: core_1.Opt(Common_1.Range())\r\n                },\r\n                'minecraft:used_totem': {\r\n                    item: core_1.Opt(Reference('item_predicate'))\r\n                },\r\n                'minecraft:villager_trade': {\r\n                    villager: core_1.Opt(Reference('entity_predicate')),\r\n                    item: core_1.Opt(Reference('item_predicate'))\r\n                },\r\n                'minecraft:voluntary_exile': {\r\n                    location: Reference('location_predicate')\r\n                }\r\n            }\r\n        }, { context: 'criterion' }))\r\n    }, { category: 'predicate', context: 'criterion' }));\r\n}\r\nexports.initAdvancementSchemas = initAdvancementSchemas;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.initConditionSchemas = void 0;\r\nconst core_1 = require(\"@mcschema/core\");\r\nconst Common_1 = require(\"./Common\");\r\nfunction initConditionSchemas(schemas, collections) {\r\n    const Reference = core_1.Reference.bind(undefined, schemas);\r\n    const StringNode = core_1.StringNode.bind(undefined, collections);\r\n    schemas.register('predicate', core_1.ObjectOrList(Reference('condition'), { choiceContext: 'condition' }));\r\n    schemas.register('condition', core_1.Mod(core_1.ObjectNode({\r\n        condition: StringNode({ validator: 'resource', params: { pool: 'loot_condition_type' } }),\r\n        [core_1.Switch]: [{ push: 'condition' }],\r\n        [core_1.Case]: Common_1.ConditionCases\r\n    }, { category: 'predicate', context: 'condition' }), {\r\n        default: () => ({\r\n            condition: 'minecraft:entity_properties',\r\n            entity: 'this'\r\n        })\r\n    }));\r\n}\r\nexports.initConditionSchemas = initConditionSchemas;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.initDimensionSchemas = void 0;\r\nconst core_1 = require(\"@mcschema/core\");\r\nconst Common_1 = require(\"./Common\");\r\nfunction initDimensionSchemas(schemas, collections) {\r\n    const Reference = core_1.Reference.bind(undefined, schemas);\r\n    const StringNode = core_1.StringNode.bind(undefined, collections);\r\n    const NoPreset = (node) => core_1.Mod(node, {\r\n        enabled: path => path.push('preset').get() === undefined\r\n    });\r\n    schemas.register('dimension', core_1.Mod(core_1.ObjectNode({\r\n        type: Common_1.DimensionTypePresets(Reference('dimension_type')),\r\n        generator: core_1.ObjectNode({\r\n            type: StringNode({ validator: 'resource', params: { pool: 'worldgen/chunk_generator' } }),\r\n            [core_1.Switch]: [{ push: 'type' }],\r\n            [core_1.Case]: {\r\n                'minecraft:noise': {\r\n                    seed: core_1.NumberNode({ integer: true }),\r\n                    settings: Common_1.NoiseSettingsPresets(Reference('noise_settings')),\r\n                    biome_source: core_1.ObjectNode({\r\n                        type: StringNode({ validator: 'resource', params: { pool: 'worldgen/biome_source' } }),\r\n                        [core_1.Switch]: [{ push: 'type' }],\r\n                        [core_1.Case]: {\r\n                            'minecraft:fixed': {\r\n                                biome: StringNode({ validator: 'resource', params: { pool: '$worldgen/biome' } })\r\n                            },\r\n                            'minecraft:multi_noise': {\r\n                                seed: core_1.NumberNode({ integer: true }),\r\n                                preset: core_1.Opt(StringNode({ enum: ['nether'] })),\r\n                                altitude_noise: NoPreset(Reference('generator_biome_noise')),\r\n                                temperature_noise: NoPreset(Reference('generator_biome_noise')),\r\n                                humidity_noise: NoPreset(Reference('generator_biome_noise')),\r\n                                weirdness_noise: NoPreset(Reference('generator_biome_noise')),\r\n                                biomes: NoPreset(core_1.Mod(core_1.ListNode(Reference('generator_biome')), {\r\n                                    default: () => [{\r\n                                            biome: 'minecraft:plains'\r\n                                        }]\r\n                                }))\r\n                            },\r\n                            'minecraft:checkerboard': {\r\n                                scale: core_1.Opt(core_1.NumberNode({ integer: true, min: 0, max: 62 })),\r\n                                biomes: core_1.ListNode(StringNode({ validator: 'resource', params: { pool: '$worldgen/biome' } }))\r\n                            },\r\n                            'minecraft:the_end': {\r\n                                seed: core_1.NumberNode({ integer: true })\r\n                            },\r\n                            'minecraft:vanilla_layered': {\r\n                                seed: core_1.NumberNode({ integer: true }),\r\n                                large_biomes: core_1.Opt(core_1.BooleanNode()),\r\n                                legacy_biome_init_layer: core_1.Opt(core_1.BooleanNode())\r\n                            }\r\n                        }\r\n                    }, { category: 'predicate', disableSwitchContext: true })\r\n                },\r\n                'minecraft:flat': {\r\n                    settings: core_1.ObjectNode({\r\n                        biome: core_1.Opt(StringNode({ validator: 'resource', params: { pool: '$worldgen/biome' } })),\r\n                        lakes: core_1.Opt(core_1.BooleanNode()),\r\n                        features: core_1.Opt(core_1.BooleanNode()),\r\n                        layers: core_1.ListNode(Reference('generator_layer')),\r\n                        structures: Reference('generator_structures')\r\n                    })\r\n                }\r\n            }\r\n        }, { disableSwitchContext: true })\r\n    }, { category: 'pool', context: 'dimension' }), {\r\n        default: () => {\r\n            const seed = Math.floor(Math.random() * (4294967296)) - 2147483648;\r\n            return {\r\n                type: 'minecraft:overworld',\r\n                generator: {\r\n                    type: 'minecraft:noise',\r\n                    seed,\r\n                    biome_source: {\r\n                        type: 'minecraft:fixed',\r\n                        seed,\r\n                        biome: 'minecraft:plains'\r\n                    },\r\n                    settings: 'minecraft:overworld'\r\n                }\r\n            };\r\n        }\r\n    }));\r\n    schemas.register('generator_biome', core_1.Mod(core_1.ObjectNode({\r\n        biome: StringNode({ validator: 'resource', params: { pool: '$worldgen/biome' } }),\r\n        parameters: core_1.ObjectNode({\r\n            altitude: core_1.NumberNode(),\r\n            temperature: core_1.NumberNode(),\r\n            humidity: core_1.NumberNode(),\r\n            weirdness: core_1.NumberNode(),\r\n            offset: core_1.NumberNode()\r\n        })\r\n    }, { context: 'generator_biome' }), {\r\n        default: () => ({\r\n            biome: 'minecraft:plains',\r\n            parameters: {\r\n                altitude: 0,\r\n                temperature: 0,\r\n                humidity: 0,\r\n                weirdness: 0,\r\n                offset: 0\r\n            }\r\n        })\r\n    }));\r\n    schemas.register('generator_biome_noise', core_1.Mod(core_1.ObjectNode({\r\n        firstOctave: core_1.NumberNode({ integer: true }),\r\n        amplitudes: core_1.ListNode(core_1.NumberNode())\r\n    }, { context: 'generator_biome_noise' }), {\r\n        default: () => ({\r\n            firstOctave: -7,\r\n            amplitudes: [1, 1]\r\n        })\r\n    }));\r\n}\r\nexports.initDimensionSchemas = initDimensionSchemas;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.initDimensionTypeSchemas = void 0;\r\nconst core_1 = require(\"@mcschema/core\");\r\nconst Common_1 = require(\"./Common\");\r\nfunction initDimensionTypeSchemas(schemas, collections) {\r\n    const StringNode = core_1.StringNode.bind(undefined, collections);\r\n    schemas.register('dimension_type', core_1.Mod(core_1.ObjectNode({\r\n        name: core_1.Mod(StringNode({ validator: 'resource', params: { pool: '$dimension_type', isDefinition: true } }), {\r\n            enabled: (path) => path.getArray().length > 0\r\n        }),\r\n        ultrawarm: core_1.BooleanNode(),\r\n        natural: core_1.BooleanNode(),\r\n        piglin_safe: core_1.BooleanNode(),\r\n        respawn_anchor_works: core_1.BooleanNode(),\r\n        bed_works: core_1.BooleanNode(),\r\n        has_raids: core_1.BooleanNode(),\r\n        has_skylight: core_1.BooleanNode(),\r\n        has_ceiling: core_1.BooleanNode(),\r\n        coordinate_scale: core_1.NumberNode({ min: 0.00001, max: 30000000 }),\r\n        ambient_light: core_1.NumberNode(),\r\n        fixed_time: core_1.Opt(core_1.NumberNode({ integer: true })),\r\n        logical_height: core_1.NumberNode({ integer: true, min: 0, max: 256 }),\r\n        effects: core_1.Opt(StringNode({ enum: ['minecraft:overworld', 'minecraft:the_nether', 'minecraft:the_end'] })),\r\n        infiniburn: StringNode({ validator: 'resource', params: { pool: '$tag/block' } })\r\n    }, { context: 'dimension_type' }), {\r\n        default: () => Common_1.DefaultDimensionType\r\n    }));\r\n}\r\nexports.initDimensionTypeSchemas = initDimensionTypeSchemas;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.LootFunctions = exports.LootConditions = exports.LootCopySources = exports.LootEntitySources = exports.LootTableTypes = void 0;\r\nexports.LootTableTypes = new Map([\r\n    ['minecraft:advancement_entity', { requires: [7 /* Origin */, 8 /* ThisEntity */], allows: [] }],\r\n    ['minecraft:advancement_reward', { requires: [7 /* Origin */, 8 /* ThisEntity */], allows: [] }],\r\n    ['minecraft:barter', { requires: [8 /* ThisEntity */], allows: [] }],\r\n    ['minecraft:block', { requires: [1 /* BlockState */, 7 /* Origin */, 9 /* Tool */], allows: [0 /* BlockEntity */, 4 /* ExplosionRadius */, 8 /* ThisEntity */] }],\r\n    ['minecraft:chest', { requires: [7 /* Origin */], allows: [8 /* ThisEntity */] }],\r\n    ['minecraft:command', { requires: [7 /* Origin */], allows: [8 /* ThisEntity */] }],\r\n    ['minecraft:empty', { requires: [], allows: [] }],\r\n    ['minecraft:entity', { requires: [2 /* DamageSource */, 7 /* Origin */, 8 /* ThisEntity */], allows: [3 /* DirectKillerEntity */, 5 /* KillerEntity */, 6 /* LastDamagePlayer */] }],\r\n    ['minecraft:fishing', { requires: [7 /* Origin */, 9 /* Tool */], allows: [8 /* ThisEntity */] }],\r\n    ['minecraft:generic', { requires: [2 /* DamageSource */, 0 /* BlockEntity */, 1 /* BlockState */, 3 /* DirectKillerEntity */, 4 /* ExplosionRadius */, 5 /* KillerEntity */, 6 /* LastDamagePlayer */, 7 /* Origin */, 8 /* ThisEntity */, 9 /* Tool */], allows: [] }],\r\n    ['minecraft:gift', { requires: [7 /* Origin */, 8 /* ThisEntity */], allows: [] }],\r\n    ['minecraft:selector', { requires: [7 /* Origin */], allows: [8 /* ThisEntity */] }]\r\n]);\r\n/**\r\n * A map from loot entity sources to an array of their required context.\r\n */\r\nexports.LootEntitySources = new Map([\r\n    ['direct_killer', [3 /* DirectKillerEntity */]],\r\n    ['killer', [5 /* KillerEntity */]],\r\n    ['killer_player', [5 /* KillerEntity */]],\r\n    ['this', [8 /* ThisEntity */]]\r\n]);\r\n/**\r\n * A map from loot copy sources to an array of their required context.\r\n */\r\nexports.LootCopySources = new Map([\r\n    ['block_entity', [0 /* BlockEntity */]],\r\n    ['killer', [5 /* KillerEntity */]],\r\n    ['killer_player', [5 /* KillerEntity */]],\r\n    ['this', [8 /* ThisEntity */]]\r\n]);\r\n/**\r\n * A map from loot condition IDs to an array of their required context.\r\n */\r\nexports.LootConditions = new Map([\r\n    ['minecraft:alternative', []],\r\n    ['minecraft:block_state_property', [1 /* BlockState */]],\r\n    ['minecraft:damage_source_properties', [2 /* DamageSource */]],\r\n    ['minecraft:entity_properties', [7 /* Origin */]],\r\n    ['minecraft:entity_scores', []],\r\n    ['minecraft:inverted', []],\r\n    ['minecraft:killed_by_player', [6 /* LastDamagePlayer */]],\r\n    ['minecraft:location_check', []],\r\n    ['minecraft:match_tool', [9 /* Tool */]],\r\n    ['minecraft:random_chance', []],\r\n    ['minecraft:random_chance_with_looting', [5 /* KillerEntity */]],\r\n    ['minecraft:reference', []],\r\n    ['minecraft:survives_explosion', [4 /* ExplosionRadius */]],\r\n    ['minecraft:table_bonus', [9 /* Tool */]],\r\n    ['minecraft:time_check', []],\r\n    ['minecraft:weather_check', []]\r\n]);\r\n/**\r\n * A map from loot function IDs to an array of their required context.\r\n */\r\nexports.LootFunctions = new Map([\r\n    ['minecraft:apply_bonus', [9 /* Tool */]],\r\n    ['minecraft:copy_name', []],\r\n    ['minecraft:copy_nbt', []],\r\n    ['minecraft:copy_state', [1 /* BlockState */]],\r\n    ['minecraft:enchant_randomly', []],\r\n    ['minecraft:enchant_with_levels', []],\r\n    ['minecraft:exploration_map', [7 /* Origin */]],\r\n    ['minecraft:explosion_decay', []],\r\n    ['minecraft:fill_player_head', []],\r\n    ['minecraft:furnace_smelt', []],\r\n    ['minecraft:limit_count', []],\r\n    ['minecraft:looting_enchant', [5 /* KillerEntity */]],\r\n    ['minecraft:set_attributes', []],\r\n    ['minecraft:set_contents', []],\r\n    ['minecraft:set_count', []],\r\n    ['minecraft:set_damage', []],\r\n    ['minecraft:set_loot_table', []],\r\n    ['minecraft:set_lore', []],\r\n    ['minecraft:set_name', []],\r\n    ['minecraft:set_nbt', []],\r\n    ['minecraft:set_stew_effect', []]\r\n]);\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.initLootTableSchemas = void 0;\r\nconst core_1 = require(\"@mcschema/core\");\r\nconst LootContext_1 = require(\"../LootContext\");\r\nconst Common_1 = require(\"./Common\");\r\nfunction initLootTableSchemas(schemas, collections) {\r\n    const Reference = core_1.Reference.bind(undefined, schemas);\r\n    const StringNode = core_1.StringNode.bind(undefined, collections);\r\n    const conditions = {\r\n        conditions: core_1.Opt(core_1.ListNode(Reference('loot_condition')))\r\n    };\r\n    const functionsAndConditions = {\r\n        functions: core_1.Opt(core_1.ListNode(Reference('loot_function'))),\r\n        ...conditions\r\n    };\r\n    function compileSwitchNode(contextMap, collectionID, getNode) {\r\n        const cases = [];\r\n        const getAvailableOptions = (providedContext) => collections\r\n            .get(collectionID)\r\n            .filter(t => {\r\n            var _a;\r\n            const requiredContext = (_a = contextMap.get(t)) !== null && _a !== void 0 ? _a : [];\r\n            return requiredContext.every(c => providedContext.includes(c));\r\n        });\r\n        for (const [tableType, { allows, requires }] of LootContext_1.LootTableTypes) {\r\n            const providedContext = [...allows, ...requires];\r\n            cases.push({\r\n                match: path => path.getModel().get(new core_1.Path(['type'])) === tableType,\r\n                node: getNode(getAvailableOptions(providedContext))\r\n            });\r\n        }\r\n        cases.push({ match: _ => true, node: getNode(collectionID) });\r\n        return core_1.SwitchNode(cases);\r\n    }\r\n    const conditionSwtichNode = compileSwitchNode(LootContext_1.LootConditions, 'loot_condition_type', type => StringNode({ validator: 'resource', params: { pool: type instanceof Array ? type : `loot_condition_type` } }));\r\n    const functionSwtichNode = compileSwitchNode(LootContext_1.LootFunctions, 'loot_function_type', type => StringNode({ validator: 'resource', params: { pool: type instanceof Array ? type : `loot_function_type` } }));\r\n    const entitySourceSwtichNode = compileSwitchNode(LootContext_1.LootEntitySources, 'entity_source', type => StringNode({ enum: type }));\r\n    const copySourceSwtichNode = compileSwitchNode(LootContext_1.LootCopySources, 'copy_source', type => StringNode({ enum: type }));\r\n    schemas.register('loot_table', core_1.Mod(core_1.ObjectNode({\r\n        type: core_1.Opt(StringNode({ validator: \"resource\", params: { pool: collections.get('loot_context_type') } })),\r\n        pools: core_1.Opt(core_1.ListNode(core_1.Mod(core_1.ObjectNode({\r\n            rolls: Common_1.Range({ allowBinomial: true, integer: true }),\r\n            bonus_rolls: core_1.Opt(Common_1.Range({ integer: true })),\r\n            entries: core_1.ListNode(Reference('loot_entry')),\r\n            ...functionsAndConditions\r\n        }, { category: 'pool', context: 'loot_pool' }), {\r\n            default: () => ({\r\n                rolls: 1,\r\n                entries: [{\r\n                        type: 'minecraft:item',\r\n                        name: 'minecraft:stone'\r\n                    }]\r\n            })\r\n        }))),\r\n        functions: core_1.Opt(core_1.ListNode(Reference('loot_function')))\r\n    }, { context: 'loot_table' }), {\r\n        default: () => ({\r\n            pools: [{\r\n                    rolls: 1,\r\n                    entries: [{\r\n                            type: 'minecraft:item',\r\n                            name: 'minecraft:stone'\r\n                        }]\r\n                }]\r\n        })\r\n    }));\r\n    const weightMod = {\r\n        enabled: path => {\r\n            var _a;\r\n            return ((_a = path.pop().get()) === null || _a === void 0 ? void 0 : _a.length) > 1\r\n                && !['minecraft:alternatives', 'minecraft:group', 'minecraft:sequence'].includes(path.push('type').get());\r\n        }\r\n    };\r\n    schemas.register('loot_entry', core_1.Mod(core_1.ObjectNode({\r\n        type: StringNode({ validator: 'resource', params: { pool: 'loot_pool_entry_type' } }),\r\n        weight: core_1.Opt(core_1.Mod(core_1.NumberNode({ integer: true, min: 1 }), weightMod)),\r\n        quality: core_1.Opt(core_1.Mod(core_1.NumberNode({ integer: true }), weightMod)),\r\n        [core_1.Switch]: [{ push: 'type' }],\r\n        [core_1.Case]: {\r\n            'minecraft:alternatives': {\r\n                children: core_1.ListNode(Reference('loot_entry')),\r\n                ...functionsAndConditions\r\n            },\r\n            'minecraft:dynamic': {\r\n                name: StringNode(),\r\n                ...functionsAndConditions\r\n            },\r\n            'minecraft:group': {\r\n                children: core_1.ListNode(Reference('loot_entry')),\r\n                ...functionsAndConditions\r\n            },\r\n            'minecraft:item': {\r\n                name: StringNode({ validator: 'resource', params: { pool: 'item' } }),\r\n                ...functionsAndConditions\r\n            },\r\n            'minecraft:loot_table': {\r\n                name: StringNode({ validator: 'resource', params: { pool: '$loot_table' } }),\r\n                ...functionsAndConditions\r\n            },\r\n            'minecraft:sequence': {\r\n                children: core_1.ListNode(Reference('loot_entry')),\r\n                ...functionsAndConditions\r\n            },\r\n            'minecraft:tag': {\r\n                name: StringNode({ validator: 'resource', params: { pool: '$tag/item' } }),\r\n                expand: core_1.Opt(core_1.BooleanNode()),\r\n                ...functionsAndConditions\r\n            }\r\n        }\r\n    }, { context: 'loot_entry' }), {\r\n        default: () => ({\r\n            type: 'minecraft:item',\r\n            name: 'minecraft:stone'\r\n        })\r\n    }));\r\n    schemas.register('loot_function', core_1.Mod(core_1.ObjectNode({\r\n        function: functionSwtichNode,\r\n        [core_1.Switch]: [{ push: 'function' }],\r\n        [core_1.Case]: (() => {\r\n            const cases = {\r\n                'minecraft:apply_bonus': {\r\n                    enchantment: StringNode({ validator: 'resource', params: { pool: 'enchantment' } }),\r\n                    formula: StringNode({ validator: 'resource', params: { pool: collections.get('loot_table_apply_bonus_formula') } }),\r\n                    parameters: core_1.Mod(core_1.ObjectNode({\r\n                        bonusMultiplier: core_1.Mod(core_1.NumberNode(), {\r\n                            enabled: path => path.pop().push('formula').get() === 'minecraft:uniform_bonus_count'\r\n                        }),\r\n                        extra: core_1.Mod(core_1.NumberNode(), {\r\n                            enabled: path => path.pop().push('formula').get() === 'minecraft:binomial_with_bonus_count'\r\n                        }),\r\n                        probability: core_1.Mod(core_1.NumberNode(), {\r\n                            enabled: path => path.pop().push('formula').get() === 'minecraft:binomial_with_bonus_count'\r\n                        })\r\n                    }), {\r\n                        enabled: path => path.push('formula').get() !== 'minecraft:ore_drops'\r\n                    })\r\n                },\r\n                'minecraft:copy_name': {\r\n                    source: copySourceSwtichNode\r\n                },\r\n                'minecraft:copy_nbt': {\r\n                    source: copySourceSwtichNode,\r\n                    ops: core_1.ListNode(core_1.ObjectNode({\r\n                        source: StringNode({ validator: 'nbt_path', params: { category: { getter: 'copy_source', path: ['pop', 'pop', 'pop', { push: 'source' }] } } }),\r\n                        target: StringNode({ validator: 'nbt_path', params: { category: 'minecraft:item' } }),\r\n                        op: StringNode({ enum: ['replace', 'append', 'merge'] })\r\n                    }, { context: 'nbt_operation' }))\r\n                },\r\n                'minecraft:copy_state': {\r\n                    block: StringNode({ validator: 'resource', params: { pool: 'block' } }),\r\n                    properties: core_1.ListNode(StringNode({ validator: 'block_state_key', params: { id: ['pop', 'pop', { push: 'block' }] } }))\r\n                },\r\n                'minecraft:enchant_randomly': {\r\n                    enchantments: core_1.Opt(core_1.ListNode(StringNode({ validator: 'resource', params: { pool: 'enchantment' } })))\r\n                },\r\n                'minecraft:enchant_with_levels': {\r\n                    levels: Common_1.Range({ allowBinomial: true }),\r\n                    treasure: core_1.Opt(core_1.BooleanNode())\r\n                },\r\n                'minecraft:exploration_map': {\r\n                    destination: core_1.Opt(StringNode({ enum: 'map_feature' })),\r\n                    decoration: core_1.Opt(StringNode({ enum: 'map_decoration' })),\r\n                    zoom: core_1.Opt(core_1.NumberNode({ integer: true })),\r\n                    search_radius: core_1.Opt(core_1.NumberNode({ integer: true })),\r\n                    skip_existing_chunks: core_1.Opt(core_1.BooleanNode())\r\n                },\r\n                'minecraft:fill_player_head': {\r\n                    entity: entitySourceSwtichNode\r\n                },\r\n                'minecraft:limit_count': {\r\n                    limit: Common_1.Range({ bounds: true })\r\n                },\r\n                'minecraft:looting_enchant': {\r\n                    count: Common_1.Range({ bounds: true }),\r\n                    limit: core_1.Opt(core_1.NumberNode({ integer: true }))\r\n                },\r\n                'minecraft:set_attributes': {\r\n                    modifiers: core_1.ListNode(Reference('attribute_modifier'))\r\n                },\r\n                'minecraft:set_contents': {\r\n                    entries: core_1.ListNode(Reference('loot_entry'))\r\n                },\r\n                'minecraft:set_count': {\r\n                    count: Common_1.Range({ allowBinomial: true })\r\n                },\r\n                'minecraft:set_damage': {\r\n                    damage: Common_1.Range({ forceRange: true })\r\n                },\r\n                'minecraft:set_loot_table': {\r\n                    name: StringNode({ validator: 'resource', params: { pool: '$loot_table' } }),\r\n                    seed: core_1.Opt(core_1.NumberNode({ integer: true }))\r\n                },\r\n                'minecraft:set_lore': {\r\n                    entity: core_1.Opt(entitySourceSwtichNode),\r\n                    lore: core_1.ListNode(Reference('text_component')),\r\n                    replace: core_1.Opt(core_1.BooleanNode())\r\n                },\r\n                'minecraft:set_name': {\r\n                    entity: core_1.Opt(entitySourceSwtichNode),\r\n                    name: core_1.Opt(Reference('text_component'))\r\n                },\r\n                'minecraft:set_nbt': {\r\n                    tag: StringNode({ validator: 'nbt', params: { registry: { category: 'minecraft:item' } } })\r\n                },\r\n                'minecraft:set_stew_effect': {\r\n                    effects: core_1.Opt(core_1.ListNode(core_1.ObjectNode({\r\n                        type: StringNode({ validator: 'resource', params: { pool: 'mob_effect' } }),\r\n                        duration: Common_1.Range()\r\n                    })))\r\n                }\r\n            };\r\n            const res = {};\r\n            collections.get('loot_function_type').forEach(f => {\r\n                res[f] = { ...cases[f], ...conditions };\r\n            });\r\n            return res;\r\n        })()\r\n    }, { category: 'function', context: 'function' }), {\r\n        default: () => ({\r\n            function: 'minecraft:set_count',\r\n            count: 1\r\n        })\r\n    }));\r\n    schemas.register('loot_condition', core_1.Mod(core_1.ObjectNode({\r\n        condition: conditionSwtichNode,\r\n        [core_1.Switch]: [{ push: 'condition' }],\r\n        [core_1.Case]: {\r\n            ...Common_1.ConditionCases,\r\n            'minecraft:entity_properties': {\r\n                entity: entitySourceSwtichNode,\r\n                predicate: Reference('entity_predicate')\r\n            },\r\n            'minecraft:entity_scores': {\r\n                entity: entitySourceSwtichNode,\r\n                scores: core_1.MapNode(StringNode({ validator: 'objective' }), Common_1.Range({ bounds: true }))\r\n            }\r\n        }\r\n    }, { category: 'predicate', context: 'condition' }), {\r\n        default: () => ({\r\n            condition: 'minecraft:random_chance',\r\n            chance: 0.5\r\n        })\r\n    }));\r\n    schemas.register('attribute_modifier', core_1.Mod(core_1.ObjectNode({\r\n        attribute: StringNode({ validator: 'resource', params: { pool: 'attribute' } }),\r\n        name: StringNode(),\r\n        amount: Common_1.Range({ bounds: true }),\r\n        operation: StringNode({ enum: ['addition', 'multiply_base', 'multiply_total'] }),\r\n        slot: core_1.StringOrList(StringNode({ enum: 'slot' }))\r\n    }, { context: 'attribute_modifier' }), {\r\n        default: () => ({\r\n            attribute: 'minecraft:generic.max_health',\r\n            name: '',\r\n            amount: 1,\r\n            operation: 'addition',\r\n            slot: 'mainhand'\r\n        })\r\n    }));\r\n}\r\nexports.initLootTableSchemas = initLootTableSchemas;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.initPackMcmetaSchemas = void 0;\r\nconst core_1 = require(\"@mcschema/core\");\r\nfunction initPackMcmetaSchemas(schemas, _) {\r\n    const getSimpleString = (jsonText) => { var _a, _b; return jsonText instanceof Array ? getSimpleString(jsonText[0]) : (_b = (_a = jsonText === null || jsonText === void 0 ? void 0 : jsonText.text) !== null && _a !== void 0 ? _a : jsonText === null || jsonText === void 0 ? void 0 : jsonText.toString()) !== null && _b !== void 0 ? _b : ''; };\r\n    schemas.register('pack_mcmeta', core_1.Mod(core_1.ObjectNode({\r\n        pack: core_1.Mod(core_1.ObjectNode({\r\n            pack_format: core_1.Mod(core_1.NumberNode({ integer: true, min: 6, max: 6 }), { default: () => 6 }),\r\n            description: core_1.Reference(schemas, 'text_component')\r\n        }), {\r\n            default: () => ({\r\n                pack_format: 6,\r\n                description: ''\r\n            })\r\n        })\r\n    }), {\r\n        default: () => ({\r\n            pack: {\r\n                pack_format: 6,\r\n                description: ''\r\n            }\r\n        })\r\n    }));\r\n}\r\nexports.initPackMcmetaSchemas = initPackMcmetaSchemas;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.initPredicatesSchemas = void 0;\r\nconst core_1 = require(\"@mcschema/core\");\r\nconst Common_1 = require(\"./Common\");\r\nfunction initPredicatesSchemas(schemas, collections) {\r\n    const Reference = core_1.Reference.bind(undefined, schemas);\r\n    const StringNode = core_1.StringNode.bind(undefined, collections);\r\n    const StateChoice = core_1.ChoiceNode([\r\n        {\r\n            type: 'string',\r\n            node: StringNode(),\r\n            change: v => (typeof v === 'boolean' || typeof v === 'number') ? v.toString() : ''\r\n        },\r\n        {\r\n            type: 'number',\r\n            node: core_1.NumberNode(),\r\n            change: v => (typeof v === 'string') ? parseInt(v) : 0\r\n        },\r\n        {\r\n            type: 'object',\r\n            node: core_1.ObjectNode({\r\n                min: core_1.Opt(core_1.NumberNode({ integer: true })),\r\n                max: core_1.Opt(core_1.NumberNode({ integer: true }))\r\n            }),\r\n            change: v => (typeof v === 'number') ? ({ min: v, max: v }) : ({})\r\n        },\r\n        {\r\n            type: 'boolean',\r\n            node: core_1.BooleanNode(),\r\n            change: v => v === 'true' || v === 1\r\n        }\r\n    ]);\r\n    schemas.register('item_predicate', core_1.ObjectNode({\r\n        item: core_1.Opt(StringNode({ validator: 'resource', params: { pool: 'item' } })),\r\n        tag: core_1.Opt(StringNode({ validator: 'resource', params: { pool: '$tag/item' } })),\r\n        count: core_1.Opt(Common_1.Range()),\r\n        durability: core_1.Opt(Common_1.Range()),\r\n        potion: core_1.Opt(StringNode({ validator: 'resource', params: { pool: 'potion' } })),\r\n        nbt: core_1.Opt(StringNode({ validator: 'nbt', params: { registry: { category: 'minecraft:item', id: ['pop', { push: 'item' }] } } })),\r\n        enchantments: core_1.Opt(core_1.ListNode(Reference('enchantment_predicate')))\r\n    }, { context: 'item' }));\r\n    schemas.register('enchantment_predicate', core_1.ObjectNode({\r\n        enchantment: core_1.Opt(StringNode({ validator: 'resource', params: { pool: 'enchantment' } })),\r\n        levels: core_1.Opt(Common_1.Range())\r\n    }, { context: 'enchantment' }));\r\n    schemas.register('block_predicate', core_1.ObjectNode({\r\n        block: core_1.Opt(StringNode({ validator: 'resource', params: { pool: 'block' } })),\r\n        tag: core_1.Opt(StringNode({ validator: 'resource', params: { pool: '$tag/block' } })),\r\n        nbt: core_1.Opt(StringNode({ validator: 'nbt', params: { registry: { category: 'minecraft:block', id: ['pop', { push: 'block' }] } } })),\r\n        state: core_1.Opt(core_1.MapNode(StringNode(), StateChoice, { validation: { validator: 'block_state_map', params: { id: ['pop', { push: 'block' }] } } }))\r\n    }, { context: 'block' }));\r\n    schemas.register('fluid_predicate', core_1.ObjectNode({\r\n        fluid: core_1.Opt(StringNode({ validator: 'resource', params: { pool: 'fluid' } })),\r\n        tag: core_1.Opt(StringNode({ validator: 'resource', params: { pool: '$tag/fluid' } })),\r\n        state: core_1.Opt(core_1.MapNode(StringNode(), StateChoice))\r\n    }, { context: 'fluid' }));\r\n    schemas.register('location_predicate', core_1.ObjectNode({\r\n        position: core_1.Opt(core_1.ObjectNode({\r\n            x: core_1.Opt(Common_1.Range()),\r\n            y: core_1.Opt(Common_1.Range()),\r\n            z: core_1.Opt(Common_1.Range())\r\n        })),\r\n        biome: core_1.Opt(StringNode({ validator: 'resource', params: { pool: '$worldgen/biome' } })),\r\n        feature: core_1.Opt(StringNode({ enum: collections.get('worldgen/structure_feature').map(v => v.slice(10)) })),\r\n        dimension: core_1.Opt(StringNode({ validator: 'resource', params: { pool: '$dimension' } })),\r\n        light: core_1.Opt(core_1.ObjectNode({\r\n            light: core_1.Opt(Common_1.Range({ integer: true, min: 0, max: 15 }))\r\n        })),\r\n        smokey: core_1.Opt(core_1.BooleanNode()),\r\n        block: core_1.Opt(Reference('block_predicate')),\r\n        fluid: core_1.Opt(Reference('fluid_predicate'))\r\n    }, { context: 'location' }));\r\n    schemas.register('statistic_predicate', core_1.ObjectNode({\r\n        type: StringNode({ validator: 'resource', params: { pool: 'stat_type' } }),\r\n        stat: StringNode(),\r\n        value: Common_1.Range(),\r\n        [core_1.Switch]: [{ push: 'type' }],\r\n        [core_1.Case]: {\r\n            'minecraft:mined': {\r\n                stat: StringNode({ validator: 'resource', params: { pool: 'block' } })\r\n            },\r\n            'minecraft:crafted': {\r\n                stat: StringNode({ validator: 'resource', params: { pool: 'item' } })\r\n            },\r\n            'minecraft:used': {\r\n                stat: StringNode({ validator: 'resource', params: { pool: 'item' } })\r\n            },\r\n            'minecraft:broken': {\r\n                stat: StringNode({ validator: 'resource', params: { pool: 'item' } })\r\n            },\r\n            'minecraft:picked_up': {\r\n                stat: StringNode({ validator: 'resource', params: { pool: 'item' } })\r\n            },\r\n            'minecraft:dropped': {\r\n                stat: StringNode({ validator: 'resource', params: { pool: 'item' } })\r\n            },\r\n            'minecraft:killed': {\r\n                stat: StringNode({ validator: 'resource', params: { pool: 'entity_type' } })\r\n            },\r\n            'minecraft:killed_by': {\r\n                stat: StringNode({ validator: 'resource', params: { pool: 'entity_type' } })\r\n            },\r\n            'minecraft:custom': {\r\n                stat: StringNode({ validator: 'resource', params: { pool: 'custom_stat' } })\r\n            }\r\n        }\r\n    }));\r\n    schemas.register('player_predicate', core_1.ObjectNode({\r\n        gamemode: core_1.Opt(StringNode({ enum: 'gamemode' })),\r\n        level: core_1.Opt(Common_1.Range()),\r\n        advancements: core_1.Opt(core_1.MapNode(StringNode({ validator: 'resource', params: { pool: '$advancement' } }), core_1.ChoiceNode([\r\n            { type: 'boolean', node: core_1.BooleanNode(), change: _ => true },\r\n            {\r\n                type: 'object', node: core_1.MapNode(StringNode(), core_1.BooleanNode())\r\n            }\r\n        ]))),\r\n        recipes: core_1.Opt(core_1.MapNode(StringNode({ validator: 'resource', params: { pool: '$recipe' } }), core_1.BooleanNode())),\r\n        stats: core_1.Opt(core_1.ListNode(Reference('statistic_predicate')))\r\n    }, { context: 'player' }));\r\n    schemas.register('status_effect_predicate', core_1.ObjectNode({\r\n        amplifier: core_1.Opt(Common_1.Range()),\r\n        duration: core_1.Opt(Common_1.Range()),\r\n        ambient: core_1.Opt(core_1.BooleanNode()),\r\n        visible: core_1.Opt(core_1.BooleanNode())\r\n    }, { context: 'status_effect' }));\r\n    schemas.register('distance_predicate', core_1.ObjectNode({\r\n        x: core_1.Opt(Common_1.Range()),\r\n        y: core_1.Opt(Common_1.Range()),\r\n        z: core_1.Opt(Common_1.Range()),\r\n        absolute: core_1.Opt(Common_1.Range()),\r\n        horizontal: core_1.Opt(Common_1.Range())\r\n    }, { context: 'distance' }));\r\n    schemas.register('entity_predicate', core_1.ObjectNode({\r\n        type: core_1.Opt(StringNode({ validator: 'resource', params: { pool: 'entity_type', allowTag: true } })),\r\n        nbt: core_1.Opt(StringNode({ validator: 'nbt', params: { registry: { category: 'minecraft:entity', id: ['pop', { push: 'type' }] } } })),\r\n        team: core_1.Opt(StringNode({ validator: 'team' })),\r\n        location: core_1.Opt(Reference('location_predicate')),\r\n        distance: core_1.Opt(Reference('distance_predicate')),\r\n        flags: core_1.Opt(core_1.ObjectNode({\r\n            is_on_fire: core_1.Opt(core_1.BooleanNode()),\r\n            is_sneaking: core_1.Opt(core_1.BooleanNode()),\r\n            is_sprinting: core_1.Opt(core_1.BooleanNode()),\r\n            is_swimming: core_1.Opt(core_1.BooleanNode()),\r\n            is_baby: core_1.Opt(core_1.BooleanNode())\r\n        })),\r\n        equipment: core_1.Opt(core_1.MapNode(StringNode({ enum: 'slot' }), Reference('item_predicate'))),\r\n        vehicle: core_1.Opt(Reference('entity_predicate')),\r\n        targeted_entity: core_1.Opt(Reference('entity_predicate')),\r\n        player: core_1.Opt(Reference('player_predicate')),\r\n        fishing_hook: core_1.Opt(core_1.ObjectNode({\r\n            in_open_water: core_1.Opt(core_1.BooleanNode())\r\n        })),\r\n        effects: core_1.Opt(core_1.MapNode(StringNode({ validator: 'resource', params: { pool: 'mob_effect' } }), Reference('status_effect_predicate')))\r\n    }, { context: 'entity' }));\r\n    schemas.register('damage_source_predicate', core_1.ObjectNode({\r\n        is_explosion: core_1.Opt(core_1.BooleanNode()),\r\n        is_fire: core_1.Opt(core_1.BooleanNode()),\r\n        is_magic: core_1.Opt(core_1.BooleanNode()),\r\n        is_projectile: core_1.Opt(core_1.BooleanNode()),\r\n        is_lightning: core_1.Opt(core_1.BooleanNode()),\r\n        bypasses_armor: core_1.Opt(core_1.BooleanNode()),\r\n        bypasses_invulnerability: core_1.Opt(core_1.BooleanNode()),\r\n        bypasses_magic: core_1.Opt(core_1.BooleanNode()),\r\n        source_entity: core_1.Opt(Reference('entity_predicate')),\r\n        direct_entity: core_1.Opt(Reference('entity_predicate'))\r\n    }, { context: 'damage_source' }));\r\n    schemas.register('damage_predicate', core_1.ObjectNode({\r\n        dealt: core_1.Opt(Common_1.Range()),\r\n        taken: core_1.Opt(Common_1.Range()),\r\n        blocked: core_1.Opt(core_1.BooleanNode()),\r\n        source_entity: core_1.Opt(Reference('entity_predicate')),\r\n        type: core_1.Opt(Reference('damage_source_predicate'))\r\n    }, { context: 'damage' }));\r\n}\r\nexports.initPredicatesSchemas = initPredicatesSchemas;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.initRecipeSchemas = void 0;\r\nconst core_1 = require(\"@mcschema/core\");\r\nfunction initRecipeSchemas(schemas, collections) {\r\n    const Reference = core_1.Reference.bind(undefined, schemas);\r\n    const StringNode = core_1.StringNode.bind(undefined, collections);\r\n    schemas.register('recipe', core_1.Mod(core_1.ObjectNode({\r\n        type: StringNode({ validator: 'resource', params: { pool: 'recipe_serializer' } }),\r\n        [core_1.Switch]: [{ push: 'type' }],\r\n        [core_1.Case]: {\r\n            'minecraft:crafting_shaped': {\r\n                group: core_1.Opt(StringNode({ enum: 'recipe_group', additional: true })),\r\n                pattern: core_1.ListNode(StringNode()),\r\n                key: core_1.MapNode(StringNode(), // TODO: add validation\r\n                Reference('recipe_ingredient')),\r\n                result: Reference('recipe_result')\r\n            },\r\n            'minecraft:crafting_shapeless': {\r\n                group: core_1.Opt(StringNode()),\r\n                ingredients: core_1.ListNode(Reference('recipe_ingredient')),\r\n                result: Reference('recipe_result')\r\n            },\r\n            'minecraft:smelting': {\r\n                group: core_1.Opt(StringNode()),\r\n                ingredient: Reference('recipe_ingredient'),\r\n                result: StringNode({ validator: 'resource', params: { pool: 'item' } }),\r\n                experience: core_1.Opt(core_1.NumberNode()),\r\n                cookingtime: core_1.Opt(core_1.Mod(core_1.NumberNode({ integer: true }), { default: () => 200 }))\r\n            },\r\n            'minecraft:blasting': {\r\n                group: core_1.Opt(StringNode()),\r\n                ingredient: Reference('recipe_ingredient'),\r\n                result: StringNode({ validator: 'resource', params: { pool: 'item' } }),\r\n                experience: core_1.Opt(core_1.NumberNode()),\r\n                cookingtime: core_1.Opt(core_1.Mod(core_1.NumberNode({ integer: true }), { default: () => 100 }))\r\n            },\r\n            'minecraft:smoking': {\r\n                group: core_1.Opt(StringNode()),\r\n                ingredient: Reference('recipe_ingredient'),\r\n                result: StringNode({ validator: 'resource', params: { pool: 'item' } }),\r\n                experience: core_1.Opt(core_1.NumberNode()),\r\n                cookingtime: core_1.Opt(core_1.Mod(core_1.NumberNode({ integer: true }), { default: () => 100 }))\r\n            },\r\n            'minecraft:campfire_cooking': {\r\n                group: core_1.Opt(StringNode()),\r\n                ingredient: Reference('recipe_ingredient'),\r\n                result: StringNode({ validator: 'resource', params: { pool: 'item' } }),\r\n                experience: core_1.Opt(core_1.NumberNode()),\r\n                cookingtime: core_1.Opt(core_1.Mod(core_1.NumberNode({ integer: true }), { default: () => 100 }))\r\n            },\r\n            'minecraft:stonecutting': {\r\n                group: core_1.Opt(StringNode()),\r\n                ingredient: Reference('recipe_ingredient'),\r\n                result: StringNode({ validator: 'resource', params: { pool: 'item' } }),\r\n                count: core_1.NumberNode({ integer: true })\r\n            },\r\n            'minecraft:smithing': {\r\n                group: core_1.Opt(StringNode()),\r\n                base: Reference('recipe_ingredient_object'),\r\n                addition: Reference('recipe_ingredient_object'),\r\n                result: Reference('recipe_result')\r\n            }\r\n        }\r\n    }, { context: 'recipe' }), {\r\n        default: () => ({\r\n            type: 'minecraft:crafting_shaped'\r\n        })\r\n    }));\r\n    schemas.register('recipe_ingredient', core_1.Mod(core_1.ChoiceNode([\r\n        {\r\n            type: 'object',\r\n            node: Reference('recipe_ingredient_object'),\r\n            change: v => v[0]\r\n        },\r\n        {\r\n            type: 'list',\r\n            node: core_1.ListNode(Reference('recipe_ingredient_object')),\r\n            change: v => [v]\r\n        }\r\n    ]), {\r\n        default: () => ({\r\n            item: 'minecraft:stone'\r\n        })\r\n    }));\r\n    schemas.register('recipe_ingredient_object', core_1.Mod(core_1.ObjectNode({\r\n        item: core_1.Opt(StringNode({ validator: 'resource', params: { pool: 'item' } })),\r\n        tag: core_1.Opt(StringNode({ validator: 'resource', params: { pool: '$tag/item' } }))\r\n    }), {\r\n        default: () => ({\r\n            item: 'minecraft:stone'\r\n        })\r\n    }));\r\n    schemas.register('recipe_result', core_1.Mod(core_1.ObjectNode({\r\n        item: StringNode({ validator: 'resource', params: { pool: 'item' } }),\r\n        count: core_1.Opt(core_1.Mod(core_1.NumberNode({ integer: true }), { default: () => 1 }))\r\n    }), {\r\n        default: () => ({\r\n            item: 'minecraft:stone'\r\n        })\r\n    }));\r\n}\r\nexports.initRecipeSchemas = initRecipeSchemas;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.initTagsSchemas = void 0;\r\nconst core_1 = require(\"@mcschema/core\");\r\nfunction initTagsSchemas(schemas, collections) {\r\n    const StringNode = core_1.StringNode.bind(undefined, collections);\r\n    const TagBase = (type) => core_1.Mod(core_1.ObjectNode({\r\n        replace: core_1.Opt(core_1.BooleanNode()),\r\n        values: core_1.ListNode(core_1.ChoiceNode([\r\n            {\r\n                type: 'string',\r\n                node: StringNode({ validator: 'resource', params: { pool: type, allowTag: true } }),\r\n                change: v => v.id\r\n            },\r\n            {\r\n                type: 'object',\r\n                node: core_1.ObjectNode({\r\n                    id: StringNode({ validator: 'resource', params: { pool: type, allowTag: true, allowUnknown: true } }),\r\n                    required: core_1.BooleanNode()\r\n                }),\r\n                change: v => ({ id: v })\r\n            }\r\n        ])),\r\n    }, { context: 'tag' }), {\r\n        default: () => ({\r\n            values: []\r\n        })\r\n    });\r\n    schemas.register('block_tag', TagBase('block'));\r\n    schemas.register('entity_type_tag', TagBase('entity_type'));\r\n    schemas.register('fluid_tag', TagBase('fluid'));\r\n    schemas.register('function_tag', TagBase('$function'));\r\n    schemas.register('item_tag', TagBase('item'));\r\n}\r\nexports.initTagsSchemas = initTagsSchemas;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.initTextComponentSchemas = void 0;\r\nconst core_1 = require(\"@mcschema/core\");\r\nfunction initTextComponentSchemas(schemas, collections) {\r\n    const Reference = core_1.Reference.bind(undefined, schemas);\r\n    const StringNode = core_1.StringNode.bind(undefined, collections);\r\n    const getSimpleString = (v) => { var _a; return v instanceof Array ? getSimpleString(v[0]) : (_a = v === null || v === void 0 ? void 0 : v.text) !== null && _a !== void 0 ? _a : (typeof v === 'object' ? '' : v === null || v === void 0 ? void 0 : v.toString()); };\r\n    schemas.register('text_component', core_1.Mod(core_1.ChoiceNode([\r\n        {\r\n            type: 'object',\r\n            node: Reference('text_component_object'),\r\n            change: v => v instanceof Array ? (typeof v[0] === 'object' ? v[0] : { text: getSimpleString(v[0]) }) : typeof v === 'object' ? v : { text: getSimpleString(v) }\r\n        },\r\n        {\r\n            type: 'list',\r\n            node: Reference('text_component_list'),\r\n            change: v => [v]\r\n        },\r\n        {\r\n            type: 'string',\r\n            priority: 1,\r\n            node: StringNode(),\r\n            change: getSimpleString\r\n        },\r\n        {\r\n            type: 'number',\r\n            node: core_1.NumberNode(),\r\n            change: v => {\r\n                const n = parseFloat(getSimpleString(v));\r\n                return isFinite(n) ? n : (!!v ? 1 : 0);\r\n            }\r\n        },\r\n        {\r\n            type: 'boolean',\r\n            node: core_1.BooleanNode(),\r\n            change: v => {\r\n                const s = getSimpleString(v);\r\n                return s === 'true' || s === 'false' ? s === 'true' : !!s;\r\n            }\r\n        }\r\n    ], { context: 'text_component' }), {\r\n        default: () => ({\r\n            text: \"\"\r\n        })\r\n    }));\r\n    const CommonFields = {\r\n        color: core_1.Opt(StringNode()) /* TODO */,\r\n        font: core_1.Opt(StringNode()),\r\n        bold: core_1.Opt(core_1.BooleanNode()),\r\n        italic: core_1.Opt(core_1.BooleanNode()),\r\n        underlined: core_1.Opt(core_1.BooleanNode()),\r\n        strikethrough: core_1.Opt(core_1.BooleanNode()),\r\n        obfuscated: core_1.Opt(core_1.BooleanNode()),\r\n        insertion: core_1.Opt(StringNode()),\r\n        clickEvent: core_1.Opt(core_1.ObjectNode({\r\n            action: StringNode({ enum: ['open_url', 'open_file', 'run_command', 'suggest_command', 'change_page', 'copy_to_clipboard'] }),\r\n            [core_1.Switch]: [{ push: 'action' }],\r\n            [core_1.Case]: {\r\n                'change_page': {\r\n                    value: StringNode()\r\n                },\r\n                'copy_to_clipboard': {\r\n                    value: StringNode()\r\n                },\r\n                'open_file': {\r\n                    value: StringNode()\r\n                },\r\n                'open_url': {\r\n                    value: StringNode()\r\n                },\r\n                'run_command': {\r\n                    value: StringNode({ validator: 'command', params: { leadingSlash: true, allowPartial: true } })\r\n                },\r\n                'suggest_command': {\r\n                    value: StringNode({ validator: 'command', params: { leadingSlash: true, allowPartial: true } })\r\n                }\r\n            }\r\n        })),\r\n        hoverEvent: core_1.Opt(core_1.ObjectNode({\r\n            action: StringNode({ enum: ['show_text', 'show_item', 'show_entity'] }),\r\n            [core_1.Switch]: [{ push: 'action' }],\r\n            [core_1.Case]: {\r\n                'show_text': {\r\n                    value: core_1.Opt(Reference('text_component')),\r\n                    contents: core_1.Opt(Reference('text_component'))\r\n                },\r\n                'show_item': {\r\n                    value: core_1.Opt(StringNode({ validator: 'nbt', params: { module: 'util::InventoryItem' } })),\r\n                    contents: core_1.Opt(core_1.ObjectNode({\r\n                        id: StringNode({ validator: 'resource', params: { pool: 'item' } }),\r\n                        count: core_1.Opt(core_1.NumberNode({ integer: true })),\r\n                        tag: core_1.Opt(StringNode({ validator: 'nbt', params: { registry: { category: 'minecraft:item', id: ['pop', { push: 'id' }] } } }))\r\n                    }))\r\n                },\r\n                'show_entity': {\r\n                    value: core_1.Opt(core_1.ObjectNode({\r\n                        name: core_1.Opt(StringNode()),\r\n                        type: core_1.Opt(StringNode()),\r\n                        id: core_1.Opt(StringNode())\r\n                    })),\r\n                    contents: core_1.Opt(core_1.Mod(core_1.ObjectNode({\r\n                        name: core_1.Opt(Reference('text_component')),\r\n                        type: StringNode({ validator: 'resource', params: { pool: 'entity_type' } }),\r\n                        id: StringNode({ validator: 'uuid' })\r\n                    }), {\r\n                        default: () => ({\r\n                            type: 'minecraft:pig',\r\n                            id: '00000001-0001-0001-0001-000000000001'\r\n                        })\r\n                    }))\r\n                }\r\n            }\r\n        })),\r\n        extra: core_1.Opt(Reference('text_component_list'))\r\n    };\r\n    schemas.register('text_component_object', core_1.Mod(core_1.ChoiceNode([\r\n        {\r\n            type: 'text',\r\n            match: v => typeof v === 'object',\r\n            change: v => ({ text: '' }),\r\n            priority: -1,\r\n            node: core_1.ObjectNode({\r\n                text: StringNode(),\r\n                ...CommonFields\r\n            })\r\n        },\r\n        {\r\n            type: 'translation',\r\n            match: v => (v === null || v === void 0 ? void 0 : v.translate) !== undefined,\r\n            change: v => ({ translate: '' }),\r\n            node: core_1.ObjectNode({\r\n                translate: StringNode(),\r\n                with: core_1.Opt(Reference('text_component_list')),\r\n                ...CommonFields\r\n            })\r\n        },\r\n        {\r\n            type: 'score',\r\n            match: v => (v === null || v === void 0 ? void 0 : v.score) !== undefined,\r\n            change: v => ({ score: {} }),\r\n            node: core_1.ObjectNode({\r\n                score: core_1.ObjectNode({\r\n                    name: StringNode({ validator: 'entity', params: { amount: 'single', type: 'entities', isScoreHolder: true } }),\r\n                    objective: StringNode({ validator: 'objective' }),\r\n                    value: core_1.Opt(StringNode())\r\n                }),\r\n                ...CommonFields\r\n            })\r\n        },\r\n        {\r\n            type: 'selector',\r\n            match: v => (v === null || v === void 0 ? void 0 : v.selector) !== undefined,\r\n            change: v => ({ selector: '' }),\r\n            node: core_1.ObjectNode({\r\n                selector: StringNode({ validator: 'entity', params: { amount: 'multiple', type: 'entities' } }),\r\n                ...CommonFields\r\n            })\r\n        },\r\n        {\r\n            type: 'keybind',\r\n            match: v => (v === null || v === void 0 ? void 0 : v.keybind) !== undefined,\r\n            change: v => ({ keybind: '' }),\r\n            node: core_1.ObjectNode({\r\n                keybind: StringNode({ enum: 'keybind', additional: true }),\r\n                ...CommonFields\r\n            })\r\n        },\r\n        {\r\n            type: 'nbt',\r\n            match: v => (v === null || v === void 0 ? void 0 : v.nbt) !== undefined,\r\n            change: v => ({ nbt: '' }),\r\n            node: core_1.ObjectNode({\r\n                nbt: StringNode({ validator: 'nbt_path' }),\r\n                block: core_1.Opt(StringNode({ validator: 'vector', params: { dimension: 3, isInteger: true } })),\r\n                entity: core_1.Opt(StringNode({ validator: 'entity', params: { amount: 'single', type: 'entities' } })),\r\n                storage: core_1.Opt(StringNode({ validator: 'resource', params: { pool: '$storage' } })),\r\n                interpret: core_1.Opt(core_1.BooleanNode()),\r\n                ...CommonFields\r\n            })\r\n        }\r\n    ], { context: 'text_component_object', choiceContext: 'text_component.object' }), {\r\n        default: () => ({\r\n            text: \"\"\r\n        })\r\n    }));\r\n    schemas.register('text_component_list', core_1.Mod(core_1.ListNode(Reference('text_component')), {\r\n        default: () => [{\r\n                text: \"\"\r\n            }]\r\n    }));\r\n}\r\nexports.initTextComponentSchemas = initTextComponentSchemas;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.initBiomeSchemas = void 0;\r\nconst core_1 = require(\"@mcschema/core\");\r\nfunction initBiomeSchemas(schemas, collections) {\r\n    const StringNode = core_1.StringNode.bind(undefined, collections);\r\n    schemas.register('biome', core_1.Mod(core_1.ObjectNode({\r\n        surface_builder: StringNode({ validator: 'resource', params: { pool: '$worldgen/configured_surface_builder' } }),\r\n        depth: core_1.NumberNode(),\r\n        scale: core_1.NumberNode(),\r\n        temperature: core_1.NumberNode(),\r\n        downfall: core_1.NumberNode(),\r\n        precipitation: StringNode({ enum: ['none', 'rain', 'snow'] }),\r\n        temperature_modifier: core_1.Opt(StringNode({ enum: ['none', 'frozen'] })),\r\n        category: StringNode({ enum: 'biome_category' }),\r\n        player_spawn_friendly: core_1.Opt(core_1.BooleanNode()),\r\n        creature_spawn_probability: core_1.Opt(core_1.NumberNode({ min: 0, max: 1 })),\r\n        effects: core_1.ObjectNode({\r\n            sky_color: core_1.NumberNode({ color: true }),\r\n            fog_color: core_1.NumberNode({ color: true }),\r\n            water_color: core_1.NumberNode({ color: true }),\r\n            water_fog_color: core_1.NumberNode({ color: true }),\r\n            grass_color: core_1.Opt(core_1.NumberNode({ color: true })),\r\n            foliage_color: core_1.Opt(core_1.NumberNode({ color: true })),\r\n            grass_color_modifier: core_1.Opt(StringNode({ enum: ['none', 'dark_forest', 'swamp'] })),\r\n            ambient_sound: core_1.Opt(StringNode()),\r\n            mood_sound: core_1.Opt(core_1.ObjectNode({\r\n                sound: StringNode(),\r\n                tick_delay: core_1.NumberNode({ integer: true }),\r\n                block_search_extent: core_1.NumberNode({ integer: true }),\r\n                offset: core_1.NumberNode()\r\n            })),\r\n            additions_sound: core_1.Opt(core_1.ObjectNode({\r\n                sound: StringNode(),\r\n                tick_chance: core_1.NumberNode({ min: 0, max: 1 })\r\n            })),\r\n            music: core_1.Opt(core_1.ObjectNode({\r\n                sound: StringNode(),\r\n                min_delay: core_1.NumberNode({ integer: true, min: 0 }),\r\n                max_delay: core_1.NumberNode({ integer: true, min: 0 }),\r\n                replace_current_music: core_1.BooleanNode()\r\n            })),\r\n            particle: core_1.Opt(core_1.ObjectNode({\r\n                options: core_1.ObjectNode({\r\n                    type: StringNode()\r\n                }),\r\n                probability: core_1.NumberNode({ min: 0, max: 1 })\r\n            }))\r\n        }),\r\n        starts: core_1.ListNode(StringNode({ validator: 'resource', params: { pool: '$worldgen/configured_structure_feature' } })),\r\n        spawners: core_1.MapNode(StringNode({ enum: [\r\n                'water_ambient',\r\n                'ambient',\r\n                'misc',\r\n                'water_creature',\r\n                'creature',\r\n                'monster'\r\n            ] }), core_1.Mod(core_1.ListNode(core_1.ObjectNode({\r\n            type: StringNode({ validator: 'resource', params: { pool: 'entity_type' } }),\r\n            weight: core_1.NumberNode({ integer: true }),\r\n            minCount: core_1.NumberNode({ integer: true }),\r\n            maxCount: core_1.NumberNode({ integer: true })\r\n        })), {\r\n            category: () => 'pool',\r\n            default: () => [{\r\n                    type: 'minecraft:bat',\r\n                    weight: 1\r\n                }]\r\n        })),\r\n        spawn_costs: core_1.MapNode(StringNode({ validator: 'resource', params: { pool: 'entity_type' } }), core_1.Mod(core_1.ObjectNode({\r\n            energy_budget: core_1.NumberNode(),\r\n            charge: core_1.NumberNode()\r\n        }, { category: 'function' }), {\r\n            default: () => ({\r\n                energy_budget: 0.12,\r\n                charge: 1.0\r\n            })\r\n        })),\r\n        carvers: core_1.MapNode(StringNode({ enum: ['air', 'liquid'] }), core_1.Mod(core_1.ListNode(StringNode({ validator: 'resource', params: { pool: '$worldgen/configured_carver' } })), {\r\n            default: () => ['minecraft:cave']\r\n        })),\r\n        features: core_1.ListNode(core_1.Mod(core_1.ListNode(StringNode({ validator: 'resource', params: { pool: '$worldgen/configured_feature' } })), { category: () => 'predicate' }), { maxLength: 10 })\r\n    }, { context: 'biome' }), {\r\n        default: () => ({\r\n            surface_builder: 'minecraft:grass',\r\n            depth: 0.125,\r\n            scale: 0.05,\r\n            temperature: 0.8,\r\n            downfall: 0.4,\r\n            precipitation: 'rain',\r\n            category: 'plains',\r\n            effects: {\r\n                sky_color: 7907327,\r\n                fog_color: 12638463,\r\n                water_color: 4159204,\r\n                water_fog_color: 329011\r\n            }\r\n        })\r\n    }));\r\n}\r\nexports.initBiomeSchemas = initBiomeSchemas;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.initCarverSchemas = void 0;\r\nconst core_1 = require(\"@mcschema/core\");\r\nfunction initCarverSchemas(schemas, collections) {\r\n    const StringNode = core_1.StringNode.bind(undefined, collections);\r\n    schemas.register('configured_carver', core_1.Mod(core_1.ObjectNode({\r\n        type: StringNode({ validator: 'resource', params: { pool: 'worldgen/carver' } }),\r\n        config: core_1.ObjectNode({\r\n            probability: core_1.NumberNode({ min: 0, max: 1 })\r\n        })\r\n    }, { context: 'carver' }), {\r\n        default: () => ({\r\n            type: 'minecraft:cave',\r\n            config: {\r\n                probability: 0.1\r\n            }\r\n        })\r\n    }));\r\n}\r\nexports.initCarverSchemas = initCarverSchemas;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.initDecoratorSchemas = void 0;\r\nconst core_1 = require(\"@mcschema/core\");\r\nconst Common_1 = require(\"../Common\");\r\nfunction initDecoratorSchemas(schemas, collections) {\r\n    const Reference = core_1.Reference.bind(undefined, schemas);\r\n    const StringNode = core_1.StringNode.bind(undefined, collections);\r\n    const RangeConfig = {\r\n        maximum: core_1.NumberNode({ integer: true }),\r\n        bottom_offset: core_1.NumberNode({ integer: true }),\r\n        top_offset: core_1.NumberNode({ integer: true })\r\n    };\r\n    const ChanceConfig = {\r\n        chance: core_1.NumberNode({ integer: true, min: 0 })\r\n    };\r\n    const CountConfig = {\r\n        count: Common_1.UniformInt({ min: -10, max: 128, maxSpread: 128 })\r\n    };\r\n    schemas.register('configured_decorator', core_1.ObjectNode({\r\n        type: StringNode({ validator: 'resource', params: { pool: 'worldgen/decorator' } }),\r\n        config: core_1.ObjectNode({\r\n            [core_1.Switch]: ['pop', { push: 'type' }],\r\n            [core_1.Case]: {\r\n                'minecraft:carving_mask': {\r\n                    step: StringNode({ enum: 'generation_step' }),\r\n                    probability: core_1.NumberNode({ min: 0, max: 1 })\r\n                },\r\n                'minecraft:chance': ChanceConfig,\r\n                'minecraft:count': CountConfig,\r\n                'minecraft:count_extra': {\r\n                    count: core_1.NumberNode({ integer: true, min: 0 }),\r\n                    extra_count: core_1.NumberNode({ integer: true, min: 0 }),\r\n                    extra_chance: core_1.NumberNode({ min: 0, max: 1 })\r\n                },\r\n                'minecraft:count_multilayer': CountConfig,\r\n                'minecraft:count_noise': {\r\n                    noise_level: core_1.NumberNode(),\r\n                    below_noise: core_1.NumberNode({ integer: true }),\r\n                    above_noise: core_1.NumberNode({ integer: true })\r\n                },\r\n                'minecraft:count_noise_biased': {\r\n                    noise_to_count_ratio: core_1.NumberNode({ integer: true }),\r\n                    noise_factor: core_1.NumberNode(),\r\n                    noise_offset: core_1.Opt(core_1.NumberNode())\r\n                },\r\n                'minecraft:decorated': {\r\n                    outer: Reference('configured_decorator'),\r\n                    inner: Reference('configured_decorator')\r\n                },\r\n                'minecraft:depth_average': {\r\n                    baseline: core_1.NumberNode({ integer: true }),\r\n                    spread: core_1.NumberNode({ integer: true })\r\n                },\r\n                'minecraft:fire': CountConfig,\r\n                'minecraft:glowstone': CountConfig,\r\n                'minecraft:lava_lake': ChanceConfig,\r\n                'minecraft:range': RangeConfig,\r\n                'minecraft:range_biased': RangeConfig,\r\n                'minecraft:range_very_biased': RangeConfig,\r\n                'minecraft:water_lake': ChanceConfig\r\n            }\r\n        }, { context: 'decorator', category: 'predicate' })\r\n    }, { context: 'decorator', category: 'predicate' }));\r\n}\r\nexports.initDecoratorSchemas = initDecoratorSchemas;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.initProcessorListSchemas = void 0;\r\nconst core_1 = require(\"@mcschema/core\");\r\nfunction initProcessorListSchemas(schemas, collections) {\r\n    const Reference = core_1.Reference.bind(undefined, schemas);\r\n    const StringNode = core_1.StringNode.bind(undefined, collections);\r\n    schemas.register('processor_list', core_1.Mod(core_1.ObjectNode({\r\n        processors: core_1.ListNode(Reference('processor'))\r\n    }, { context: 'processor_list' }), {\r\n        default: () => ({\r\n            processors: [{\r\n                    processor_type: 'minecraft:rule',\r\n                    rules: [{\r\n                            location_predicate: {\r\n                                predicate_type: 'minecraft:always_true'\r\n                            },\r\n                            input_predicate: {\r\n                                predicate_type: 'minecraft:always_true'\r\n                            }\r\n                        }]\r\n                }]\r\n        })\r\n    }));\r\n    schemas.register('processor', core_1.Mod(core_1.ObjectNode({\r\n        processor_type: StringNode({ validator: 'resource', params: { pool: 'worldgen/structure_processor' } }),\r\n        [core_1.Switch]: [{ push: 'processor_type' }],\r\n        [core_1.Case]: {\r\n            'minecraft:block_age': {\r\n                mossiness: core_1.NumberNode()\r\n            },\r\n            'minecraft:block_ignore': {\r\n                blocks: core_1.ListNode(Reference('block_state'))\r\n            },\r\n            'minecraft:block_rot': {\r\n                integrity: core_1.NumberNode({ min: 0, max: 1 })\r\n            },\r\n            'minecraft:gravity': {\r\n                heightmap: StringNode({ enum: 'heightmap_type' }),\r\n                offset: core_1.NumberNode({ integer: true })\r\n            },\r\n            'minecraft:rule': {\r\n                rules: core_1.ListNode(Reference('processor_rule'))\r\n            }\r\n        }\r\n    }, { category: 'function', context: 'processor' }), {\r\n        default: () => ({\r\n            processor_type: 'minecraft:rule',\r\n            rules: [{\r\n                    location_predicate: {\r\n                        predicate_type: 'minecraft:always_true'\r\n                    },\r\n                    input_predicate: {\r\n                        predicate_type: 'minecraft:always_true'\r\n                    }\r\n                }]\r\n        })\r\n    }));\r\n    schemas.register('processor_rule', core_1.Mod(core_1.ObjectNode({\r\n        position_predicate: core_1.Opt(Reference('pos_rule_test')),\r\n        location_predicate: Reference('rule_test'),\r\n        input_predicate: Reference('rule_test'),\r\n        output_state: Reference('block_state'),\r\n        output_nbt: core_1.Opt(StringNode({ validator: 'nbt', params: { registry: { category: 'minecraft:block' } } }))\r\n    }, { category: 'predicate', context: 'processor_rule' }), {\r\n        default: () => ({\r\n            location_predicate: {\r\n                predicate_type: 'minecraft:always_true'\r\n            },\r\n            input_predicate: {\r\n                predicate_type: 'minecraft:always_true'\r\n            }\r\n        })\r\n    }));\r\n    const posTestFields = {\r\n        min_dist: core_1.NumberNode({ min: 0, max: 255, integer: true }),\r\n        max_dist: core_1.NumberNode({ min: 0, max: 255, integer: true }),\r\n        min_chance: core_1.NumberNode({ min: 0, max: 1 }),\r\n        max_chance: core_1.NumberNode({ min: 0, max: 1 })\r\n    };\r\n    schemas.register('pos_rule_test', core_1.ObjectNode({\r\n        predicate_type: StringNode({ validator: 'resource', params: { pool: 'pos_rule_test' } }),\r\n        [core_1.Switch]: [{ push: 'predicate_type' }],\r\n        [core_1.Case]: {\r\n            'minecraft:axis_aligned_linear_pos': {\r\n                axis: StringNode({ enum: ['x', 'y', 'z'] }),\r\n                ...posTestFields\r\n            },\r\n            'minecraft:linear_pos': posTestFields\r\n        }\r\n    }, { context: 'pos_rule_test', disableSwitchContext: true }));\r\n    schemas.register('rule_test', core_1.ObjectNode({\r\n        predicate_type: StringNode({ validator: 'resource', params: { pool: 'rule_test' } }),\r\n        [core_1.Switch]: [{ push: 'predicate_type' }],\r\n        [core_1.Case]: {\r\n            'minecraft:block_match': {\r\n                block: StringNode({ validator: 'resource', params: { pool: 'block' } })\r\n            },\r\n            'minecraft:blockstate_match': {\r\n                block_state: Reference('block_state')\r\n            },\r\n            'minecraft:random_block_match': {\r\n                block: StringNode({ validator: 'resource', params: { pool: 'block' } }),\r\n                probability: core_1.NumberNode({ min: 0, max: 1 })\r\n            },\r\n            'minecraft:random_blockstate_match': {\r\n                block_state: Reference('block_state'),\r\n                probability: core_1.NumberNode({ min: 0, max: 1 })\r\n            },\r\n            'minecraft:tag_match': {\r\n                tag: StringNode({ validator: 'resource', params: { pool: '$tag/block' } })\r\n            }\r\n        }\r\n    }, { context: 'rule_test', disableSwitchContext: true }));\r\n}\r\nexports.initProcessorListSchemas = initProcessorListSchemas;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.initFeatureSchemas = void 0;\r\nconst core_1 = require(\"@mcschema/core\");\r\nconst Common_1 = require(\"../Common\");\r\nrequire(\"./Decorator\");\r\nrequire(\"./ProcessorList\");\r\nfunction initFeatureSchemas(schemas, collections) {\r\n    const Reference = core_1.Reference.bind(undefined, schemas);\r\n    const StringNode = core_1.StringNode.bind(undefined, collections);\r\n    const RandomPatchConfig = {\r\n        can_replace: core_1.BooleanNode(),\r\n        project: core_1.BooleanNode(),\r\n        need_water: core_1.BooleanNode(),\r\n        xspread: core_1.NumberNode({ integer: true }),\r\n        yspread: core_1.NumberNode({ integer: true }),\r\n        zspread: core_1.NumberNode({ integer: true }),\r\n        tries: core_1.NumberNode({ integer: true }),\r\n        state_provider: Reference('block_state_provider'),\r\n        block_placer: Reference('block_placer'),\r\n        whitelist: core_1.ListNode(Reference('block_state')),\r\n        blacklist: core_1.ListNode(Reference('block_state'))\r\n    };\r\n    const DiskConfig = {\r\n        state: Reference('block_state'),\r\n        radius: Common_1.UniformInt({ min: 0, max: 4, maxSpread: 4 }),\r\n        half_height: core_1.NumberNode({ integer: true, min: 0, max: 4 }),\r\n        targets: core_1.ListNode(Reference('block_state'))\r\n    };\r\n    const HugeMushroomConfig = {\r\n        cap_provider: Reference('block_state_provider'),\r\n        stem_provider: Reference('block_state_provider'),\r\n        foliage_radius: core_1.Opt(core_1.NumberNode({ integer: true }))\r\n    };\r\n    const OreConfig = {\r\n        state: Reference('block_state'),\r\n        size: core_1.NumberNode({ integer: true, min: 0, max: 64 }),\r\n        target: Reference('rule_test')\r\n    };\r\n    const CountConfig = {\r\n        count: Common_1.UniformInt({ min: -10, max: 128, maxSpread: 128 })\r\n    };\r\n    const Feature = core_1.ChoiceNode([\r\n        {\r\n            type: 'string',\r\n            node: StringNode({ validator: 'resource', params: { pool: '$worldgen/configured_feature' } })\r\n        },\r\n        {\r\n            type: 'object',\r\n            node: Reference('configured_feature')\r\n        }\r\n    ], { choiceContext: 'feature' });\r\n    schemas.register('configured_feature', core_1.Mod(core_1.ObjectNode({\r\n        type: StringNode({ validator: 'resource', params: { pool: 'worldgen/feature' } }),\r\n        config: core_1.ObjectNode({\r\n            [core_1.Switch]: ['pop', { push: 'type' }],\r\n            [core_1.Case]: {\r\n                'minecraft:bamboo': {\r\n                    probability: core_1.NumberNode({ min: 0, max: 1 })\r\n                },\r\n                'minecraft:basalt_columns': {\r\n                    reach: Common_1.UniformInt({ min: 0, max: 2, maxSpread: 1 }),\r\n                    height: Common_1.UniformInt({ min: 1, max: 5, maxSpread: 5 })\r\n                },\r\n                'minecraft:block_pile': {\r\n                    state_provider: Reference('block_state_provider')\r\n                },\r\n                'minecraft:decorated': {\r\n                    decorator: Reference('configured_decorator'),\r\n                    feature: Feature\r\n                },\r\n                'minecraft:delta_feature': {\r\n                    contents: Reference('block_state'),\r\n                    rim: Reference('block_state'),\r\n                    size: Common_1.UniformInt({ min: 0, max: 8, maxSpread: 8 }),\r\n                    rim_size: Common_1.UniformInt({ min: 0, max: 8, maxSpread: 8 })\r\n                },\r\n                'minecraft:disk': DiskConfig,\r\n                'minecraft:emerald_ore': {\r\n                    state: Reference('block_state'),\r\n                    target: Reference('block_state')\r\n                },\r\n                'minecraft:end_gateway': {\r\n                    exact: core_1.BooleanNode(),\r\n                    exit: core_1.Opt(Reference('block_pos'))\r\n                },\r\n                'minecraft:end_spike': {\r\n                    crystal_invulnerable: core_1.Opt(core_1.BooleanNode()),\r\n                    crystal_beam_target: core_1.Opt(Reference('block_pos')),\r\n                    spikes: core_1.ListNode(core_1.ObjectNode({\r\n                        centerX: core_1.Opt(core_1.NumberNode({ integer: true })),\r\n                        centerZ: core_1.Opt(core_1.NumberNode({ integer: true })),\r\n                        radius: core_1.Opt(core_1.NumberNode({ integer: true })),\r\n                        height: core_1.Opt(core_1.NumberNode({ integer: true })),\r\n                        guarded: core_1.Opt(core_1.BooleanNode())\r\n                    }))\r\n                },\r\n                'minecraft:fill_layer': {\r\n                    state: Reference('block_state'),\r\n                    height: core_1.NumberNode({ integer: true, min: 0, max: 255 })\r\n                },\r\n                'minecraft:flower': RandomPatchConfig,\r\n                'minecraft:forest_rock': {\r\n                    state: Reference('block_state')\r\n                },\r\n                'minecraft:huge_brown_mushroom': HugeMushroomConfig,\r\n                'minecraft:huge_fungus': {\r\n                    hat_state: Reference('block_state'),\r\n                    decor_state: Reference('block_state'),\r\n                    stem_state: Reference('block_state'),\r\n                    valid_base_block: Reference('block_state'),\r\n                    planted: core_1.Opt(core_1.BooleanNode())\r\n                },\r\n                'minecraft:huge_red_mushroom': HugeMushroomConfig,\r\n                'minecraft:ice_patch': DiskConfig,\r\n                'minecraft:iceberg': {\r\n                    state: Reference('block_state')\r\n                },\r\n                'minecraft:lake': {\r\n                    state: Reference('block_state')\r\n                },\r\n                'minecraft:nether_forest_vegetation': {\r\n                    state_provider: Reference('block_state_provider')\r\n                },\r\n                'minecraft:netherrack_replace_blobs': {\r\n                    state: Reference('block_state'),\r\n                    target: Reference('block_state'),\r\n                    radius: Common_1.UniformInt()\r\n                },\r\n                'minecraft:no_bonemeal_flower': RandomPatchConfig,\r\n                'minecraft:no_surface_ore': OreConfig,\r\n                'minecraft:ore': OreConfig,\r\n                'minecraft:random_patch': RandomPatchConfig,\r\n                'minecraft:random_boolean_selector': {\r\n                    feature_false: Feature,\r\n                    feature_true: Feature\r\n                },\r\n                'minecraft:random_selector': {\r\n                    features: core_1.ListNode(core_1.ObjectNode({\r\n                        chance: core_1.NumberNode({ min: 0, max: 1 }),\r\n                        feature: Feature\r\n                    })),\r\n                    default: Feature\r\n                },\r\n                'minecraft:sea_pickle': CountConfig,\r\n                'minecraft:seagrass': {\r\n                    probability: core_1.NumberNode({ min: 0, max: 1 })\r\n                },\r\n                'minecraft:simple_block': {\r\n                    to_place: Reference('block_state'),\r\n                    place_on: core_1.ListNode(Reference('block_state')),\r\n                    place_in: core_1.ListNode(Reference('block_state')),\r\n                    place_under: core_1.ListNode(Reference('block_state'))\r\n                },\r\n                'minecraft:simple_random_selector': {\r\n                    features: core_1.ListNode(Feature)\r\n                },\r\n                'minecraft:spring_feature': {\r\n                    state: Reference('fluid_state'),\r\n                    rock_count: core_1.NumberNode({ integer: true }),\r\n                    hole_count: core_1.NumberNode({ integer: true }),\r\n                    requires_block_below: core_1.BooleanNode(),\r\n                    valid_blocks: core_1.ListNode(StringNode({ validator: 'resource', params: { pool: 'block' } }))\r\n                },\r\n                'minecraft:tree': {\r\n                    max_water_depth: core_1.NumberNode({ integer: true }),\r\n                    ignore_vines: core_1.BooleanNode(),\r\n                    heightmap: StringNode({ enum: 'heightmap_type' }),\r\n                    minimum_size: Reference('feature_size'),\r\n                    trunk_provider: Reference('block_state_provider'),\r\n                    leaves_provider: Reference('block_state_provider'),\r\n                    trunk_placer: core_1.ObjectNode({\r\n                        type: StringNode({ validator: 'resource', params: { pool: 'worldgen/trunk_placer_type' } }),\r\n                        base_height: core_1.NumberNode({ integer: true, min: 0, max: 32 }),\r\n                        height_rand_a: core_1.NumberNode({ integer: true, min: 0, max: 24 }),\r\n                        height_rand_b: core_1.NumberNode({ integer: true, min: 0, max: 24 })\r\n                    }, { context: 'trunk_placer' }),\r\n                    foliage_placer: core_1.ObjectNode({\r\n                        type: StringNode({ validator: 'resource', params: { pool: 'worldgen/foliage_placer_type' } }),\r\n                        radius: Common_1.UniformInt({ min: 0, max: 8, maxSpread: 8 }),\r\n                        offset: Common_1.UniformInt({ min: 0, max: 8, maxSpread: 8 }),\r\n                        [core_1.Switch]: [{ push: 'type' }],\r\n                        [core_1.Case]: {\r\n                            'minecraft:blob_foliage_placer': {\r\n                                height: core_1.NumberNode({ integer: true, min: 0, max: 16 })\r\n                            },\r\n                            'minecraft:bush_foliage_placer': {\r\n                                height: core_1.NumberNode({ integer: true, min: 0, max: 16 })\r\n                            },\r\n                            'minecraft:fancy_foliage_placer': {\r\n                                height: core_1.NumberNode({ integer: true, min: 0, max: 16 })\r\n                            },\r\n                            'minecraft:jungle_foliage_placer': {\r\n                                height: core_1.NumberNode({ integer: true, min: 0, max: 16 })\r\n                            },\r\n                            'minecraft:mega_pine_foliage_placer': {\r\n                                crown_height: Common_1.UniformInt({ min: 0, max: 16, maxSpread: 8 })\r\n                            },\r\n                            'minecraft:pine_foliage_placer': {\r\n                                height: Common_1.UniformInt({ min: 0, max: 16, maxSpread: 8 })\r\n                            },\r\n                            'minecraft:spruce_foliage_placer': {\r\n                                trunk_height: Common_1.UniformInt({ min: 0, max: 16, maxSpread: 8 })\r\n                            }\r\n                        }\r\n                    }, { context: 'foliage_placer', disableSwitchContext: true }),\r\n                    decorators: core_1.ListNode(core_1.ObjectNode({\r\n                        type: StringNode({ validator: 'resource', params: { pool: 'worldgen/tree_decorator_type' } }),\r\n                        [core_1.Switch]: [{ push: 'type' }],\r\n                        [core_1.Case]: {\r\n                            'minecraft:alter_ground': {\r\n                                provider: Reference('block_state_provider')\r\n                            },\r\n                            'minecraft:beehive': {\r\n                                probability: core_1.NumberNode({ min: 0, max: 1 })\r\n                            },\r\n                            'minecraft:cocoa': {\r\n                                probability: core_1.NumberNode({ min: 0, max: 1 })\r\n                            }\r\n                        }\r\n                    }, { context: 'tree_decorator' }))\r\n                }\r\n            }\r\n        }, { context: 'feature' })\r\n    }, { context: 'feature' }), {\r\n        default: () => ({\r\n            type: 'minecraft:decorated',\r\n            config: {\r\n                decorator: {\r\n                    type: 'minecraft:count',\r\n                    config: {\r\n                        count: 4\r\n                    }\r\n                },\r\n                feature: {\r\n                    type: 'minecraft:tree',\r\n                    config: {\r\n                        max_water_depth: 0,\r\n                        ignore_vines: true,\r\n                        minimum_size: {},\r\n                        trunk_placer: {\r\n                            base_height: 5,\r\n                            height_rand_a: 2,\r\n                            height_rand_b: 0\r\n                        },\r\n                        foliage_placer: {\r\n                            radius: 2,\r\n                            offset: 0,\r\n                            height: 3\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        })\r\n    }));\r\n    schemas.register('feature_size', core_1.Mod(core_1.ObjectNode({\r\n        type: StringNode({ validator: 'resource', params: { pool: 'worldgen/feature_size_type' } }),\r\n        min_clipped_height: core_1.Opt(core_1.NumberNode({ min: 0, max: 80 })),\r\n        [core_1.Switch]: [{ push: 'type' }],\r\n        [core_1.Case]: {\r\n            'minecraft:two_layers_feature_size': {\r\n                limit: core_1.Opt(core_1.NumberNode({ integer: true, min: 0, max: 81 })),\r\n                lower_size: core_1.Opt(core_1.NumberNode({ integer: true, min: 0, max: 16 })),\r\n                upper_size: core_1.Opt(core_1.NumberNode({ integer: true, min: 0, max: 16 }))\r\n            },\r\n            'minecraft:three_layers_feature_size': {\r\n                limit: core_1.Opt(core_1.NumberNode({ integer: true, min: 0, max: 80 })),\r\n                upper_limit: core_1.Opt(core_1.NumberNode({ integer: true, min: 0, max: 80 })),\r\n                lower_size: core_1.Opt(core_1.NumberNode({ integer: true, min: 0, max: 16 })),\r\n                middle_size: core_1.Opt(core_1.NumberNode({ integer: true, min: 0, max: 16 })),\r\n                upper_size: core_1.Opt(core_1.NumberNode({ integer: true, min: 0, max: 16 }))\r\n            }\r\n        }\r\n    }, { disableSwitchContext: true }), {\r\n        default: () => ({\r\n            type: 'minecraft:two_layers_feature_size'\r\n        })\r\n    }));\r\n    schemas.register('block_state_provider', core_1.Mod(core_1.ObjectNode({\r\n        type: StringNode({ validator: 'resource', params: { pool: 'worldgen/block_state_provider_type' } }),\r\n        [core_1.Switch]: [{ push: 'type' }],\r\n        [core_1.Case]: {\r\n            'minecraft:rotated_block_provider': {\r\n                state: Reference('block_state')\r\n            },\r\n            'minecraft:simple_state_provider': {\r\n                state: Reference('block_state')\r\n            },\r\n            'minecraft:weighted_state_provider': {\r\n                entries: core_1.ListNode(core_1.Mod(core_1.ObjectNode({\r\n                    weight: core_1.NumberNode({ integer: true, min: 1 }),\r\n                    data: Reference('block_state')\r\n                }), {\r\n                    default: () => ({\r\n                        data: {}\r\n                    })\r\n                }))\r\n            }\r\n        }\r\n    }, { context: 'block_state_provider' }), {\r\n        default: () => ({\r\n            type: 'minecraft:simple_state_provider'\r\n        })\r\n    }));\r\n    schemas.register('block_placer', core_1.Mod(core_1.ObjectNode({\r\n        type: StringNode({ validator: 'resource', params: { pool: 'worldgen/block_placer_type' } }),\r\n        [core_1.Switch]: [{ push: 'type' }],\r\n        [core_1.Case]: {\r\n            'minecraft:column_placer': {\r\n                min_size: core_1.NumberNode({ integer: true }),\r\n                extra_size: core_1.NumberNode({ integer: true })\r\n            }\r\n        }\r\n    }, { context: 'block_placer' }), {\r\n        default: () => ({\r\n            type: 'minecraft:simple_block_placer'\r\n        })\r\n    }));\r\n}\r\nexports.initFeatureSchemas = initFeatureSchemas;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.initNoiseSettingsSchemas = void 0;\r\nconst core_1 = require(\"@mcschema/core\");\r\nconst Common_1 = require(\"../Common\");\r\nfunction initNoiseSettingsSchemas(schemas, collections) {\r\n    const Reference = core_1.Reference.bind(undefined, schemas);\r\n    const StringNode = core_1.StringNode.bind(undefined, collections);\r\n    schemas.register('noise_settings', core_1.Mod(core_1.ObjectNode({\r\n        name: core_1.Mod(StringNode({ validator: 'resource', params: { pool: '$worldgen/noise_settings', isDefinition: true } }), {\r\n            enabled: (path) => path.getArray().length > 0\r\n        }),\r\n        bedrock_roof_position: core_1.NumberNode({ integer: true }),\r\n        bedrock_floor_position: core_1.NumberNode({ integer: true }),\r\n        sea_level: core_1.NumberNode({ integer: true }),\r\n        disable_mob_generation: core_1.BooleanNode(),\r\n        default_block: Reference('block_state'),\r\n        default_fluid: Reference('block_state'),\r\n        noise: core_1.ObjectNode({\r\n            height: core_1.NumberNode({ integer: true }),\r\n            density_factor: core_1.NumberNode(),\r\n            density_offset: core_1.NumberNode(),\r\n            size_horizontal: core_1.NumberNode({ integer: true }),\r\n            size_vertical: core_1.NumberNode({ integer: true }),\r\n            simplex_surface_noise: core_1.BooleanNode(),\r\n            random_density_offset: core_1.Opt(core_1.BooleanNode()),\r\n            island_noise_override: core_1.Opt(core_1.BooleanNode()),\r\n            amplified: core_1.Opt(core_1.BooleanNode()),\r\n            sampling: core_1.ObjectNode({\r\n                xz_scale: core_1.NumberNode(),\r\n                y_scale: core_1.NumberNode(),\r\n                xz_factor: core_1.NumberNode(),\r\n                y_factor: core_1.NumberNode()\r\n            }),\r\n            bottom_slide: core_1.ObjectNode({\r\n                target: core_1.NumberNode({ integer: true }),\r\n                size: core_1.NumberNode({ integer: true }),\r\n                offset: core_1.NumberNode({ integer: true })\r\n            }),\r\n            top_slide: core_1.ObjectNode({\r\n                target: core_1.NumberNode({ integer: true }),\r\n                size: core_1.NumberNode({ integer: true }),\r\n                offset: core_1.NumberNode({ integer: true })\r\n            })\r\n        }),\r\n        structures: Reference('generator_structures')\r\n    }, { context: 'noise_settings' }), {\r\n        default: () => Common_1.DefaultNoiseSettings\r\n    }));\r\n    schemas.register('generator_structures', core_1.ObjectNode({\r\n        stronghold: core_1.Opt(core_1.ObjectNode({\r\n            distance: core_1.NumberNode({ integer: true, min: 0, max: 1023 }),\r\n            spread: core_1.NumberNode({ integer: true, min: 0, max: 1023 }),\r\n            count: core_1.NumberNode({ integer: true, min: 1, max: 4095 })\r\n        })),\r\n        structures: core_1.MapNode(StringNode({ validator: 'resource', params: { pool: 'worldgen/structure_feature' } }), core_1.Mod(core_1.ObjectNode({\r\n            spacing: core_1.NumberNode({ integer: true, min: 0, max: 4096 }),\r\n            separation: core_1.Mod(core_1.NumberNode({ integer: true, min: 0, max: 4096 }), (node) => ({\r\n                validate: (path, value, errors, options) => {\r\n                    if (path.pop().push('spacing').get() <= value) {\r\n                        errors.add(path, 'error.separation_smaller_spacing');\r\n                    }\r\n                    return node.validate(path, value, errors, options);\r\n                }\r\n            })),\r\n            salt: core_1.NumberNode({ integer: true, min: 0 })\r\n        }, { context: 'generator_structure' }), {\r\n            default: () => ({\r\n                spacing: 10,\r\n                separation: 5,\r\n                salt: 0\r\n            })\r\n        }))\r\n    }));\r\n    schemas.register('generator_layer', core_1.Mod(core_1.ObjectNode({\r\n        block: StringNode({ validator: 'resource', params: { pool: 'block' } }),\r\n        height: core_1.NumberNode({ integer: true, min: 1 })\r\n    }), {\r\n        default: () => ({\r\n            block: 'minecraft:stone',\r\n            height: 1\r\n        })\r\n    }));\r\n}\r\nexports.initNoiseSettingsSchemas = initNoiseSettingsSchemas;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.initStructureFeatureSchemas = void 0;\r\nconst core_1 = require(\"@mcschema/core\");\r\nfunction initStructureFeatureSchemas(schemas, collections) {\r\n    const StringNode = core_1.StringNode.bind(undefined, collections);\r\n    const templatePoolConfig = {\r\n        start_pool: StringNode({ validator: 'resource', params: { pool: '$worldgen/template_pool' } }),\r\n        size: core_1.NumberNode({ integer: true })\r\n    };\r\n    schemas.register('configured_structure_feature', core_1.Mod(core_1.ObjectNode({\r\n        type: StringNode({ validator: 'resource', params: { pool: 'worldgen/structure_feature' } }),\r\n        config: core_1.ObjectNode({\r\n            [core_1.Switch]: ['pop', { push: 'type' }],\r\n            [core_1.Case]: {\r\n                'minecraft:bastion_remnant': templatePoolConfig,\r\n                'minecraft:buried_treasure': {\r\n                    probability: core_1.NumberNode({ min: 0, max: 1 })\r\n                },\r\n                'minecraft:mineshaft': {\r\n                    type: StringNode({ enum: ['normal', 'mesa'] }),\r\n                    probability: core_1.NumberNode({ min: 0, max: 1 })\r\n                },\r\n                'minecraft:ocean_ruin': {\r\n                    biome_temp: StringNode({ enum: ['cold', 'warm'] }),\r\n                    large_probability: core_1.NumberNode({ min: 0, max: 1 }),\r\n                    cluster_probability: core_1.NumberNode({ min: 0, max: 1 })\r\n                },\r\n                'minecraft:pillager_outpost': templatePoolConfig,\r\n                'minecraft:ruined_portal': {\r\n                    portal_type: StringNode({ enum: ['standard', 'desert', 'jungle', 'mountain', 'nether', 'ocean', 'swamp'] })\r\n                },\r\n                'minecraft:shipwreck': {\r\n                    is_beached: core_1.Opt(core_1.BooleanNode())\r\n                },\r\n                'minecraft:village': templatePoolConfig\r\n            }\r\n        }, { context: 'structure_feature', disableSwitchContext: true })\r\n    }, { context: 'structure_feature' }), {\r\n        default: () => ({\r\n            type: 'minecraft:bastion_remnant',\r\n            config: {\r\n                start_pool: 'minecraft:bastion/starts',\r\n                size: 6\r\n            }\r\n        })\r\n    }));\r\n}\r\nexports.initStructureFeatureSchemas = initStructureFeatureSchemas;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.initSurfaceBuilderSchemas = void 0;\r\nconst core_1 = require(\"@mcschema/core\");\r\nfunction initSurfaceBuilderSchemas(schemas, collections) {\r\n    const StringNode = core_1.StringNode.bind(undefined, collections);\r\n    const Reference = core_1.Reference.bind(undefined, schemas);\r\n    schemas.register('configured_surface_builder', core_1.Mod(core_1.ObjectNode({\r\n        type: StringNode({ validator: 'resource', params: { pool: 'worldgen/surface_builder' } }),\r\n        config: core_1.ObjectNode({\r\n            top_material: Reference('block_state'),\r\n            under_material: Reference('block_state'),\r\n            underwater_material: Reference('block_state'),\r\n        }, { context: 'surface_builder' })\r\n    }, { context: 'surface_builder' }), {\r\n        default: () => ({\r\n            type: 'minecraft:default',\r\n            config: {\r\n                top_material: {\r\n                    Name: 'minecraft:grass_block',\r\n                    Properties: {\r\n                        snowy: 'false'\r\n                    }\r\n                },\r\n                under_material: {\r\n                    Name: 'minecraft:dirt'\r\n                },\r\n                underwater_material: {\r\n                    Name: 'minecraft:gravel'\r\n                }\r\n            }\r\n        })\r\n    }));\r\n}\r\nexports.initSurfaceBuilderSchemas = initSurfaceBuilderSchemas;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.initTemplatePoolSchemas = void 0;\r\nconst core_1 = require(\"@mcschema/core\");\r\nrequire(\"./ProcessorList\");\r\nfunction initTemplatePoolSchemas(schemas, collections) {\r\n    const Reference = core_1.Reference.bind(undefined, schemas);\r\n    const StringNode = core_1.StringNode.bind(undefined, collections);\r\n    const Processors = core_1.ChoiceNode([\r\n        {\r\n            type: 'string',\r\n            node: StringNode({ validator: 'resource', params: { pool: '$worldgen/processor_list' } }),\r\n            change: v => undefined\r\n        },\r\n        {\r\n            type: 'object',\r\n            node: Reference('processor_list'),\r\n            change: v => ({\r\n                processors: [{\r\n                        \"processor_type\": \"minecraft:nop\"\r\n                    }]\r\n            })\r\n        }\r\n    ]);\r\n    schemas.register('template_pool', core_1.Mod(core_1.ObjectNode({\r\n        name: StringNode(),\r\n        fallback: StringNode(),\r\n        elements: core_1.ListNode(Reference('template_weighted_element'))\r\n    }, { context: 'template_pool' }), {\r\n        default: () => ({\r\n            fallback: 'minecraft:empty',\r\n            elements: [\r\n                {\r\n                    weight: 1,\r\n                    element: {\r\n                        element_type: 'minecraft:single_pool_element',\r\n                        projection: 'rigid',\r\n                        processors: 'minecraft:empty'\r\n                    }\r\n                }\r\n            ]\r\n        })\r\n    }));\r\n    schemas.register('template_weighted_element', core_1.Mod(core_1.ObjectNode({\r\n        weight: core_1.NumberNode({ integer: true, min: 1 }),\r\n        element: Reference('template_element')\r\n    }, { category: 'pool' }), {\r\n        default: () => ({\r\n            weight: 1,\r\n            element: {\r\n                element_type: 'minecraft:single_pool_element',\r\n                projection: 'rigid',\r\n                processors: 'minecraft:empty'\r\n            }\r\n        })\r\n    }));\r\n    schemas.register('template_element', core_1.Mod(core_1.ObjectNode({\r\n        element_type: StringNode({ validator: 'resource', params: { pool: 'worldgen/structure_pool_element' } }),\r\n        projection: StringNode({ enum: ['rigid', 'terrain_matching'] }),\r\n        [core_1.Switch]: [{ push: 'element_type' }],\r\n        [core_1.Case]: {\r\n            'minecraft:feature_pool_element': {\r\n                feature: StringNode({ validator: 'resource', params: { pool: '$worldgen/configured_feature' } })\r\n            },\r\n            'minecraft:legacy_single_pool_element': {\r\n                location: StringNode({ validator: 'resource', params: { pool: '$structure' } }),\r\n                processors: Processors\r\n            },\r\n            'minecraft:list_pool_element': {\r\n                elements: core_1.ListNode(Reference('template_element'))\r\n            },\r\n            'minecraft:single_pool_element': {\r\n                location: StringNode({ validator: 'resource', params: { pool: '$structure' } }),\r\n                processors: Processors\r\n            }\r\n        }\r\n    }, { context: 'template_element', disableSwitchContext: true }), {\r\n        default: () => ({\r\n            element_type: 'minecraft:single_pool_element',\r\n            projection: 'rigid',\r\n            processors: 'minecraft:empty'\r\n        })\r\n    }));\r\n}\r\nexports.initTemplatePoolSchemas = initTemplatePoolSchemas;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.initWorldgenSchemas = void 0;\r\nconst Biome_1 = require(\"./Biome\");\r\nconst Carver_1 = require(\"./Carver\");\r\nconst Decorator_1 = require(\"./Decorator\");\r\nconst Feature_1 = require(\"./Feature\");\r\nconst NoiseSettings_1 = require(\"./NoiseSettings\");\r\nconst ProcessorList_1 = require(\"./ProcessorList\");\r\nconst StructureFeature_1 = require(\"./StructureFeature\");\r\nconst SurfaceBuilder_1 = require(\"./SurfaceBuilder\");\r\nconst TemplatePool_1 = require(\"./TemplatePool\");\r\nfunction initWorldgenSchemas(schemas, collections) {\r\n    Biome_1.initBiomeSchemas(schemas, collections);\r\n    Carver_1.initCarverSchemas(schemas, collections);\r\n    Decorator_1.initDecoratorSchemas(schemas, collections);\r\n    Feature_1.initFeatureSchemas(schemas, collections);\r\n    NoiseSettings_1.initNoiseSettingsSchemas(schemas, collections);\r\n    ProcessorList_1.initProcessorListSchemas(schemas, collections);\r\n    StructureFeature_1.initStructureFeatureSchemas(schemas, collections);\r\n    SurfaceBuilder_1.initSurfaceBuilderSchemas(schemas, collections);\r\n    TemplatePool_1.initTemplatePoolSchemas(schemas, collections);\r\n}\r\nexports.initWorldgenSchemas = initWorldgenSchemas;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.initWorldSettingsSchemas = void 0;\r\nconst core_1 = require(\"@mcschema/core\");\r\nfunction initWorldSettingsSchemas(schemas, collections) {\r\n    const Reference = core_1.Reference.bind(undefined, schemas);\r\n    const StringNode = core_1.StringNode.bind(undefined, collections);\r\n    schemas.register('world_settings', core_1.Mod(core_1.ObjectNode({\r\n        generate_features: core_1.BooleanNode(),\r\n        bonus_chest: core_1.BooleanNode(),\r\n        seed: core_1.NumberNode({ integer: true }),\r\n        dimensions: core_1.MapNode(StringNode({ validator: 'resource', params: { pool: '$dimension' } }), Reference('dimension'))\r\n    }, { context: 'world_settings' }), {\r\n        default: () => {\r\n            const seed = Math.floor(Math.random() * (4294967296)) - 2147483648;\r\n            return {\r\n                generate_features: true,\r\n                bonus_chest: false,\r\n                seed,\r\n                dimensions: {\r\n                    'minecraft:overworld': {\r\n                        type: 'minecraft:overworld',\r\n                        generator: {\r\n                            type: 'minecraft:noise',\r\n                            seed,\r\n                            biome_source: {\r\n                                type: 'minecraft:vanilla_layered',\r\n                                seed\r\n                            },\r\n                            settings: 'minecraft:overworld',\r\n                        }\r\n                    },\r\n                    'minecraft:the_nether': {\r\n                        type: 'minecraft:the_nether',\r\n                        generator: {\r\n                            type: 'minecraft:noise',\r\n                            seed,\r\n                            biome_source: {\r\n                                type: 'minecraft:multi_noise',\r\n                                seed,\r\n                                humidity_noise: {\r\n                                    firstOctave: -7,\r\n                                    amplitudes: [1.0, 1.0]\r\n                                },\r\n                                altitude_noise: {\r\n                                    firstOctave: -7,\r\n                                    amplitudes: [1.0, 1.0]\r\n                                },\r\n                                weirdness_noise: {\r\n                                    firstOctave: -7,\r\n                                    amplitudes: [1.0, 1.0]\r\n                                },\r\n                                temperature_noise: {\r\n                                    firstOctave: -7,\r\n                                    amplitudes: [1.0, 1.0]\r\n                                },\r\n                                biomes: [\r\n                                    {\r\n                                        parameters: { altitude: 0.0, weirdness: 0.0, offset: 0.0, temperature: 0.0, humidity: 0.0 },\r\n                                        biome: 'minecraft:nether_wastes'\r\n                                    },\r\n                                    {\r\n                                        parameters: { altitude: 0.0, weirdness: 0.0, offset: 0.0, temperature: 0.0, humidity: -0.5 },\r\n                                        biome: 'minecraft:soul_sand_valley'\r\n                                    },\r\n                                    {\r\n                                        parameters: { altitude: 0.0, weirdness: 0.0, offset: 0.0, temperature: 0.4, humidity: 0.0 },\r\n                                        biome: 'minecraft:crimson_forest'\r\n                                    },\r\n                                    {\r\n                                        parameters: { altitude: 0.0, weirdness: 0.0, offset: 0.375, temperature: 0.0, humidity: 0.5 },\r\n                                        biome: 'minecraft:warped_forest'\r\n                                    },\r\n                                    {\r\n                                        parameters: { altitude: 0.0, weirdness: 0.0, offset: 0.175, temperature: -0.5, humidity: 0.0 },\r\n                                        biome: 'minecraft:basalt_deltas'\r\n                                    }\r\n                                ]\r\n                            },\r\n                            settings: 'minecraft:nether'\r\n                        }\r\n                    },\r\n                    'minecraft:the_end': {\r\n                        type: \"minecraft:the_end\",\r\n                        generator: {\r\n                            type: \"minecraft:noise\",\r\n                            seed,\r\n                            biome_source: {\r\n                                type: \"minecraft:the_end\",\r\n                                seed\r\n                            },\r\n                            settings: \"minecraft:end\"\r\n                        }\r\n                    }\r\n                }\r\n            };\r\n        }\r\n    }));\r\n}\r\nexports.initWorldSettingsSchemas = initWorldSettingsSchemas;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.initSchemas = void 0;\r\nconst Advancement_1 = require(\"./Advancement\");\r\nconst Common_1 = require(\"./Common\");\r\nconst Condition_1 = require(\"./Condition\");\r\nconst Dimension_1 = require(\"./Dimension\");\r\nconst DimensionType_1 = require(\"./DimensionType\");\r\nconst LootTable_1 = require(\"./LootTable\");\r\nconst PackMcmeta_1 = require(\"./PackMcmeta\");\r\nconst Predicates_1 = require(\"./Predicates\");\r\nconst Recipe_1 = require(\"./Recipe\");\r\nconst Tags_1 = require(\"./Tags\");\r\nconst TextComponent_1 = require(\"./TextComponent\");\r\nconst worldgen_1 = require(\"./worldgen\");\r\nconst WorldSettings_1 = require(\"./WorldSettings\");\r\nfunction initSchemas(schemas, collections) {\r\n    // `Common.ts` is the only file that has exports. It should be initialized first. \r\n    Common_1.initCommonSchemas(schemas, collections);\r\n    Advancement_1.initAdvancementSchemas(schemas, collections);\r\n    Condition_1.initConditionSchemas(schemas, collections);\r\n    DimensionType_1.initDimensionTypeSchemas(schemas, collections);\r\n    Dimension_1.initDimensionSchemas(schemas, collections);\r\n    LootTable_1.initLootTableSchemas(schemas, collections);\r\n    PackMcmeta_1.initPackMcmetaSchemas(schemas, collections);\r\n    Predicates_1.initPredicatesSchemas(schemas, collections);\r\n    Recipe_1.initRecipeSchemas(schemas, collections);\r\n    Tags_1.initTagsSchemas(schemas, collections);\r\n    TextComponent_1.initTextComponentSchemas(schemas, collections);\r\n    worldgen_1.initWorldgenSchemas(schemas, collections);\r\n    WorldSettings_1.initWorldSettingsSchemas(schemas, collections);\r\n}\r\nexports.initSchemas = initSchemas;\r\n","\"use strict\";\r\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}));\r\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n});\r\nvar __importStar = (this && this.__importStar) || function (mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.getSchemas = exports.getCollections = void 0;\r\nconst core_1 = require(\"@mcschema/core\");\r\nconst Collections_1 = require(\"./Collections\");\r\nconst schemas_1 = require(\"./schemas\");\r\nexports.lootContext = __importStar(require(\"./LootContext\"));\r\nfunction getCollections() {\r\n    const collections = new core_1.CollectionRegistry();\r\n    Collections_1.initCollections(collections);\r\n    return collections;\r\n}\r\nexports.getCollections = getCollections;\r\n/**\r\n * @param collections The CollectionRegistry for this version. Note that apart from\r\n * the built-in collections, the client of this module is responsible for futhermore\r\n * adding the vanilla registries to it: the collection IDs shouldn't contain the\r\n * namespace (`minecraft:`) part, while the values within the collections should.\r\n *\r\n * @example\r\n * for (const key in VANILLA_REGISTRIES>) {\r\n *   collections.register(\r\n *     key.replace(/^minecraft:/, ''),\r\n *     Object.keys(VANILLA_REGISTRIES[key].entries)\r\n *   )\r\n * }\r\n */\r\nfunction getSchemas(collections) {\r\n    const schemas = new core_1.SchemaRegistry();\r\n    schemas_1.initSchemas(schemas, collections);\r\n    return schemas;\r\n}\r\nexports.getSchemas = getSchemas;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.initCollections = void 0;\r\nfunction initCollections(collections) {\r\n    collections.register('advancement_trigger', [\r\n        'minecraft:bee_nest_destroyed',\r\n        'minecraft:bred_animals',\r\n        'minecraft:brewed_potion',\r\n        'minecraft:changed_dimension',\r\n        'minecraft:channeled_lightning',\r\n        'minecraft:construct_beacon',\r\n        'minecraft:consume_item',\r\n        'minecraft:cured_zombie_villager',\r\n        'minecraft:effects_changed',\r\n        'minecraft:enchanted_item',\r\n        'minecraft:enter_block',\r\n        'minecraft:entity_hurt_player',\r\n        'minecraft:entity_killed_player',\r\n        'minecraft:filled_bucket',\r\n        'minecraft:fishing_rod_hooked',\r\n        'minecraft:hero_of_the_village',\r\n        'minecraft:impossible',\r\n        'minecraft:inventory_changed',\r\n        'minecraft:item_durability_changed',\r\n        'minecraft:item_used_on_block',\r\n        'minecraft:killed_by_crossbow',\r\n        'minecraft:levitation',\r\n        'minecraft:lightning_strike',\r\n        'minecraft:location',\r\n        'minecraft:nether_travel',\r\n        'minecraft:placed_block',\r\n        'minecraft:player_generates_container_loot',\r\n        'minecraft:player_hurt_entity',\r\n        'minecraft:player_interacted_with_entity',\r\n        'minecraft:player_killed_entity',\r\n        'minecraft:recipe_unlocked',\r\n        'minecraft:shot_crossbow',\r\n        'minecraft:slept_in_bed',\r\n        'minecraft:slide_down_block',\r\n        'minecraft:started_riding',\r\n        'minecraft:summoned_entity',\r\n        'minecraft:tame_animal',\r\n        'minecraft:target_hit',\r\n        'minecraft:tick',\r\n        'minecraft:thrown_item_picked_up_by_entity',\r\n        'minecraft:used_ender_eye',\r\n        'minecraft:used_totem',\r\n        'minecraft:using_item',\r\n        'minecraft:villager_trade',\r\n        'minecraft:voluntary_exile'\r\n    ]);\r\n    collections.register('dimension', [\r\n        'minecraft:overworld',\r\n        'minecraft:the_nether',\r\n        'minecraft:the_end'\r\n    ]);\r\n    collections.register('dimension_type', [\r\n        'minecraft:overworld',\r\n        'minecraft:the_nether',\r\n        'minecraft:the_end'\r\n    ]);\r\n    collections.register('keybind', [\r\n        'key.advancements',\r\n        'key.attack',\r\n        'key.back',\r\n        'key.chat',\r\n        'key.command',\r\n        'key.drop',\r\n        'key.forward',\r\n        'key.fullscreen',\r\n        'key.hotbar.1',\r\n        'key.hotbar.2',\r\n        'key.hotbar.3',\r\n        'key.hotbar.4',\r\n        'key.hotbar.5',\r\n        'key.hotbar.6',\r\n        'key.hotbar.7',\r\n        'key.hotbar.8',\r\n        'key.hotbar.9',\r\n        'key.inventory',\r\n        'key.jump',\r\n        'key.left',\r\n        'key.loadToolbarActivator',\r\n        'key.pickItem',\r\n        'key.playerlist',\r\n        'key.right',\r\n        'key.saveToolbarActivator',\r\n        'key.screenshot',\r\n        'key.smoothCamera',\r\n        'key.sneak',\r\n        'key.spectatorOutlines',\r\n        'key.sprint',\r\n        'key.swapOffhand',\r\n        'key.togglePerspective',\r\n        'key.use'\r\n    ]);\r\n    collections.register('slot', [\r\n        'mainhand',\r\n        'offhand',\r\n        'head',\r\n        'chest',\r\n        'legs',\r\n        'feet'\r\n    ]);\r\n    collections.register('gamemode', [\r\n        'survival',\r\n        'creative',\r\n        'adventure',\r\n        'spectator'\r\n    ]);\r\n    collections.register('worldgen/noise_settings', [\r\n        'minecraft:overworld',\r\n        'minecraft:nether',\r\n        'minecraft:end',\r\n        'minecraft:amplified',\r\n        'minecraft:caves',\r\n        'minecraft:floating_islands'\r\n    ]);\r\n    collections.register('entity_source', [\r\n        'this',\r\n        'killer',\r\n        'direct_killer',\r\n        'killer_player'\r\n    ]);\r\n    collections.register('copy_source', [\r\n        'block_entity',\r\n        'this',\r\n        'killer',\r\n        'killer_player'\r\n    ]);\r\n    collections.register('loot_table_apply_bonus_formula', [\r\n        'minecraft:uniform_bonus_count',\r\n        'minecraft:binomial_with_bonus_count',\r\n        'minecraft:ore_drops'\r\n    ]);\r\n    collections.register('map_decoration', [\r\n        'mansion',\r\n        'monument',\r\n        'player',\r\n        'frame',\r\n        'red_marker',\r\n        'blue_marker',\r\n        'target_x',\r\n        'target_point',\r\n        'player_off_map',\r\n        'player_off_limits',\r\n        'red_x',\r\n        'banner_white',\r\n        'banner_orange',\r\n        'banner_magenta',\r\n        'banner_light_blue',\r\n        'banner_yellow',\r\n        'banner_lime',\r\n        'banner_pink',\r\n        'banner_gray',\r\n        'banner_light_gray',\r\n        'banner_cyan',\r\n        'banner_purple',\r\n        'banner_blue',\r\n        'banner_brown',\r\n        'banner_green',\r\n        'banner_red',\r\n        'banner_black'\r\n    ]);\r\n    collections.register('map_feature', [\r\n        'bastion_remnant',\r\n        'buried_treasure',\r\n        'desert_pyramid',\r\n        'endcity',\r\n        'fortress',\r\n        'igloo',\r\n        'jungle_pyramid',\r\n        'mansion',\r\n        'mineshaft',\r\n        'monument',\r\n        'nether_fossil',\r\n        'ocean_ruin',\r\n        'pillager_outpost',\r\n        'ruined_portal',\r\n        'shipwreck',\r\n        'stronghold',\r\n        'swamp_hut',\r\n        'village'\r\n    ]);\r\n    collections.register('recipe_group', [\r\n        'bed',\r\n        'light_gray_dye',\r\n        'iron_ingot',\r\n        'wooden_stairs',\r\n        'black_dye',\r\n        'stained_terracotta',\r\n        'dyed_bed',\r\n        'magenta_dye',\r\n        'bark',\r\n        'rabbit_stew',\r\n        'light_blue_dye',\r\n        'wooden_fence_gate',\r\n        'planks',\r\n        'stained_glass',\r\n        'wooden_door',\r\n        'stained_glass_pane',\r\n        'wooden_fence',\r\n        'sticks',\r\n        'concrete_powder',\r\n        'wooden_pressure_plate',\r\n        'boat',\r\n        'brown_dye',\r\n        'yellow_dye',\r\n        'bonemeal',\r\n        'red_dye',\r\n        'wooden_trapdoor',\r\n        'wooden_button',\r\n        'gold_ingot',\r\n        'pink_dye',\r\n        'wooden_slab',\r\n        'orange_dye',\r\n        'carpet',\r\n        'sign',\r\n        'wool',\r\n        'sugar',\r\n        'blue_dye',\r\n        'white_dye',\r\n        'banner',\r\n        'netherite_ingot'\r\n    ]);\r\n    collections.register('worldgen/configured_feature', [\r\n        'minecraft:acacia',\r\n        'minecraft:bamboo_light',\r\n        'minecraft:bamboo_vegetation',\r\n        'minecraft:bamboo',\r\n        'minecraft:basalt_blobs',\r\n        'minecraft:basalt_pillar',\r\n        'minecraft:birch_bees_0002',\r\n        'minecraft:birch_bees_002',\r\n        'minecraft:birch_bees_005',\r\n        'minecraft:birch_other',\r\n        'minecraft:birch_tall',\r\n        'minecraft:birch',\r\n        'minecraft:blackstone_blobs',\r\n        'minecraft:blue_ice',\r\n        'minecraft:bonus_chest',\r\n        'minecraft:brown_mushroom_giant',\r\n        'minecraft:brown_mushroom_nether',\r\n        'minecraft:brown_mushroom_normal',\r\n        'minecraft:brown_mushroom_swamp',\r\n        'minecraft:brown_mushroom_taiga',\r\n        'minecraft:chorus_plant',\r\n        'minecraft:crimson_forest_vegetation',\r\n        'minecraft:crimson_fungi_planted',\r\n        'minecraft:crimson_fungi',\r\n        'minecraft:dark_forest_vegetation_brown',\r\n        'minecraft:dark_forest_vegetation_red',\r\n        'minecraft:dark_oak',\r\n        'minecraft:delta',\r\n        'minecraft:desert_well',\r\n        'minecraft:disk_clay',\r\n        'minecraft:disk_gravel',\r\n        'minecraft:disk_sand',\r\n        'minecraft:end_gateway_delayed',\r\n        'minecraft:end_gateway',\r\n        'minecraft:end_island_decorated',\r\n        'minecraft:end_island',\r\n        'minecraft:end_spike',\r\n        'minecraft:fancy_oak_bees_0002',\r\n        'minecraft:fancy_oak_bees_002',\r\n        'minecraft:fancy_oak_bees_005',\r\n        'minecraft:fancy_oak',\r\n        'minecraft:flower_default',\r\n        'minecraft:flower_forest',\r\n        'minecraft:flower_plain_decorated',\r\n        'minecraft:flower_plain',\r\n        'minecraft:flower_swamp',\r\n        'minecraft:flower_warm',\r\n        'minecraft:forest_flower_trees',\r\n        'minecraft:forest_flower_vegetation_common',\r\n        'minecraft:forest_flower_vegetation',\r\n        'minecraft:forest_rock',\r\n        'minecraft:fossil',\r\n        'minecraft:freeze_top_layer',\r\n        'minecraft:glowstone_extra',\r\n        'minecraft:glowstone',\r\n        'minecraft:huge_brown_mushroom',\r\n        'minecraft:huge_red_mushroom',\r\n        'minecraft:ice_patch',\r\n        'minecraft:ice_spike',\r\n        'minecraft:iceberg_blue',\r\n        'minecraft:iceberg_packed',\r\n        'minecraft:jungle_bush',\r\n        'minecraft:jungle_tree_no_vine',\r\n        'minecraft:jungle_tree',\r\n        'minecraft:kelp_cold',\r\n        'minecraft:kelp_warm',\r\n        'minecraft:lake_lava',\r\n        'minecraft:lake_water',\r\n        'minecraft:large_basalt_columns',\r\n        'minecraft:mega_jungle_tree',\r\n        'minecraft:mega_pine',\r\n        'minecraft:mega_spruce',\r\n        'minecraft:monster_room',\r\n        'minecraft:mushroom_field_vegetation',\r\n        'minecraft:nether_sprouts',\r\n        'minecraft:oak_badlands',\r\n        'minecraft:oak_bees_0002',\r\n        'minecraft:oak_bees_002',\r\n        'minecraft:oak_bees_005',\r\n        'minecraft:oak',\r\n        'minecraft:ore_andesite',\r\n        'minecraft:ore_blackstone',\r\n        'minecraft:ore_coal',\r\n        'minecraft:ore_debris_large',\r\n        'minecraft:ore_debris_small',\r\n        'minecraft:ore_diamond',\r\n        'minecraft:ore_diorite',\r\n        'minecraft:ore_dirt',\r\n        'minecraft:ore_emerald',\r\n        'minecraft:ore_gold_deltas',\r\n        'minecraft:ore_gold_extra',\r\n        'minecraft:ore_gold_nether',\r\n        'minecraft:ore_gold',\r\n        'minecraft:ore_granite',\r\n        'minecraft:ore_gravel_nether',\r\n        'minecraft:ore_gravel',\r\n        'minecraft:ore_infested',\r\n        'minecraft:ore_iron',\r\n        'minecraft:ore_lapis',\r\n        'minecraft:ore_magma',\r\n        'minecraft:ore_quartz_deltas',\r\n        'minecraft:ore_quartz_nether',\r\n        'minecraft:ore_redstone',\r\n        'minecraft:ore_soul_sand',\r\n        'minecraft:patch_berry_bush',\r\n        'minecraft:patch_berry_decorated',\r\n        'minecraft:patch_berry_sparse',\r\n        'minecraft:patch_brown_mushroom',\r\n        'minecraft:patch_cactus_decorated',\r\n        'minecraft:patch_cactus_desert',\r\n        'minecraft:patch_cactus',\r\n        'minecraft:patch_crimson_roots',\r\n        'minecraft:patch_dead_bush_2',\r\n        'minecraft:patch_dead_bush_badlands',\r\n        'minecraft:patch_dead_bush',\r\n        'minecraft:patch_fire',\r\n        'minecraft:patch_grass_badlands',\r\n        'minecraft:patch_grass_forest',\r\n        'minecraft:patch_grass_jungle',\r\n        'minecraft:patch_grass_normal',\r\n        'minecraft:patch_grass_plain',\r\n        'minecraft:patch_grass_savanna',\r\n        'minecraft:patch_grass_taiga_2',\r\n        'minecraft:patch_grass_taiga',\r\n        'minecraft:patch_large_fern',\r\n        'minecraft:patch_melon',\r\n        'minecraft:patch_pumpkin',\r\n        'minecraft:patch_red_mushroom',\r\n        'minecraft:patch_soul_fire',\r\n        'minecraft:patch_sugar_cane_badlands',\r\n        'minecraft:patch_sugar_cane_desert',\r\n        'minecraft:patch_sugar_cane_swamp',\r\n        'minecraft:patch_sugar_cane',\r\n        'minecraft:patch_sunflower',\r\n        'minecraft:patch_taiga_grass',\r\n        'minecraft:patch_tall_grass_2',\r\n        'minecraft:patch_tall_grass',\r\n        'minecraft:patch_waterlilly',\r\n        'minecraft:pile_hay',\r\n        'minecraft:pile_ice',\r\n        'minecraft:pile_melon',\r\n        'minecraft:pile_pumpkin',\r\n        'minecraft:pile_snow',\r\n        'minecraft:pine',\r\n        'minecraft:plain_vegetation',\r\n        'minecraft:red_mushroom_giant',\r\n        'minecraft:red_mushroom_nether',\r\n        'minecraft:red_mushroom_normal',\r\n        'minecraft:red_mushroom_swamp',\r\n        'minecraft:red_mushroom_taiga',\r\n        'minecraft:sea_pickle',\r\n        'minecraft:seagrass_cold',\r\n        'minecraft:seagrass_deep_cold',\r\n        'minecraft:seagrass_deep_warm',\r\n        'minecraft:seagrass_deep',\r\n        'minecraft:seagrass_normal',\r\n        'minecraft:seagrass_river',\r\n        'minecraft:seagrass_simple',\r\n        'minecraft:seagrass_swamp',\r\n        'minecraft:seagrass_warm',\r\n        'minecraft:small_basalt_columns',\r\n        'minecraft:spring_closed_double',\r\n        'minecraft:spring_closed',\r\n        'minecraft:spring_delta',\r\n        'minecraft:spring_lava_double',\r\n        'minecraft:spring_lava',\r\n        'minecraft:spring_open',\r\n        'minecraft:spring_water',\r\n        'minecraft:spruce_snowy',\r\n        'minecraft:spruce',\r\n        'minecraft:super_birch_bees_0002',\r\n        'minecraft:swamp_tree',\r\n        'minecraft:taiga_vegetation',\r\n        'minecraft:trees_birch',\r\n        'minecraft:trees_giant_spruce',\r\n        'minecraft:trees_giant',\r\n        'minecraft:trees_jungle_edge',\r\n        'minecraft:trees_jungle',\r\n        'minecraft:trees_mountain_edge',\r\n        'minecraft:trees_mountain',\r\n        'minecraft:trees_savanna',\r\n        'minecraft:trees_shattered_savanna',\r\n        'minecraft:trees_water',\r\n        'minecraft:twisting_vines',\r\n        'minecraft:vines',\r\n        'minecraft:void_start_platform',\r\n        'minecraft:warm_ocean_vegetation',\r\n        'minecraft:warped_forest_vegetation',\r\n        'minecraft:warped_fungi_planted',\r\n        'minecraft:warped_fungi',\r\n        'minecraft:weeping_vines'\r\n    ]);\r\n    collections.register('worldgen/configured_structure_feature', [\r\n        'minecraft:bastion_remnant',\r\n        'minecraft:buried_treasure',\r\n        'minecraft:desert_pyramid',\r\n        'minecraft:end_city',\r\n        'minecraft:fortress',\r\n        'minecraft:igloo',\r\n        'minecraft:jungle_pyramid',\r\n        'minecraft:mansion',\r\n        'minecraft:mineshaft_mesa',\r\n        'minecraft:mineshaft',\r\n        'minecraft:monument',\r\n        'minecraft:nether_fossil',\r\n        'minecraft:ocean_ruin_cold',\r\n        'minecraft:ocean_ruin_warm',\r\n        'minecraft:pillager_outpost',\r\n        'minecraft:ruined_portal_desert',\r\n        'minecraft:ruined_portal_jungle',\r\n        'minecraft:ruined_portal_mountain',\r\n        'minecraft:ruined_portal_nether',\r\n        'minecraft:ruined_portal_ocean',\r\n        'minecraft:ruined_portal_swamp',\r\n        'minecraft:ruined_portal',\r\n        'minecraft:shipwreck_beached',\r\n        'minecraft:shipwreck',\r\n        'minecraft:stronghold',\r\n        'minecraft:swamp_hut',\r\n        'minecraft:village_desert',\r\n        'minecraft:village_plains',\r\n        'minecraft:village_savanna',\r\n        'minecraft:village_snowy',\r\n        'minecraft:village_taiga'\r\n    ]);\r\n    collections.register('worldgen/configured_surface_builder', [\r\n        'minecraft:badlands',\r\n        'minecraft:basalt_deltas',\r\n        'minecraft:crimson_forest',\r\n        'minecraft:desert',\r\n        'minecraft:end',\r\n        'minecraft:eroded_badlands',\r\n        'minecraft:frozen_ocean',\r\n        'minecraft:full_sand',\r\n        'minecraft:giant_tree_taiga',\r\n        'minecraft:grass',\r\n        'minecraft:gravelly_mountain',\r\n        'minecraft:ice_spikes',\r\n        'minecraft:mountain',\r\n        'minecraft:mycelium',\r\n        'minecraft:nether',\r\n        'minecraft:nope',\r\n        'minecraft:ocean_sand',\r\n        'minecraft:shattered_savanna',\r\n        'minecraft:soul_sand_valley',\r\n        'minecraft:stone',\r\n        'minecraft:swamp',\r\n        'minecraft:warped_forest',\r\n        'minecraft:wooded_badlands'\r\n    ]);\r\n    collections.register('biome_category', [\r\n        'beach',\r\n        'desert',\r\n        'extreme_hills',\r\n        'forest',\r\n        'icy',\r\n        'jungle',\r\n        'mesa',\r\n        'mushroom',\r\n        'nether',\r\n        'none',\r\n        'ocean',\r\n        'plains',\r\n        'river',\r\n        'savanna',\r\n        'swamp',\r\n        'taiga',\r\n        'the_end'\r\n    ]);\r\n    collections.register('heightmap_type', [\r\n        'MOTION_BLOCKING',\r\n        'MOTION_BLOCKING_NO_LEAVES',\r\n        'OCEAN_FLOOR',\r\n        'OCEAN_FLOOR_WG',\r\n        'WORLD_SURFACE',\r\n        'WORLD_SURFACE_WG'\r\n    ]);\r\n    collections.register('generation_step', [\r\n        'air',\r\n        'liquid'\r\n    ]);\r\n    collections.register('loot_context_type', [\r\n        'minecraft:empty',\r\n        'minecraft:chest',\r\n        'minecraft:command',\r\n        'minecraft:selector',\r\n        'minecraft:fishing',\r\n        'minecraft:entity',\r\n        'minecraft:gift',\r\n        'minecraft:barter',\r\n        'minecraft:advancement_reward',\r\n        'minecraft:advancement_entity',\r\n        'minecraft:generic',\r\n        'minecraft:block'\r\n    ]);\r\n    collections.register('banner_pattern', [\r\n        'base',\r\n        'square_bottom_left',\r\n        'square_bottom_right',\r\n        'square_top_left',\r\n        'square_top_right',\r\n        'stripe_bottom',\r\n        'stripe_top',\r\n        'stripe_left',\r\n        'stripe_right',\r\n        'stripe_center',\r\n        'stripe_middle',\r\n        'stripe_downright',\r\n        'stripe_downleft',\r\n        'small_stripes',\r\n        'cross',\r\n        'straight_cross',\r\n        'triangle_bottom',\r\n        'triangle_top',\r\n        'triangles_bottom',\r\n        'triangles_top',\r\n        'diagonal_left',\r\n        'diagonal_up_right',\r\n        'diagonal_up_left',\r\n        'diagonal_right',\r\n        'circle',\r\n        'rhombus',\r\n        'half_vertical',\r\n        'half_horizontal',\r\n        'half_vertical_right',\r\n        'half_horizontal_bottom',\r\n        'border',\r\n        'curly_border',\r\n        'gradient',\r\n        'gradient_up',\r\n        'bricks',\r\n        'globe',\r\n        'creeper',\r\n        'skull',\r\n        'flower',\r\n        'mojang',\r\n        'piglin'\r\n    ]);\r\n    collections.register('dye_color', [\r\n        'white',\r\n        'orange',\r\n        'magenta',\r\n        'light_blue',\r\n        'yellow',\r\n        'lime',\r\n        'pink',\r\n        'gray',\r\n        'light_gray',\r\n        'cyan',\r\n        'purple',\r\n        'blue',\r\n        'brown',\r\n        'green',\r\n        'red',\r\n        'black'\r\n    ]);\r\n}\r\nexports.initCollections = initCollections;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.initAdvancementSchemas = void 0;\r\nconst core_1 = require(\"@mcschema/core\");\r\nfunction initAdvancementSchemas(schemas, collections) {\r\n    const Reference = core_1.Reference.bind(undefined, schemas);\r\n    const StringNode = core_1.StringNode.bind(undefined, collections);\r\n    const EntityPredicate = core_1.ChoiceNode([\r\n        {\r\n            type: 'object',\r\n            node: core_1.Opt(Reference('entity_predicate')),\r\n            change: v => { var _a, _b; return (_b = (_a = v[0]) === null || _a === void 0 ? void 0 : _a.predicate) !== null && _b !== void 0 ? _b : ({}); }\r\n        },\r\n        {\r\n            type: 'list',\r\n            node: core_1.ListNode(Reference('condition')),\r\n            change: v => [{\r\n                    condition: 'minecraft:entity_properties',\r\n                    predicate: v\r\n                }]\r\n        }\r\n    ], { context: 'conditions' });\r\n    schemas.register('advancement', core_1.Mod(core_1.ObjectNode({\r\n        display: core_1.Opt(core_1.Mod(core_1.ObjectNode({\r\n            icon: core_1.ObjectNode({\r\n                item: StringNode({ validator: 'resource', params: { pool: 'item' } }),\r\n                nbt: core_1.Opt(StringNode({ validator: 'nbt', params: { registry: { category: 'minecraft:item', id: ['pop', { push: 'item' }] } } }))\r\n            }),\r\n            title: Reference('text_component'),\r\n            description: Reference('text_component'),\r\n            background: core_1.Opt(StringNode()),\r\n            frame: core_1.Opt(StringNode({ enum: ['task', 'challenge', 'goal'] })),\r\n            show_toast: core_1.Opt(core_1.BooleanNode()),\r\n            announce_to_chat: core_1.Opt(core_1.BooleanNode()),\r\n            hidden: core_1.Opt(core_1.BooleanNode())\r\n        }), {\r\n            default: () => ({\r\n                icon: {\r\n                    item: 'minecraft:stone'\r\n                },\r\n                title: '',\r\n                description: ''\r\n            })\r\n        })),\r\n        parent: core_1.Opt(StringNode({ validator: 'resource', params: { pool: '$advancement' } })),\r\n        criteria: core_1.MapNode(StringNode(), Reference('advancement_criteria')),\r\n        requirements: core_1.Opt(core_1.ListNode(core_1.ListNode(StringNode() // TODO: add validation\r\n        ))),\r\n        rewards: core_1.Opt(core_1.ObjectNode({\r\n            function: core_1.Opt(StringNode({ validator: 'resource', params: { pool: '$function' } })),\r\n            loot: core_1.Opt(core_1.ListNode(StringNode({ validator: 'resource', params: { pool: '$loot_table' } }))),\r\n            recipes: core_1.Opt(core_1.ListNode(StringNode({ validator: 'resource', params: { pool: '$recipe' } }))),\r\n            experience: core_1.Opt(core_1.NumberNode({ integer: true }))\r\n        })),\r\n    }, { context: 'advancement' }), {\r\n        default: () => ({\r\n            criteria: {\r\n                requirement: {\r\n                    trigger: 'minecraft:location'\r\n                }\r\n            }\r\n        })\r\n    }));\r\n    schemas.register('advancement_criteria', core_1.ObjectNode({\r\n        trigger: StringNode({ validator: 'resource', params: { pool: collections.get('advancement_trigger') } }),\r\n        conditions: core_1.Opt(core_1.ObjectNode({\r\n            player: core_1.Mod(EntityPredicate, {\r\n                enabled: path => path.pop().push('trigger').get() !== 'minecraft:impossible'\r\n            }),\r\n            [core_1.Switch]: ['pop', { push: 'trigger' }],\r\n            [core_1.Case]: {\r\n                'minecraft:bee_nest_destroyed': {\r\n                    block: core_1.Opt(StringNode({ validator: 'resource', params: { pool: 'block' } })),\r\n                    num_bees_inside: core_1.Opt(core_1.NumberNode({ integer: true })),\r\n                    item: core_1.Opt(Reference('item_predicate'))\r\n                },\r\n                'minecraft:bred_animals': {\r\n                    parent: EntityPredicate,\r\n                    partner: EntityPredicate,\r\n                    child: EntityPredicate\r\n                },\r\n                'minecraft:brewed_potion': {\r\n                    potion: core_1.Opt(StringNode({ validator: 'resource', params: { pool: 'potion' } }))\r\n                },\r\n                'minecraft:changed_dimension': {\r\n                    from: core_1.Opt(StringNode({ validator: 'resource', params: { pool: '$dimension' } })),\r\n                    to: core_1.Opt(StringNode({ validator: 'resource', params: { pool: '$dimension' } }))\r\n                },\r\n                'minecraft:channeled_lightning': {\r\n                    victims: core_1.Opt(core_1.ListNode(EntityPredicate))\r\n                },\r\n                'minecraft:construct_beacon': {\r\n                    level: Reference('int_bounds')\r\n                },\r\n                'minecraft:consume_item': {\r\n                    item: core_1.Opt(Reference('item_predicate'))\r\n                },\r\n                'minecraft:cured_zombie_villager': {\r\n                    villager: EntityPredicate,\r\n                    zombie: EntityPredicate\r\n                },\r\n                'minecraft:effects_changed': {\r\n                    effects: core_1.Opt(core_1.MapNode(StringNode({ validator: 'resource', params: { pool: 'mob_effect' } }), core_1.ObjectNode({\r\n                        amplifier: Reference('int_bounds'),\r\n                        duration: Reference('int_bounds')\r\n                    }))),\r\n                    source: core_1.Opt(EntityPredicate)\r\n                },\r\n                'minecraft:enter_block': {\r\n                    block: core_1.Opt(StringNode({ validator: 'resource', params: { pool: 'block' } })),\r\n                    state: core_1.Opt(core_1.MapNode(StringNode(), StringNode(), { validation: { validator: 'block_state_map', params: { id: ['pop', { push: 'block' }] } } }))\r\n                },\r\n                'minecraft:enchanted_item': {\r\n                    levels: Reference('int_bounds'),\r\n                    item: core_1.Opt(Reference('item_predicate'))\r\n                },\r\n                'minecraft:entity_hurt_player': {\r\n                    damage: core_1.Opt(Reference('damage_predicate'))\r\n                },\r\n                'minecraft:entity_killed_player': {\r\n                    entity: EntityPredicate,\r\n                    killing_blow: core_1.Opt(Reference('damage_source_predicate'))\r\n                },\r\n                'minecraft:filled_bucket': {\r\n                    item: core_1.Opt(Reference('item_predicate'))\r\n                },\r\n                'minecraft:fishing_rod_hooked': {\r\n                    entity: EntityPredicate,\r\n                    item: core_1.Opt(Reference('item_predicate'))\r\n                },\r\n                'minecraft:hero_of_the_village': {\r\n                    location: core_1.Opt(Reference('location_predicate'))\r\n                },\r\n                'minecraft:inventory_changed': {\r\n                    slots: core_1.Opt(core_1.ObjectNode({\r\n                        empty: Reference('int_bounds'),\r\n                        occupied: Reference('int_bounds'),\r\n                        full: Reference('int_bounds')\r\n                    })),\r\n                    items: core_1.Opt(core_1.ListNode(Reference('item_predicate')))\r\n                },\r\n                'minecraft:item_durability_changed': {\r\n                    delta: Reference('int_bounds'),\r\n                    durability: Reference('int_bounds'),\r\n                    item: core_1.Opt(Reference('item_predicate'))\r\n                },\r\n                'minecraft:item_used_on_block': {\r\n                    item: core_1.Opt(Reference('item_predicate')),\r\n                    location: core_1.Opt(Reference('location_predicate'))\r\n                },\r\n                'minecraft:killed_by_crossbow': {\r\n                    unique_entity_types: Reference('int_bounds'),\r\n                    victims: core_1.Opt(core_1.ListNode(EntityPredicate))\r\n                },\r\n                'minecraft:levitation': {\r\n                    distance: Reference('distance_predicate'),\r\n                    duration: Reference('int_bounds')\r\n                },\r\n                'minecraft:lightning_strike': {\r\n                    lightning: EntityPredicate,\r\n                    bystander: EntityPredicate,\r\n                },\r\n                'minecraft:location': {\r\n                    location: core_1.Opt(Reference('location_predicate'))\r\n                },\r\n                'minecraft:nether_travel': {\r\n                    distance: Reference('distance_predicate'),\r\n                    entered: core_1.Opt(Reference('location_predicate')),\r\n                    exited: core_1.Opt(Reference('location_predicate'))\r\n                },\r\n                'minecraft:placed_block': {\r\n                    block: core_1.Opt(StringNode({ validator: 'resource', params: { pool: 'block' } })),\r\n                    state: core_1.Opt(core_1.MapNode(StringNode(), StringNode(), { validation: { validator: 'block_state_map', params: { id: ['pop', { push: 'block' }] } } })),\r\n                    item: core_1.Opt(Reference('item_predicate')),\r\n                    location: core_1.Opt(Reference('location_predicate'))\r\n                },\r\n                'minecraft:player_generates_container_loot': {\r\n                    loot_table: StringNode({ validator: 'resource', params: { pool: '$loot_table' } })\r\n                },\r\n                'minecraft:player_hurt_entity': {\r\n                    damage: core_1.Opt(Reference('damage_predicate')),\r\n                    entity: EntityPredicate\r\n                },\r\n                'minecraft:player_interacted_with_entity': {\r\n                    item: core_1.Opt(Reference('item_predicate')),\r\n                    entity: EntityPredicate\r\n                },\r\n                'minecraft:player_killed_entity': {\r\n                    entity: EntityPredicate,\r\n                    killing_blow: core_1.Opt(Reference('damage_source_predicate'))\r\n                },\r\n                'minecraft:recipe_unlocked': {\r\n                    recipe: StringNode({ validator: 'resource', params: { pool: '$recipe' } })\r\n                },\r\n                'minecraft:slept_in_bed': {\r\n                    location: core_1.Opt(Reference('location_predicate'))\r\n                },\r\n                'minecraft:slide_down_block': {\r\n                    block: core_1.Opt(StringNode({ validator: 'resource', params: { pool: 'block' } }))\r\n                },\r\n                'minecraft:shot_crossbow': {\r\n                    item: core_1.Opt(Reference('item_predicate'))\r\n                },\r\n                'minecraft:summoned_entity': {\r\n                    entity: EntityPredicate\r\n                },\r\n                'minecraft:tame_animal': {\r\n                    entity: EntityPredicate\r\n                },\r\n                'minecraft:target_hit': {\r\n                    projectile: EntityPredicate,\r\n                    shooter: EntityPredicate,\r\n                    signal_strength: Reference('int_bounds')\r\n                },\r\n                'minecraft:thrown_item_picked_up_by_entity': {\r\n                    entity: core_1.Opt(Reference('entity_predicate')),\r\n                    item: core_1.Opt(Reference('item_predicate'))\r\n                },\r\n                'minecraft:used_ender_eye': {\r\n                    distance: Reference('float_bounds')\r\n                },\r\n                'minecraft:used_totem': {\r\n                    item: core_1.Opt(Reference('item_predicate'))\r\n                },\r\n                'minecraft:using_item': {\r\n                    item: core_1.Opt(Reference('item_predicate'))\r\n                },\r\n                'minecraft:villager_trade': {\r\n                    villager: core_1.Opt(Reference('entity_predicate')),\r\n                    item: core_1.Opt(Reference('item_predicate'))\r\n                },\r\n                'minecraft:voluntary_exile': {\r\n                    location: Reference('location_predicate')\r\n                }\r\n            }\r\n        }, { context: 'criterion' }))\r\n    }, { category: 'predicate', context: 'criterion' }));\r\n}\r\nexports.initAdvancementSchemas = initAdvancementSchemas;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.initCommonSchemas = exports.IntProvider = exports.FloatProvider = exports.NoiseSettingsPresets = exports.DefaultNoiseSettings = exports.DimensionTypePresets = exports.DefaultDimensionType = exports.FunctionCases = exports.ConditionCases = void 0;\r\nconst core_1 = require(\"@mcschema/core\");\r\nexports.DefaultDimensionType = {\r\n    ultrawarm: false,\r\n    natural: true,\r\n    piglin_safe: false,\r\n    respawn_anchor_works: false,\r\n    bed_works: true,\r\n    has_raids: true,\r\n    has_skylight: true,\r\n    has_ceiling: false,\r\n    coordinate_scale: 1,\r\n    ambient_light: 0,\r\n    logical_height: 256,\r\n    infiniburn: 'minecraft:infiniburn_overworld',\r\n    min_y: 0,\r\n    height: 256,\r\n};\r\nexports.DefaultNoiseSettings = {\r\n    name: 'minecraft:overworld',\r\n    bedrock_roof_position: -10,\r\n    bedrock_floor_position: 0,\r\n    sea_level: 63,\r\n    disable_mob_generation: false,\r\n    noise_caves_enabled: true,\r\n    aquifers_enabled: true,\r\n    deepslate_enabled: true,\r\n    noise: {\r\n        min_y: 0,\r\n        height: 256,\r\n        density_factor: 1,\r\n        density_offset: -0.46875,\r\n        simplex_surface_noise: true,\r\n        random_density_offset: true,\r\n        size_horizontal: 1,\r\n        size_vertical: 2,\r\n        sampling: {\r\n            xz_scale: 1,\r\n            y_scale: 1,\r\n            xz_factor: 80,\r\n            y_factor: 160\r\n        },\r\n        top_slide: {\r\n            target: -10,\r\n            size: 3,\r\n            offset: 0\r\n        },\r\n        bottom_slide: {\r\n            target: -30,\r\n            size: 0,\r\n            offset: 0\r\n        }\r\n    },\r\n    default_block: {\r\n        Name: \"minecraft:stone\"\r\n    },\r\n    default_fluid: {\r\n        Name: \"minecraft:water\",\r\n        Properties: {\r\n            level: \"0\"\r\n        }\r\n    }\r\n};\r\nfunction initCommonSchemas(schemas, collections) {\r\n    const StringNode = core_1.StringNode.bind(undefined, collections);\r\n    const Reference = core_1.Reference.bind(undefined, schemas);\r\n    schemas.register('block_state', core_1.Mod(core_1.ObjectNode({\r\n        Name: StringNode({ validator: 'resource', params: { pool: 'block' } }),\r\n        Properties: core_1.Opt(core_1.MapNode(StringNode(), StringNode(), { validation: { validator: 'block_state_map', params: { id: ['pop', { push: 'Name' }] } } }))\r\n    }, { context: 'block_state' }), {\r\n        default: () => ({\r\n            Name: 'minecraft:stone'\r\n        })\r\n    }));\r\n    schemas.register('fluid_state', core_1.Mod(core_1.ObjectNode({\r\n        Name: StringNode({ validator: 'resource', params: { pool: 'fluid' } }),\r\n        Properties: core_1.Opt(core_1.MapNode(StringNode(), StringNode()))\r\n    }, { context: 'fluid_state' }), {\r\n        default: () => ({\r\n            Name: 'minecraft:water',\r\n            Properties: {\r\n                'level': '0'\r\n            }\r\n        })\r\n    }));\r\n    schemas.register('block_pos', core_1.Mod(core_1.ListNode(core_1.NumberNode({ integer: true }), { minLength: 3, maxLength: 3 }), {\r\n        default: () => [0, 0, 0]\r\n    }));\r\n    const Bounds = (integer) => core_1.Opt(core_1.ChoiceNode([\r\n        {\r\n            type: 'number',\r\n            node: core_1.NumberNode({ integer }),\r\n            change: (v) => { var _a, _b; return v === undefined ? 0 : (_b = (_a = v.min) !== null && _a !== void 0 ? _a : v.max) !== null && _b !== void 0 ? _b : 0; }\r\n        },\r\n        {\r\n            type: 'object',\r\n            node: core_1.ObjectNode({\r\n                min: core_1.Opt(core_1.NumberNode({ integer })),\r\n                max: core_1.Opt(core_1.NumberNode({ integer }))\r\n            }, { context: 'range' }),\r\n            change: (v) => ({\r\n                min: v !== null && v !== void 0 ? v : 0,\r\n                max: v !== null && v !== void 0 ? v : 0\r\n            })\r\n        }\r\n    ]));\r\n    schemas.register('int_bounds', Bounds(true));\r\n    schemas.register('float_bounds', Bounds());\r\n    schemas.register('int_range', core_1.ChoiceNode([\r\n        {\r\n            type: 'object',\r\n            node: core_1.ObjectNode({\r\n                min: core_1.Opt(Reference('number_provider')),\r\n                max: core_1.Opt(Reference('number_provider'))\r\n            })\r\n        },\r\n        {\r\n            type: 'number',\r\n            node: core_1.NumberNode({ integer: true })\r\n        }\r\n    ], { context: 'range' }));\r\n    const ObjectWithType = (pool, directType, directPath, directDefault, objectDefault, context, cases) => {\r\n        let defaultCase = {};\r\n        if (objectDefault) {\r\n            Object.keys(cases[objectDefault]).forEach(k => {\r\n                defaultCase[k] = core_1.Mod(cases[objectDefault][k], {\r\n                    enabled: path => path.push('type').get() === undefined\r\n                });\r\n            });\r\n        }\r\n        const provider = core_1.ObjectNode({\r\n            type: core_1.Mod(core_1.Opt(StringNode({ validator: 'resource', params: { pool } })), {\r\n                hidden: () => true\r\n            }),\r\n            [core_1.Switch]: [{ push: 'type' }],\r\n            [core_1.Case]: cases,\r\n            ...defaultCase\r\n        }, { context, disableSwitchContext: true });\r\n        const choices = [{\r\n                type: directType,\r\n                node: cases[directDefault][directPath]\r\n            }];\r\n        if (objectDefault) {\r\n            choices.push({\r\n                type: 'object',\r\n                priority: -1,\r\n                node: provider\r\n            });\r\n        }\r\n        Object.keys(cases).forEach(k => {\r\n            choices.push({\r\n                type: k,\r\n                match: (v) => {\r\n                    var _a;\r\n                    const type = 'minecraft:' + ((_a = v === null || v === void 0 ? void 0 : v.type) === null || _a === void 0 ? void 0 : _a.replace(/^minecraft:/, ''));\r\n                    if (type === k)\r\n                        return true;\r\n                    const keys = v ? Object.keys(v) : [];\r\n                    return typeof v === 'object' && ((keys === null || keys === void 0 ? void 0 : keys.length) === 0 || ((keys === null || keys === void 0 ? void 0 : keys.length) === 1 && (keys === null || keys === void 0 ? void 0 : keys[0]) === 'type'));\r\n                },\r\n                node: provider,\r\n                change: (v) => ({ type: k })\r\n            });\r\n        });\r\n        return core_1.ChoiceNode(choices, { context, choiceContext: `${context}.type` });\r\n    };\r\n    schemas.register('number_provider', ObjectWithType('loot_number_provider_type', 'number', 'value', 'minecraft:constant', 'minecraft:uniform', 'number_provider', {\r\n        'minecraft:constant': {\r\n            value: core_1.NumberNode()\r\n        },\r\n        'minecraft:uniform': {\r\n            min: Reference('number_provider'),\r\n            max: Reference('number_provider')\r\n        },\r\n        'minecraft:binomial': {\r\n            n: Reference('number_provider'),\r\n            p: Reference('number_provider')\r\n        },\r\n        'minecraft:score': {\r\n            target: Reference('scoreboard_name_provider'),\r\n            score: StringNode({ validator: 'objective' }),\r\n            scale: core_1.Opt(core_1.NumberNode())\r\n        }\r\n    }));\r\n    schemas.register('scoreboard_name_provider', ObjectWithType('loot_score_provider_type', 'string', 'target', 'minecraft:context', null, 'score_provider', {\r\n        'minecraft:fixed': {\r\n            name: StringNode({ validator: 'entity', params: { amount: 'multiple', type: 'entities', isScoreHolder: true } }) // FIXME: doesn't support selectors\r\n        },\r\n        'minecraft:context': {\r\n            target: core_1.Mod(StringNode({ enum: 'entity_source' }), { default: () => 'this' })\r\n        }\r\n    }));\r\n    schemas.register('nbt_provider', ObjectWithType('loot_nbt_provider_type', 'string', 'target', 'minecraft:context', null, 'nbt_provider', {\r\n        'minecraft:storage': {\r\n            source: StringNode({ validator: 'resource', params: { pool: '$storage' } })\r\n        },\r\n        'minecraft:context': {\r\n            target: core_1.Mod(StringNode({ enum: 'copy_source' }), { default: () => 'this' })\r\n        }\r\n    }));\r\n    exports.FloatProvider = (config) => ObjectWithType('float_provider_type', 'number', 'value', 'minecraft:constant', null, 'float_provider', {\r\n        'minecraft:constant': {\r\n            value: core_1.NumberNode(config)\r\n        },\r\n        'minecraft:uniform': {\r\n            value: core_1.ObjectNode({\r\n                min_inclusive: core_1.NumberNode(config),\r\n                max_exclusive: core_1.NumberNode(config)\r\n            })\r\n        },\r\n        'minecraft:clamped_normal': {\r\n            value: core_1.ObjectNode({\r\n                min: core_1.NumberNode(),\r\n                max: core_1.NumberNode(),\r\n                mean: core_1.NumberNode(),\r\n                deviation: core_1.NumberNode()\r\n            })\r\n        },\r\n        'minecraft:trapezoid': {\r\n            value: core_1.ObjectNode({\r\n                min: core_1.NumberNode(),\r\n                max: core_1.NumberNode(),\r\n                plateau: core_1.NumberNode()\r\n            })\r\n        }\r\n    });\r\n    schemas.register('float_provider', exports.FloatProvider());\r\n    exports.IntProvider = (config) => ObjectWithType('int_provider_type', 'number', 'value', 'minecraft:constant', null, 'int_provider', {\r\n        'minecraft:constant': {\r\n            value: core_1.NumberNode({ integer: true, ...config })\r\n        },\r\n        'minecraft:uniform': {\r\n            value: core_1.ObjectNode({\r\n                min_inclusive: core_1.NumberNode({ integer: true, ...config }),\r\n                max_inclusive: core_1.NumberNode({ integer: true, ...config })\r\n            })\r\n        },\r\n        'minecraft:biased_to_bottom': {\r\n            value: core_1.ObjectNode({\r\n                min_inclusive: core_1.NumberNode({ integer: true, ...config }),\r\n                max_inclusive: core_1.NumberNode({ integer: true, ...config })\r\n            })\r\n        },\r\n        'minecraft:clamped': {\r\n            value: core_1.ObjectNode({\r\n                min_inclusive: core_1.NumberNode({ integer: true, ...config }),\r\n                max_inclusive: core_1.NumberNode({ integer: true, ...config }),\r\n                source: Reference('int_provider')\r\n            })\r\n        }\r\n    });\r\n    schemas.register('int_provider', exports.IntProvider());\r\n    schemas.register('vertical_anchor', core_1.ChoiceNode(['absolute', 'above_bottom', 'below_top'].map(t => ({\r\n        type: t,\r\n        match: v => (v === null || v === void 0 ? void 0 : v[t]) !== undefined,\r\n        change: v => { var _a, _b, _c; return ({ [t]: (_c = (_b = (_a = v.absolute) !== null && _a !== void 0 ? _a : v.above_bottom) !== null && _b !== void 0 ? _b : v.below_top) !== null && _c !== void 0 ? _c : 0 }); },\r\n        node: core_1.ObjectNode({\r\n            [t]: core_1.NumberNode({ integer: true, min: -2048, max: 2047 })\r\n        })\r\n    })), { context: 'vertical_anchor' }));\r\n    schemas.register('height_provider', ObjectWithType('height_provider_type', 'number', 'value', 'minecraft:constant', null, 'height_provider', {\r\n        'minecraft:constant': {\r\n            value: Reference('vertical_anchor')\r\n        },\r\n        'minecraft:uniform': {\r\n            min_inclusive: Reference('vertical_anchor'),\r\n            max_inclusive: Reference('vertical_anchor')\r\n        },\r\n        'minecraft:biased_to_bottom': {\r\n            min_inclusive: Reference('vertical_anchor'),\r\n            max_inclusive: Reference('vertical_anchor'),\r\n            inner: core_1.Opt(core_1.NumberNode({ integer: true, min: 1 }))\r\n        },\r\n        'minecraft:very_biased_to_bottom': {\r\n            min_inclusive: Reference('vertical_anchor'),\r\n            max_inclusive: Reference('vertical_anchor'),\r\n            inner: core_1.Opt(core_1.NumberNode({ integer: true, min: 1 }))\r\n        },\r\n        'minecraft:trapezoid': {\r\n            min_inclusive: Reference('vertical_anchor'),\r\n            max_inclusive: Reference('vertical_anchor'),\r\n            plateau: core_1.Opt(core_1.NumberNode({ integer: true }))\r\n        }\r\n    }));\r\n    exports.ConditionCases = (entitySourceNode = StringNode({ enum: 'entity_source' })) => ({\r\n        'minecraft:alternative': {\r\n            terms: core_1.ListNode(Reference('condition'))\r\n        },\r\n        'minecraft:block_state_property': {\r\n            block: StringNode({ validator: 'resource', params: { pool: 'block' } }),\r\n            properties: core_1.MapNode(StringNode(), StringNode(), { validation: { validator: 'block_state_map', params: { id: ['pop', { push: 'block' }] } } })\r\n        },\r\n        'minecraft:damage_source_properties': {\r\n            predicate: Reference('damage_source_predicate')\r\n        },\r\n        'minecraft:entity_properties': {\r\n            entity: entitySourceNode,\r\n            predicate: Reference('entity_predicate')\r\n        },\r\n        'minecraft:entity_scores': {\r\n            entity: entitySourceNode,\r\n            scores: core_1.MapNode(StringNode({ validator: 'objective' }), Reference('int_range'))\r\n        },\r\n        'minecraft:inverted': {\r\n            term: Reference('condition')\r\n        },\r\n        'minecraft:killed_by_player': {\r\n            inverse: core_1.Opt(core_1.BooleanNode())\r\n        },\r\n        'minecraft:location_check': {\r\n            offsetX: core_1.Opt(core_1.NumberNode({ integer: true })),\r\n            offsetY: core_1.Opt(core_1.NumberNode({ integer: true })),\r\n            offsetZ: core_1.Opt(core_1.NumberNode({ integer: true })),\r\n            predicate: Reference('location_predicate')\r\n        },\r\n        'minecraft:match_tool': {\r\n            predicate: Reference('item_predicate')\r\n        },\r\n        'minecraft:random_chance': {\r\n            chance: core_1.NumberNode({ min: 0, max: 1 })\r\n        },\r\n        'minecraft:random_chance_with_looting': {\r\n            chance: core_1.NumberNode({ min: 0, max: 1 }),\r\n            looting_multiplier: core_1.NumberNode()\r\n        },\r\n        'minecraft:reference': {\r\n            name: StringNode({ validator: 'resource', params: { pool: '$predicate' } })\r\n        },\r\n        'minecraft:table_bonus': {\r\n            enchantment: StringNode({ validator: 'resource', params: { pool: 'enchantment' } }),\r\n            chances: core_1.ListNode(core_1.NumberNode({ min: 0, max: 1 }))\r\n        },\r\n        'minecraft:time_check': {\r\n            value: Reference('int_range'),\r\n            period: core_1.Opt(core_1.NumberNode({ integer: true }))\r\n        },\r\n        'minecraft:value_check': {\r\n            value: Reference('number_provider'),\r\n            range: Reference('int_range')\r\n        },\r\n        'minecraft:weather_check': {\r\n            raining: core_1.Opt(core_1.BooleanNode()),\r\n            thundering: core_1.Opt(core_1.BooleanNode())\r\n        }\r\n    });\r\n    exports.FunctionCases = (conditions, copySourceNode = StringNode({ enum: 'copy_source' }), entitySourceNode = StringNode({ enum: 'entity_source' })) => {\r\n        const cases = {\r\n            'minecraft:apply_bonus': {\r\n                enchantment: StringNode({ validator: 'resource', params: { pool: 'enchantment' } }),\r\n                formula: StringNode({ validator: 'resource', params: { pool: collections.get('loot_table_apply_bonus_formula') } }),\r\n                parameters: core_1.Mod(core_1.ObjectNode({\r\n                    bonusMultiplier: core_1.Mod(core_1.NumberNode(), {\r\n                        enabled: path => path.pop().push('formula').get() === 'minecraft:uniform_bonus_count'\r\n                    }),\r\n                    extra: core_1.Mod(core_1.NumberNode(), {\r\n                        enabled: path => path.pop().push('formula').get() === 'minecraft:binomial_with_bonus_count'\r\n                    }),\r\n                    probability: core_1.Mod(core_1.NumberNode(), {\r\n                        enabled: path => path.pop().push('formula').get() === 'minecraft:binomial_with_bonus_count'\r\n                    })\r\n                }), {\r\n                    enabled: path => path.push('formula').get() !== 'minecraft:ore_drops'\r\n                })\r\n            },\r\n            'minecraft:copy_name': {\r\n                source: copySourceNode\r\n            },\r\n            'minecraft:copy_nbt': {\r\n                source: Reference('nbt_provider'),\r\n                ops: core_1.ListNode(core_1.ObjectNode({\r\n                    source: StringNode({ validator: 'nbt_path', params: { category: { getter: 'copy_source', path: ['pop', 'pop', 'pop', { push: 'source' }] } } }),\r\n                    target: StringNode({ validator: 'nbt_path', params: { category: 'minecraft:item' } }),\r\n                    op: StringNode({ enum: ['replace', 'append', 'merge'] })\r\n                }, { context: 'nbt_operation' }))\r\n            },\r\n            'minecraft:copy_state': {\r\n                block: StringNode({ validator: 'resource', params: { pool: 'block' } }),\r\n                properties: core_1.ListNode(StringNode({ validator: 'block_state_key', params: { id: ['pop', 'pop', { push: 'block' }] } }))\r\n            },\r\n            'minecraft:enchant_randomly': {\r\n                enchantments: core_1.Opt(core_1.ListNode(StringNode({ validator: 'resource', params: { pool: 'enchantment' } })))\r\n            },\r\n            'minecraft:enchant_with_levels': {\r\n                levels: Reference('number_provider'),\r\n                treasure: core_1.Opt(core_1.BooleanNode())\r\n            },\r\n            'minecraft:exploration_map': {\r\n                destination: core_1.Opt(StringNode({ enum: 'map_feature' })),\r\n                decoration: core_1.Opt(StringNode({ enum: 'map_decoration' })),\r\n                zoom: core_1.Opt(core_1.NumberNode({ integer: true })),\r\n                search_radius: core_1.Opt(core_1.NumberNode({ integer: true })),\r\n                skip_existing_chunks: core_1.Opt(core_1.BooleanNode())\r\n            },\r\n            'minecraft:fill_player_head': {\r\n                entity: entitySourceNode\r\n            },\r\n            'minecraft:limit_count': {\r\n                limit: Reference('int_range')\r\n            },\r\n            'minecraft:looting_enchant': {\r\n                count: Reference('number_provider'),\r\n                limit: core_1.Opt(core_1.NumberNode({ integer: true }))\r\n            },\r\n            'minecraft:set_attributes': {\r\n                modifiers: core_1.ListNode(Reference('attribute_modifier'))\r\n            },\r\n            'minecraft:set_banner_pattern': {\r\n                patterns: core_1.ListNode(core_1.ObjectNode({\r\n                    pattern: StringNode({ enum: 'banner_pattern' }),\r\n                    color: StringNode({ enum: 'dye_color' })\r\n                })),\r\n                append: core_1.Opt(core_1.BooleanNode())\r\n            },\r\n            'minecraft:set_contents': {\r\n                entries: core_1.ListNode(Reference('loot_entry'))\r\n            },\r\n            'minecraft:set_count': {\r\n                count: Reference('number_provider'),\r\n                add: core_1.Opt(core_1.BooleanNode())\r\n            },\r\n            'minecraft:set_damage': {\r\n                damage: Reference('number_provider'),\r\n                add: core_1.Opt(core_1.BooleanNode())\r\n            },\r\n            'minecraft:set_enchantments': {\r\n                enchantments: core_1.MapNode(StringNode({ validator: 'resource', params: { pool: 'enchantment' } }), Reference('number_provider')),\r\n                add: core_1.Opt(core_1.BooleanNode())\r\n            },\r\n            'minecraft:set_loot_table': {\r\n                name: StringNode({ validator: 'resource', params: { pool: '$loot_table' } }),\r\n                seed: core_1.Opt(core_1.NumberNode({ integer: true }))\r\n            },\r\n            'minecraft:set_lore': {\r\n                entity: core_1.Opt(entitySourceNode),\r\n                lore: core_1.ListNode(Reference('text_component')),\r\n                replace: core_1.Opt(core_1.BooleanNode())\r\n            },\r\n            'minecraft:set_name': {\r\n                entity: core_1.Opt(entitySourceNode),\r\n                name: core_1.Opt(Reference('text_component'))\r\n            },\r\n            'minecraft:set_nbt': {\r\n                tag: StringNode({ validator: 'nbt', params: { registry: { category: 'minecraft:item' } } })\r\n            },\r\n            'minecraft:set_stew_effect': {\r\n                effects: core_1.Opt(core_1.ListNode(core_1.ObjectNode({\r\n                    type: StringNode({ validator: 'resource', params: { pool: 'mob_effect' } }),\r\n                    duration: Reference('number_provider')\r\n                })))\r\n            }\r\n        };\r\n        const res = {};\r\n        collections.get('loot_function_type').forEach(f => {\r\n            res[f] = { ...cases[f], ...conditions };\r\n        });\r\n        return res;\r\n    };\r\n    exports.DimensionTypePresets = (node) => core_1.ObjectOrPreset(StringNode({ validator: 'resource', params: { pool: '$dimension_type' } }), node, {\r\n        'minecraft:overworld': exports.DefaultDimensionType,\r\n        'minecraft:the_nether': {\r\n            name: 'minecraft:the_nether',\r\n            ultrawarm: true,\r\n            natural: false,\r\n            shrunk: true,\r\n            piglin_safe: true,\r\n            respawn_anchor_works: true,\r\n            bed_works: false,\r\n            has_raids: false,\r\n            has_skylight: false,\r\n            has_ceiling: true,\r\n            ambient_light: 0.1,\r\n            fixed_time: 18000,\r\n            logical_height: 128,\r\n            effects: 'minecraft:the_nether',\r\n            infiniburn: 'minecraft:infiniburn_nether',\r\n            min_y: 0,\r\n            height: 256,\r\n        },\r\n        'minecraft:the_end': {\r\n            name: 'minecraft:the_end',\r\n            ultrawarm: false,\r\n            natural: false,\r\n            shrunk: false,\r\n            piglin_safe: false,\r\n            respawn_anchor_works: false,\r\n            bed_works: false,\r\n            has_raids: true,\r\n            has_skylight: false,\r\n            has_ceiling: false,\r\n            ambient_light: 0,\r\n            fixed_time: 6000,\r\n            logical_height: 256,\r\n            effects: 'minecraft:the_end',\r\n            infiniburn: 'minecraft:infiniburn_end',\r\n            min_y: 0,\r\n            height: 256,\r\n        }\r\n    });\r\n    exports.NoiseSettingsPresets = (node) => core_1.ObjectOrPreset(StringNode({ validator: 'resource', params: { pool: '$worldgen/noise_settings' } }), node, {\r\n        'minecraft:overworld': exports.DefaultNoiseSettings,\r\n        'minecraft:nether': {\r\n            name: 'minecraft:nether',\r\n            bedrock_roof_position: 0,\r\n            bedrock_floor_position: 0,\r\n            sea_level: 32,\r\n            disable_mob_generation: true,\r\n            noise_caves_enabled: false,\r\n            aquifers_enabled: false,\r\n            deepslate_enabled: false,\r\n            noise: {\r\n                min_y: 0,\r\n                height: 128,\r\n                density_factor: 0,\r\n                density_offset: 0.019921875,\r\n                simplex_surface_noise: false,\r\n                random_density_offset: false,\r\n                size_horizontal: 1,\r\n                size_vertical: 2,\r\n                sampling: {\r\n                    xz_scale: 1,\r\n                    y_scale: 3,\r\n                    xz_factor: 80,\r\n                    y_factor: 60\r\n                },\r\n                top_slide: {\r\n                    target: 120,\r\n                    size: 3,\r\n                    offset: 0\r\n                },\r\n                bottom_slide: {\r\n                    target: 320,\r\n                    size: 4,\r\n                    offset: -1\r\n                }\r\n            },\r\n            default_block: {\r\n                Name: \"minecraft:netherrack\"\r\n            },\r\n            default_fluid: {\r\n                Name: \"minecraft:lava\",\r\n                Properties: {\r\n                    level: \"0\"\r\n                }\r\n            }\r\n        },\r\n        'minecraft:end': {\r\n            name: 'minecraft:end',\r\n            bedrock_roof_position: -10,\r\n            bedrock_floor_position: -10,\r\n            sea_level: 0,\r\n            disable_mob_generation: true,\r\n            noise_caves_enabled: false,\r\n            aquifers_enabled: false,\r\n            deepslate_enabled: false,\r\n            noise: {\r\n                min_y: 0,\r\n                height: 128,\r\n                density_factor: 0,\r\n                density_offset: 0,\r\n                simplex_surface_noise: true,\r\n                random_density_offset: false,\r\n                island_noise_override: true,\r\n                size_horizontal: 2,\r\n                size_vertical: 1,\r\n                sampling: {\r\n                    xz_scale: 2,\r\n                    y_scale: 1,\r\n                    xz_factor: 80,\r\n                    y_factor: 160\r\n                },\r\n                top_slide: {\r\n                    target: -3000,\r\n                    size: 64,\r\n                    offset: -46\r\n                },\r\n                bottom_slide: {\r\n                    target: -30,\r\n                    size: 7,\r\n                    offset: 1\r\n                }\r\n            },\r\n            default_block: {\r\n                Name: \"minecraft:end_stone\"\r\n            },\r\n            default_fluid: {\r\n                Name: \"minecraft:air\"\r\n            }\r\n        },\r\n        'minecraft:amplified': {\r\n            name: 'minecraft:amplified',\r\n            bedrock_roof_position: -10,\r\n            bedrock_floor_position: 0,\r\n            sea_level: 63,\r\n            disable_mob_generation: false,\r\n            noise_caves_enabled: true,\r\n            aquifers_enabled: true,\r\n            deepslate_enabled: true,\r\n            noise: {\r\n                min_y: 0,\r\n                height: 256,\r\n                density_factor: 1,\r\n                density_offset: -0.46875,\r\n                simplex_surface_noise: true,\r\n                random_density_offset: true,\r\n                amplified: true,\r\n                size_horizontal: 1,\r\n                size_vertical: 2,\r\n                sampling: {\r\n                    xz_scale: 1,\r\n                    y_scale: 1,\r\n                    xz_factor: 80,\r\n                    y_factor: 160\r\n                },\r\n                top_slide: {\r\n                    target: -10,\r\n                    size: 3,\r\n                    offset: 0\r\n                },\r\n                bottom_slide: {\r\n                    target: -30,\r\n                    size: 0,\r\n                    offset: 0\r\n                }\r\n            },\r\n            default_block: {\r\n                Name: \"minecraft:stone\"\r\n            },\r\n            default_fluid: {\r\n                Name: \"minecraft:water\",\r\n                Properties: {\r\n                    level: \"0\"\r\n                }\r\n            }\r\n        },\r\n        'minecraft:caves': {\r\n            name: 'minecraft:caves',\r\n            bedrock_roof_position: 0,\r\n            bedrock_floor_position: 0,\r\n            sea_level: 32,\r\n            disable_mob_generation: true,\r\n            noise_caves_enabled: false,\r\n            aquifers_enabled: false,\r\n            deepslate_enabled: false,\r\n            noise: {\r\n                min_y: 0,\r\n                height: 128,\r\n                density_factor: 0,\r\n                density_offset: 0.019921875,\r\n                simplex_surface_noise: false,\r\n                random_density_offset: false,\r\n                size_horizontal: 1,\r\n                size_vertical: 2,\r\n                sampling: {\r\n                    xz_scale: 1,\r\n                    y_scale: 3,\r\n                    xz_factor: 80,\r\n                    y_factor: 60\r\n                },\r\n                top_slide: {\r\n                    target: 120,\r\n                    size: 3,\r\n                    offset: 0\r\n                },\r\n                bottom_slide: {\r\n                    target: 320,\r\n                    size: 4,\r\n                    offset: -1\r\n                }\r\n            },\r\n            default_block: {\r\n                Name: \"minecraft:stone\"\r\n            },\r\n            default_fluid: {\r\n                Name: \"minecraft:water\",\r\n                Properties: {\r\n                    level: \"0\"\r\n                }\r\n            }\r\n        },\r\n        'minecraft:floating_islands': {\r\n            name: 'minecraft:floating_islands',\r\n            bedrock_roof_position: -10,\r\n            bedrock_floor_position: -10,\r\n            sea_level: 0,\r\n            disable_mob_generation: true,\r\n            noise_caves_enabled: false,\r\n            aquifers_enabled: false,\r\n            deepslate_enabled: false,\r\n            noise: {\r\n                min_y: 0,\r\n                height: 128,\r\n                density_factor: 0,\r\n                density_offset: 0,\r\n                simplex_surface_noise: true,\r\n                random_density_offset: false,\r\n                island_noise_override: true,\r\n                size_horizontal: 2,\r\n                size_vertical: 1,\r\n                sampling: {\r\n                    xz_scale: 2,\r\n                    y_scale: 1,\r\n                    xz_factor: 80,\r\n                    y_factor: 160\r\n                },\r\n                top_slide: {\r\n                    target: -3000,\r\n                    size: 64,\r\n                    offset: -46\r\n                },\r\n                bottom_slide: {\r\n                    target: -30,\r\n                    size: 7,\r\n                    offset: 1\r\n                }\r\n            },\r\n            default_block: {\r\n                Name: \"minecraft:stone\"\r\n            },\r\n            default_fluid: {\r\n                Name: \"minecraft:water\",\r\n                Properties: {\r\n                    level: \"0\"\r\n                }\r\n            }\r\n        }\r\n    });\r\n}\r\nexports.initCommonSchemas = initCommonSchemas;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.initConditionSchemas = void 0;\r\nconst core_1 = require(\"@mcschema/core\");\r\nconst Common_1 = require(\"./Common\");\r\nfunction initConditionSchemas(schemas, collections) {\r\n    const Reference = core_1.Reference.bind(undefined, schemas);\r\n    const StringNode = core_1.StringNode.bind(undefined, collections);\r\n    schemas.register('predicate', core_1.ObjectOrList(Reference('condition'), { choiceContext: 'condition' }));\r\n    schemas.register('condition', core_1.Mod(core_1.ObjectNode({\r\n        condition: StringNode({ validator: 'resource', params: { pool: 'loot_condition_type' } }),\r\n        [core_1.Switch]: [{ push: 'condition' }],\r\n        [core_1.Case]: Common_1.ConditionCases()\r\n    }, { category: 'predicate', context: 'condition' }), {\r\n        default: () => ({\r\n            condition: 'minecraft:entity_properties',\r\n            entity: 'this'\r\n        })\r\n    }));\r\n}\r\nexports.initConditionSchemas = initConditionSchemas;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.initDimensionSchemas = void 0;\r\nconst core_1 = require(\"@mcschema/core\");\r\nconst Common_1 = require(\"./Common\");\r\nfunction initDimensionSchemas(schemas, collections) {\r\n    const Reference = core_1.Reference.bind(undefined, schemas);\r\n    const StringNode = core_1.StringNode.bind(undefined, collections);\r\n    const NoPreset = (node) => core_1.Mod(node, {\r\n        enabled: path => path.push('preset').get() === undefined\r\n    });\r\n    schemas.register('dimension', core_1.Mod(core_1.ObjectNode({\r\n        type: Common_1.DimensionTypePresets(Reference('dimension_type')),\r\n        generator: core_1.ObjectNode({\r\n            type: StringNode({ validator: 'resource', params: { pool: 'worldgen/chunk_generator' } }),\r\n            [core_1.Switch]: [{ push: 'type' }],\r\n            [core_1.Case]: {\r\n                'minecraft:noise': {\r\n                    seed: core_1.NumberNode({ integer: true }),\r\n                    settings: Common_1.NoiseSettingsPresets(Reference('noise_settings')),\r\n                    biome_source: core_1.ObjectNode({\r\n                        type: StringNode({ validator: 'resource', params: { pool: 'worldgen/biome_source' } }),\r\n                        [core_1.Switch]: [{ push: 'type' }],\r\n                        [core_1.Case]: {\r\n                            'minecraft:fixed': {\r\n                                biome: StringNode({ validator: 'resource', params: { pool: '$worldgen/biome' } })\r\n                            },\r\n                            'minecraft:multi_noise': {\r\n                                seed: core_1.NumberNode({ integer: true }),\r\n                                preset: core_1.Opt(StringNode({ enum: ['nether'] })),\r\n                                altitude_noise: NoPreset(Reference('generator_biome_noise')),\r\n                                temperature_noise: NoPreset(Reference('generator_biome_noise')),\r\n                                humidity_noise: NoPreset(Reference('generator_biome_noise')),\r\n                                weirdness_noise: NoPreset(Reference('generator_biome_noise')),\r\n                                biomes: NoPreset(core_1.Mod(core_1.ListNode(Reference('generator_biome')), {\r\n                                    default: () => [{\r\n                                            biome: 'minecraft:plains'\r\n                                        }]\r\n                                }))\r\n                            },\r\n                            'minecraft:checkerboard': {\r\n                                scale: core_1.Opt(core_1.NumberNode({ integer: true, min: 0, max: 62 })),\r\n                                biomes: core_1.ListNode(StringNode({ validator: 'resource', params: { pool: '$worldgen/biome' } }))\r\n                            },\r\n                            'minecraft:the_end': {\r\n                                seed: core_1.NumberNode({ integer: true })\r\n                            },\r\n                            'minecraft:vanilla_layered': {\r\n                                seed: core_1.NumberNode({ integer: true }),\r\n                                large_biomes: core_1.Opt(core_1.BooleanNode()),\r\n                                legacy_biome_init_layer: core_1.Opt(core_1.BooleanNode())\r\n                            }\r\n                        }\r\n                    }, { category: 'predicate', disableSwitchContext: true })\r\n                },\r\n                'minecraft:flat': {\r\n                    settings: core_1.ObjectNode({\r\n                        biome: core_1.Opt(StringNode({ validator: 'resource', params: { pool: '$worldgen/biome' } })),\r\n                        lakes: core_1.Opt(core_1.BooleanNode()),\r\n                        features: core_1.Opt(core_1.BooleanNode()),\r\n                        layers: core_1.ListNode(Reference('generator_layer')),\r\n                        structures: Reference('generator_structures')\r\n                    })\r\n                }\r\n            }\r\n        }, { disableSwitchContext: true })\r\n    }, { category: 'pool', context: 'dimension' }), {\r\n        default: () => {\r\n            const seed = Math.floor(Math.random() * (4294967296)) - 2147483648;\r\n            return {\r\n                type: 'minecraft:overworld',\r\n                generator: {\r\n                    type: 'minecraft:noise',\r\n                    seed,\r\n                    biome_source: {\r\n                        type: 'minecraft:fixed',\r\n                        seed,\r\n                        biome: 'minecraft:plains'\r\n                    },\r\n                    settings: 'minecraft:overworld'\r\n                }\r\n            };\r\n        }\r\n    }));\r\n    schemas.register('generator_biome', core_1.Mod(core_1.ObjectNode({\r\n        biome: StringNode({ validator: 'resource', params: { pool: '$worldgen/biome' } }),\r\n        parameters: core_1.ObjectNode({\r\n            altitude: core_1.NumberNode(),\r\n            temperature: core_1.NumberNode(),\r\n            humidity: core_1.NumberNode(),\r\n            weirdness: core_1.NumberNode(),\r\n            offset: core_1.NumberNode()\r\n        })\r\n    }, { context: 'generator_biome' }), {\r\n        default: () => ({\r\n            biome: 'minecraft:plains',\r\n            parameters: {\r\n                altitude: 0,\r\n                temperature: 0,\r\n                humidity: 0,\r\n                weirdness: 0,\r\n                offset: 0\r\n            }\r\n        })\r\n    }));\r\n    schemas.register('generator_biome_noise', core_1.Mod(core_1.ObjectNode({\r\n        firstOctave: core_1.NumberNode({ integer: true }),\r\n        amplitudes: core_1.ListNode(core_1.NumberNode())\r\n    }, { context: 'generator_biome_noise' }), {\r\n        default: () => ({\r\n            firstOctave: -7,\r\n            amplitudes: [1, 1]\r\n        })\r\n    }));\r\n}\r\nexports.initDimensionSchemas = initDimensionSchemas;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.initDimensionTypeSchemas = void 0;\r\nconst core_1 = require(\"@mcschema/core\");\r\nconst Common_1 = require(\"./Common\");\r\nfunction initDimensionTypeSchemas(schemas, collections) {\r\n    const StringNode = core_1.StringNode.bind(undefined, collections);\r\n    schemas.register('dimension_type', core_1.Mod(core_1.ObjectNode({\r\n        name: core_1.Mod(StringNode({ validator: 'resource', params: { pool: '$dimension_type', isDefinition: true } }), {\r\n            enabled: (path) => path.getArray().length > 0\r\n        }),\r\n        ultrawarm: core_1.BooleanNode(),\r\n        natural: core_1.BooleanNode(),\r\n        piglin_safe: core_1.BooleanNode(),\r\n        respawn_anchor_works: core_1.BooleanNode(),\r\n        bed_works: core_1.BooleanNode(),\r\n        has_raids: core_1.BooleanNode(),\r\n        has_skylight: core_1.BooleanNode(),\r\n        has_ceiling: core_1.BooleanNode(),\r\n        coordinate_scale: core_1.NumberNode({ min: 0.00001, max: 30000000 }),\r\n        ambient_light: core_1.NumberNode(),\r\n        fixed_time: core_1.Opt(core_1.NumberNode({ integer: true })),\r\n        logical_height: core_1.NumberNode({ integer: true, min: 0, max: 4096 }),\r\n        effects: core_1.Opt(StringNode({ enum: ['minecraft:overworld', 'minecraft:the_nether', 'minecraft:the_end'] })),\r\n        infiniburn: StringNode({ validator: 'resource', params: { pool: '$tag/block' } }),\r\n        min_y: core_1.NumberNode({ integer: true, min: -2048, max: 2047 }),\r\n        height: core_1.NumberNode({ integer: true, min: 0, max: 4096 })\r\n    }, { context: 'dimension_type' }), node => ({\r\n        default: () => Common_1.DefaultDimensionType,\r\n        validate: (path, value, errors, options) => {\r\n            value = node.validate(path, value, errors, options);\r\n            if ((value === null || value === void 0 ? void 0 : value.min_y) + (value === null || value === void 0 ? void 0 : value.height) > 2047) {\r\n                errors.add(path.push('height'), 'error.min_y_plus_height', 2047);\r\n            }\r\n            if ((value === null || value === void 0 ? void 0 : value.logical_height) > (value === null || value === void 0 ? void 0 : value.height)) {\r\n                errors.add(path.push('logical_height'), 'error.logical_height');\r\n            }\r\n            if ((value === null || value === void 0 ? void 0 : value.height) % 16 !== 0) {\r\n                errors.add(path.push('height'), 'error.height_multiple', 16);\r\n            }\r\n            if ((value === null || value === void 0 ? void 0 : value.min_y) % 16 !== 0) {\r\n                errors.add(path.push('min_y'), 'error.min_y_multiple', 16);\r\n            }\r\n            return value;\r\n        }\r\n    })));\r\n}\r\nexports.initDimensionTypeSchemas = initDimensionTypeSchemas;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.initItemModifierSchemas = void 0;\r\nconst core_1 = require(\"@mcschema/core\");\r\nconst Common_1 = require(\"./Common\");\r\nfunction initItemModifierSchemas(schemas, collections) {\r\n    const Reference = core_1.Reference.bind(undefined, schemas);\r\n    const StringNode = core_1.StringNode.bind(undefined, collections);\r\n    schemas.register('item_modifier', core_1.ObjectOrList(Reference('function'), { choiceContext: 'function' }));\r\n    const conditions = {\r\n        conditions: core_1.Opt(core_1.ListNode(Reference('condition')))\r\n    };\r\n    schemas.register('function', core_1.Mod(core_1.ObjectNode({\r\n        function: StringNode({ validator: 'resource', params: { pool: 'loot_function_type' } }),\r\n        [core_1.Switch]: [{ push: 'function' }],\r\n        [core_1.Case]: Common_1.FunctionCases(conditions)\r\n    }, { category: 'function', context: 'function' }), {\r\n        default: () => [{\r\n                function: 'minecraft:set_count',\r\n                count: 1\r\n            }]\r\n    }));\r\n}\r\nexports.initItemModifierSchemas = initItemModifierSchemas;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.LootFunctions = exports.LootConditions = exports.LootCopySources = exports.LootEntitySources = exports.LootTableTypes = void 0;\r\nexports.LootTableTypes = new Map([\r\n    ['minecraft:advancement_entity', { requires: [7 /* Origin */, 8 /* ThisEntity */], allows: [] }],\r\n    ['minecraft:advancement_reward', { requires: [7 /* Origin */, 8 /* ThisEntity */], allows: [] }],\r\n    ['minecraft:barter', { requires: [8 /* ThisEntity */], allows: [] }],\r\n    ['minecraft:block', { requires: [1 /* BlockState */, 7 /* Origin */, 9 /* Tool */], allows: [0 /* BlockEntity */, 4 /* ExplosionRadius */, 8 /* ThisEntity */] }],\r\n    ['minecraft:chest', { requires: [7 /* Origin */], allows: [8 /* ThisEntity */] }],\r\n    ['minecraft:command', { requires: [7 /* Origin */], allows: [8 /* ThisEntity */] }],\r\n    ['minecraft:empty', { requires: [], allows: [] }],\r\n    ['minecraft:entity', { requires: [2 /* DamageSource */, 7 /* Origin */, 8 /* ThisEntity */], allows: [3 /* DirectKillerEntity */, 5 /* KillerEntity */, 6 /* LastDamagePlayer */] }],\r\n    ['minecraft:fishing', { requires: [7 /* Origin */, 9 /* Tool */], allows: [8 /* ThisEntity */] }],\r\n    ['minecraft:generic', { requires: [2 /* DamageSource */, 0 /* BlockEntity */, 1 /* BlockState */, 3 /* DirectKillerEntity */, 4 /* ExplosionRadius */, 5 /* KillerEntity */, 6 /* LastDamagePlayer */, 7 /* Origin */, 8 /* ThisEntity */, 9 /* Tool */], allows: [] }],\r\n    ['minecraft:gift', { requires: [7 /* Origin */, 8 /* ThisEntity */], allows: [] }],\r\n    ['minecraft:selector', { requires: [7 /* Origin */], allows: [8 /* ThisEntity */] }]\r\n]);\r\n/**\r\n * A map from loot entity sources to an array of their required context.\r\n */\r\nexports.LootEntitySources = new Map([\r\n    ['direct_killer', [3 /* DirectKillerEntity */]],\r\n    ['killer', [5 /* KillerEntity */]],\r\n    ['killer_player', [5 /* KillerEntity */]],\r\n    ['this', [8 /* ThisEntity */]]\r\n]);\r\n/**\r\n * A map from loot copy sources to an array of their required context.\r\n */\r\nexports.LootCopySources = new Map([\r\n    ['block_entity', [0 /* BlockEntity */]],\r\n    ['killer', [5 /* KillerEntity */]],\r\n    ['killer_player', [5 /* KillerEntity */]],\r\n    ['this', [8 /* ThisEntity */]]\r\n]);\r\n/**\r\n * A map from loot condition IDs to an array of their required context.\r\n */\r\nexports.LootConditions = new Map([\r\n    ['minecraft:alternative', []],\r\n    ['minecraft:block_state_property', [1 /* BlockState */]],\r\n    ['minecraft:damage_source_properties', [2 /* DamageSource */]],\r\n    ['minecraft:entity_properties', [7 /* Origin */]],\r\n    ['minecraft:entity_scores', []],\r\n    ['minecraft:inverted', []],\r\n    ['minecraft:killed_by_player', [6 /* LastDamagePlayer */]],\r\n    ['minecraft:location_check', []],\r\n    ['minecraft:match_tool', [9 /* Tool */]],\r\n    ['minecraft:random_chance', []],\r\n    ['minecraft:random_chance_with_looting', [5 /* KillerEntity */]],\r\n    ['minecraft:reference', []],\r\n    ['minecraft:survives_explosion', [4 /* ExplosionRadius */]],\r\n    ['minecraft:table_bonus', [9 /* Tool */]],\r\n    ['minecraft:time_check', []],\r\n    ['minecraft:weather_check', []]\r\n]);\r\n/**\r\n * A map from loot function IDs to an array of their required context.\r\n */\r\nexports.LootFunctions = new Map([\r\n    ['minecraft:apply_bonus', [9 /* Tool */]],\r\n    ['minecraft:copy_name', []],\r\n    ['minecraft:copy_nbt', []],\r\n    ['minecraft:copy_state', [1 /* BlockState */]],\r\n    ['minecraft:enchant_randomly', []],\r\n    ['minecraft:enchant_with_levels', []],\r\n    ['minecraft:exploration_map', [7 /* Origin */]],\r\n    ['minecraft:explosion_decay', []],\r\n    ['minecraft:fill_player_head', []],\r\n    ['minecraft:furnace_smelt', []],\r\n    ['minecraft:limit_count', []],\r\n    ['minecraft:looting_enchant', [5 /* KillerEntity */]],\r\n    ['minecraft:set_attributes', []],\r\n    ['minecraft:set_banner_pattern', []],\r\n    ['minecraft:set_contents', []],\r\n    ['minecraft:set_count', []],\r\n    ['minecraft:set_damage', []],\r\n    ['minecraft:set_loot_table', []],\r\n    ['minecraft:set_lore', []],\r\n    ['minecraft:set_name', []],\r\n    ['minecraft:set_nbt', []],\r\n    ['minecraft:set_stew_effect', []]\r\n]);\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.initLootTableSchemas = void 0;\r\nconst core_1 = require(\"@mcschema/core\");\r\nconst LootContext_1 = require(\"../LootContext\");\r\nconst Common_1 = require(\"./Common\");\r\nfunction initLootTableSchemas(schemas, collections) {\r\n    const Reference = core_1.Reference.bind(undefined, schemas);\r\n    const StringNode = core_1.StringNode.bind(undefined, collections);\r\n    const conditions = {\r\n        conditions: core_1.Opt(core_1.ListNode(Reference('loot_condition')))\r\n    };\r\n    const functionsAndConditions = {\r\n        functions: core_1.Opt(core_1.ListNode(Reference('loot_function'))),\r\n        ...conditions\r\n    };\r\n    function compileSwitchNode(contextMap, collectionID, getNode) {\r\n        const cases = [];\r\n        const getAvailableOptions = (providedContext) => collections\r\n            .get(collectionID)\r\n            .filter(t => {\r\n            var _a;\r\n            const requiredContext = (_a = contextMap.get(t)) !== null && _a !== void 0 ? _a : [];\r\n            return requiredContext.every(c => providedContext.includes(c));\r\n        });\r\n        for (const [tableType, { allows, requires }] of LootContext_1.LootTableTypes) {\r\n            const providedContext = [...allows, ...requires];\r\n            cases.push({\r\n                match: path => path.getModel().get(new core_1.Path(['type'])) === tableType,\r\n                node: getNode(getAvailableOptions(providedContext))\r\n            });\r\n        }\r\n        cases.push({ match: _ => true, node: getNode(collectionID) });\r\n        return core_1.SwitchNode(cases);\r\n    }\r\n    const conditionIDSwtichNode = compileSwitchNode(LootContext_1.LootConditions, 'loot_condition_type', type => StringNode({ validator: 'resource', params: { pool: type instanceof Array ? type : `loot_condition_type` } }));\r\n    const functionIDSwtichNode = compileSwitchNode(LootContext_1.LootFunctions, 'loot_function_type', type => StringNode({ validator: 'resource', params: { pool: type instanceof Array ? type : `loot_function_type` } }));\r\n    const entitySourceSwtichNode = compileSwitchNode(LootContext_1.LootEntitySources, 'entity_source', type => StringNode({ enum: type }));\r\n    const copySourceSwtichNode = compileSwitchNode(LootContext_1.LootCopySources, 'copy_source', type => StringNode({ enum: type }));\r\n    schemas.register('loot_table', core_1.Mod(core_1.ObjectNode({\r\n        type: core_1.Opt(StringNode({ validator: \"resource\", params: { pool: collections.get('loot_context_type') } })),\r\n        pools: core_1.Opt(core_1.ListNode(core_1.Mod(core_1.ObjectNode({\r\n            rolls: Reference('number_provider'),\r\n            bonus_rolls: core_1.Opt(Reference('number_provider')),\r\n            entries: core_1.ListNode(Reference('loot_entry')),\r\n            ...functionsAndConditions\r\n        }, { category: 'pool', context: 'loot_pool' }), {\r\n            default: () => ({\r\n                rolls: 1,\r\n                entries: [{\r\n                        type: 'minecraft:item',\r\n                        name: 'minecraft:stone'\r\n                    }]\r\n            })\r\n        }))),\r\n        functions: core_1.Opt(core_1.ListNode(Reference('loot_function')))\r\n    }, { context: 'loot_table' }), {\r\n        default: () => ({\r\n            pools: [{\r\n                    rolls: 1,\r\n                    entries: [{\r\n                            type: 'minecraft:item',\r\n                            name: 'minecraft:stone'\r\n                        }]\r\n                }]\r\n        })\r\n    }));\r\n    const weightMod = {\r\n        enabled: path => {\r\n            var _a;\r\n            return ((_a = path.pop().get()) === null || _a === void 0 ? void 0 : _a.length) > 1\r\n                && !['minecraft:alternatives', 'minecraft:group', 'minecraft:sequence'].includes(path.push('type').get());\r\n        }\r\n    };\r\n    schemas.register('loot_entry', core_1.Mod(core_1.ObjectNode({\r\n        type: StringNode({ validator: 'resource', params: { pool: 'loot_pool_entry_type' } }),\r\n        weight: core_1.Opt(core_1.Mod(core_1.NumberNode({ integer: true, min: 1 }), weightMod)),\r\n        quality: core_1.Opt(core_1.Mod(core_1.NumberNode({ integer: true }), weightMod)),\r\n        [core_1.Switch]: [{ push: 'type' }],\r\n        [core_1.Case]: {\r\n            'minecraft:alternatives': {\r\n                children: core_1.ListNode(Reference('loot_entry')),\r\n                ...functionsAndConditions\r\n            },\r\n            'minecraft:dynamic': {\r\n                name: StringNode(),\r\n                ...functionsAndConditions\r\n            },\r\n            'minecraft:group': {\r\n                children: core_1.ListNode(Reference('loot_entry')),\r\n                ...functionsAndConditions\r\n            },\r\n            'minecraft:item': {\r\n                name: StringNode({ validator: 'resource', params: { pool: 'item' } }),\r\n                ...functionsAndConditions\r\n            },\r\n            'minecraft:loot_table': {\r\n                name: StringNode({ validator: 'resource', params: { pool: '$loot_table' } }),\r\n                ...functionsAndConditions\r\n            },\r\n            'minecraft:sequence': {\r\n                children: core_1.ListNode(Reference('loot_entry')),\r\n                ...functionsAndConditions\r\n            },\r\n            'minecraft:tag': {\r\n                name: StringNode({ validator: 'resource', params: { pool: '$tag/item' } }),\r\n                expand: core_1.Opt(core_1.BooleanNode()),\r\n                ...functionsAndConditions\r\n            }\r\n        }\r\n    }, { context: 'loot_entry' }), {\r\n        default: () => ({\r\n            type: 'minecraft:item',\r\n            name: 'minecraft:stone'\r\n        })\r\n    }));\r\n    schemas.register('loot_function', core_1.Mod(core_1.ObjectNode({\r\n        function: functionIDSwtichNode,\r\n        [core_1.Switch]: [{ push: 'function' }],\r\n        [core_1.Case]: Common_1.FunctionCases(conditions, copySourceSwtichNode, entitySourceSwtichNode)\r\n    }, { category: 'function', context: 'function' }), {\r\n        default: () => ({\r\n            function: 'minecraft:set_count',\r\n            count: 1\r\n        })\r\n    }));\r\n    schemas.register('loot_condition', core_1.Mod(core_1.ObjectNode({\r\n        condition: conditionIDSwtichNode,\r\n        [core_1.Switch]: [{ push: 'condition' }],\r\n        [core_1.Case]: Common_1.ConditionCases(entitySourceSwtichNode)\r\n    }, { category: 'predicate', context: 'condition' }), {\r\n        default: () => ({\r\n            condition: 'minecraft:random_chance',\r\n            chance: 0.5\r\n        })\r\n    }));\r\n    schemas.register('attribute_modifier', core_1.Mod(core_1.ObjectNode({\r\n        attribute: StringNode({ validator: 'resource', params: { pool: 'attribute' } }),\r\n        name: StringNode(),\r\n        amount: Reference('number_provider'),\r\n        operation: StringNode({ enum: ['addition', 'multiply_base', 'multiply_total'] }),\r\n        slot: core_1.StringOrList(StringNode({ enum: 'slot' }))\r\n    }, { context: 'attribute_modifier' }), {\r\n        default: () => ({\r\n            attribute: 'minecraft:generic.max_health',\r\n            name: '',\r\n            amount: 1,\r\n            operation: 'addition',\r\n            slot: 'mainhand'\r\n        })\r\n    }));\r\n}\r\nexports.initLootTableSchemas = initLootTableSchemas;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.initPackMcmetaSchemas = void 0;\r\nconst core_1 = require(\"@mcschema/core\");\r\nconst CURRENT_PACK_FORMAT = 7;\r\nfunction initPackMcmetaSchemas(schemas, _) {\r\n    const getSimpleString = (jsonText) => { var _a, _b; return jsonText instanceof Array ? getSimpleString(jsonText[0]) : (_b = (_a = jsonText === null || jsonText === void 0 ? void 0 : jsonText.text) !== null && _a !== void 0 ? _a : jsonText === null || jsonText === void 0 ? void 0 : jsonText.toString()) !== null && _b !== void 0 ? _b : ''; };\r\n    schemas.register('pack_mcmeta', core_1.Mod(core_1.ObjectNode({\r\n        pack: core_1.Mod(core_1.ObjectNode({\r\n            pack_format: core_1.Mod(core_1.NumberNode({ integer: true, min: CURRENT_PACK_FORMAT, max: CURRENT_PACK_FORMAT }), {\r\n                default: () => CURRENT_PACK_FORMAT,\r\n                canUpdate: (_p, v) => v !== CURRENT_PACK_FORMAT,\r\n                update: () => [{ name: 'pack_format', params: [CURRENT_PACK_FORMAT], newValue: CURRENT_PACK_FORMAT }]\r\n            }),\r\n            description: core_1.Reference(schemas, 'text_component')\r\n        }), {\r\n            default: () => ({\r\n                pack_format: CURRENT_PACK_FORMAT,\r\n                description: ''\r\n            })\r\n        })\r\n    }), {\r\n        default: () => ({\r\n            pack: {\r\n                pack_format: CURRENT_PACK_FORMAT,\r\n                description: ''\r\n            }\r\n        })\r\n    }));\r\n}\r\nexports.initPackMcmetaSchemas = initPackMcmetaSchemas;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.initPredicatesSchemas = void 0;\r\nconst core_1 = require(\"@mcschema/core\");\r\nfunction initPredicatesSchemas(schemas, collections) {\r\n    const Reference = core_1.Reference.bind(undefined, schemas);\r\n    const StringNode = core_1.StringNode.bind(undefined, collections);\r\n    const StateChoice = core_1.ChoiceNode([\r\n        {\r\n            type: 'string',\r\n            node: StringNode(),\r\n            change: v => (typeof v === 'boolean' || typeof v === 'number') ? v.toString() : ''\r\n        },\r\n        {\r\n            type: 'number',\r\n            node: core_1.NumberNode(),\r\n            change: v => (typeof v === 'string') ? parseInt(v) : 0\r\n        },\r\n        {\r\n            type: 'object',\r\n            node: core_1.ObjectNode({\r\n                min: core_1.Opt(core_1.NumberNode({ integer: true })),\r\n                max: core_1.Opt(core_1.NumberNode({ integer: true }))\r\n            }),\r\n            change: v => (typeof v === 'number') ? ({ min: v, max: v }) : ({})\r\n        },\r\n        {\r\n            type: 'boolean',\r\n            node: core_1.BooleanNode(),\r\n            change: v => v === 'true' || v === 1\r\n        }\r\n    ]);\r\n    schemas.register('item_predicate', core_1.ObjectNode({\r\n        items: core_1.Opt(core_1.ListNode(StringNode({ validator: 'resource', params: { pool: 'item' } }))),\r\n        tag: core_1.Opt(StringNode({ validator: 'resource', params: { pool: '$tag/item' } })),\r\n        count: Reference('int_bounds'),\r\n        durability: Reference('int_bounds'),\r\n        potion: core_1.Opt(StringNode({ validator: 'resource', params: { pool: 'potion' } })),\r\n        nbt: core_1.Opt(StringNode({ validator: 'nbt', params: { registry: { category: 'minecraft:item', id: ['pop', { push: 'item' }] } } })),\r\n        enchantments: core_1.Opt(core_1.ListNode(Reference('enchantment_predicate')))\r\n    }, { context: 'item' }));\r\n    schemas.register('enchantment_predicate', core_1.ObjectNode({\r\n        enchantment: core_1.Opt(StringNode({ validator: 'resource', params: { pool: 'enchantment' } })),\r\n        levels: Reference('int_bounds')\r\n    }, { context: 'enchantment' }));\r\n    schemas.register('block_predicate', core_1.ObjectNode({\r\n        blocks: core_1.Opt(core_1.ListNode(StringNode({ validator: 'resource', params: { pool: 'block' } }))),\r\n        tag: core_1.Opt(StringNode({ validator: 'resource', params: { pool: '$tag/block' } })),\r\n        nbt: core_1.Opt(StringNode({ validator: 'nbt', params: { registry: { category: 'minecraft:block', id: ['pop', { push: 'block' }] } } })),\r\n        state: core_1.Opt(core_1.MapNode(StringNode(), StateChoice, { validation: { validator: 'block_state_map', params: { id: ['pop', { push: 'block' }] } } }))\r\n    }, { context: 'block' }));\r\n    schemas.register('fluid_predicate', core_1.ObjectNode({\r\n        fluid: core_1.Opt(StringNode({ validator: 'resource', params: { pool: 'fluid' } })),\r\n        tag: core_1.Opt(StringNode({ validator: 'resource', params: { pool: '$tag/fluid' } })),\r\n        state: core_1.Opt(core_1.MapNode(StringNode(), StateChoice))\r\n    }, { context: 'fluid' }));\r\n    schemas.register('location_predicate', core_1.ObjectNode({\r\n        position: core_1.Opt(core_1.ObjectNode({\r\n            x: Reference('float_bounds'),\r\n            y: Reference('float_bounds'),\r\n            z: Reference('float_bounds')\r\n        })),\r\n        biome: core_1.Opt(StringNode({ validator: 'resource', params: { pool: '$worldgen/biome' } })),\r\n        feature: core_1.Opt(StringNode({ enum: collections.get('worldgen/structure_feature').map(v => v.slice(10)) })),\r\n        dimension: core_1.Opt(StringNode({ validator: 'resource', params: { pool: '$dimension' } })),\r\n        light: core_1.Opt(core_1.ObjectNode({\r\n            light: Reference('int_bounds')\r\n        })),\r\n        smokey: core_1.Opt(core_1.BooleanNode()),\r\n        block: core_1.Opt(Reference('block_predicate')),\r\n        fluid: core_1.Opt(Reference('fluid_predicate'))\r\n    }, { context: 'location' }));\r\n    schemas.register('statistic_predicate', core_1.ObjectNode({\r\n        type: StringNode({ validator: 'resource', params: { pool: 'stat_type' } }),\r\n        stat: StringNode(),\r\n        value: Reference('int_bounds'),\r\n        [core_1.Switch]: [{ push: 'type' }],\r\n        [core_1.Case]: {\r\n            'minecraft:mined': {\r\n                stat: StringNode({ validator: 'resource', params: { pool: 'block' } })\r\n            },\r\n            'minecraft:crafted': {\r\n                stat: StringNode({ validator: 'resource', params: { pool: 'item' } })\r\n            },\r\n            'minecraft:used': {\r\n                stat: StringNode({ validator: 'resource', params: { pool: 'item' } })\r\n            },\r\n            'minecraft:broken': {\r\n                stat: StringNode({ validator: 'resource', params: { pool: 'item' } })\r\n            },\r\n            'minecraft:picked_up': {\r\n                stat: StringNode({ validator: 'resource', params: { pool: 'item' } })\r\n            },\r\n            'minecraft:dropped': {\r\n                stat: StringNode({ validator: 'resource', params: { pool: 'item' } })\r\n            },\r\n            'minecraft:killed': {\r\n                stat: StringNode({ validator: 'resource', params: { pool: 'entity_type' } })\r\n            },\r\n            'minecraft:killed_by': {\r\n                stat: StringNode({ validator: 'resource', params: { pool: 'entity_type' } })\r\n            },\r\n            'minecraft:custom': {\r\n                stat: StringNode({ validator: 'resource', params: { pool: 'custom_stat' } })\r\n            }\r\n        }\r\n    }));\r\n    schemas.register('player_predicate', core_1.ObjectNode({\r\n        gamemode: core_1.Opt(StringNode({ enum: 'gamemode' })),\r\n        level: Reference('int_bounds'),\r\n        advancements: core_1.Opt(core_1.MapNode(StringNode({ validator: 'resource', params: { pool: '$advancement' } }), core_1.ChoiceNode([\r\n            { type: 'boolean', node: core_1.BooleanNode(), change: _ => true },\r\n            {\r\n                type: 'object', node: core_1.MapNode(StringNode(), core_1.BooleanNode())\r\n            }\r\n        ]))),\r\n        recipes: core_1.Opt(core_1.MapNode(StringNode({ validator: 'resource', params: { pool: '$recipe' } }), core_1.BooleanNode())),\r\n        stats: core_1.Opt(core_1.ListNode(Reference('statistic_predicate'))),\r\n        looking_at: core_1.Opt(Reference('entity_predicate'))\r\n    }, { context: 'player' }));\r\n    schemas.register('status_effect_predicate', core_1.ObjectNode({\r\n        amplifier: Reference('int_bounds'),\r\n        duration: Reference('int_bounds'),\r\n        ambient: core_1.Opt(core_1.BooleanNode()),\r\n        visible: core_1.Opt(core_1.BooleanNode())\r\n    }, { context: 'status_effect' }));\r\n    schemas.register('distance_predicate', core_1.ObjectNode({\r\n        x: Reference('float_bounds'),\r\n        y: Reference('float_bounds'),\r\n        z: Reference('float_bounds'),\r\n        absolute: Reference('float_bounds'),\r\n        horizontal: Reference('float_bounds')\r\n    }, { context: 'distance' }));\r\n    schemas.register('entity_predicate', core_1.ObjectNode({\r\n        type: core_1.Opt(StringNode({ validator: 'resource', params: { pool: 'entity_type', allowTag: true } })),\r\n        nbt: core_1.Opt(StringNode({ validator: 'nbt', params: { registry: { category: 'minecraft:entity', id: ['pop', { push: 'type' }] } } })),\r\n        team: core_1.Opt(StringNode({ validator: 'team' })),\r\n        location: core_1.Opt(Reference('location_predicate')),\r\n        stepping_on: core_1.Opt(Reference('location_predicate')),\r\n        distance: core_1.Opt(Reference('distance_predicate')),\r\n        flags: core_1.Opt(core_1.ObjectNode({\r\n            is_on_fire: core_1.Opt(core_1.BooleanNode()),\r\n            is_sneaking: core_1.Opt(core_1.BooleanNode()),\r\n            is_sprinting: core_1.Opt(core_1.BooleanNode()),\r\n            is_swimming: core_1.Opt(core_1.BooleanNode()),\r\n            is_baby: core_1.Opt(core_1.BooleanNode())\r\n        })),\r\n        equipment: core_1.Opt(core_1.MapNode(StringNode({ enum: 'slot' }), Reference('item_predicate'))),\r\n        player: core_1.Opt(Reference('player_predicate')),\r\n        vehicle: core_1.Opt(Reference('entity_predicate')),\r\n        passenger: core_1.Opt(Reference('entity_predicate')),\r\n        targeted_entity: core_1.Opt(Reference('entity_predicate')),\r\n        lightning_bolt: core_1.Opt(core_1.ObjectNode({\r\n            blocks_set_on_fire: core_1.Opt(Reference('int_bounds')),\r\n            entity_struck: core_1.Opt(Reference('entity_predicate'))\r\n        })),\r\n        fishing_hook: core_1.Opt(core_1.ObjectNode({\r\n            in_open_water: core_1.Opt(core_1.BooleanNode())\r\n        })),\r\n        effects: core_1.Opt(core_1.MapNode(StringNode({ validator: 'resource', params: { pool: 'mob_effect' } }), Reference('status_effect_predicate')))\r\n    }, { context: 'entity' }));\r\n    schemas.register('damage_source_predicate', core_1.ObjectNode({\r\n        is_explosion: core_1.Opt(core_1.BooleanNode()),\r\n        is_fire: core_1.Opt(core_1.BooleanNode()),\r\n        is_magic: core_1.Opt(core_1.BooleanNode()),\r\n        is_projectile: core_1.Opt(core_1.BooleanNode()),\r\n        is_lightning: core_1.Opt(core_1.BooleanNode()),\r\n        bypasses_armor: core_1.Opt(core_1.BooleanNode()),\r\n        bypasses_invulnerability: core_1.Opt(core_1.BooleanNode()),\r\n        bypasses_magic: core_1.Opt(core_1.BooleanNode()),\r\n        source_entity: core_1.Opt(Reference('entity_predicate')),\r\n        direct_entity: core_1.Opt(Reference('entity_predicate'))\r\n    }, { context: 'damage_source' }));\r\n    schemas.register('damage_predicate', core_1.ObjectNode({\r\n        dealt: Reference('float_bounds'),\r\n        taken: Reference('float_bounds'),\r\n        blocked: core_1.Opt(core_1.BooleanNode()),\r\n        source_entity: core_1.Opt(Reference('entity_predicate')),\r\n        type: core_1.Opt(Reference('damage_source_predicate'))\r\n    }, { context: 'damage' }));\r\n}\r\nexports.initPredicatesSchemas = initPredicatesSchemas;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.initRecipeSchemas = void 0;\r\nconst core_1 = require(\"@mcschema/core\");\r\nfunction initRecipeSchemas(schemas, collections) {\r\n    const Reference = core_1.Reference.bind(undefined, schemas);\r\n    const StringNode = core_1.StringNode.bind(undefined, collections);\r\n    schemas.register('recipe', core_1.Mod(core_1.ObjectNode({\r\n        type: StringNode({ validator: 'resource', params: { pool: 'recipe_serializer' } }),\r\n        [core_1.Switch]: [{ push: 'type' }],\r\n        [core_1.Case]: {\r\n            'minecraft:crafting_shaped': {\r\n                group: core_1.Opt(StringNode({ enum: 'recipe_group', additional: true })),\r\n                pattern: core_1.ListNode(StringNode()),\r\n                key: core_1.MapNode(StringNode(), // TODO: add validation\r\n                Reference('recipe_ingredient')),\r\n                result: Reference('recipe_result')\r\n            },\r\n            'minecraft:crafting_shapeless': {\r\n                group: core_1.Opt(StringNode()),\r\n                ingredients: core_1.ListNode(Reference('recipe_ingredient')),\r\n                result: Reference('recipe_result')\r\n            },\r\n            'minecraft:smelting': {\r\n                group: core_1.Opt(StringNode()),\r\n                ingredient: Reference('recipe_ingredient'),\r\n                result: StringNode({ validator: 'resource', params: { pool: 'item' } }),\r\n                experience: core_1.Opt(core_1.NumberNode()),\r\n                cookingtime: core_1.Opt(core_1.Mod(core_1.NumberNode({ integer: true }), { default: () => 200 }))\r\n            },\r\n            'minecraft:blasting': {\r\n                group: core_1.Opt(StringNode()),\r\n                ingredient: Reference('recipe_ingredient'),\r\n                result: StringNode({ validator: 'resource', params: { pool: 'item' } }),\r\n                experience: core_1.Opt(core_1.NumberNode()),\r\n                cookingtime: core_1.Opt(core_1.Mod(core_1.NumberNode({ integer: true }), { default: () => 100 }))\r\n            },\r\n            'minecraft:smoking': {\r\n                group: core_1.Opt(StringNode()),\r\n                ingredient: Reference('recipe_ingredient'),\r\n                result: StringNode({ validator: 'resource', params: { pool: 'item' } }),\r\n                experience: core_1.Opt(core_1.NumberNode()),\r\n                cookingtime: core_1.Opt(core_1.Mod(core_1.NumberNode({ integer: true }), { default: () => 100 }))\r\n            },\r\n            'minecraft:campfire_cooking': {\r\n                group: core_1.Opt(StringNode()),\r\n                ingredient: Reference('recipe_ingredient'),\r\n                result: StringNode({ validator: 'resource', params: { pool: 'item' } }),\r\n                experience: core_1.Opt(core_1.NumberNode()),\r\n                cookingtime: core_1.Opt(core_1.Mod(core_1.NumberNode({ integer: true }), { default: () => 100 }))\r\n            },\r\n            'minecraft:stonecutting': {\r\n                group: core_1.Opt(StringNode()),\r\n                ingredient: Reference('recipe_ingredient'),\r\n                result: StringNode({ validator: 'resource', params: { pool: 'item' } }),\r\n                count: core_1.NumberNode({ integer: true })\r\n            },\r\n            'minecraft:smithing': {\r\n                group: core_1.Opt(StringNode()),\r\n                base: Reference('recipe_ingredient_object'),\r\n                addition: Reference('recipe_ingredient_object'),\r\n                result: Reference('recipe_result')\r\n            }\r\n        }\r\n    }, { context: 'recipe' }), {\r\n        default: () => ({\r\n            type: 'minecraft:crafting_shaped'\r\n        })\r\n    }));\r\n    schemas.register('recipe_ingredient', core_1.Mod(core_1.ChoiceNode([\r\n        {\r\n            type: 'object',\r\n            node: Reference('recipe_ingredient_object'),\r\n            change: v => v[0]\r\n        },\r\n        {\r\n            type: 'list',\r\n            node: core_1.ListNode(Reference('recipe_ingredient_object')),\r\n            change: v => [v]\r\n        }\r\n    ]), {\r\n        default: () => ({\r\n            item: 'minecraft:stone'\r\n        })\r\n    }));\r\n    schemas.register('recipe_ingredient_object', core_1.Mod(core_1.ObjectNode({\r\n        item: core_1.Opt(StringNode({ validator: 'resource', params: { pool: 'item' } })),\r\n        tag: core_1.Opt(StringNode({ validator: 'resource', params: { pool: '$tag/item' } }))\r\n    }), {\r\n        default: () => ({\r\n            item: 'minecraft:stone'\r\n        })\r\n    }));\r\n    schemas.register('recipe_result', core_1.Mod(core_1.ObjectNode({\r\n        item: StringNode({ validator: 'resource', params: { pool: 'item' } }),\r\n        count: core_1.Opt(core_1.Mod(core_1.NumberNode({ integer: true }), { default: () => 1 }))\r\n    }), {\r\n        default: () => ({\r\n            item: 'minecraft:stone'\r\n        })\r\n    }));\r\n}\r\nexports.initRecipeSchemas = initRecipeSchemas;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.initTagsSchemas = void 0;\r\nconst core_1 = require(\"@mcschema/core\");\r\nfunction initTagsSchemas(schemas, collections) {\r\n    const StringNode = core_1.StringNode.bind(undefined, collections);\r\n    const TagBase = (type) => core_1.Mod(core_1.ObjectNode({\r\n        replace: core_1.Opt(core_1.BooleanNode()),\r\n        values: core_1.ListNode(core_1.ChoiceNode([\r\n            {\r\n                type: 'string',\r\n                node: StringNode({ validator: 'resource', params: { pool: type, allowTag: true } }),\r\n                change: v => v.id\r\n            },\r\n            {\r\n                type: 'object',\r\n                node: core_1.ObjectNode({\r\n                    id: StringNode({ validator: 'resource', params: { pool: type, allowTag: true, allowUnknown: true } }),\r\n                    required: core_1.BooleanNode()\r\n                }),\r\n                change: v => ({ id: v })\r\n            }\r\n        ])),\r\n    }, { context: 'tag' }), {\r\n        default: () => ({\r\n            values: []\r\n        })\r\n    });\r\n    schemas.register('block_tag', TagBase('block'));\r\n    schemas.register('entity_type_tag', TagBase('entity_type'));\r\n    schemas.register('fluid_tag', TagBase('fluid'));\r\n    schemas.register('function_tag', TagBase('$function'));\r\n    schemas.register('game_event_tag', TagBase('game_event'));\r\n    schemas.register('item_tag', TagBase('item'));\r\n}\r\nexports.initTagsSchemas = initTagsSchemas;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.initTextComponentSchemas = void 0;\r\nconst core_1 = require(\"@mcschema/core\");\r\nfunction initTextComponentSchemas(schemas, collections) {\r\n    const Reference = core_1.Reference.bind(undefined, schemas);\r\n    const StringNode = core_1.StringNode.bind(undefined, collections);\r\n    const getSimpleString = (v) => { var _a; return v instanceof Array ? getSimpleString(v[0]) : (_a = v === null || v === void 0 ? void 0 : v.text) !== null && _a !== void 0 ? _a : (typeof v === 'object' ? '' : v === null || v === void 0 ? void 0 : v.toString()); };\r\n    schemas.register('text_component', core_1.Mod(core_1.ChoiceNode([\r\n        {\r\n            type: 'object',\r\n            node: Reference('text_component_object'),\r\n            change: v => v instanceof Array ? (typeof v[0] === 'object' ? v[0] : { text: getSimpleString(v[0]) }) : typeof v === 'object' ? v : { text: getSimpleString(v) }\r\n        },\r\n        {\r\n            type: 'list',\r\n            node: Reference('text_component_list'),\r\n            change: v => [v]\r\n        },\r\n        {\r\n            type: 'string',\r\n            priority: 1,\r\n            node: StringNode(),\r\n            change: getSimpleString\r\n        },\r\n        {\r\n            type: 'number',\r\n            node: core_1.NumberNode(),\r\n            change: v => {\r\n                const n = parseFloat(getSimpleString(v));\r\n                return isFinite(n) ? n : (!!v ? 1 : 0);\r\n            }\r\n        },\r\n        {\r\n            type: 'boolean',\r\n            node: core_1.BooleanNode(),\r\n            change: v => {\r\n                const s = getSimpleString(v);\r\n                return s === 'true' || s === 'false' ? s === 'true' : !!s;\r\n            }\r\n        }\r\n    ], { context: 'text_component' }), {\r\n        default: () => ({\r\n            text: \"\"\r\n        })\r\n    }));\r\n    const CommonFields = {\r\n        color: core_1.Opt(StringNode()) /* TODO */,\r\n        font: core_1.Opt(StringNode()),\r\n        bold: core_1.Opt(core_1.BooleanNode()),\r\n        italic: core_1.Opt(core_1.BooleanNode()),\r\n        underlined: core_1.Opt(core_1.BooleanNode()),\r\n        strikethrough: core_1.Opt(core_1.BooleanNode()),\r\n        obfuscated: core_1.Opt(core_1.BooleanNode()),\r\n        insertion: core_1.Opt(StringNode()),\r\n        clickEvent: core_1.Opt(core_1.ObjectNode({\r\n            action: StringNode({ enum: ['open_url', 'open_file', 'run_command', 'suggest_command', 'change_page', 'copy_to_clipboard'] }),\r\n            [core_1.Switch]: [{ push: 'action' }],\r\n            [core_1.Case]: {\r\n                'change_page': {\r\n                    value: StringNode()\r\n                },\r\n                'copy_to_clipboard': {\r\n                    value: StringNode()\r\n                },\r\n                'open_file': {\r\n                    value: StringNode()\r\n                },\r\n                'open_url': {\r\n                    value: StringNode()\r\n                },\r\n                'run_command': {\r\n                    value: StringNode({ validator: 'command', params: { leadingSlash: true, allowPartial: true } })\r\n                },\r\n                'suggest_command': {\r\n                    value: StringNode({ validator: 'command', params: { leadingSlash: true, allowPartial: true } })\r\n                }\r\n            }\r\n        })),\r\n        hoverEvent: core_1.Opt(core_1.ObjectNode({\r\n            action: StringNode({ enum: ['show_text', 'show_item', 'show_entity'] }),\r\n            [core_1.Switch]: [{ push: 'action' }],\r\n            [core_1.Case]: {\r\n                'show_text': {\r\n                    value: core_1.Opt(Reference('text_component')),\r\n                    contents: core_1.Opt(Reference('text_component'))\r\n                },\r\n                'show_item': {\r\n                    value: core_1.Opt(StringNode({ validator: 'nbt', params: { module: 'util::InventoryItem' } })),\r\n                    contents: core_1.Opt(core_1.ObjectNode({\r\n                        id: StringNode({ validator: 'resource', params: { pool: 'item' } }),\r\n                        count: core_1.Opt(core_1.NumberNode({ integer: true })),\r\n                        tag: core_1.Opt(StringNode({ validator: 'nbt', params: { registry: { category: 'minecraft:item', id: ['pop', { push: 'id' }] } } }))\r\n                    }))\r\n                },\r\n                'show_entity': {\r\n                    value: core_1.Opt(core_1.ObjectNode({\r\n                        name: core_1.Opt(StringNode()),\r\n                        type: core_1.Opt(StringNode()),\r\n                        id: core_1.Opt(StringNode())\r\n                    })),\r\n                    contents: core_1.Opt(core_1.Mod(core_1.ObjectNode({\r\n                        name: core_1.Opt(Reference('text_component')),\r\n                        type: StringNode({ validator: 'resource', params: { pool: 'entity_type' } }),\r\n                        id: StringNode({ validator: 'uuid' })\r\n                    }), {\r\n                        default: () => ({\r\n                            type: 'minecraft:pig',\r\n                            id: '00000001-0001-0001-0001-000000000001'\r\n                        })\r\n                    }))\r\n                }\r\n            }\r\n        })),\r\n        extra: core_1.Opt(Reference('text_component_list'))\r\n    };\r\n    schemas.register('text_component_object', core_1.Mod(core_1.ChoiceNode([\r\n        {\r\n            type: 'text',\r\n            match: v => typeof v === 'object',\r\n            change: v => ({ text: '' }),\r\n            priority: -1,\r\n            node: core_1.ObjectNode({\r\n                text: StringNode(),\r\n                ...CommonFields\r\n            })\r\n        },\r\n        {\r\n            type: 'translation',\r\n            match: v => (v === null || v === void 0 ? void 0 : v.translate) !== undefined,\r\n            change: v => ({ translate: '' }),\r\n            node: core_1.ObjectNode({\r\n                translate: StringNode(),\r\n                with: core_1.Opt(Reference('text_component_list')),\r\n                ...CommonFields\r\n            })\r\n        },\r\n        {\r\n            type: 'score',\r\n            match: v => (v === null || v === void 0 ? void 0 : v.score) !== undefined,\r\n            change: v => ({ score: {} }),\r\n            node: core_1.ObjectNode({\r\n                score: core_1.ObjectNode({\r\n                    name: StringNode({ validator: 'entity', params: { amount: 'single', type: 'entities', isScoreHolder: true } }),\r\n                    objective: StringNode({ validator: 'objective' }),\r\n                    value: core_1.Opt(StringNode())\r\n                }),\r\n                ...CommonFields\r\n            })\r\n        },\r\n        {\r\n            type: 'selector',\r\n            match: v => (v === null || v === void 0 ? void 0 : v.selector) !== undefined,\r\n            change: v => ({ selector: '' }),\r\n            node: core_1.ObjectNode({\r\n                selector: StringNode({ validator: 'entity', params: { amount: 'multiple', type: 'entities' } }),\r\n                separator: core_1.Opt(Reference('text_component')),\r\n                ...CommonFields\r\n            })\r\n        },\r\n        {\r\n            type: 'keybind',\r\n            match: v => (v === null || v === void 0 ? void 0 : v.keybind) !== undefined,\r\n            change: v => ({ keybind: '' }),\r\n            node: core_1.ObjectNode({\r\n                keybind: StringNode({ enum: 'keybind', additional: true }),\r\n                ...CommonFields\r\n            })\r\n        },\r\n        {\r\n            type: 'nbt',\r\n            match: v => (v === null || v === void 0 ? void 0 : v.nbt) !== undefined,\r\n            change: v => ({ nbt: '' }),\r\n            node: core_1.ObjectNode({\r\n                nbt: StringNode({ validator: 'nbt_path' }),\r\n                block: core_1.Opt(StringNode({ validator: 'vector', params: { dimension: 3, isInteger: true } })),\r\n                entity: core_1.Opt(StringNode({ validator: 'entity', params: { amount: 'multiple', type: 'entities' } })),\r\n                storage: core_1.Opt(StringNode({ validator: 'resource', params: { pool: '$storage' } })),\r\n                interpret: core_1.Opt(core_1.BooleanNode()),\r\n                separator: core_1.Opt(Reference('text_component')),\r\n                ...CommonFields\r\n            })\r\n        }\r\n    ], { context: 'text_component_object', choiceContext: 'text_component.object' }), {\r\n        default: () => ({\r\n            text: \"\"\r\n        })\r\n    }));\r\n    schemas.register('text_component_list', core_1.Mod(core_1.ListNode(Reference('text_component')), {\r\n        default: () => [{\r\n                text: \"\"\r\n            }]\r\n    }));\r\n}\r\nexports.initTextComponentSchemas = initTextComponentSchemas;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.initBiomeSchemas = void 0;\r\nconst core_1 = require(\"@mcschema/core\");\r\nfunction initBiomeSchemas(schemas, collections) {\r\n    const StringNode = core_1.StringNode.bind(undefined, collections);\r\n    schemas.register('biome', core_1.Mod(core_1.ObjectNode({\r\n        surface_builder: StringNode({ validator: 'resource', params: { pool: '$worldgen/configured_surface_builder' } }),\r\n        depth: core_1.NumberNode(),\r\n        scale: core_1.NumberNode(),\r\n        temperature: core_1.NumberNode(),\r\n        downfall: core_1.NumberNode(),\r\n        precipitation: StringNode({ enum: ['none', 'rain', 'snow'] }),\r\n        temperature_modifier: core_1.Opt(StringNode({ enum: ['none', 'frozen'] })),\r\n        category: StringNode({ enum: 'biome_category' }),\r\n        player_spawn_friendly: core_1.Opt(core_1.BooleanNode()),\r\n        creature_spawn_probability: core_1.Opt(core_1.NumberNode({ min: 0, max: 1 })),\r\n        effects: core_1.ObjectNode({\r\n            sky_color: core_1.NumberNode({ color: true }),\r\n            fog_color: core_1.NumberNode({ color: true }),\r\n            water_color: core_1.NumberNode({ color: true }),\r\n            water_fog_color: core_1.NumberNode({ color: true }),\r\n            grass_color: core_1.Opt(core_1.NumberNode({ color: true })),\r\n            foliage_color: core_1.Opt(core_1.NumberNode({ color: true })),\r\n            grass_color_modifier: core_1.Opt(StringNode({ enum: ['none', 'dark_forest', 'swamp'] })),\r\n            ambient_sound: core_1.Opt(StringNode()),\r\n            mood_sound: core_1.Opt(core_1.ObjectNode({\r\n                sound: StringNode(),\r\n                tick_delay: core_1.NumberNode({ integer: true }),\r\n                block_search_extent: core_1.NumberNode({ integer: true }),\r\n                offset: core_1.NumberNode()\r\n            })),\r\n            additions_sound: core_1.Opt(core_1.ObjectNode({\r\n                sound: StringNode(),\r\n                tick_chance: core_1.NumberNode({ min: 0, max: 1 })\r\n            })),\r\n            music: core_1.Opt(core_1.ObjectNode({\r\n                sound: StringNode(),\r\n                min_delay: core_1.NumberNode({ integer: true, min: 0 }),\r\n                max_delay: core_1.NumberNode({ integer: true, min: 0 }),\r\n                replace_current_music: core_1.BooleanNode()\r\n            })),\r\n            particle: core_1.Opt(core_1.ObjectNode({\r\n                options: core_1.ObjectNode({\r\n                    type: StringNode()\r\n                }),\r\n                probability: core_1.NumberNode({ min: 0, max: 1 })\r\n            }))\r\n        }),\r\n        starts: core_1.ListNode(StringNode({ validator: 'resource', params: { pool: '$worldgen/configured_structure_feature' } })),\r\n        spawners: core_1.MapNode(StringNode({ enum: [\r\n                'monster',\r\n                'creature',\r\n                'ambient',\r\n                'underground_water_creature',\r\n                'water_creature',\r\n                'water_ambient',\r\n                'misc'\r\n            ] }), core_1.Mod(core_1.ListNode(core_1.ObjectNode({\r\n            type: StringNode({ validator: 'resource', params: { pool: 'entity_type' } }),\r\n            weight: core_1.NumberNode({ integer: true }),\r\n            minCount: core_1.NumberNode({ integer: true }),\r\n            maxCount: core_1.NumberNode({ integer: true })\r\n        })), {\r\n            category: () => 'pool',\r\n            default: () => [{\r\n                    type: 'minecraft:bat',\r\n                    weight: 1\r\n                }]\r\n        })),\r\n        spawn_costs: core_1.MapNode(StringNode({ validator: 'resource', params: { pool: 'entity_type' } }), core_1.Mod(core_1.ObjectNode({\r\n            energy_budget: core_1.NumberNode(),\r\n            charge: core_1.NumberNode()\r\n        }, { category: 'function' }), {\r\n            default: () => ({\r\n                energy_budget: 0.12,\r\n                charge: 1.0\r\n            })\r\n        })),\r\n        carvers: core_1.MapNode(StringNode({ enum: ['air', 'liquid'] }), core_1.Mod(core_1.ListNode(StringNode({ validator: 'resource', params: { pool: '$worldgen/configured_carver' } })), {\r\n            default: () => ['minecraft:cave']\r\n        })),\r\n        features: core_1.ListNode(core_1.Mod(core_1.ListNode(StringNode({ validator: 'resource', params: { pool: '$worldgen/configured_feature' } })), { category: () => 'predicate' }), { maxLength: 10 })\r\n    }, { context: 'biome' }), {\r\n        default: () => ({\r\n            surface_builder: 'minecraft:grass',\r\n            depth: 0.125,\r\n            scale: 0.05,\r\n            temperature: 0.8,\r\n            downfall: 0.4,\r\n            precipitation: 'rain',\r\n            category: 'plains',\r\n            effects: {\r\n                sky_color: 7907327,\r\n                fog_color: 12638463,\r\n                water_color: 4159204,\r\n                water_fog_color: 329011\r\n            }\r\n        })\r\n    }));\r\n}\r\nexports.initBiomeSchemas = initBiomeSchemas;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.initCarverSchemas = void 0;\r\nconst core_1 = require(\"@mcschema/core\");\r\nconst Common_1 = require(\"../Common\");\r\nfunction initCarverSchemas(schemas, collections) {\r\n    const Reference = core_1.Reference.bind(undefined, schemas);\r\n    const StringNode = core_1.StringNode.bind(undefined, collections);\r\n    const CanyonConfig = {\r\n        vertical_rotation: Common_1.FloatProvider(),\r\n        shape: core_1.ObjectNode({\r\n            distance_factor: Common_1.FloatProvider(),\r\n            thickness: Common_1.FloatProvider(),\r\n            width_smoothness: core_1.NumberNode({ integer: true, min: 0 }),\r\n            horizontal_radius_factor: Common_1.FloatProvider(),\r\n            vertical_radius_default_factor: core_1.NumberNode(),\r\n            vertical_radius_center_factor: core_1.NumberNode()\r\n        })\r\n    };\r\n    const CaveConfig = {\r\n        horizontal_radius_multiplier: Common_1.FloatProvider(),\r\n        vertical_radius_multiplier: Common_1.FloatProvider(),\r\n        floor_level: Common_1.FloatProvider({ min: -1, max: 1 }),\r\n    };\r\n    schemas.register('configured_carver', core_1.Mod(core_1.ObjectNode({\r\n        type: StringNode({ validator: 'resource', params: { pool: 'worldgen/carver' } }),\r\n        config: core_1.ObjectNode({\r\n            probability: core_1.NumberNode({ min: 0, max: 1 }),\r\n            y: Reference('height_provider'),\r\n            yScale: Common_1.FloatProvider(),\r\n            lava_level: Reference('vertical_anchor'),\r\n            aquifers_enabled: core_1.BooleanNode(),\r\n            debug_settings: core_1.Opt(core_1.ObjectNode({\r\n                debug_mode: core_1.Opt(core_1.BooleanNode()),\r\n                air_state: core_1.Opt(Reference('block_state')),\r\n                water_state: core_1.Opt(Reference('block_state')),\r\n                lava_state: core_1.Opt(Reference('block_state')),\r\n                barrier_state: core_1.Opt(Reference('block_state'))\r\n            })),\r\n            [core_1.Switch]: ['pop', { push: 'type' }],\r\n            [core_1.Case]: {\r\n                'minecraft:canyon': CanyonConfig,\r\n                'minecraft:cave': CaveConfig,\r\n                'minecraft:nether_cave': CaveConfig\r\n            },\r\n        })\r\n    }, { context: 'carver' }), {\r\n        default: () => ({\r\n            type: 'minecraft:cave',\r\n            config: {\r\n                probability: 0.1\r\n            }\r\n        })\r\n    }));\r\n}\r\nexports.initCarverSchemas = initCarverSchemas;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.initDecoratorSchemas = void 0;\r\nconst core_1 = require(\"@mcschema/core\");\r\nconst Common_1 = require(\"../Common\");\r\nfunction initDecoratorSchemas(schemas, collections) {\r\n    const Reference = core_1.Reference.bind(undefined, schemas);\r\n    const StringNode = core_1.StringNode.bind(undefined, collections);\r\n    const CountConfig = {\r\n        count: Common_1.IntProvider({ min: 0, max: 256 })\r\n    };\r\n    schemas.register('configured_decorator', core_1.ObjectNode({\r\n        type: StringNode({ validator: 'resource', params: { pool: 'worldgen/decorator' } }),\r\n        config: core_1.ObjectNode({\r\n            [core_1.Switch]: ['pop', { push: 'type' }],\r\n            [core_1.Case]: {\r\n                'minecraft:carving_mask': {\r\n                    step: StringNode({ enum: 'generation_step' })\r\n                },\r\n                'minecraft:cave_surface': {\r\n                    surface: StringNode({ enum: ['floor', 'ceiling'] }),\r\n                    floor_to_ceiling_search_range: core_1.NumberNode({ integer: true })\r\n                },\r\n                'minecraft:chance': {\r\n                    chance: core_1.NumberNode({ integer: true, min: 0 })\r\n                },\r\n                'minecraft:count': CountConfig,\r\n                'minecraft:count_extra': {\r\n                    count: core_1.NumberNode({ integer: true, min: 0 }),\r\n                    extra_count: core_1.NumberNode({ integer: true, min: 0 }),\r\n                    extra_chance: core_1.NumberNode({ min: 0, max: 1 })\r\n                },\r\n                'minecraft:count_multilayer': CountConfig,\r\n                'minecraft:count_noise': {\r\n                    noise_level: core_1.NumberNode(),\r\n                    below_noise: core_1.NumberNode({ integer: true }),\r\n                    above_noise: core_1.NumberNode({ integer: true })\r\n                },\r\n                'minecraft:count_noise_biased': {\r\n                    noise_to_count_ratio: core_1.NumberNode({ integer: true }),\r\n                    noise_factor: core_1.NumberNode(),\r\n                    noise_offset: core_1.Opt(core_1.NumberNode())\r\n                },\r\n                'minecraft:decorated': {\r\n                    outer: Reference('configured_decorator'),\r\n                    inner: Reference('configured_decorator')\r\n                },\r\n                'minecraft:heightmap': {\r\n                    heightmap: StringNode({ enum: 'heightmap_type' })\r\n                },\r\n                'minecraft:heightmap_spread_double': {\r\n                    heightmap: StringNode({ enum: 'heightmap_type' })\r\n                },\r\n                'minecraft:lava_lake': {\r\n                    chance: core_1.NumberNode({ integer: true, min: 0 })\r\n                },\r\n                'minecraft:range': {\r\n                    height: Reference('height_provider')\r\n                },\r\n                'minecraft:water_depth_threshold': {\r\n                    max_water_depth: core_1.NumberNode({ integer: true })\r\n                }\r\n            }\r\n        }, { context: 'decorator', category: 'predicate' })\r\n    }, { context: 'decorator', category: 'predicate' }));\r\n}\r\nexports.initDecoratorSchemas = initDecoratorSchemas;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.initProcessorListSchemas = exports.Processors = void 0;\r\nconst core_1 = require(\"@mcschema/core\");\r\nfunction initProcessorListSchemas(schemas, collections) {\r\n    const Reference = core_1.Reference.bind(undefined, schemas);\r\n    const StringNode = core_1.StringNode.bind(undefined, collections);\r\n    exports.Processors = core_1.ChoiceNode([\r\n        {\r\n            type: 'string',\r\n            node: StringNode({ validator: 'resource', params: { pool: '$worldgen/processor_list' } }),\r\n            change: v => undefined\r\n        },\r\n        {\r\n            type: 'object',\r\n            node: Reference('processor_list'),\r\n            change: v => ({\r\n                processors: [{\r\n                        \"processor_type\": \"minecraft:nop\"\r\n                    }]\r\n            })\r\n        }\r\n    ]);\r\n    schemas.register('processor_list', core_1.Mod(core_1.ObjectNode({\r\n        processors: core_1.ListNode(Reference('processor'))\r\n    }, { context: 'processor_list' }), {\r\n        default: () => ({\r\n            processors: [{\r\n                    processor_type: 'minecraft:rule',\r\n                    rules: [{\r\n                            location_predicate: {\r\n                                predicate_type: 'minecraft:always_true'\r\n                            },\r\n                            input_predicate: {\r\n                                predicate_type: 'minecraft:always_true'\r\n                            }\r\n                        }]\r\n                }]\r\n        })\r\n    }));\r\n    schemas.register('processor', core_1.Mod(core_1.ObjectNode({\r\n        processor_type: StringNode({ validator: 'resource', params: { pool: 'worldgen/structure_processor' } }),\r\n        [core_1.Switch]: [{ push: 'processor_type' }],\r\n        [core_1.Case]: {\r\n            'minecraft:block_age': {\r\n                mossiness: core_1.NumberNode()\r\n            },\r\n            'minecraft:block_ignore': {\r\n                blocks: core_1.ListNode(Reference('block_state'))\r\n            },\r\n            'minecraft:block_rot': {\r\n                integrity: core_1.NumberNode({ min: 0, max: 1 })\r\n            },\r\n            'minecraft:gravity': {\r\n                heightmap: StringNode({ enum: 'heightmap_type' }),\r\n                offset: core_1.NumberNode({ integer: true })\r\n            },\r\n            'minecraft:protected_blocks': {\r\n                value: StringNode({ validator: 'resource', params: { pool: '$tag/block' } })\r\n            },\r\n            'minecraft:rule': {\r\n                rules: core_1.ListNode(Reference('processor_rule'))\r\n            }\r\n        }\r\n    }, { category: 'function', context: 'processor' }), {\r\n        default: () => ({\r\n            processor_type: 'minecraft:rule',\r\n            rules: [{\r\n                    location_predicate: {\r\n                        predicate_type: 'minecraft:always_true'\r\n                    },\r\n                    input_predicate: {\r\n                        predicate_type: 'minecraft:always_true'\r\n                    }\r\n                }]\r\n        })\r\n    }));\r\n    schemas.register('processor_rule', core_1.Mod(core_1.ObjectNode({\r\n        position_predicate: core_1.Opt(Reference('pos_rule_test')),\r\n        location_predicate: Reference('rule_test'),\r\n        input_predicate: Reference('rule_test'),\r\n        output_state: Reference('block_state'),\r\n        output_nbt: core_1.Opt(StringNode({ validator: 'nbt', params: { registry: { category: 'minecraft:block' } } }))\r\n    }, { category: 'predicate', context: 'processor_rule' }), {\r\n        default: () => ({\r\n            location_predicate: {\r\n                predicate_type: 'minecraft:always_true'\r\n            },\r\n            input_predicate: {\r\n                predicate_type: 'minecraft:always_true'\r\n            }\r\n        })\r\n    }));\r\n    const posTestFields = {\r\n        min_dist: core_1.Opt(core_1.NumberNode({ min: 0, max: 255, integer: true })),\r\n        max_dist: core_1.Opt(core_1.NumberNode({ min: 0, max: 255, integer: true })),\r\n        min_chance: core_1.Opt(core_1.NumberNode({ min: 0, max: 1 })),\r\n        max_chance: core_1.Opt(core_1.NumberNode({ min: 0, max: 1 }))\r\n    };\r\n    schemas.register('pos_rule_test', core_1.ObjectNode({\r\n        predicate_type: StringNode({ validator: 'resource', params: { pool: 'pos_rule_test' } }),\r\n        [core_1.Switch]: [{ push: 'predicate_type' }],\r\n        [core_1.Case]: {\r\n            'minecraft:axis_aligned_linear_pos': {\r\n                axis: StringNode({ enum: ['x', 'y', 'z'] }),\r\n                ...posTestFields\r\n            },\r\n            'minecraft:linear_pos': posTestFields\r\n        }\r\n    }, { context: 'pos_rule_test', disableSwitchContext: true }));\r\n    schemas.register('rule_test', core_1.ObjectNode({\r\n        predicate_type: StringNode({ validator: 'resource', params: { pool: 'rule_test' } }),\r\n        [core_1.Switch]: [{ push: 'predicate_type' }],\r\n        [core_1.Case]: {\r\n            'minecraft:block_match': {\r\n                block: StringNode({ validator: 'resource', params: { pool: 'block' } })\r\n            },\r\n            'minecraft:blockstate_match': {\r\n                block_state: Reference('block_state')\r\n            },\r\n            'minecraft:random_block_match': {\r\n                block: StringNode({ validator: 'resource', params: { pool: 'block' } }),\r\n                probability: core_1.NumberNode({ min: 0, max: 1 })\r\n            },\r\n            'minecraft:random_blockstate_match': {\r\n                block_state: Reference('block_state'),\r\n                probability: core_1.NumberNode({ min: 0, max: 1 })\r\n            },\r\n            'minecraft:tag_match': {\r\n                tag: StringNode({ validator: 'resource', params: { pool: '$tag/block' } })\r\n            }\r\n        }\r\n    }, { context: 'rule_test', disableSwitchContext: true }));\r\n}\r\nexports.initProcessorListSchemas = initProcessorListSchemas;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.initFeatureSchemas = void 0;\r\nconst core_1 = require(\"@mcschema/core\");\r\nconst Common_1 = require(\"../Common\");\r\nrequire(\"./Decorator\");\r\nrequire(\"./ProcessorList\");\r\nconst ProcessorList_1 = require(\"./ProcessorList\");\r\nfunction initFeatureSchemas(schemas, collections) {\r\n    const Reference = core_1.Reference.bind(undefined, schemas);\r\n    const StringNode = core_1.StringNode.bind(undefined, collections);\r\n    const RandomPatchConfig = {\r\n        can_replace: core_1.Opt(core_1.BooleanNode()),\r\n        project: core_1.Opt(core_1.BooleanNode()),\r\n        need_water: core_1.Opt(core_1.BooleanNode()),\r\n        xspread: core_1.Opt(core_1.NumberNode({ integer: true, min: 0 })),\r\n        yspread: core_1.Opt(core_1.NumberNode({ integer: true, min: 0 })),\r\n        zspread: core_1.Opt(core_1.NumberNode({ integer: true, min: 0 })),\r\n        tries: core_1.Opt(core_1.NumberNode({ integer: true, min: 1 })),\r\n        state_provider: Reference('block_state_provider'),\r\n        block_placer: Reference('block_placer'),\r\n        whitelist: core_1.ListNode(Reference('block_state')),\r\n        blacklist: core_1.ListNode(Reference('block_state'))\r\n    };\r\n    const DiskConfig = {\r\n        state: Reference('block_state'),\r\n        radius: Common_1.IntProvider({ min: 0, max: 8 }),\r\n        half_height: core_1.NumberNode({ integer: true, min: 0, max: 4 }),\r\n        targets: core_1.ListNode(Reference('block_state'))\r\n    };\r\n    const HugeMushroomConfig = {\r\n        cap_provider: Reference('block_state_provider'),\r\n        stem_provider: Reference('block_state_provider'),\r\n        foliage_radius: core_1.Opt(core_1.NumberNode({ integer: true }))\r\n    };\r\n    const TargetBlockState = core_1.ObjectNode({\r\n        target: Reference('rule_test'),\r\n        state: Reference('block_state')\r\n    });\r\n    const OreConfig = {\r\n        size: core_1.NumberNode({ integer: true, min: 0, max: 64 }),\r\n        discard_chance_on_air_exposure: core_1.NumberNode({ min: 0, max: 1 }),\r\n        targets: core_1.ListNode(TargetBlockState)\r\n    };\r\n    const Feature = core_1.ChoiceNode([\r\n        {\r\n            type: 'string',\r\n            node: StringNode({ validator: 'resource', params: { pool: '$worldgen/configured_feature' } })\r\n        },\r\n        {\r\n            type: 'object',\r\n            node: Reference('configured_feature')\r\n        }\r\n    ], { choiceContext: 'feature' });\r\n    const VegetationPatchConfig = {\r\n        surface: StringNode({ enum: ['floor', 'ceiling'] }),\r\n        depth: Common_1.IntProvider({ min: 1, max: 128 }),\r\n        vertical_range: core_1.NumberNode({ integer: true, min: 1, max: 256 }),\r\n        extra_bottom_block_chance: core_1.NumberNode({ min: 0, max: 1 }),\r\n        extra_edge_column_chance: core_1.NumberNode({ min: 0, max: 1 }),\r\n        vegetation_chance: core_1.NumberNode({ min: 0, max: 1 }),\r\n        xz_radius: Common_1.IntProvider(),\r\n        replaceable: StringNode({ validator: 'resource', params: { pool: '$tag/block' } }),\r\n        ground_state: Reference('block_state_provider'),\r\n        vegetation_feature: Feature\r\n    };\r\n    schemas.register('configured_feature', core_1.Mod(core_1.ObjectNode({\r\n        type: StringNode({ validator: 'resource', params: { pool: 'worldgen/feature' } }),\r\n        config: core_1.ObjectNode({\r\n            [core_1.Switch]: ['pop', { push: 'type' }],\r\n            [core_1.Case]: {\r\n                'minecraft:bamboo': {\r\n                    probability: core_1.NumberNode({ min: 0, max: 1 })\r\n                },\r\n                'minecraft:basalt_columns': {\r\n                    reach: Common_1.IntProvider({ min: 0, max: 3 }),\r\n                    height: Common_1.IntProvider({ min: 1, max: 10 })\r\n                },\r\n                'minecraft:block_pile': {\r\n                    state_provider: Reference('block_state_provider')\r\n                },\r\n                'minecraft:decorated': {\r\n                    decorator: Reference('configured_decorator'),\r\n                    feature: Feature\r\n                },\r\n                'minecraft:decorated_flower': {\r\n                    decorator: Reference('configured_decorator'),\r\n                    feature: Feature\r\n                },\r\n                'minecraft:delta_feature': {\r\n                    contents: Reference('block_state'),\r\n                    rim: Reference('block_state'),\r\n                    size: Common_1.IntProvider({ min: 0, max: 16 }),\r\n                    rim_size: Common_1.IntProvider({ min: 0, max: 16 })\r\n                },\r\n                'minecraft:disk': DiskConfig,\r\n                'minecraft:dripstone_cluster': {\r\n                    floor_to_ceiling_search_range: core_1.NumberNode({ integer: true, min: 1, max: 512 }),\r\n                    height: Common_1.IntProvider({ min: 0, max: 128 }),\r\n                    radius: Common_1.IntProvider({ min: 0, max: 128 }),\r\n                    max_stalagmite_stalactite_height_diff: core_1.NumberNode({ integer: true, min: 0, max: 64 }),\r\n                    height_deviation: core_1.NumberNode({ integer: true, min: 1, max: 64 }),\r\n                    dripstone_block_layer_thickness: Common_1.IntProvider({ min: 0, max: 128 }),\r\n                    density: Common_1.FloatProvider({ min: 0, max: 2 }),\r\n                    wetness: Common_1.FloatProvider({ min: 0, max: 2 }),\r\n                    chance_of_dripstone_column_at_max_distance_from_center: core_1.NumberNode({ min: 0, max: 1 }),\r\n                    max_distance_from_edge_affecting_chance_of_dripstone_column: core_1.NumberNode({ integer: true, min: 1, max: 64 }),\r\n                    max_distance_from_center_affecting_height_bias: core_1.NumberNode({ integer: true, min: 1, max: 64 })\r\n                },\r\n                'minecraft:end_gateway': {\r\n                    exact: core_1.BooleanNode(),\r\n                    exit: core_1.Opt(Reference('block_pos'))\r\n                },\r\n                'minecraft:end_spike': {\r\n                    crystal_invulnerable: core_1.Opt(core_1.BooleanNode()),\r\n                    crystal_beam_target: core_1.Opt(Reference('block_pos')),\r\n                    spikes: core_1.ListNode(core_1.ObjectNode({\r\n                        centerX: core_1.Opt(core_1.NumberNode({ integer: true })),\r\n                        centerZ: core_1.Opt(core_1.NumberNode({ integer: true })),\r\n                        radius: core_1.Opt(core_1.NumberNode({ integer: true })),\r\n                        height: core_1.Opt(core_1.NumberNode({ integer: true })),\r\n                        guarded: core_1.Opt(core_1.BooleanNode())\r\n                    }))\r\n                },\r\n                'minecraft:fill_layer': {\r\n                    state: Reference('block_state'),\r\n                    height: core_1.NumberNode({ integer: true, min: 0, max: 255 })\r\n                },\r\n                'minecraft:flower': RandomPatchConfig,\r\n                'minecraft:forest_rock': {\r\n                    state: Reference('block_state')\r\n                },\r\n                'minecraft:fossil': {\r\n                    max_empty_corners_allowed: core_1.NumberNode({ integer: true, min: 0, max: 7 }),\r\n                    fossil_structures: core_1.ListNode(StringNode({ validator: 'resource', params: { pool: '$structure' } })),\r\n                    overlay_structures: core_1.ListNode(StringNode({ validator: 'resource', params: { pool: '$structure' } })),\r\n                    fossil_processors: ProcessorList_1.Processors,\r\n                    overlay_processors: ProcessorList_1.Processors,\r\n                },\r\n                'minecraft:geode': {\r\n                    blocks: core_1.ObjectNode({\r\n                        filling_provider: Reference('block_state_provider'),\r\n                        inner_layer_provider: Reference('block_state_provider'),\r\n                        alternate_inner_layer_provider: Reference('block_state_provider'),\r\n                        middle_layer_provider: Reference('block_state_provider'),\r\n                        outer_layer_provider: Reference('block_state_provider'),\r\n                        inner_placements: core_1.ListNode(Reference('block_state')),\r\n                        cannot_replace: StringNode({ validator: 'resource', params: { pool: '$tag/block' } }),\r\n                        invalid_blocks: StringNode({ validator: 'resource', params: { pool: '$tag/block' } })\r\n                    }),\r\n                    layers: core_1.ObjectNode({\r\n                        filling: core_1.Opt(core_1.NumberNode({ min: 0.01, max: 50 })),\r\n                        inner_layer: core_1.Opt(core_1.NumberNode({ min: 0.01, max: 50 })),\r\n                        middle_layer: core_1.Opt(core_1.NumberNode({ min: 0.01, max: 50 })),\r\n                        outer_layer: core_1.Opt(core_1.NumberNode({ min: 0.01, max: 50 })),\r\n                    }),\r\n                    crack: core_1.ObjectNode({\r\n                        generate_crack_chance: core_1.Opt(core_1.NumberNode({ min: 0, max: 1 })),\r\n                        base_crack_size: core_1.Opt(core_1.NumberNode({ min: 0, max: 5 })),\r\n                        crack_point_offset: core_1.Opt(core_1.NumberNode({ min: 0, max: 10, integer: true })),\r\n                    }),\r\n                    noise_multiplier: core_1.Opt(core_1.NumberNode({ min: 0, max: 1 })),\r\n                    use_potential_placements_chance: core_1.Opt(core_1.NumberNode({ min: 0, max: 1 })),\r\n                    use_alternate_layer0_chance: core_1.Opt(core_1.NumberNode({ min: 0, max: 1 })),\r\n                    placements_require_layer0_alternate: core_1.Opt(core_1.BooleanNode()),\r\n                    outer_wall_distance: core_1.Opt(Common_1.IntProvider({ min: 1, max: 20 })),\r\n                    distribution_points: core_1.Opt(Common_1.IntProvider({ min: 1, max: 20 })),\r\n                    point_offset: core_1.Opt(Common_1.IntProvider({ min: 0, max: 10 })),\r\n                    min_gen_offset: core_1.Opt(core_1.NumberNode({ integer: true })),\r\n                    max_gen_offset: core_1.Opt(core_1.NumberNode({ integer: true })),\r\n                    invalid_blocks_threshold: core_1.NumberNode({ integer: true })\r\n                },\r\n                'minecraft:glow_lichen': {\r\n                    search_range: core_1.Opt(core_1.NumberNode({ min: 1, max: 64, integer: true })),\r\n                    chance_of_spreading: core_1.Opt(core_1.NumberNode({ min: 0, max: 1 })),\r\n                    can_place_on_floor: core_1.Opt(core_1.BooleanNode()),\r\n                    can_place_on_ceiling: core_1.Opt(core_1.BooleanNode()),\r\n                    can_place_on_wall: core_1.Opt(core_1.BooleanNode()),\r\n                    can_be_placed_on: core_1.ListNode(Reference('block_state'))\r\n                },\r\n                'minecraft:growing_plant': {\r\n                    direction: StringNode({ enum: ['up', 'down', 'north', 'east', 'south', 'west'] }),\r\n                    allow_water: core_1.BooleanNode(),\r\n                    height_distribution: core_1.ListNode(core_1.ObjectNode({\r\n                        weight: core_1.NumberNode({ integer: true }),\r\n                        data: Common_1.IntProvider()\r\n                    })),\r\n                    body_provider: Reference('block_state_provider'),\r\n                    head_provider: Reference('block_state_provider')\r\n                },\r\n                'minecraft:huge_brown_mushroom': HugeMushroomConfig,\r\n                'minecraft:huge_fungus': {\r\n                    hat_state: Reference('block_state'),\r\n                    decor_state: Reference('block_state'),\r\n                    stem_state: Reference('block_state'),\r\n                    valid_base_block: Reference('block_state'),\r\n                    planted: core_1.Opt(core_1.BooleanNode())\r\n                },\r\n                'minecraft:huge_red_mushroom': HugeMushroomConfig,\r\n                'minecraft:ice_patch': DiskConfig,\r\n                'minecraft:iceberg': {\r\n                    state: Reference('block_state')\r\n                },\r\n                'minecraft:lake': {\r\n                    state: Reference('block_state')\r\n                },\r\n                'minecraft:large_dripstone': {\r\n                    floor_to_ceiling_search_range: core_1.Opt(core_1.NumberNode({ integer: true, min: 1, max: 512 })),\r\n                    column_radius: Common_1.IntProvider({ min: 0, max: 60 }),\r\n                    height_scale: Common_1.FloatProvider({ min: 0, max: 20 }),\r\n                    max_column_radius_to_cave_height_ratio: core_1.NumberNode({ min: 0, max: 1 }),\r\n                    stalactite_bluntness: Common_1.FloatProvider({ min: 0.1, max: 10 }),\r\n                    stalagmite_bluntness: Common_1.FloatProvider({ min: 0.1, max: 10 }),\r\n                    wind_speed: Common_1.FloatProvider({ min: 0, max: 2 }),\r\n                    min_radius_for_wind: core_1.NumberNode({ integer: true, min: 0, max: 100 }),\r\n                    min_bluntness_for_wind: core_1.NumberNode({ min: 0, max: 5 })\r\n                },\r\n                'minecraft:nether_forest_vegetation': {\r\n                    state_provider: Reference('block_state_provider')\r\n                },\r\n                'minecraft:netherrack_replace_blobs': {\r\n                    state: Reference('block_state'),\r\n                    target: Reference('block_state'),\r\n                    radius: Common_1.IntProvider({ min: 0, max: 12 })\r\n                },\r\n                'minecraft:no_bonemeal_flower': RandomPatchConfig,\r\n                'minecraft:ore': OreConfig,\r\n                'minecraft:random_patch': RandomPatchConfig,\r\n                'minecraft:random_boolean_selector': {\r\n                    feature_false: Feature,\r\n                    feature_true: Feature\r\n                },\r\n                'minecraft:random_selector': {\r\n                    features: core_1.ListNode(core_1.ObjectNode({\r\n                        chance: core_1.NumberNode({ min: 0, max: 1 }),\r\n                        feature: Feature\r\n                    })),\r\n                    default: Feature\r\n                },\r\n                'minecraft:replace_single_block': {\r\n                    targets: core_1.ListNode(TargetBlockState)\r\n                },\r\n                'minecraft:root_system': {\r\n                    required_vertical_space_for_tree: core_1.NumberNode({ integer: true, min: 1, max: 64 }),\r\n                    root_radius: core_1.NumberNode({ integer: true, min: 1, max: 64 }),\r\n                    root_placement_attempts: core_1.NumberNode({ integer: true, min: 1, max: 256 }),\r\n                    root_column_max_height: core_1.NumberNode({ integer: true, min: 1, max: 4096 }),\r\n                    hanging_root_radius: core_1.NumberNode({ integer: true, min: 1, max: 64 }),\r\n                    hanging_roots_vertical_span: core_1.NumberNode({ integer: true, min: 0, max: 16 }),\r\n                    hanging_root_placement_attempts: core_1.NumberNode({ integer: true, min: 0, max: 256 }),\r\n                    allowed_vertical_water_for_tree: core_1.NumberNode({ integer: true, min: 1, max: 64 }),\r\n                    root_replaceable: StringNode({ validator: 'resource', params: { pool: '$tag/block' } }),\r\n                    root_state_provider: Reference('block_state_provider'),\r\n                    hanging_root_state_provider: Reference('block_state_provider'),\r\n                    feature: Feature\r\n                },\r\n                'minecraft:scattered_ore': OreConfig,\r\n                'minecraft:sea_pickle': {\r\n                    count: Common_1.IntProvider({ min: 0, max: 256 })\r\n                },\r\n                'minecraft:seagrass': {\r\n                    probability: core_1.NumberNode({ min: 0, max: 1 })\r\n                },\r\n                'minecraft:simple_block': {\r\n                    to_place: Reference('block_state_provider'),\r\n                    place_on: core_1.ListNode(Reference('block_state')),\r\n                    place_in: core_1.ListNode(Reference('block_state')),\r\n                    place_under: core_1.ListNode(Reference('block_state'))\r\n                },\r\n                'minecraft:simple_random_selector': {\r\n                    features: core_1.ListNode(Feature)\r\n                },\r\n                'minecraft:small_dripstone': {\r\n                    max_placements: core_1.Opt(core_1.NumberNode({ integer: true, min: 0, max: 100 })),\r\n                    empty_space_search_radius: core_1.Opt(core_1.NumberNode({ integer: true, min: 0, max: 20 })),\r\n                    max_offset_from_origin: core_1.Opt(core_1.NumberNode({ integer: true, min: 0, max: 20 })),\r\n                    chance_of_taller_dripstone: core_1.Opt(core_1.NumberNode({ min: 0, max: 1 }))\r\n                },\r\n                'minecraft:spring_feature': {\r\n                    state: Reference('fluid_state'),\r\n                    rock_count: core_1.NumberNode({ integer: true }),\r\n                    hole_count: core_1.NumberNode({ integer: true }),\r\n                    requires_block_below: core_1.BooleanNode(),\r\n                    valid_blocks: core_1.ListNode(StringNode({ validator: 'resource', params: { pool: 'block' } }))\r\n                },\r\n                'minecraft:tree': {\r\n                    ignore_vines: core_1.Opt(core_1.BooleanNode()),\r\n                    force_dirt: core_1.Opt(core_1.BooleanNode()),\r\n                    minimum_size: Reference('feature_size'),\r\n                    dirt_provider: Reference('block_state_provider'),\r\n                    sapling_provider: Reference('block_state_provider'),\r\n                    trunk_provider: Reference('block_state_provider'),\r\n                    foliage_provider: Reference('block_state_provider'),\r\n                    trunk_placer: core_1.ObjectNode({\r\n                        type: StringNode({ validator: 'resource', params: { pool: 'worldgen/trunk_placer_type' } }),\r\n                        base_height: core_1.NumberNode({ integer: true, min: 0, max: 32 }),\r\n                        height_rand_a: core_1.NumberNode({ integer: true, min: 0, max: 24 }),\r\n                        height_rand_b: core_1.NumberNode({ integer: true, min: 0, max: 24 }),\r\n                        [core_1.Switch]: [{ push: 'type' }],\r\n                        [core_1.Case]: {\r\n                            'minecraft:bending_trunk_placer': {\r\n                                bend_length: Common_1.IntProvider({ min: 1, max: 64 }),\r\n                                min_height_for_leaves: core_1.Opt(core_1.NumberNode({ integer: true, min: 1 }))\r\n                            }\r\n                        }\r\n                    }, { context: 'trunk_placer' }),\r\n                    foliage_placer: core_1.ObjectNode({\r\n                        type: StringNode({ validator: 'resource', params: { pool: 'worldgen/foliage_placer_type' } }),\r\n                        radius: Common_1.IntProvider({ min: 0, max: 16 }),\r\n                        offset: Common_1.IntProvider({ min: 0, max: 16 }),\r\n                        [core_1.Switch]: [{ push: 'type' }],\r\n                        [core_1.Case]: {\r\n                            'minecraft:blob_foliage_placer': {\r\n                                height: core_1.NumberNode({ integer: true, min: 0, max: 16 })\r\n                            },\r\n                            'minecraft:bush_foliage_placer': {\r\n                                height: core_1.NumberNode({ integer: true, min: 0, max: 16 })\r\n                            },\r\n                            'minecraft:fancy_foliage_placer': {\r\n                                height: core_1.NumberNode({ integer: true, min: 0, max: 16 })\r\n                            },\r\n                            'minecraft:jungle_foliage_placer': {\r\n                                height: core_1.NumberNode({ integer: true, min: 0, max: 16 })\r\n                            },\r\n                            'minecraft:mega_pine_foliage_placer': {\r\n                                crown_height: Common_1.IntProvider({ min: 0, max: 24 })\r\n                            },\r\n                            'minecraft:pine_foliage_placer': {\r\n                                height: Common_1.IntProvider({ min: 0, max: 24 })\r\n                            },\r\n                            'minecraft:random_spread_foliage_placer': {\r\n                                foliage_height: Common_1.IntProvider({ min: 1, max: 512 }),\r\n                                leaf_placement_attempts: core_1.NumberNode({ integer: true, min: 0, max: 256 })\r\n                            },\r\n                            'minecraft:spruce_foliage_placer': {\r\n                                trunk_height: Common_1.IntProvider({ min: 0, max: 24 })\r\n                            }\r\n                        }\r\n                    }, { context: 'foliage_placer', disableSwitchContext: true }),\r\n                    decorators: core_1.ListNode(core_1.ObjectNode({\r\n                        type: StringNode({ validator: 'resource', params: { pool: 'worldgen/tree_decorator_type' } }),\r\n                        [core_1.Switch]: [{ push: 'type' }],\r\n                        [core_1.Case]: {\r\n                            'minecraft:alter_ground': {\r\n                                provider: Reference('block_state_provider')\r\n                            },\r\n                            'minecraft:beehive': {\r\n                                probability: core_1.NumberNode({ min: 0, max: 1 })\r\n                            },\r\n                            'minecraft:cocoa': {\r\n                                probability: core_1.NumberNode({ min: 0, max: 1 })\r\n                            }\r\n                        }\r\n                    }, { context: 'tree_decorator' }))\r\n                },\r\n                'minecraft:underwater_magma': {\r\n                    floor_search_range: core_1.NumberNode({ integer: true, min: 0, max: 512 }),\r\n                    placement_radius_around_floor: core_1.NumberNode({ integer: true, min: 0, max: 64 }),\r\n                    placement_probability_per_valid_position: core_1.NumberNode({ min: 0, max: 1 })\r\n                },\r\n                'minecraft:vegetation_patch': VegetationPatchConfig,\r\n                'minecraft:waterlogged_vegetation_patch': VegetationPatchConfig\r\n            }\r\n        }, { context: 'feature' })\r\n    }, { context: 'feature' }), {\r\n        default: () => ({\r\n            type: 'minecraft:decorated',\r\n            config: {\r\n                decorator: {\r\n                    type: 'minecraft:count',\r\n                    config: {\r\n                        count: 4\r\n                    }\r\n                },\r\n                feature: {\r\n                    type: 'minecraft:tree',\r\n                    config: {\r\n                        max_water_depth: 0,\r\n                        ignore_vines: true,\r\n                        minimum_size: {},\r\n                        trunk_placer: {\r\n                            base_height: 5,\r\n                            height_rand_a: 2,\r\n                            height_rand_b: 0\r\n                        },\r\n                        foliage_placer: {\r\n                            radius: 2,\r\n                            offset: 0,\r\n                            height: 3\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        })\r\n    }));\r\n    schemas.register('feature_size', core_1.Mod(core_1.ObjectNode({\r\n        type: StringNode({ validator: 'resource', params: { pool: 'worldgen/feature_size_type' } }),\r\n        min_clipped_height: core_1.Opt(core_1.NumberNode({ min: 0, max: 80 })),\r\n        [core_1.Switch]: [{ push: 'type' }],\r\n        [core_1.Case]: {\r\n            'minecraft:two_layers_feature_size': {\r\n                limit: core_1.Opt(core_1.NumberNode({ integer: true, min: 0, max: 81 })),\r\n                lower_size: core_1.Opt(core_1.NumberNode({ integer: true, min: 0, max: 16 })),\r\n                upper_size: core_1.Opt(core_1.NumberNode({ integer: true, min: 0, max: 16 }))\r\n            },\r\n            'minecraft:three_layers_feature_size': {\r\n                limit: core_1.Opt(core_1.NumberNode({ integer: true, min: 0, max: 80 })),\r\n                upper_limit: core_1.Opt(core_1.NumberNode({ integer: true, min: 0, max: 80 })),\r\n                lower_size: core_1.Opt(core_1.NumberNode({ integer: true, min: 0, max: 16 })),\r\n                middle_size: core_1.Opt(core_1.NumberNode({ integer: true, min: 0, max: 16 })),\r\n                upper_size: core_1.Opt(core_1.NumberNode({ integer: true, min: 0, max: 16 }))\r\n            }\r\n        }\r\n    }, { disableSwitchContext: true }), {\r\n        default: () => ({\r\n            type: 'minecraft:two_layers_feature_size'\r\n        })\r\n    }));\r\n    schemas.register('block_state_provider', core_1.Mod(core_1.ObjectNode({\r\n        type: StringNode({ validator: 'resource', params: { pool: 'worldgen/block_state_provider_type' } }),\r\n        [core_1.Switch]: [{ push: 'type' }],\r\n        [core_1.Case]: {\r\n            'minecraft:randomized_int_state_provider': {\r\n                property: StringNode(),\r\n                values: Common_1.IntProvider(),\r\n                source: Reference('block_state_provider')\r\n            },\r\n            'minecraft:rotated_block_provider': {\r\n                state: Reference('block_state')\r\n            },\r\n            'minecraft:simple_state_provider': {\r\n                state: Reference('block_state')\r\n            },\r\n            'minecraft:weighted_state_provider': {\r\n                entries: core_1.ListNode(core_1.Mod(core_1.ObjectNode({\r\n                    weight: core_1.NumberNode({ integer: true, min: 1 }),\r\n                    data: Reference('block_state')\r\n                }), {\r\n                    default: () => ({\r\n                        data: {}\r\n                    })\r\n                }))\r\n            }\r\n        }\r\n    }, { context: 'block_state_provider' }), {\r\n        default: () => ({\r\n            type: 'minecraft:simple_state_provider'\r\n        })\r\n    }));\r\n    schemas.register('block_placer', core_1.Mod(core_1.ObjectNode({\r\n        type: StringNode({ validator: 'resource', params: { pool: 'worldgen/block_placer_type' } }),\r\n        [core_1.Switch]: [{ push: 'type' }],\r\n        [core_1.Case]: {\r\n            'minecraft:column_placer': {\r\n                size: Common_1.IntProvider({ min: 0 })\r\n            }\r\n        }\r\n    }, { context: 'block_placer' }), {\r\n        default: () => ({\r\n            type: 'minecraft:simple_block_placer'\r\n        })\r\n    }));\r\n}\r\nexports.initFeatureSchemas = initFeatureSchemas;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.initNoiseSettingsSchemas = void 0;\r\nconst core_1 = require(\"@mcschema/core\");\r\nconst Common_1 = require(\"../Common\");\r\nfunction initNoiseSettingsSchemas(schemas, collections) {\r\n    const Reference = core_1.Reference.bind(undefined, schemas);\r\n    const StringNode = core_1.StringNode.bind(undefined, collections);\r\n    schemas.register('noise_settings', core_1.Mod(core_1.ObjectNode({\r\n        name: core_1.Mod(StringNode({ validator: 'resource', params: { pool: '$worldgen/noise_settings', isDefinition: true } }), {\r\n            enabled: (path) => path.getArray().length > 0\r\n        }),\r\n        bedrock_roof_position: core_1.NumberNode({ integer: true }),\r\n        bedrock_floor_position: core_1.NumberNode({ integer: true }),\r\n        sea_level: core_1.NumberNode({ integer: true }),\r\n        min_surface_level: core_1.NumberNode({ integer: true }),\r\n        disable_mob_generation: core_1.BooleanNode(),\r\n        noise_caves_enabled: core_1.BooleanNode(),\r\n        noodle_caves_enabled: core_1.BooleanNode(),\r\n        aquifers_enabled: core_1.BooleanNode(),\r\n        deepslate_enabled: core_1.BooleanNode(),\r\n        ore_veins_enabled: core_1.BooleanNode(),\r\n        default_block: Reference('block_state'),\r\n        default_fluid: Reference('block_state'),\r\n        noise: core_1.ObjectNode({\r\n            min_y: core_1.NumberNode({ integer: true, min: -2048, max: 2047 }),\r\n            height: core_1.NumberNode({ integer: true, min: 0, max: 4096 }),\r\n            density_factor: core_1.NumberNode(),\r\n            density_offset: core_1.NumberNode(),\r\n            size_horizontal: core_1.NumberNode({ integer: true }),\r\n            size_vertical: core_1.NumberNode({ integer: true }),\r\n            simplex_surface_noise: core_1.BooleanNode(),\r\n            random_density_offset: core_1.Opt(core_1.BooleanNode()),\r\n            island_noise_override: core_1.Opt(core_1.BooleanNode()),\r\n            amplified: core_1.Opt(core_1.BooleanNode()),\r\n            sampling: core_1.ObjectNode({\r\n                xz_scale: core_1.NumberNode(),\r\n                y_scale: core_1.NumberNode(),\r\n                xz_factor: core_1.NumberNode(),\r\n                y_factor: core_1.NumberNode()\r\n            }),\r\n            bottom_slide: core_1.ObjectNode({\r\n                target: core_1.NumberNode({ integer: true }),\r\n                size: core_1.NumberNode({ integer: true, min: 0 }),\r\n                offset: core_1.NumberNode({ integer: true })\r\n            }),\r\n            top_slide: core_1.ObjectNode({\r\n                target: core_1.NumberNode({ integer: true }),\r\n                size: core_1.NumberNode({ integer: true, min: 0 }),\r\n                offset: core_1.NumberNode({ integer: true })\r\n            })\r\n        }),\r\n        structures: Reference('generator_structures')\r\n    }, { context: 'noise_settings' }), node => ({\r\n        default: () => Common_1.DefaultNoiseSettings,\r\n        validate: (path, value, errors, options) => {\r\n            var _a, _b, _c, _d;\r\n            value = node.validate(path, value, errors, options);\r\n            if (((_a = value === null || value === void 0 ? void 0 : value.noise) === null || _a === void 0 ? void 0 : _a.min_y) + ((_b = value === null || value === void 0 ? void 0 : value.noise) === null || _b === void 0 ? void 0 : _b.height) > 2047) {\r\n                errors.add(path.push('noise').push('height'), 'error.min_y_plus_height', 2047);\r\n            }\r\n            if (((_c = value === null || value === void 0 ? void 0 : value.noise) === null || _c === void 0 ? void 0 : _c.height) % 16 !== 0) {\r\n                errors.add(path.push('noise').push('height'), 'error.height_multiple', 16);\r\n            }\r\n            if (((_d = value === null || value === void 0 ? void 0 : value.noise) === null || _d === void 0 ? void 0 : _d.min_y) % 16 !== 0) {\r\n                errors.add(path.push('noise').push('min_y'), 'error.min_y_multiple', 16);\r\n            }\r\n            return value;\r\n        }\r\n    })));\r\n    schemas.register('generator_structures', core_1.ObjectNode({\r\n        stronghold: core_1.Opt(core_1.ObjectNode({\r\n            distance: core_1.NumberNode({ integer: true, min: 0, max: 1023 }),\r\n            spread: core_1.NumberNode({ integer: true, min: 0, max: 1023 }),\r\n            count: core_1.NumberNode({ integer: true, min: 1, max: 4095 })\r\n        })),\r\n        structures: core_1.MapNode(StringNode({ validator: 'resource', params: { pool: 'worldgen/structure_feature' } }), core_1.Mod(core_1.ObjectNode({\r\n            spacing: core_1.NumberNode({ integer: true, min: 0, max: 4096 }),\r\n            separation: core_1.Mod(core_1.NumberNode({ integer: true, min: 0, max: 4096 }), (node) => ({\r\n                validate: (path, value, errors, options) => {\r\n                    if (path.pop().push('spacing').get() <= value) {\r\n                        errors.add(path, 'error.separation_smaller_spacing');\r\n                    }\r\n                    return node.validate(path, value, errors, options);\r\n                }\r\n            })),\r\n            salt: core_1.NumberNode({ integer: true, min: 0 })\r\n        }, { context: 'generator_structure' }), {\r\n            default: () => ({\r\n                spacing: 10,\r\n                separation: 5,\r\n                salt: 0\r\n            })\r\n        }))\r\n    }));\r\n    schemas.register('generator_layer', core_1.Mod(core_1.ObjectNode({\r\n        block: StringNode({ validator: 'resource', params: { pool: 'block' } }),\r\n        height: core_1.NumberNode({ integer: true, min: 1 })\r\n    }), {\r\n        default: () => ({\r\n            block: 'minecraft:stone',\r\n            height: 1\r\n        })\r\n    }));\r\n}\r\nexports.initNoiseSettingsSchemas = initNoiseSettingsSchemas;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.initStructureFeatureSchemas = void 0;\r\nconst core_1 = require(\"@mcschema/core\");\r\nfunction initStructureFeatureSchemas(schemas, collections) {\r\n    const StringNode = core_1.StringNode.bind(undefined, collections);\r\n    const Reference = core_1.Reference.bind(undefined, schemas);\r\n    const templatePoolConfig = {\r\n        start_pool: StringNode({ validator: 'resource', params: { pool: '$worldgen/template_pool' } }),\r\n        size: core_1.NumberNode({ integer: true })\r\n    };\r\n    schemas.register('configured_structure_feature', core_1.Mod(core_1.ObjectNode({\r\n        type: StringNode({ validator: 'resource', params: { pool: 'worldgen/structure_feature' } }),\r\n        config: core_1.ObjectNode({\r\n            [core_1.Switch]: ['pop', { push: 'type' }],\r\n            [core_1.Case]: {\r\n                'minecraft:bastion_remnant': templatePoolConfig,\r\n                'minecraft:buried_treasure': {\r\n                    probability: core_1.NumberNode({ min: 0, max: 1 })\r\n                },\r\n                'minecraft:mineshaft': {\r\n                    type: StringNode({ enum: ['normal', 'mesa'] }),\r\n                    probability: core_1.NumberNode({ min: 0, max: 1 })\r\n                },\r\n                'minecraft:nether_fossil': {\r\n                    height: Reference('height_provider')\r\n                },\r\n                'minecraft:ocean_ruin': {\r\n                    biome_temp: StringNode({ enum: ['cold', 'warm'] }),\r\n                    large_probability: core_1.NumberNode({ min: 0, max: 1 }),\r\n                    cluster_probability: core_1.NumberNode({ min: 0, max: 1 })\r\n                },\r\n                'minecraft:pillager_outpost': templatePoolConfig,\r\n                'minecraft:ruined_portal': {\r\n                    portal_type: StringNode({ enum: ['standard', 'desert', 'jungle', 'mountain', 'nether', 'ocean', 'swamp'] })\r\n                },\r\n                'minecraft:shipwreck': {\r\n                    is_beached: core_1.Opt(core_1.BooleanNode())\r\n                },\r\n                'minecraft:village': templatePoolConfig\r\n            }\r\n        }, { context: 'structure_feature', disableSwitchContext: true })\r\n    }, { context: 'structure_feature' }), {\r\n        default: () => ({\r\n            type: 'minecraft:bastion_remnant',\r\n            config: {\r\n                start_pool: 'minecraft:bastion/starts',\r\n                size: 6\r\n            }\r\n        })\r\n    }));\r\n}\r\nexports.initStructureFeatureSchemas = initStructureFeatureSchemas;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.initSurfaceBuilderSchemas = void 0;\r\nconst core_1 = require(\"@mcschema/core\");\r\nfunction initSurfaceBuilderSchemas(schemas, collections) {\r\n    const StringNode = core_1.StringNode.bind(undefined, collections);\r\n    const Reference = core_1.Reference.bind(undefined, schemas);\r\n    schemas.register('configured_surface_builder', core_1.Mod(core_1.ObjectNode({\r\n        type: StringNode({ validator: 'resource', params: { pool: 'worldgen/surface_builder' } }),\r\n        config: core_1.ObjectNode({\r\n            top_material: Reference('block_state'),\r\n            under_material: Reference('block_state'),\r\n            underwater_material: Reference('block_state'),\r\n        }, { context: 'surface_builder' })\r\n    }, { context: 'surface_builder' }), {\r\n        default: () => ({\r\n            type: 'minecraft:default',\r\n            config: {\r\n                top_material: {\r\n                    Name: 'minecraft:grass_block',\r\n                    Properties: {\r\n                        snowy: 'false'\r\n                    }\r\n                },\r\n                under_material: {\r\n                    Name: 'minecraft:dirt'\r\n                },\r\n                underwater_material: {\r\n                    Name: 'minecraft:gravel'\r\n                }\r\n            }\r\n        })\r\n    }));\r\n}\r\nexports.initSurfaceBuilderSchemas = initSurfaceBuilderSchemas;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.initTemplatePoolSchemas = void 0;\r\nconst core_1 = require(\"@mcschema/core\");\r\nrequire(\"./ProcessorList\");\r\nconst ProcessorList_1 = require(\"./ProcessorList\");\r\nfunction initTemplatePoolSchemas(schemas, collections) {\r\n    const Reference = core_1.Reference.bind(undefined, schemas);\r\n    const StringNode = core_1.StringNode.bind(undefined, collections);\r\n    schemas.register('template_pool', core_1.Mod(core_1.ObjectNode({\r\n        name: StringNode(),\r\n        fallback: StringNode(),\r\n        elements: core_1.ListNode(Reference('template_weighted_element'))\r\n    }, { context: 'template_pool' }), {\r\n        default: () => ({\r\n            fallback: 'minecraft:empty',\r\n            elements: [\r\n                {\r\n                    weight: 1,\r\n                    element: {\r\n                        element_type: 'minecraft:single_pool_element',\r\n                        projection: 'rigid',\r\n                        processors: 'minecraft:empty'\r\n                    }\r\n                }\r\n            ]\r\n        })\r\n    }));\r\n    schemas.register('template_weighted_element', core_1.Mod(core_1.ObjectNode({\r\n        weight: core_1.NumberNode({ integer: true, min: 1 }),\r\n        element: Reference('template_element')\r\n    }, { category: 'pool' }), {\r\n        default: () => ({\r\n            weight: 1,\r\n            element: {\r\n                element_type: 'minecraft:single_pool_element',\r\n                projection: 'rigid',\r\n                processors: 'minecraft:empty'\r\n            }\r\n        })\r\n    }));\r\n    schemas.register('template_element', core_1.Mod(core_1.ObjectNode({\r\n        element_type: StringNode({ validator: 'resource', params: { pool: 'worldgen/structure_pool_element' } }),\r\n        projection: StringNode({ enum: ['rigid', 'terrain_matching'] }),\r\n        [core_1.Switch]: [{ push: 'element_type' }],\r\n        [core_1.Case]: {\r\n            'minecraft:feature_pool_element': {\r\n                feature: StringNode({ validator: 'resource', params: { pool: '$worldgen/configured_feature' } })\r\n            },\r\n            'minecraft:legacy_single_pool_element': {\r\n                location: StringNode({ validator: 'resource', params: { pool: '$structure' } }),\r\n                processors: ProcessorList_1.Processors\r\n            },\r\n            'minecraft:list_pool_element': {\r\n                elements: core_1.ListNode(Reference('template_element'))\r\n            },\r\n            'minecraft:single_pool_element': {\r\n                location: StringNode({ validator: 'resource', params: { pool: '$structure' } }),\r\n                processors: ProcessorList_1.Processors\r\n            }\r\n        }\r\n    }, { context: 'template_element', disableSwitchContext: true }), {\r\n        default: () => ({\r\n            element_type: 'minecraft:single_pool_element',\r\n            projection: 'rigid',\r\n            processors: 'minecraft:empty'\r\n        })\r\n    }));\r\n}\r\nexports.initTemplatePoolSchemas = initTemplatePoolSchemas;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.initWorldgenSchemas = void 0;\r\nconst Biome_1 = require(\"./Biome\");\r\nconst Carver_1 = require(\"./Carver\");\r\nconst Decorator_1 = require(\"./Decorator\");\r\nconst Feature_1 = require(\"./Feature\");\r\nconst NoiseSettings_1 = require(\"./NoiseSettings\");\r\nconst ProcessorList_1 = require(\"./ProcessorList\");\r\nconst StructureFeature_1 = require(\"./StructureFeature\");\r\nconst SurfaceBuilder_1 = require(\"./SurfaceBuilder\");\r\nconst TemplatePool_1 = require(\"./TemplatePool\");\r\nfunction initWorldgenSchemas(schemas, collections) {\r\n    // `ProcessorList.ts` has exports. It should be initialized first. \r\n    ProcessorList_1.initProcessorListSchemas(schemas, collections);\r\n    Biome_1.initBiomeSchemas(schemas, collections);\r\n    Carver_1.initCarverSchemas(schemas, collections);\r\n    Decorator_1.initDecoratorSchemas(schemas, collections);\r\n    Feature_1.initFeatureSchemas(schemas, collections);\r\n    NoiseSettings_1.initNoiseSettingsSchemas(schemas, collections);\r\n    StructureFeature_1.initStructureFeatureSchemas(schemas, collections);\r\n    SurfaceBuilder_1.initSurfaceBuilderSchemas(schemas, collections);\r\n    TemplatePool_1.initTemplatePoolSchemas(schemas, collections);\r\n}\r\nexports.initWorldgenSchemas = initWorldgenSchemas;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.initWorldSettingsSchemas = void 0;\r\nconst core_1 = require(\"@mcschema/core\");\r\nfunction initWorldSettingsSchemas(schemas, collections) {\r\n    const Reference = core_1.Reference.bind(undefined, schemas);\r\n    const StringNode = core_1.StringNode.bind(undefined, collections);\r\n    schemas.register('world_settings', core_1.Mod(core_1.ObjectNode({\r\n        generate_features: core_1.BooleanNode(),\r\n        bonus_chest: core_1.BooleanNode(),\r\n        seed: core_1.NumberNode({ integer: true }),\r\n        dimensions: core_1.MapNode(StringNode({ validator: 'resource', params: { pool: '$dimension' } }), Reference('dimension'))\r\n    }, { context: 'world_settings' }), {\r\n        default: () => {\r\n            const seed = Math.floor(Math.random() * (4294967296)) - 2147483648;\r\n            return {\r\n                generate_features: true,\r\n                bonus_chest: false,\r\n                seed,\r\n                dimensions: {\r\n                    'minecraft:overworld': {\r\n                        type: 'minecraft:overworld',\r\n                        generator: {\r\n                            type: 'minecraft:noise',\r\n                            seed,\r\n                            biome_source: {\r\n                                type: 'minecraft:vanilla_layered',\r\n                                seed\r\n                            },\r\n                            settings: 'minecraft:overworld',\r\n                        }\r\n                    },\r\n                    'minecraft:the_nether': {\r\n                        type: 'minecraft:the_nether',\r\n                        generator: {\r\n                            type: 'minecraft:noise',\r\n                            seed,\r\n                            biome_source: {\r\n                                type: 'minecraft:multi_noise',\r\n                                seed,\r\n                                humidity_noise: {\r\n                                    firstOctave: -7,\r\n                                    amplitudes: [1.0, 1.0]\r\n                                },\r\n                                altitude_noise: {\r\n                                    firstOctave: -7,\r\n                                    amplitudes: [1.0, 1.0]\r\n                                },\r\n                                weirdness_noise: {\r\n                                    firstOctave: -7,\r\n                                    amplitudes: [1.0, 1.0]\r\n                                },\r\n                                temperature_noise: {\r\n                                    firstOctave: -7,\r\n                                    amplitudes: [1.0, 1.0]\r\n                                },\r\n                                biomes: [\r\n                                    {\r\n                                        parameters: { altitude: 0.0, weirdness: 0.0, offset: 0.0, temperature: 0.0, humidity: 0.0 },\r\n                                        biome: 'minecraft:nether_wastes'\r\n                                    },\r\n                                    {\r\n                                        parameters: { altitude: 0.0, weirdness: 0.0, offset: 0.0, temperature: 0.0, humidity: -0.5 },\r\n                                        biome: 'minecraft:soul_sand_valley'\r\n                                    },\r\n                                    {\r\n                                        parameters: { altitude: 0.0, weirdness: 0.0, offset: 0.0, temperature: 0.4, humidity: 0.0 },\r\n                                        biome: 'minecraft:crimson_forest'\r\n                                    },\r\n                                    {\r\n                                        parameters: { altitude: 0.0, weirdness: 0.0, offset: 0.375, temperature: 0.0, humidity: 0.5 },\r\n                                        biome: 'minecraft:warped_forest'\r\n                                    },\r\n                                    {\r\n                                        parameters: { altitude: 0.0, weirdness: 0.0, offset: 0.175, temperature: -0.5, humidity: 0.0 },\r\n                                        biome: 'minecraft:basalt_deltas'\r\n                                    }\r\n                                ]\r\n                            },\r\n                            settings: 'minecraft:nether'\r\n                        }\r\n                    },\r\n                    'minecraft:the_end': {\r\n                        type: \"minecraft:the_end\",\r\n                        generator: {\r\n                            type: \"minecraft:noise\",\r\n                            seed,\r\n                            biome_source: {\r\n                                type: \"minecraft:the_end\",\r\n                                seed\r\n                            },\r\n                            settings: \"minecraft:end\"\r\n                        }\r\n                    }\r\n                }\r\n            };\r\n        }\r\n    }));\r\n}\r\nexports.initWorldSettingsSchemas = initWorldSettingsSchemas;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.initSchemas = void 0;\r\nconst Advancement_1 = require(\"./Advancement\");\r\nconst Common_1 = require(\"./Common\");\r\nconst Condition_1 = require(\"./Condition\");\r\nconst Dimension_1 = require(\"./Dimension\");\r\nconst DimensionType_1 = require(\"./DimensionType\");\r\nconst ItemModifier_1 = require(\"./ItemModifier\");\r\nconst LootTable_1 = require(\"./LootTable\");\r\nconst PackMcmeta_1 = require(\"./PackMcmeta\");\r\nconst Predicates_1 = require(\"./Predicates\");\r\nconst Recipe_1 = require(\"./Recipe\");\r\nconst Tags_1 = require(\"./Tags\");\r\nconst TextComponent_1 = require(\"./TextComponent\");\r\nconst worldgen_1 = require(\"./worldgen\");\r\nconst WorldSettings_1 = require(\"./WorldSettings\");\r\nfunction initSchemas(schemas, collections) {\r\n    // `Common.ts` is the only file that has exports. It should be initialized first. \r\n    Common_1.initCommonSchemas(schemas, collections);\r\n    Advancement_1.initAdvancementSchemas(schemas, collections);\r\n    Condition_1.initConditionSchemas(schemas, collections);\r\n    DimensionType_1.initDimensionTypeSchemas(schemas, collections);\r\n    Dimension_1.initDimensionSchemas(schemas, collections);\r\n    ItemModifier_1.initItemModifierSchemas(schemas, collections);\r\n    LootTable_1.initLootTableSchemas(schemas, collections);\r\n    PackMcmeta_1.initPackMcmetaSchemas(schemas, collections);\r\n    Predicates_1.initPredicatesSchemas(schemas, collections);\r\n    Recipe_1.initRecipeSchemas(schemas, collections);\r\n    Tags_1.initTagsSchemas(schemas, collections);\r\n    TextComponent_1.initTextComponentSchemas(schemas, collections);\r\n    worldgen_1.initWorldgenSchemas(schemas, collections);\r\n    WorldSettings_1.initWorldSettingsSchemas(schemas, collections);\r\n}\r\nexports.initSchemas = initSchemas;\r\n","\"use strict\";\r\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}));\r\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n});\r\nvar __importStar = (this && this.__importStar) || function (mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.getSchemas = exports.getCollections = void 0;\r\nconst core_1 = require(\"@mcschema/core\");\r\nconst Collections_1 = require(\"./Collections\");\r\nconst schemas_1 = require(\"./schemas\");\r\nexports.lootContext = __importStar(require(\"./LootContext\"));\r\nfunction getCollections() {\r\n    const collections = new core_1.CollectionRegistry();\r\n    Collections_1.initCollections(collections);\r\n    return collections;\r\n}\r\nexports.getCollections = getCollections;\r\n/**\r\n * @param collections The CollectionRegistry for this version. Note that apart from\r\n * the built-in collections, the client of this module is responsible for futhermore\r\n * adding the vanilla registries to it: the collection IDs shouldn't contain the\r\n * namespace (`minecraft:`) part, while the values within the collections should.\r\n *\r\n * @example\r\n * for (const key in VANILLA_REGISTRIES>) {\r\n *   collections.register(\r\n *     key.replace(/^minecraft:/, ''),\r\n *     Object.keys(VANILLA_REGISTRIES[key].entries)\r\n *   )\r\n * }\r\n */\r\nfunction getSchemas(collections) {\r\n    const schemas = new core_1.SchemaRegistry();\r\n    schemas_1.initSchemas(schemas, collections);\r\n    return schemas;\r\n}\r\nexports.getSchemas = getSchemas;\r\n"],"names":["n","u","i","t","r","f","e","n2","l2","u2","parentNode","removeChild","i2","t2","o2","r2","arguments","f2","length","push","children","defaultProps","v","type","props","key","ref","__k","__","__b","__e","__d","__c","__h","constructor","__v","vnode","this","context","d","indexOf","base","_","b","__r","debounceRendering","sort","n3","some","__P","c","I","__n","ownerSVGElement","T","e2","c2","s2","a2","h","p2","_2","k2","b2","m2","w2","A2","P2","Array","isArray","y","g","x","value","L","appendChild","nextSibling","insertBefore","setProperty","test","style","cssText","P","replace","toLowerCase","slice","l","addEventListener","H","$","removeEventListener","setAttribute","removeAttribute","event","v2","d2","g2","x2","contextType","__E","prototype","render","p","M","sub","state","__s","getDerivedStateFromProps","componentWillMount","componentDidMount","componentWillReceiveProps","shouldComponentUpdate","forEach","componentWillUpdate","componentDidUpdate","getChildContext","getSnapshotBeforeUpdate","m","y2","localName","nodeType","document","createTextNode","createElementNS","createElement","is","data","call","childNodes","dangerouslySetInnerHTML","attributes","name","__html","innerHTML","C","A","firstChild","s","checked","j","diffed","l3","u3","current","unmount","z","componentWillUnmount","a","getDerivedStateFromError","setState","componentDidCatch","k","forceUpdate","Promise","then","bind","resolve","setTimeout","EMPTY$1","obj","url","route2","opts","ret","reg","match","matches","split","decodeURIComponent","join","segmentize","max","Math","i$12","charAt","param","flags","plus","star","val","map","default","rank","index","path","rankSegment","rankChild","segment","customHistory","ROUTERS","subscribers","EMPTY","location","getCurrentLocation","pathname","search","canRoute","history","routeTo","didRoute","node","getAttribute","href","target","route","ctrlKey","metaKey","altKey","shiftKey","button","currentTarget","prevent","stopImmediatePropagation","stopPropagation","preventDefault","String","nodeName","toUpperCase","hasAttribute","routeFromLink","eventListenersInitialized","Router","Component$$1","getCurrentUrl","delegateLinkHandler","__proto__","Object","create","Router2","static","onChange","toChildArray","getMatchingChildren","updating","this$1","unlisten","listen","location2","splice","invoke","filter","prepareVNodeForRanking","pathRankSort","exec","newProps","cloneElement","Boolean","ref$1","active","previous","previousUrl","router","Component","Link","assign","onClick","handleLinkClick","Route","component","o","__H","w","requestAnimationFrame","t3","cancelAnimationFrame","defineProperty","Path_1","start","relativePath2","reduce","pop","[object Object]","modelArr","contextArr","end","Path","element","modelPush","contextPush","copy","newElement","startsWith","model","ModelPath","other","every","offset","fn","thisArg","_a","get","set","super","shift","Errors_1","errors","error","params","exact","equals","Symbol","iterator","Errors","DataModel_1","require$$0","require$$1","schema","options","listeners","JSON","stringify","historyIndex","historyMax","listener","newHistory","silentInvalidate","invalidated","loose","validate","invalidate","silent","getArray","reset","isNaN","last","log","toString","parse","withModel","clear","tempErrors","add","exports","category","enabled","keep","optional","pathPush","suggest","validationOption","hook","args","canUpdate","update","mods","__spreadValues","Mod","__spreadProps","BooleanNode","Node_1","Base","boolean","ListNode","config","_b","min","minLength","maxLength","Infinity","between","nextIndex","navigate","parseInt","_a2","list","SwitchNode","cases","activeCase","concat","fallback","sorter","priority","matchedCases","ListNode_1","SwitchNode_1","choices","switchNode","choice","isValid","XOrList","ChoiceNode","change","presetNode","objectNode","presets","keys","MapNode","res","validation","NumberNode","_c","integer","color","Number","isInteger","number","str","utils","escapeString","Node_12","Path_12","Errors_12","require$$2","utils_12","require$$3","fields","Switch","Case","defaultFields","__restKey","getActiveFields","switchValue","relativePath","getChildModelPath","childKey","caseFields","caseKeys","pathWithContext","getModel","disableSwitchContext","includes","pathElements","activeFields","existingKeys","quoteString","filterPath","filterField","activeKeys","forcedKeys","Set","newValue","object","Reference","schemas2","transform","StringNode","utils_1","isEnum","enum","isValidator","validator","collections","getValues","pool","allowTag","isDefinition","allowUnknown","additional","values","string","Hook","Registries","registry","id","warn","ValidationOption","__createBinding2","__createBinding","k22","enumerable","__exportStar","exports2","hasOwnProperty","require$$4","require$$5","require$$6","require$$7","require$$8","require$$9","require$$10","require$$11","require$$12","require$$13","require$$14","require$$15","global2","module2","define","seed","me","mash","charCodeAt","next","s0","s1","xg","Alea","prng","int32","double","quick","impl","alea","strseed","XorGen","result","xor128","xorwow","X","me2","seed2","j2","Date","xorshift7","limit","xor4096","floor","tychei","math","nodecrypto","width","startdenom","pow","significance","overflow","mask","callback","shortseed","mixkey","flatten","entropy","tostring","out","randomBytes","Uint8Array","crypto","msCrypto","getRandomValues","browser","navigator","plugins","screen","autoseed","arc4","ARC4","S","pass","prng2","is_math_call","global","keylen","count","i3","j3","s3","depth","prop","typ","smear","stringseed","fromCharCode","apply","random","module","seedrandom2","ex","self","sr","seedrandom","Collections","register","core_12","StringNode2","Reference2","ObjectNode","Name","Properties","Opt","level","forceRange","bounds","allowBinomial","choiceContext","minecraft:alternative","terms","minecraft:block_state_property","block","properties","minecraft:damage_source_properties","predicate","minecraft:entity_properties","entity","minecraft:entity_scores","scores","Range","minecraft:inverted","term","minecraft:killed_by_player","inverse","minecraft:location_check","offsetX","offsetY","offsetZ","minecraft:match_tool","minecraft:random_chance","chance","minecraft:random_chance_with_looting","looting_multiplier","minecraft:requirements","minecraft:reference","minecraft:table_bonus","enchantment","chances","minecraft:time_check","period","minecraft:weather_check","raining","thundering","Common_12","StateChoice","item","tag","durability","potion","nbt","enchantments","levels","fluid","position","biome","feature","dimension","light","LocationFields","stat","minecraft:mined","minecraft:crafted","minecraft:used","minecraft:broken","minecraft:picked_up","minecraft:dropped","minecraft:killed","minecraft:killed_by","minecraft:custom","gamemode","advancements","recipes","stats","amplifier","duration","ambient","visible","absolute","horizontal","team","distance","is_on_fire","is_sneaking","is_sprinting","is_swimming","is_baby","equipment","player","effects","is_explosion","is_fire","is_magic","is_projectile","is_lightning","bypasses_armor","bypasses_invulnerability","bypasses_magic","source_entity","direct_entity","dealt","taken","blocked","Advancement","core_1","Common_1","Predicates_1","display","icon","title","description","background","frame","show_toast","announce_to_chat","hidden","parent","criteria","requirements","rewards","function","loot","experience","requirement","trigger","conditions","minecraft:bee_nest_destroyed","num_bees_inside","minecraft:bred_animals","partner","child","minecraft:brewed_potion","minecraft:changed_dimension","from","to","minecraft:channeled_lightning","victims","minecraft:construct_beacon","minecraft:consume_item","minecraft:cured_zombie_villager","villager","zombie","minecraft:effects_changed","minecraft:enter_block","minecraft:enchanted_item","minecraft:entity_hurt_player","damage","minecraft:entity_killed_player","killing_blow","minecraft:filled_bucket","minecraft:fishing_rod_hooked","minecraft:hero_of_the_village","minecraft:inventory_changed","slots","empty","occupied","full","items","minecraft:item_durability_changed","delta","minecraft:killed_by_crossbow","unique_entity_types","minecraft:levitation","minecraft:location","minecraft:nether_travel","entered","exited","minecraft:placed_block","minecraft:player_hurt_entity","minecraft:player_killed_entity","minecraft:recipe_unlocked","recipe","minecraft:safely_harvest_honey","minecraft:slept_in_bed","minecraft:slide_down_block","minecraft:shot_crossbow","minecraft:summoned_entity","minecraft:tame_animal","minecraft:used_ender_eye","minecraft:used_totem","minecraft:villager_trade","minecraft:voluntary_exile","Condition","ObjectOrList","condition","ConditionCases","LootContext","Map","requires","allows","LootTable","LootContext_1","functionsAndConditions","functions","contextMap","collectionID","getNode","getAvailableOptions","providedContext","tableType","LootTableTypes","conditionSwtichNode","compileSwitchNode","LootConditions","functionSwtichNode","LootFunctions","entitySourceSwtichNode","LootEntitySources","copySourceSwtichNode","LootCopySources","pools","rolls","bonus_rolls","entries","weightMod","weight","quality","minecraft:alternatives","minecraft:dynamic","minecraft:group","minecraft:item","minecraft:loot_table","minecraft:sequence","minecraft:tag","expand","minecraft:apply_bonus","formula","parameters","bonusMultiplier","extra","probability","minecraft:copy_name","source","minecraft:copy_nbt","ops","getter","op","minecraft:copy_state","minecraft:enchant_randomly","minecraft:enchant_with_levels","treasure","minecraft:exploration_map","destination","decoration","zoom","search_radius","skip_existing_chunks","minecraft:fill_player_head","minecraft:limit_count","minecraft:looting_enchant","minecraft:set_attributes","modifiers","minecraft:set_contents","minecraft:set_count","minecraft:set_damage","minecraft:set_loot_table","minecraft:set_lore","lore","minecraft:set_name","minecraft:set_nbt","minecraft:set_stew_effect","attribute","amount","operation","slot","StringOrList","PackMcmeta","pack","pack_format","Recipe","minecraft:crafting_shaped","group","pattern","minecraft:crafting_shapeless","ingredients","minecraft:smelting","ingredient","cookingtime","minecraft:blasting","minecraft:smoking","minecraft:campfire_cooking","minecraft:stonecutting","minecraft:smithing","addition","Tags","TagBase","required","TextComponent","getSimpleString","text","parseFloat","isFinite","CommonFields","bold","italic","underlined","strikethrough","obfuscated","insertion","clickEvent","action","change_page","copy_to_clipboard","open_file","open_url","run_command","leadingSlash","allowPartial","suggest_command","hoverEvent","show_text","show_item","show_entity","translate","with","score","isScoreHolder","objective","selector","keybind","storage","interpret","schemas","Advancement_1","Condition_1","LootTable_1","PackMcmeta_1","Recipe_1","Tags_1","TextComponent_1","initCommonSchemas","initPredicatesSchemas","initAdvancementSchemas","initConditionSchemas","initLootTableSchemas","initPackMcmetaSchemas","initRecipeSchemas","initTagsSchemas","initTextComponentSchemas","__setModuleDefault","__importStar","mod","__esModule","lib","Collections_1","schemas_1","CollectionRegistry","initCollections","getSchemas_1","SchemaRegistry","initSchemas","ultrawarm","natural","piglin_safe","respawn_anchor_works","bed_works","has_raids","has_skylight","has_ceiling","coordinate_scale","ambient_light","logical_height","infiniburn","bedrock_roof_position","bedrock_floor_position","sea_level","disable_mob_generation","noise","density_factor","density_offset","simplex_surface_noise","random_density_offset","size_horizontal","size_vertical","height","sampling","xz_scale","y_scale","xz_factor","y_factor","top_slide","size","bottom_slide","default_block","default_fluid","spread","maxSpread","ObjectOrPreset","minecraft:overworld","DefaultDimensionType","minecraft:the_nether","shrunk","fixed_time","minecraft:the_end","DefaultNoiseSettings","minecraft:nether","minecraft:end","island_noise_override","minecraft:amplified","amplified","minecraft:caves","minecraft:floating_islands","EntityPredicate","minecraft:item_used_on_block","minecraft:player_generates_container_loot","loot_table","minecraft:player_interacted_with_entity","minecraft:target_hit","projectile","shooter","signal_strength","minecraft:thrown_item_picked_up_by_entity","Dimension","NoPreset","DimensionTypePresets","generator","minecraft:noise","settings","NoiseSettingsPresets","biome_source","minecraft:fixed","minecraft:multi_noise","preset","altitude_noise","temperature_noise","humidity_noise","weirdness_noise","biomes","minecraft:checkerboard","scale","minecraft:vanilla_layered","large_biomes","legacy_biome_init_layer","minecraft:flat","lakes","features","layers","structures","altitude","temperature","humidity","weirdness","firstOctave","amplitudes","DimensionType","Predicates","smokey","vehicle","targeted_entity","fishing_hook","in_open_water","font","contents","Biome","surface_builder","downfall","precipitation","temperature_modifier","player_spawn_friendly","creature_spawn_probability","sky_color","fog_color","water_color","water_fog_color","grass_color","foliage_color","grass_color_modifier","ambient_sound","mood_sound","sound","tick_delay","block_search_extent","additions_sound","tick_chance","music","min_delay","max_delay","replace_current_music","particle","starts","spawners","minCount","maxCount","spawn_costs","energy_budget","charge","carvers","Carver","Decorator","RangeConfig","maximum","bottom_offset","top_offset","ChanceConfig","CountConfig","UniformInt","minecraft:carving_mask","step","minecraft:chance","minecraft:count","minecraft:count_extra","extra_count","extra_chance","minecraft:count_multilayer","minecraft:count_noise","noise_level","below_noise","above_noise","minecraft:count_noise_biased","noise_to_count_ratio","noise_factor","noise_offset","minecraft:decorated","outer","inner","minecraft:depth_average","baseline","minecraft:fire","minecraft:glowstone","minecraft:lava_lake","minecraft:range","minecraft:range_biased","minecraft:range_very_biased","minecraft:water_lake","ProcessorList","processors","processor_type","rules","location_predicate","predicate_type","input_predicate","minecraft:block_age","mossiness","minecraft:block_ignore","blocks","minecraft:block_rot","integrity","minecraft:gravity","heightmap","minecraft:rule","position_predicate","output_state","output_nbt","posTestFields","min_dist","max_dist","min_chance","max_chance","minecraft:axis_aligned_linear_pos","axis","minecraft:linear_pos","minecraft:block_match","minecraft:blockstate_match","block_state","minecraft:random_block_match","minecraft:random_blockstate_match","minecraft:tag_match","Feature","RandomPatchConfig","can_replace","project","need_water","xspread","yspread","zspread","tries","state_provider","block_placer","whitelist","blacklist","DiskConfig","radius","half_height","targets","HugeMushroomConfig","cap_provider","stem_provider","foliage_radius","OreConfig","Feature2","minecraft:bamboo","minecraft:basalt_columns","reach","minecraft:block_pile","decorator","minecraft:delta_feature","rim","rim_size","minecraft:disk","minecraft:emerald_ore","minecraft:end_gateway","exit","minecraft:end_spike","crystal_invulnerable","crystal_beam_target","spikes","centerX","centerZ","guarded","minecraft:fill_layer","minecraft:flower","minecraft:forest_rock","minecraft:huge_brown_mushroom","minecraft:huge_fungus","hat_state","decor_state","stem_state","valid_base_block","planted","minecraft:huge_red_mushroom","minecraft:ice_patch","minecraft:iceberg","minecraft:lake","minecraft:nether_forest_vegetation","minecraft:netherrack_replace_blobs","minecraft:no_bonemeal_flower","minecraft:no_surface_ore","minecraft:ore","minecraft:random_patch","minecraft:random_boolean_selector","feature_false","feature_true","minecraft:random_selector","minecraft:sea_pickle","minecraft:seagrass","minecraft:simple_block","to_place","place_on","place_in","place_under","minecraft:simple_random_selector","minecraft:spring_feature","rock_count","hole_count","requires_block_below","valid_blocks","minecraft:tree","max_water_depth","ignore_vines","minimum_size","trunk_provider","leaves_provider","trunk_placer","base_height","height_rand_a","height_rand_b","foliage_placer","minecraft:blob_foliage_placer","minecraft:bush_foliage_placer","minecraft:fancy_foliage_placer","minecraft:jungle_foliage_placer","minecraft:mega_pine_foliage_placer","crown_height","minecraft:pine_foliage_placer","minecraft:spruce_foliage_placer","trunk_height","decorators","minecraft:alter_ground","provider","minecraft:beehive","minecraft:cocoa","min_clipped_height","minecraft:two_layers_feature_size","lower_size","upper_size","minecraft:three_layers_feature_size","upper_limit","middle_size","minecraft:rotated_block_provider","minecraft:simple_state_provider","minecraft:weighted_state_provider","minecraft:column_placer","min_size","extra_size","NoiseSettings","stronghold","spacing","separation","salt","StructureFeature","templatePoolConfig","start_pool","minecraft:bastion_remnant","minecraft:buried_treasure","minecraft:mineshaft","minecraft:ocean_ruin","biome_temp","large_probability","cluster_probability","minecraft:pillager_outpost","minecraft:ruined_portal","portal_type","minecraft:shipwreck","is_beached","minecraft:village","SurfaceBuilder","top_material","under_material","underwater_material","snowy","TemplatePool","Processors","elements","element_type","projection","minecraft:feature_pool_element","minecraft:legacy_single_pool_element","minecraft:list_pool_element","minecraft:single_pool_element","worldgen","Biome_1","Carver_1","Decorator_1","Feature_1","NoiseSettings_1","ProcessorList_1","StructureFeature_1","SurfaceBuilder_1","TemplatePool_1","initBiomeSchemas","initCarverSchemas","initDecoratorSchemas","initFeatureSchemas","initNoiseSettingsSchemas","initProcessorListSchemas","initStructureFeatureSchemas","initSurfaceBuilderSchemas","initTemplatePoolSchemas","WorldSettings","generate_features","bonus_chest","dimensions","Dimension_1","DimensionType_1","worldgen_1","WorldSettings_1","initDimensionTypeSchemas","initDimensionSchemas","initWorldgenSchemas","initWorldSettingsSchemas","minecraft:lightning_strike","lightning","bystander","minecraft:using_item","min_y","noise_caves_enabled","aquifers_enabled","deepslate_enabled","Bounds","ObjectWithType","directType","directPath","directDefault","objectDefault","defaultCase","minecraft:constant","minecraft:uniform","minecraft:binomial","minecraft:score","minecraft:context","minecraft:storage","min_inclusive","max_exclusive","minecraft:clamped_normal","mean","deviation","minecraft:trapezoid","plateau","FloatProvider","max_inclusive","minecraft:biased_to_bottom","minecraft:clamped","IntProvider","above_bottom","below_top","minecraft:very_biased_to_bottom","entitySourceNode","minecraft:value_check","range","copySourceNode","minecraft:set_banner_pattern","patterns","append","minecraft:set_enchantments","ItemModifier","FunctionCases","conditionIDSwtichNode","functionIDSwtichNode","_p","looking_at","stepping_on","passenger","lightning_bolt","blocks_set_on_fire","entity_struck","separator","CanyonConfig","vertical_rotation","shape","distance_factor","thickness","width_smoothness","horizontal_radius_factor","vertical_radius_default_factor","vertical_radius_center_factor","CaveConfig","horizontal_radius_multiplier","vertical_radius_multiplier","floor_level","yScale","lava_level","debug_settings","debug_mode","air_state","water_state","lava_state","barrier_state","minecraft:canyon","minecraft:cave","minecraft:nether_cave","minecraft:cave_surface","surface","floor_to_ceiling_search_range","minecraft:heightmap","minecraft:heightmap_spread_double","minecraft:water_depth_threshold","minecraft:protected_blocks","TargetBlockState","discard_chance_on_air_exposure","VegetationPatchConfig","vertical_range","extra_bottom_block_chance","extra_edge_column_chance","vegetation_chance","xz_radius","replaceable","ground_state","vegetation_feature","minecraft:decorated_flower","minecraft:dripstone_cluster","max_stalagmite_stalactite_height_diff","height_deviation","dripstone_block_layer_thickness","density","wetness","chance_of_dripstone_column_at_max_distance_from_center","max_distance_from_edge_affecting_chance_of_dripstone_column","max_distance_from_center_affecting_height_bias","minecraft:fossil","max_empty_corners_allowed","fossil_structures","overlay_structures","fossil_processors","overlay_processors","minecraft:geode","filling_provider","inner_layer_provider","alternate_inner_layer_provider","middle_layer_provider","outer_layer_provider","inner_placements","cannot_replace","invalid_blocks","filling","inner_layer","middle_layer","outer_layer","crack","generate_crack_chance","base_crack_size","crack_point_offset","noise_multiplier","use_potential_placements_chance","use_alternate_layer0_chance","placements_require_layer0_alternate","outer_wall_distance","distribution_points","point_offset","min_gen_offset","max_gen_offset","invalid_blocks_threshold","minecraft:glow_lichen","search_range","chance_of_spreading","can_place_on_floor","can_place_on_ceiling","can_place_on_wall","can_be_placed_on","minecraft:growing_plant","direction","allow_water","height_distribution","body_provider","head_provider","minecraft:large_dripstone","column_radius","height_scale","max_column_radius_to_cave_height_ratio","stalactite_bluntness","stalagmite_bluntness","wind_speed","min_radius_for_wind","min_bluntness_for_wind","minecraft:replace_single_block","minecraft:root_system","required_vertical_space_for_tree","root_radius","root_placement_attempts","root_column_max_height","hanging_root_radius","hanging_roots_vertical_span","hanging_root_placement_attempts","allowed_vertical_water_for_tree","root_replaceable","root_state_provider","hanging_root_state_provider","minecraft:scattered_ore","minecraft:small_dripstone","max_placements","empty_space_search_radius","max_offset_from_origin","chance_of_taller_dripstone","force_dirt","dirt_provider","sapling_provider","foliage_provider","minecraft:bending_trunk_placer","bend_length","min_height_for_leaves","minecraft:random_spread_foliage_placer","foliage_height","leaf_placement_attempts","minecraft:underwater_magma","floor_search_range","placement_radius_around_floor","placement_probability_per_valid_position","minecraft:vegetation_patch","minecraft:waterlogged_vegetation_patch","minecraft:randomized_int_state_provider","property","min_surface_level","noodle_caves_enabled","ore_veins_enabled","_d","minecraft:nether_fossil","ItemModifier_1","initItemModifierSchemas"],"mappings":"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/Bkc,EAAK4C,SAAU7G,GAMa8G,GAAO7N,QAAS,YAChC8N,QAGF1P,SACN2P,uBAKgBD,EAzN1B,CAiOkB,oBAATE,KAAwBA,KAAOvgB,GACvC,GACAuI,MC/OF,IAAIgU,GAAO5L,WAKPgM,GAAS/L,WAKTgM,GAAS/F,WAQTqG,GAAYnG,WASZqG,GAAU1C,WAOV4C,GAAS3C,WAIT6F,GAAK5F,WAET4F,GAAGjE,KAAOA,GACViE,GAAG7D,OAASA,GACZ6D,GAAG5D,OAASA,GACZ4D,GAAGtD,UAAYA,GACfsD,GAAGpD,QAAUA,GACboD,GAAGlD,OAASA,OAEZmD,GAAiBD,eC1DjB3U,OAAOuC,eAAesS,GAAS,aAAc,CAAEte,OAAO,4BAC5B,qBAC1B,SAAyBgX,KACTuH,SAAS,sBAAuB,CACxC,+BACA,yBACA,0BACA,8BACA,gCACA,6BACA,yBACA,kCACA,4BACA,2BACA,wBACA,+BACA,iCACA,0BACA,+BACA,gCACA,uBACA,8BACA,oCACA,+BACA,uBACA,qBACA,0BACA,yBACA,+BACA,iCACA,4BACA,0BACA,iCACA,yBACA,6BACA,4BACA,wBACA,iBACA,2BACA,uBACA,2BACA,gCAEQA,SAAS,uBAAwB,CACzC,kBACA,iBACA,gBACA,uBACA,yBACA,qBACA,kBACA,wBAEQA,SAAS,sBAAuB,CACxC,wBACA,qBACA,sBACA,8BACA,iCACA,uBACA,qCACA,2BACA,0BACA,uBACA,0BACA,0BACA,uCACA,wBACA,6BACA,mCAEQA,SAAS,qBAAsB,CACvC,sBACA,uBACA,qBACA,qBACA,oBACA,2BACA,yBACA,6BACA,gCACA,4BACA,wBACA,0BACA,4BACA,6BACA,sBACA,qBACA,uBACA,wBACA,4BACA,gCAEQA,SAAS,YAAa,CAC9B,oBACA,sBACA,8BACA,wBACA,uBACA,gBACA,yBACA,sBACA,eACA,qBACA,0BACA,sBACA,iCAEQA,SAAS,oBAAqB,CACtC,mBACA,YACA,UACA,iBACA,iBACA,QACA,YACA,YACA,aACA,WACA,aACA,WACA,UACA,kBACA,cAEQA,SAAS,YAAa,CAC9B,sBACA,uBACA,wBAEQA,SAAS,UAAW,CAC5B,mBACA,aACA,WACA,WACA,cACA,WACA,cACA,iBACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,gBACA,WACA,WACA,2BACA,eACA,iBACA,YACA,2BACA,iBACA,mBACA,YACA,wBACA,aACA,kBACA,wBACA,cAEQA,SAAS,OAAQ,CACzB,WACA,UACA,OACA,QACA,OACA,WAEQA,SAAS,WAAY,CAC7B,WACA,WACA,YACA,gBAEQA,SAAS,gBAAiB,CAClC,OACA,gBACA,SACA,oBAEQA,SAAS,cAAe,CAChC,eACA,OACA,SACA,oBAEQA,SAAS,iCAAkC,CACnD,gCACA,sCACA,0BAEQA,SAAS,iBAAkB,CACnC,UACA,WACA,SACA,QACA,aACA,cACA,WACA,eACA,iBACA,oBACA,QACA,eACA,gBACA,iBACA,oBACA,gBACA,cACA,cACA,cACA,oBACA,cACA,gBACA,cACA,eACA,eACA,aACA,mBAEQA,SAAS,eAAgB,CACjC,MACA,iBACA,aACA,gBACA,YACA,qBACA,WACA,cACA,OACA,cACA,iBACA,oBACA,SACA,gBACA,cACA,qBACA,eACA,SACA,kBACA,wBACA,OACA,YACA,aACA,WACA,UACA,kBACA,gBACA,aACA,WACA,cACA,aACA,SACA,OACA,OACA,QACA,WACA,YACA,SACA,sBAEQA,SAAS,oBAAqB,CACtC,kBACA,kBACA,oBACA,qBACA,oBACA,mBACA,iBACA,mBACA,+BACA,+BACA,oBACA,+DCtRDvS,iBAAwB,aAAc,CAAEhM,OAAO,wBAC1BmQ,QAAgBA,sBAAyB,QAC/DqO,EAASjQ,gCACYiI,EAASQ,SAC1ByH,EAAaD,EAAO9H,WAAWxR,UAAK,EAAW8R,GAC/C0H,EAAYF,EAAOjI,UAAUrR,UAAK,EAAWsR,KAC3C+H,SAAS,cAAeC,EAAOvN,IAAIuN,EAAOG,WAAW,CACzDC,KAAMH,EAAW,CAAE1H,UAAW,WAAY/I,OAAQ,CAAEkJ,KAAM,WAC1D2H,WAAYL,EAAOM,IAAIN,EAAO/K,QAAQgL,IAAcA,I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YACA,wBACA,aACA,kBACA,wBACA,cAEQA,SAAS,OAAQ,CACzB,WACA,UACA,OACA,QACA,OACA,WAEQA,SAAS,WAAY,CAC7B,WACA,WACA,YACA,gBAEQA,SAAS,0BAA2B,CAC5C,sBACA,mBACA,gBACA,sBACA,kBACA,iCAEQA,SAAS,gBAAiB,CAClC,OACA,gBACA,SACA,oBAEQA,SAAS,cAAe,CAChC,eACA,OACA,SACA,oBAEQA,SAAS,iCAAkC,CACnD,gCACA,sCACA,0BAEQA,SAAS,iBAAkB,CACnC,UACA,WACA,SACA,QACA,aACA,cACA,WACA,eACA,iBACA,oBACA,QACA,eACA,gBACA,iBACA,oBACA,gBACA,cACA,cACA,cACA,oBACA,cACA,gBACA,cACA,eACA,eACA,aACA,mBAEQA,SAAS,cAAe,CAChC,kBACA,kBACA,iBACA,UACA,WACA,QACA,iBACA,UACA,YACA,WACA,gBACA,aACA,mBACA,gBACA,YACA,aACA,YACA,cAEQA,SAAS,eAAgB,CACjC,MACA,iBACA,aACA,gBACA,YACA,qBACA,WACA,cACA,OACA,cACA,iBACA,oBACA,SACA,gBACA,cACA,qBACA,eACA,SACA,kBACA,wBACA,OACA,YACA,aACA,WACA,UACA,kBACA,gBACA,aACA,WACA,cACA,aACA,SACA,OACA,OACA,QACA,WACA,YACA,SACA,sBAEQA,SAAS,8BAA+B,CAChD,mBACA,yBACA,8BACA,mBACA,yBACA,0BACA,4BACA,2BACA,2BACA,wBACA,uBACA,kBACA,6BACA,qBACA,wBACA,iCACA,kCACA,kCACA,iCACA,iCACA,yBACA,sCACA,kCACA,0BACA,yCACA,uCACA,qBACA,kBACA,wBACA,sBACA,wBACA,sBACA,gCACA,wBACA,iCACA,uBACA,sBACA,gCACA,+BACA,+BACA,sBACA,2BACA,0BACA,mCACA,yBACA,yBACA,wBACA,gCACA,4CACA,qCACA,wBACA,mBACA,6BACA,4BACA,sBACA,gCACA,8BACA,sBACA,sBACA,yBACA,2BACA,wBACA,gCACA,wBACA,sBACA,sBACA,sBACA,uBACA,iCACA,6BACA,sBACA,wBACA,yBACA,sCACA,2BACA,yBACA,0BACA,yBACA,yBACA,gBACA,yBACA,2BACA,qBACA,6BACA,6BACA,wBACA,wBACA,qBACA,wBACA,4BACA,2BACA,4BACA,qBACA,wBACA,8BACA,uBACA,yBACA,qBACA,sBACA,sBACA,8BACA,8BACA,yBACA,0BACA,6BACA,kCACA,+BACA,iCACA,mCACA,gCACA,yBACA,gCACA,8BACA,qCACA,4BACA,uBACA,iCACA,+BACA,+BACA,+BACA,8BACA,gCACA,gCACA,8BACA,6BACA,wBACA,0BACA,+BACA,4BACA,sCACA,oCACA,mCACA,6BACA,4BACA,8BACA,+BACA,6BACA,6BACA,qBACA,qBACA,uBACA,yBACA,sBACA,iBACA,6BACA,+BACA,gCACA,gCACA,+BACA,+BACA,uBACA,0BACA,+BACA,+BACA,0BACA,4BACA,2BACA,4BACA,2BACA,0BACA,iCACA,iCACA,0BACA,yBACA,+BACA,wBACA,wBACA,yBACA,yBACA,mBACA,kCACA,uBACA,6BACA,wBACA,+BACA,wBACA,8BACA,yBACA,gCACA,2BACA,0BACA,oCACA,wBACA,2BACA,kBACA,gCACA,kCACA,qCACA,iCACA,yBACA,8BAEQA,SAAS,wCAAyC,CAC1D,4BACA,4BACA,2BACA,qBACA,qBACA,kBACA,2BACA,oBACA,2BACA,sBACA,qBACA,0BACA,4BACA,4BACA,6BACA,iCACA,iCACA,mCACA,iCACA,gCACA,gCACA,0BACA,8BACA,sBACA,uBACA,sBACA,2BACA,2BACA,4BACA,0BACA,8BAEQA,SAAS,sCAAuC,CACxD,qBACA,0BACA,2BACA,mBACA,gBACA,4BACA,yBACA,sBACA,6BACA,kBACA,8BACA,uBACA,qBACA,qBACA,mBACA,iBACA,uBACA,8BACA,6BACA,kBACA,kBACA,0BACA,gCAEQA,SAAS,iBAAkB,CACnC,QACA,SACA,gBACA,SACA,MACA,SACA,OACA,WACA,SACA,OACA,QACA,SACA,QA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AEf0yB,GAAgBn2B,IAAQA,GAAKm2B,cAAiB,SAAUC,MACpDA,GAAOA,EAAIC,kBAAmBD,MAC9B1Z,EAAS,MACF,MAAP0Z,UAAsB30B,KAAK20B,EAAe,YAAN30B,GAAmBoK,OAAO4O,eAAe/U,KAAK0wB,EAAK30B,OAAoBib,EAAQ0Z,EAAK30B,aACzGib,EAAQ0Z,GACpB1Z,GAEX7Q,OAAOuC,eAAekoB,GAAS,aAAc,CAAEl0B,OAAO,IACtD,4CAA8C,EAC9C,MAAMmlB,GAAS5W,GACT4lB,GAAgB3lB,GAChB4lB,GAAY3f,GAClB,sBAAsBsf,GAAapf,IAMnC,yBALA,iBACUqC,EAAc,IAAImO,GAAOkP,6BACjBC,gBAAgBtd,GACvBA,GAsBXud,iBALA,SAAoBvd,SACVR,EAAU,IAAI2O,GAAOqP,yBACjBC,YAAYje,EAASQ,GACxBR,iMChDX/M,OAAOuC,eAAesS,GAAS,aAAc,CAAEte,OAAO,4BAC5B,qBAC1B,SAAyBgX,KACTuH,SAAS,sBAAuB,CACxC,+BACA,yBACA,0BACA,8BACA,gCACA,6BACA,yBACA,kCACA,4BACA,2BACA,wBACA,+BACA,iCACA,0BACA,+BACA,gCACA,uBACA,8BACA,oCACA,+BACA,+BACA,uBACA,6BACA,qBACA,0BACA,yBACA,4CACA,+BACA,0CACA,iCACA,4BACA,0BACA,yBACA,6BACA,2BACA,4BACA,wBACA,uBACA,iBACA,4CACA,2BACA,uBACA,uBACA,2BACA,gCAEQA,SAAS,YAAa,CAC9B,sBACA,uBACA,wBAEQA,SAAS,iBAAkB,CACnC,sBACA,uBACA,wBAEQA,SAAS,UAAW,CAC5B,mBACA,aACA,WACA,WACA,cACA,WACA,cACA,iBACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,gBACA,WACA,WACA,2BACA,eACA,iBACA,YACA,2BACA,iBACA,mBACA,YACA,wBACA,aACA,kBACA,wBACA,cAEQA,SAAS,OAAQ,CACzB,WACA,UACA,OACA,QACA,OACA,WAEQA,SAAS,WAAY,CAC7B,WACA,WACA,YACA,gBAEQA,SAAS,0BAA2B,CAC5C,sBACA,mBACA,gBACA,sBACA,kBACA,iCAEQA,SAAS,gBAAiB,CAClC,OACA,SACA,gBACA,oBAEQA,SAAS,cAAe,CAChC,eACA,OACA,SACA,oBAEQA,SAAS,iCAAkC,CACnD,gCACA,sCACA,0BAEQA,SAAS,iBAAkB,CACnC,UACA,WACA,SACA,QACA,aACA,cACA,WACA,eACA,iBACA,oBACA,QACA,eACA,gBACA,iBACA,oBACA,gBACA,cACA,cACA,cACA,oBACA,cACA,gBACA,cACA,eACA,eACA,aACA,mBAEQA,SAAS,cAAe,CAChC,kBACA,kBACA,iBACA,UACA,WACA,QACA,iBACA,UACA,YACA,WACA,gBACA,aACA,mBACA,gBACA,YACA,aACA,YACA,cAEQA,SAAS,eAAgB,CACjC,MACA,iBACA,aACA,gBACA,YACA,qBACA,WACA,cACA,OACA,cACA,iBACA,oBACA,SACA,gBACA,cACA,qBACA,eACA,SACA,kBACA,wBACA,OACA,YACA,aACA,WACA,UACA,kBACA,gBACA,aACA,WACA,cACA,aACA,SACA,OACA,OACA,QACA,WACA,YACA,SACA,sBAEQA,SAAS,8BAA+B,CAChD,mBACA,yBACA,8BACA,mBACA,yBACA,0BACA,4BACA,2BACA,2BACA,wBACA,uBACA,kBACA,6BACA,qBACA,wBACA,iCACA,kCACA,kCACA,iCACA,iCACA,yBACA,sCACA,kCACA,0BACA,yCACA,uCACA,qBACA,kBACA,wBACA,sBACA,wBACA,sBACA,gCACA,wBACA,iCACA,uBACA,sBACA,gCACA,+BACA,+BACA,sBACA,2BACA,0BACA,mCACA,yBACA,yBACA,wBACA,gCACA,4CACA,qCACA,wBACA,mBACA,6BACA,4BACA,sBACA,gCACA,8BACA,sBACA,sBACA,yBACA,2BACA,wBACA,gCACA,wBACA,sBACA,sBACA,sBACA,uBACA,iCACA,6BACA,sBACA,wBACA,yBACA,sCACA,2BACA,yBACA,0BACA,yBACA,yBACA,gBACA,yBACA,2BACA,qBACA,6BACA,6BACA,wBACA,wBACA,qBACA,wBACA,4BACA,2BACA,4BACA,qBACA,wBACA,8BACA,uBACA,yBACA,qBACA,sBACA,sBACA,8BACA,8BACA,yBACA,0BACA,6BACA,kCACA,+BACA,iCACA,mCACA,gCACA,yBACA,gCACA,8BACA,qCACA,4BACA,uBACA,iCACA,+BACA,+BACA,+BACA,8BACA,gCACA,gCACA,8BACA,6BACA,wBACA,0BACA,+BACA,4BACA,sCACA,oCACA,mCACA,6BACA,4BACA,8BACA,+BACA,6BACA,6BACA,qBACA,qBACA,uBACA,yBACA,sBACA,iBACA,6BACA,+BACA,gCACA,gCACA,+BACA,+BACA,uBACA,0BACA,+BACA,+BACA,0BACA,4BACA,2BACA,4BACA,2BACA,0BACA,iCACA,iCACA,0BACA,yBACA,+BACA,wBACA,wBACA,yBACA,yBACA,mBACA,kCACA,uBACA,6BACA,wBACA,+BACA,wBACA,8BACA,yBACA,gCACA,2BACA,0BACA,oCACA,wBACA,2BACA,kBACA,gCACA,kCACA,qCACA,iCACA,yBACA,8BAEQA,SAAS,wCAAyC,CAC1D,4BACA,4BACA,2BACA,qBACA,qBACA,kBACA,2BACA,oBACA,2BACA,sBACA,qBACA,0BACA,4BACA,4BACA,6BACA,iCACA,iCACA,mCACA,iCACA,gCACA,gCACA,0BACA,8BACA,sBACA,uBACA,sBACA,2BACA,2BACA,4BACA,0BACA,8BAEQA,SAAS,sCAAuC,CACxD,qBACA,0BACA,2BACA,mBACA,gBACA,4BACA,yBACA,sBACA,6BACA,kBACA,8BACA,uBACA,qBACA,qBACA,mBACA,iBACA,uBACA,8BACA,6BACA,kBACA,kBACA,0BACA,gCAEQA,SAAS,iBAAkB,CACnC,QACA,SACA,gBACA,SACA,MACA,SACA,OACA,WACA,SACA,OACA,QACA,SACA,QACA,UACA,QACA,QACA,cAEQA,SAAS,iBAAkB,CACnC,kBACA,4BACA,cACA,iBACA,gBACA,uBAEQA,SAAS,kBAAmB,CACpC,MACA,aAEQA,SAAS,oBAAqB,CACtC,k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"}