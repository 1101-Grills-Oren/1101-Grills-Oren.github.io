{"version":3,"file":"vendor.67d77d99.js","sources":["../../node_modules/preact/dist/preact.module.js","../../node_modules/preact-router/dist/preact-router.es.js","../../node_modules/preact/hooks/dist/hooks.module.js","../../node_modules/@mcschema/core/lib/model/Path.js","../../node_modules/@mcschema/core/lib/model/Errors.js","../../node_modules/@mcschema/core/lib/utils.js","../../node_modules/@mcschema/core/lib/model/DataModel.js","../../node_modules/@mcschema/core/lib/nodes/Node.js","../../node_modules/@mcschema/core/lib/nodes/BooleanNode.js","../../node_modules/@mcschema/core/lib/nodes/ListNode.js","../../node_modules/@mcschema/core/lib/nodes/SwitchNode.js","../../node_modules/@mcschema/core/lib/nodes/ChoiceNode.js","../../node_modules/@mcschema/core/lib/nodes/MapNode.js","../../node_modules/@mcschema/core/lib/nodes/NumberNode.js","../../node_modules/@mcschema/core/lib/nodes/ObjectNode.js","../../node_modules/@mcschema/core/lib/nodes/Reference.js","../../node_modules/@mcschema/core/lib/nodes/StringNode.js","../../node_modules/@mcschema/core/lib/Hook.js","../../node_modules/@mcschema/core/lib/Registries.js","../../node_modules/@mcschema/core/lib/ValidationOption.js","../../node_modules/@mcschema/core/lib/index.js","../../node_modules/@mcschema/java-1.15/lib/Collections.js","../../node_modules/@mcschema/java-1.15/lib/schemas/Common.js","../../node_modules/@mcschema/java-1.15/lib/schemas/Predicates.js","../../node_modules/@mcschema/java-1.15/lib/schemas/Advancement.js","../../node_modules/@mcschema/java-1.15/lib/schemas/Condition.js","../../node_modules/@mcschema/java-1.15/lib/LootContext.js","../../node_modules/@mcschema/java-1.15/lib/schemas/LootTable.js","../../node_modules/@mcschema/java-1.15/lib/schemas/PackMcmeta.js","../../node_modules/@mcschema/java-1.15/lib/schemas/Recipe.js","../../node_modules/@mcschema/java-1.15/lib/schemas/Tags.js","../../node_modules/@mcschema/java-1.15/lib/schemas/TextComponent.js","../../node_modules/@mcschema/java-1.15/lib/schemas/index.js","../../node_modules/@mcschema/java-1.15/lib/index.js","../../node_modules/@mcschema/java-1.16/lib/Collections.js","../../node_modules/@mcschema/java-1.16/lib/schemas/Common.js","../../node_modules/@mcschema/java-1.16/lib/schemas/Advancement.js","../../node_modules/@mcschema/java-1.16/lib/schemas/Condition.js","../../node_modules/@mcschema/java-1.16/lib/schemas/Dimension.js","../../node_modules/@mcschema/java-1.16/lib/schemas/DimensionType.js","../../node_modules/@mcschema/java-1.16/lib/LootContext.js","../../node_modules/@mcschema/java-1.16/lib/schemas/LootTable.js","../../node_modules/@mcschema/java-1.16/lib/schemas/PackMcmeta.js","../../node_modules/@mcschema/java-1.16/lib/schemas/Predicates.js","../../node_modules/@mcschema/java-1.16/lib/schemas/Recipe.js","../../node_modules/@mcschema/java-1.16/lib/schemas/Tags.js","../../node_modules/@mcschema/java-1.16/lib/schemas/TextComponent.js","../../node_modules/@mcschema/java-1.16/lib/schemas/worldgen/Biome.js","../../node_modules/@mcschema/java-1.16/lib/schemas/worldgen/Carver.js","../../node_modules/@mcschema/java-1.16/lib/schemas/worldgen/Decorator.js","../../node_modules/@mcschema/java-1.16/lib/schemas/worldgen/ProcessorList.js","../../node_modules/@mcschema/java-1.16/lib/schemas/worldgen/Feature.js","../../node_modules/@mcschema/java-1.16/lib/schemas/worldgen/NoiseSettings.js","../../node_modules/@mcschema/java-1.16/lib/schemas/worldgen/StructureFeature.js","../../node_modules/@mcschema/java-1.16/lib/schemas/worldgen/SurfaceBuilder.js","../../node_modules/@mcschema/java-1.16/lib/schemas/worldgen/TemplatePool.js","../../node_modules/@mcschema/java-1.16/lib/schemas/worldgen/index.js","../../node_modules/@mcschema/java-1.16/lib/schemas/WorldSettings.js","../../node_modules/@mcschema/java-1.16/lib/schemas/index.js","../../node_modules/@mcschema/java-1.16/lib/index.js","../../node_modules/@mcschema/java-1.17/lib/Collections.js","../../node_modules/@mcschema/java-1.17/lib/schemas/Advancement.js","../../node_modules/@mcschema/java-1.17/lib/schemas/Common.js","../../node_modules/@mcschema/java-1.17/lib/schemas/Condition.js","../../node_modules/@mcschema/java-1.17/lib/schemas/Dimension.js","../../node_modules/@mcschema/java-1.17/lib/schemas/DimensionType.js","../../node_modules/@mcschema/java-1.17/lib/schemas/ItemModifier.js","../../node_modules/@mcschema/java-1.17/lib/LootContext.js","../../node_modules/@mcschema/java-1.17/lib/schemas/LootTable.js","../../node_modules/@mcschema/java-1.17/lib/schemas/PackMcmeta.js","../../node_modules/@mcschema/java-1.17/lib/schemas/Predicates.js","../../node_modules/@mcschema/java-1.17/lib/schemas/Recipe.js","../../node_modules/@mcschema/java-1.17/lib/schemas/Tags.js","../../node_modules/@mcschema/java-1.17/lib/schemas/TextComponent.js","../../node_modules/@mcschema/java-1.17/lib/schemas/worldgen/Biome.js","../../node_modules/@mcschema/java-1.17/lib/schemas/worldgen/Carver.js","../../node_modules/@mcschema/java-1.17/lib/schemas/worldgen/Decorator.js","../../node_modules/@mcschema/java-1.17/lib/schemas/worldgen/ProcessorList.js","../../node_modules/@mcschema/java-1.17/lib/schemas/worldgen/Feature.js","../../node_modules/@mcschema/java-1.17/lib/schemas/worldgen/NoiseSettings.js","../../node_modules/@mcschema/java-1.17/lib/schemas/worldgen/StructureFeature.js","../../node_modules/@mcschema/java-1.17/lib/schemas/worldgen/SurfaceBuilder.js","../../node_modules/@mcschema/java-1.17/lib/schemas/worldgen/TemplatePool.js","../../node_modules/@mcschema/java-1.17/lib/schemas/worldgen/index.js","../../node_modules/@mcschema/java-1.17/lib/schemas/WorldSettings.js","../../node_modules/@mcschema/java-1.17/lib/schemas/index.js","../../node_modules/@mcschema/java-1.17/lib/index.js","../../node_modules/@mcschema/java-1.18/lib/Collections.js","../../node_modules/@mcschema/java-1.18/lib/schemas/Advancement.js","../../node_modules/@mcschema/java-1.18/lib/schemas/Common.js","../../node_modules/@mcschema/java-1.18/lib/schemas/Condition.js","../../node_modules/@mcschema/java-1.18/lib/schemas/Dimension.js","../../node_modules/@mcschema/java-1.18/lib/schemas/DimensionType.js","../../node_modules/@mcschema/java-1.18/lib/schemas/ItemModifier.js","../../node_modules/@mcschema/java-1.18/lib/LootContext.js","../../node_modules/@mcschema/java-1.18/lib/schemas/LootTable.js","../../node_modules/@mcschema/java-1.18/lib/schemas/PackMcmeta.js","../../node_modules/@mcschema/java-1.18/lib/schemas/Predicates.js","../../node_modules/@mcschema/java-1.18/lib/schemas/Recipe.js","../../node_modules/@mcschema/java-1.18/lib/schemas/Tags.js","../../node_modules/@mcschema/java-1.18/lib/schemas/TextComponent.js","../../node_modules/@mcschema/java-1.18/lib/schemas/worldgen/Biome.js","../../node_modules/@mcschema/java-1.18/lib/schemas/worldgen/Carver.js","../../node_modules/@mcschema/java-1.18/lib/schemas/worldgen/Decorator.js","../../node_modules/@mcschema/java-1.18/lib/schemas/worldgen/ProcessorList.js","../../node_modules/@mcschema/java-1.18/lib/schemas/worldgen/Feature.js","../../node_modules/@mcschema/java-1.18/lib/schemas/worldgen/NoiseSettings.js","../../node_modules/@mcschema/java-1.18/lib/schemas/worldgen/StructureFeature.js","../../node_modules/@mcschema/java-1.18/lib/schemas/worldgen/SurfaceBuilder.js","../../node_modules/@mcschema/java-1.18/lib/schemas/worldgen/TemplatePool.js","../../node_modules/@mcschema/java-1.18/lib/schemas/worldgen/index.js","../../node_modules/@mcschema/java-1.18/lib/schemas/WorldSettings.js","../../node_modules/@mcschema/java-1.18/lib/schemas/index.js","../../node_modules/@mcschema/java-1.18/lib/index.js","../../node_modules/rfdc/index.js","../../node_modules/pako/dist/pako.esm.mjs","../../node_modules/deepslate/dist/deepslate.esm.js","../../node_modules/preact/compat/dist/compat.module.js"],"sourcesContent":["var n,l,u,i,t,o,r={},f=[],e=/acit|ex(?:s|g|n|p|$)|rph|grid|ows|mnc|ntw|ine[ch]|zoo|^ord|itera/i;function c(n,l){for(var u in l)n[u]=l[u];return n}function s(n){var l=n.parentNode;l&&l.removeChild(n)}function a(n,l,u){var i,t,o,r=arguments,f={};for(o in l)\"key\"==o?i=l[o]:\"ref\"==o?t=l[o]:f[o]=l[o];if(arguments.length>3)for(u=[u],o=3;o<arguments.length;o++)u.push(r[o]);if(null!=u&&(f.children=u),\"function\"==typeof n&&null!=n.defaultProps)for(o in n.defaultProps)void 0===f[o]&&(f[o]=n.defaultProps[o]);return v(n,f,i,t,null)}function v(l,u,i,t,o){var r={type:l,props:u,key:i,ref:t,__k:null,__:null,__b:0,__e:null,__d:void 0,__c:null,__h:null,constructor:void 0,__v:null==o?++n.__v:o};return null!=n.vnode&&n.vnode(r),r}function h(){return{current:null}}function y(n){return n.children}function p(n,l){this.props=n,this.context=l}function d(n,l){if(null==l)return n.__?d(n.__,n.__.__k.indexOf(n)+1):null;for(var u;l<n.__k.length;l++)if(null!=(u=n.__k[l])&&null!=u.__e)return u.__e;return\"function\"==typeof n.type?d(n):null}function _(n){var l,u;if(null!=(n=n.__)&&null!=n.__c){for(n.__e=n.__c.base=null,l=0;l<n.__k.length;l++)if(null!=(u=n.__k[l])&&null!=u.__e){n.__e=n.__c.base=u.__e;break}return _(n)}}function k(l){(!l.__d&&(l.__d=!0)&&u.push(l)&&!b.__r++||t!==n.debounceRendering)&&((t=n.debounceRendering)||i)(b)}function b(){for(var n;b.__r=u.length;)n=u.sort(function(n,l){return n.__v.__b-l.__v.__b}),u=[],n.some(function(n){var l,u,i,t,o,r;n.__d&&(o=(t=(l=n).__v).__e,(r=l.__P)&&(u=[],(i=c({},t)).__v=t.__v+1,I(r,t,i,l.__n,void 0!==r.ownerSVGElement,null!=t.__h?[o]:null,u,null==o?d(t):o,t.__h),T(u,t),t.__e!=o&&_(t)))})}function m(n,l,u,i,t,o,e,c,s,a){var h,p,_,k,b,m,w,A=i&&i.__k||f,P=A.length;for(u.__k=[],h=0;h<l.length;h++)if(null!=(k=u.__k[h]=null==(k=l[h])||\"boolean\"==typeof k?null:\"string\"==typeof k||\"number\"==typeof k||\"bigint\"==typeof k?v(null,k,null,null,k):Array.isArray(k)?v(y,{children:k},null,null,null):k.__b>0?v(k.type,k.props,k.key,null,k.__v):k)){if(k.__=u,k.__b=u.__b+1,null===(_=A[h])||_&&k.key==_.key&&k.type===_.type)A[h]=void 0;else for(p=0;p<P;p++){if((_=A[p])&&k.key==_.key&&k.type===_.type){A[p]=void 0;break}_=null}I(n,k,_=_||r,t,o,e,c,s,a),b=k.__e,(p=k.ref)&&_.ref!=p&&(w||(w=[]),_.ref&&w.push(_.ref,null,k),w.push(p,k.__c||b,k)),null!=b?(null==m&&(m=b),\"function\"==typeof k.type&&null!=k.__k&&k.__k===_.__k?k.__d=s=g(k,s,n):s=x(n,k,_,A,b,s),a||\"option\"!==u.type?\"function\"==typeof u.type&&(u.__d=s):n.value=\"\"):s&&_.__e==s&&s.parentNode!=n&&(s=d(_))}for(u.__e=m,h=P;h--;)null!=A[h]&&(\"function\"==typeof u.type&&null!=A[h].__e&&A[h].__e==u.__d&&(u.__d=d(i,h+1)),L(A[h],A[h]));if(w)for(h=0;h<w.length;h++)z(w[h],w[++h],w[++h])}function g(n,l,u){var i,t;for(i=0;i<n.__k.length;i++)(t=n.__k[i])&&(t.__=n,l=\"function\"==typeof t.type?g(t,l,u):x(u,t,t,n.__k,t.__e,l));return l}function w(n,l){return l=l||[],null==n||\"boolean\"==typeof n||(Array.isArray(n)?n.some(function(n){w(n,l)}):l.push(n)),l}function x(n,l,u,i,t,o){var r,f,e;if(void 0!==l.__d)r=l.__d,l.__d=void 0;else if(null==u||t!=o||null==t.parentNode)n:if(null==o||o.parentNode!==n)n.appendChild(t),r=null;else{for(f=o,e=0;(f=f.nextSibling)&&e<i.length;e+=2)if(f==t)break n;n.insertBefore(t,o),r=o}return void 0!==r?r:t.nextSibling}function A(n,l,u,i,t){var o;for(o in u)\"children\"===o||\"key\"===o||o in l||C(n,o,null,u[o],i);for(o in l)t&&\"function\"!=typeof l[o]||\"children\"===o||\"key\"===o||\"value\"===o||\"checked\"===o||u[o]===l[o]||C(n,o,l[o],u[o],i)}function P(n,l,u){\"-\"===l[0]?n.setProperty(l,u):n[l]=null==u?\"\":\"number\"!=typeof u||e.test(l)?u:u+\"px\"}function C(n,l,u,i,t){var o;n:if(\"style\"===l)if(\"string\"==typeof u)n.style.cssText=u;else{if(\"string\"==typeof i&&(n.style.cssText=i=\"\"),i)for(l in i)u&&l in u||P(n.style,l,\"\");if(u)for(l in u)i&&u[l]===i[l]||P(n.style,l,u[l])}else if(\"o\"===l[0]&&\"n\"===l[1])o=l!==(l=l.replace(/Capture$/,\"\")),l=l.toLowerCase()in n?l.toLowerCase().slice(2):l.slice(2),n.l||(n.l={}),n.l[l+o]=u,u?i||n.addEventListener(l,o?H:$,o):n.removeEventListener(l,o?H:$,o);else if(\"dangerouslySetInnerHTML\"!==l){if(t)l=l.replace(/xlink[H:h]/,\"h\").replace(/sName$/,\"s\");else if(\"href\"!==l&&\"list\"!==l&&\"form\"!==l&&\"tabIndex\"!==l&&\"download\"!==l&&l in n)try{n[l]=null==u?\"\":u;break n}catch(n){}\"function\"==typeof u||(null!=u&&(!1!==u||\"a\"===l[0]&&\"r\"===l[1])?n.setAttribute(l,u):n.removeAttribute(l))}}function $(l){this.l[l.type+!1](n.event?n.event(l):l)}function H(l){this.l[l.type+!0](n.event?n.event(l):l)}function I(l,u,i,t,o,r,f,e,s){var a,v,h,d,_,k,b,g,w,x,A,P=u.type;if(void 0!==u.constructor)return null;null!=i.__h&&(s=i.__h,e=u.__e=i.__e,u.__h=null,r=[e]),(a=n.__b)&&a(u);try{n:if(\"function\"==typeof P){if(g=u.props,w=(a=P.contextType)&&t[a.__c],x=a?w?w.props.value:a.__:t,i.__c?b=(v=u.__c=i.__c).__=v.__E:(\"prototype\"in P&&P.prototype.render?u.__c=v=new P(g,x):(u.__c=v=new p(g,x),v.constructor=P,v.render=M),w&&w.sub(v),v.props=g,v.state||(v.state={}),v.context=x,v.__n=t,h=v.__d=!0,v.__h=[]),null==v.__s&&(v.__s=v.state),null!=P.getDerivedStateFromProps&&(v.__s==v.state&&(v.__s=c({},v.__s)),c(v.__s,P.getDerivedStateFromProps(g,v.__s))),d=v.props,_=v.state,h)null==P.getDerivedStateFromProps&&null!=v.componentWillMount&&v.componentWillMount(),null!=v.componentDidMount&&v.__h.push(v.componentDidMount);else{if(null==P.getDerivedStateFromProps&&g!==d&&null!=v.componentWillReceiveProps&&v.componentWillReceiveProps(g,x),!v.__e&&null!=v.shouldComponentUpdate&&!1===v.shouldComponentUpdate(g,v.__s,x)||u.__v===i.__v){v.props=g,v.state=v.__s,u.__v!==i.__v&&(v.__d=!1),v.__v=u,u.__e=i.__e,u.__k=i.__k,u.__k.forEach(function(n){n&&(n.__=u)}),v.__h.length&&f.push(v);break n}null!=v.componentWillUpdate&&v.componentWillUpdate(g,v.__s,x),null!=v.componentDidUpdate&&v.__h.push(function(){v.componentDidUpdate(d,_,k)})}v.context=x,v.props=g,v.state=v.__s,(a=n.__r)&&a(u),v.__d=!1,v.__v=u,v.__P=l,a=v.render(v.props,v.state,v.context),v.state=v.__s,null!=v.getChildContext&&(t=c(c({},t),v.getChildContext())),h||null==v.getSnapshotBeforeUpdate||(k=v.getSnapshotBeforeUpdate(d,_)),A=null!=a&&a.type===y&&null==a.key?a.props.children:a,m(l,Array.isArray(A)?A:[A],u,i,t,o,r,f,e,s),v.base=u.__e,u.__h=null,v.__h.length&&f.push(v),b&&(v.__E=v.__=null),v.__e=!1}else null==r&&u.__v===i.__v?(u.__k=i.__k,u.__e=i.__e):u.__e=j(i.__e,u,i,t,o,r,f,s);(a=n.diffed)&&a(u)}catch(l){u.__v=null,(s||null!=r)&&(u.__e=e,u.__h=!!s,r[r.indexOf(e)]=null),n.__e(l,u,i)}}function T(l,u){n.__c&&n.__c(u,l),l.some(function(u){try{l=u.__h,u.__h=[],l.some(function(n){n.call(u)})}catch(l){n.__e(l,u.__v)}})}function j(n,l,u,i,t,o,e,c){var a,v,h,y,p=u.props,d=l.props,_=l.type,k=0;if(\"svg\"===_&&(t=!0),null!=o)for(;k<o.length;k++)if((a=o[k])&&(a===n||(_?a.localName==_:3==a.nodeType))){n=a,o[k]=null;break}if(null==n){if(null===_)return document.createTextNode(d);n=t?document.createElementNS(\"http://www.w3.org/2000/svg\",_):document.createElement(_,d.is&&d),o=null,c=!1}if(null===_)p===d||c&&n.data===d||(n.data=d);else{if(o=o&&f.slice.call(n.childNodes),v=(p=u.props||r).dangerouslySetInnerHTML,h=d.dangerouslySetInnerHTML,!c){if(null!=o)for(p={},y=0;y<n.attributes.length;y++)p[n.attributes[y].name]=n.attributes[y].value;(h||v)&&(h&&(v&&h.__html==v.__html||h.__html===n.innerHTML)||(n.innerHTML=h&&h.__html||\"\"))}if(A(n,d,p,t,c),h)l.__k=[];else if(k=l.props.children,m(n,Array.isArray(k)?k:[k],l,u,i,t&&\"foreignObject\"!==_,o,e,n.firstChild,c),null!=o)for(k=o.length;k--;)null!=o[k]&&s(o[k]);c||(\"value\"in d&&void 0!==(k=d.value)&&(k!==n.value||\"progress\"===_&&!k)&&C(n,\"value\",k,p.value,!1),\"checked\"in d&&void 0!==(k=d.checked)&&k!==n.checked&&C(n,\"checked\",k,p.checked,!1))}return n}function z(l,u,i){try{\"function\"==typeof l?l(u):l.current=u}catch(l){n.__e(l,i)}}function L(l,u,i){var t,o,r;if(n.unmount&&n.unmount(l),(t=l.ref)&&(t.current&&t.current!==l.__e||z(t,null,u)),i||\"function\"==typeof l.type||(i=null!=(o=l.__e)),l.__e=l.__d=void 0,null!=(t=l.__c)){if(t.componentWillUnmount)try{t.componentWillUnmount()}catch(l){n.__e(l,u)}t.base=t.__P=null}if(t=l.__k)for(r=0;r<t.length;r++)t[r]&&L(t[r],u,i);null!=o&&s(o)}function M(n,l,u){return this.constructor(n,u)}function N(l,u,i){var t,o,e;n.__&&n.__(l,u),o=(t=\"function\"==typeof i)?null:i&&i.__k||u.__k,e=[],I(u,l=(!t&&i||u).__k=a(y,null,[l]),o||r,r,void 0!==u.ownerSVGElement,!t&&i?[i]:o?null:u.firstChild?f.slice.call(u.childNodes):null,e,!t&&i?i:o?o.__e:u.firstChild,t),T(e,l)}function O(n,l){N(n,l,O)}function S(n,l,u){var i,t,o,r=arguments,f=c({},n.props);for(o in l)\"key\"==o?i=l[o]:\"ref\"==o?t=l[o]:f[o]=l[o];if(arguments.length>3)for(u=[u],o=3;o<arguments.length;o++)u.push(r[o]);return null!=u&&(f.children=u),v(n.type,f,i||n.key,t||n.ref,null)}function q(n,l){var u={__c:l=\"__cC\"+o++,__:n,Consumer:function(n,l){return n.children(l)},Provider:function(n){var u,i;return this.getChildContext||(u=[],(i={})[l]=this,this.getChildContext=function(){return i},this.shouldComponentUpdate=function(n){this.props.value!==n.value&&u.some(k)},this.sub=function(n){u.push(n);var l=n.componentWillUnmount;n.componentWillUnmount=function(){u.splice(u.indexOf(n),1),l&&l.call(n)}}),n.children}};return u.Provider.__=u.Consumer.contextType=u}n={__e:function(n,l){for(var u,i,t;l=l.__;)if((u=l.__c)&&!u.__)try{if((i=u.constructor)&&null!=i.getDerivedStateFromError&&(u.setState(i.getDerivedStateFromError(n)),t=u.__d),null!=u.componentDidCatch&&(u.componentDidCatch(n),t=u.__d),t)return u.__E=u}catch(l){n=l}throw n},__v:0},l=function(n){return null!=n&&void 0===n.constructor},p.prototype.setState=function(n,l){var u;u=null!=this.__s&&this.__s!==this.state?this.__s:this.__s=c({},this.state),\"function\"==typeof n&&(n=n(c({},u),this.props)),n&&c(u,n),null!=n&&this.__v&&(l&&this.__h.push(l),k(this))},p.prototype.forceUpdate=function(n){this.__v&&(this.__e=!0,n&&this.__h.push(n),k(this))},p.prototype.render=y,u=[],i=\"function\"==typeof Promise?Promise.prototype.then.bind(Promise.resolve()):setTimeout,b.__r=0,o=0;export{N as render,O as hydrate,a as createElement,a as h,y as Fragment,h as createRef,l as isValidElement,p as Component,S as cloneElement,q as createContext,w as toChildArray,n as options};\n//# sourceMappingURL=preact.module.js.map\n","import { Component, cloneElement, createElement, toChildArray } from 'preact';\n\nvar EMPTY$1 = {};\n\nfunction assign(obj, props) {\n\t// eslint-disable-next-line guard-for-in\n\tfor (var i in props) {\n\t\tobj[i] = props[i];\n\t}\n\treturn obj;\n}\n\nfunction exec(url, route, opts) {\n\tvar reg = /(?:\\?([^#]*))?(#.*)?$/,\n\t\tc = url.match(reg),\n\t\tmatches = {},\n\t\tret;\n\tif (c && c[1]) {\n\t\tvar p = c[1].split('&');\n\t\tfor (var i=0; i<p.length; i++) {\n\t\t\tvar r = p[i].split('=');\n\t\t\tmatches[decodeURIComponent(r[0])] = decodeURIComponent(r.slice(1).join('='));\n\t\t}\n\t}\n\turl = segmentize(url.replace(reg, ''));\n\troute = segmentize(route || '');\n\tvar max = Math.max(url.length, route.length);\n\tfor (var i$1=0; i$1<max; i$1++) {\n\t\tif (route[i$1] && route[i$1].charAt(0)===':') {\n\t\t\tvar param = route[i$1].replace(/(^:|[+*?]+$)/g, ''),\n\t\t\t\tflags = (route[i$1].match(/[+*?]+$/) || EMPTY$1)[0] || '',\n\t\t\t\tplus = ~flags.indexOf('+'),\n\t\t\t\tstar = ~flags.indexOf('*'),\n\t\t\t\tval = url[i$1] || '';\n\t\t\tif (!val && !star && (flags.indexOf('?')<0 || plus)) {\n\t\t\t\tret = false;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tmatches[param] = decodeURIComponent(val);\n\t\t\tif (plus || star) {\n\t\t\t\tmatches[param] = url.slice(i$1).map(decodeURIComponent).join('/');\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\telse if (route[i$1]!==url[i$1]) {\n\t\t\tret = false;\n\t\t\tbreak;\n\t\t}\n\t}\n\tif (opts.default!==true && ret===false) { return false; }\n\treturn matches;\n}\n\nfunction pathRankSort(a, b) {\n\treturn (\n\t\t(a.rank < b.rank) ? 1 :\n\t\t\t(a.rank > b.rank) ? -1 :\n\t\t\t\t(a.index - b.index)\n\t);\n}\n\n// filter out VNodes without attributes (which are unrankeable), and add `index`/`rank` properties to be used in sorting.\nfunction prepareVNodeForRanking(vnode, index) {\n\tvnode.index = index;\n\tvnode.rank = rankChild(vnode);\n\treturn vnode.props;\n}\n\nfunction segmentize(url) {\n\treturn url.replace(/(^\\/+|\\/+$)/g, '').split('/');\n}\n\nfunction rankSegment(segment) {\n\treturn segment.charAt(0)==':' ? (1 + '*+?'.indexOf(segment.charAt(segment.length-1))) || 4 : 5;\n}\n\nfunction rank(path) {\n\treturn segmentize(path).map(rankSegment).join('');\n}\n\nfunction rankChild(vnode) {\n\treturn vnode.props.default ? 0 : rank(vnode.props.path);\n}\n\nvar customHistory = null;\n\nvar ROUTERS = [];\n\nvar subscribers = [];\n\nvar EMPTY = {};\n\nfunction setUrl(url, type) {\n\tif ( type === void 0 ) type='push';\n\n\tif (customHistory && customHistory[type]) {\n\t\tcustomHistory[type](url);\n\t}\n\telse if (typeof history!=='undefined' && history[type+'State']) {\n\t\thistory[type+'State'](null, null, url);\n\t}\n}\n\n\nfunction getCurrentUrl() {\n\tvar url;\n\tif (customHistory && customHistory.location) {\n\t\turl = customHistory.location;\n\t}\n\telse if (customHistory && customHistory.getCurrentLocation) {\n\t\turl = customHistory.getCurrentLocation();\n\t}\n\telse {\n\t\turl = typeof location!=='undefined' ? location : EMPTY;\n\t}\n\treturn (\"\" + (url.pathname || '') + (url.search || ''));\n}\n\n\n\nfunction route(url, replace) {\n\tif ( replace === void 0 ) replace=false;\n\n\tif (typeof url!=='string' && url.url) {\n\t\treplace = url.replace;\n\t\turl = url.url;\n\t}\n\n\t// only push URL into history if we can handle it\n\tif (canRoute(url)) {\n\t\tsetUrl(url, replace ? 'replace' : 'push');\n\t}\n\n\treturn routeTo(url);\n}\n\n\n/** Check if the given URL can be handled by any router instances. */\nfunction canRoute(url) {\n\tfor (var i=ROUTERS.length; i--; ) {\n\t\tif (ROUTERS[i].canRoute(url)) { return true; }\n\t}\n\treturn false;\n}\n\n\n/** Tell all router instances to handle the given URL.  */\nfunction routeTo(url) {\n\tvar didRoute = false;\n\tfor (var i=0; i<ROUTERS.length; i++) {\n\t\tif (ROUTERS[i].routeTo(url)===true) {\n\t\t\tdidRoute = true;\n\t\t}\n\t}\n\tfor (var i$1=subscribers.length; i$1--; ) {\n\t\tsubscribers[i$1](url);\n\t}\n\treturn didRoute;\n}\n\n\nfunction routeFromLink(node) {\n\t// only valid elements\n\tif (!node || !node.getAttribute) { return; }\n\n\tvar href = node.getAttribute('href'),\n\t\ttarget = node.getAttribute('target');\n\n\t// ignore links with targets and non-path URLs\n\tif (!href || !href.match(/^\\//g) || (target && !target.match(/^_?self$/i))) { return; }\n\n\t// attempt to route, if no match simply cede control to browser\n\treturn route(href);\n}\n\n\nfunction handleLinkClick(e) {\n\tif (e.ctrlKey || e.metaKey || e.altKey || e.shiftKey || e.button!==0) { return; }\n\trouteFromLink(e.currentTarget || e.target || this);\n\treturn prevent(e);\n}\n\n\nfunction prevent(e) {\n\tif (e) {\n\t\tif (e.stopImmediatePropagation) { e.stopImmediatePropagation(); }\n\t\tif (e.stopPropagation) { e.stopPropagation(); }\n\t\te.preventDefault();\n\t}\n\treturn false;\n}\n\n\nfunction delegateLinkHandler(e) {\n\t// ignore events the browser takes care of already:\n\tif (e.ctrlKey || e.metaKey || e.altKey || e.shiftKey || e.button!==0) { return; }\n\n\tvar t = e.target;\n\tdo {\n\t\tif (String(t.nodeName).toUpperCase()==='A' && t.getAttribute('href')) {\n\t\t\tif (t.hasAttribute('native')) { return; }\n\t\t\t// if link is handled by the router, prevent browser defaults\n\t\t\tif (routeFromLink(t)) {\n\t\t\t\treturn prevent(e);\n\t\t\t}\n\t\t}\n\t} while ((t=t.parentNode));\n}\n\n\nvar eventListenersInitialized = false;\n\nfunction initEventListeners() {\n\tif (eventListenersInitialized) { return; }\n\n\tif (typeof addEventListener==='function') {\n\t\tif (!customHistory) {\n\t\t\taddEventListener('popstate', function () {\n\t\t\t\trouteTo(getCurrentUrl());\n\t\t\t});\n\t\t}\n\t\taddEventListener('click', delegateLinkHandler);\n\t}\n\teventListenersInitialized = true;\n}\n\n\nvar Router = (function (Component$$1) {\n\tfunction Router(props) {\n\t\tComponent$$1.call(this, props);\n\t\tif (props.history) {\n\t\t\tcustomHistory = props.history;\n\t\t}\n\n\t\tthis.state = {\n\t\t\turl: props.url || getCurrentUrl()\n\t\t};\n\n\t\tinitEventListeners();\n\t}\n\n\tif ( Component$$1 ) Router.__proto__ = Component$$1;\n\tRouter.prototype = Object.create( Component$$1 && Component$$1.prototype );\n\tRouter.prototype.constructor = Router;\n\n\tRouter.prototype.shouldComponentUpdate = function shouldComponentUpdate (props) {\n\t\tif (props.static!==true) { return true; }\n\t\treturn props.url!==this.props.url || props.onChange!==this.props.onChange;\n\t};\n\n\t/** Check if the given URL can be matched against any children */\n\tRouter.prototype.canRoute = function canRoute (url) {\n\t\tvar children = toChildArray(this.props.children);\n\t\treturn this.getMatchingChildren(children, url, false).length > 0;\n\t};\n\n\t/** Re-render children with a new URL to match against. */\n\tRouter.prototype.routeTo = function routeTo (url) {\n\t\tthis.setState({ url: url });\n\n\t\tvar didRoute = this.canRoute(url);\n\n\t\t// trigger a manual re-route if we're not in the middle of an update:\n\t\tif (!this.updating) { this.forceUpdate(); }\n\n\t\treturn didRoute;\n\t};\n\n\tRouter.prototype.componentWillMount = function componentWillMount () {\n\t\tROUTERS.push(this);\n\t\tthis.updating = true;\n\t};\n\n\tRouter.prototype.componentDidMount = function componentDidMount () {\n\t\tvar this$1 = this;\n\n\t\tif (customHistory) {\n\t\t\tthis.unlisten = customHistory.listen(function (location) {\n\t\t\t\tthis$1.routeTo((\"\" + (location.pathname || '') + (location.search || '')));\n\t\t\t});\n\t\t}\n\t\tthis.updating = false;\n\t};\n\n\tRouter.prototype.componentWillUnmount = function componentWillUnmount () {\n\t\tif (typeof this.unlisten==='function') { this.unlisten(); }\n\t\tROUTERS.splice(ROUTERS.indexOf(this), 1);\n\t};\n\n\tRouter.prototype.componentWillUpdate = function componentWillUpdate () {\n\t\tthis.updating = true;\n\t};\n\n\tRouter.prototype.componentDidUpdate = function componentDidUpdate () {\n\t\tthis.updating = false;\n\t};\n\n\tRouter.prototype.getMatchingChildren = function getMatchingChildren (children, url, invoke) {\n\t\treturn children\n\t\t\t.filter(prepareVNodeForRanking)\n\t\t\t.sort(pathRankSort)\n\t\t\t.map( function (vnode) {\n\t\t\t\tvar matches = exec(url, vnode.props.path, vnode.props);\n\t\t\t\tif (matches) {\n\t\t\t\t\tif (invoke !== false) {\n\t\t\t\t\t\tvar newProps = { url: url, matches: matches };\n\t\t\t\t\t\tassign(newProps, matches);\n\t\t\t\t\t\tdelete newProps.ref;\n\t\t\t\t\t\tdelete newProps.key;\n\t\t\t\t\t\treturn cloneElement(vnode, newProps);\n\t\t\t\t\t}\n\t\t\t\t\treturn vnode;\n\t\t\t\t}\n\t\t\t}).filter(Boolean);\n\t};\n\n\tRouter.prototype.render = function render (ref, ref$1) {\n\t\tvar children = ref.children;\n\t\tvar onChange = ref.onChange;\n\t\tvar url = ref$1.url;\n\n\t\tvar active = this.getMatchingChildren(toChildArray(children), url, true);\n\n\t\tvar current = active[0] || null;\n\n\t\tvar previous = this.previousUrl;\n\t\tif (url!==previous) {\n\t\t\tthis.previousUrl = url;\n\t\t\tif (typeof onChange==='function') {\n\t\t\t\tonChange({\n\t\t\t\t\trouter: this,\n\t\t\t\t\turl: url,\n\t\t\t\t\tprevious: previous,\n\t\t\t\t\tactive: active,\n\t\t\t\t\tcurrent: current\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\treturn current;\n\t};\n\n\treturn Router;\n}(Component));\n\nvar Link = function (props) { return (\n\tcreateElement('a', assign({ onClick: handleLinkClick }, props))\n); };\n\nvar Route = function (props) { return createElement(props.component, props); };\n\nRouter.subscribers = subscribers;\nRouter.getCurrentUrl = getCurrentUrl;\nRouter.route = route;\nRouter.Router = Router;\nRouter.Route = Route;\nRouter.Link = Link;\nRouter.exec = exec;\n\nexport { subscribers, getCurrentUrl, route, Router, Route, Link, exec };export default Router;\n//# sourceMappingURL=preact-router.es.js.map\n","import{options as n}from\"preact\";var t,u,r,o=0,i=[],c=n.__b,f=n.__r,e=n.diffed,a=n.__c,v=n.unmount;function m(t,r){n.__h&&n.__h(u,t,o||r),o=0;var i=u.__H||(u.__H={__:[],__h:[]});return t>=i.__.length&&i.__.push({}),i.__[t]}function l(n){return o=1,p(w,n)}function p(n,r,o){var i=m(t++,2);return i.t=n,i.__c||(i.__=[o?o(r):w(void 0,r),function(n){var t=i.t(i.__[0],n);i.__[0]!==t&&(i.__=[t,i.__[1]],i.__c.setState({}))}],i.__c=u),i.__}function y(r,o){var i=m(t++,3);!n.__s&&k(i.__H,o)&&(i.__=r,i.__H=o,u.__H.__h.push(i))}function h(r,o){var i=m(t++,4);!n.__s&&k(i.__H,o)&&(i.__=r,i.__H=o,u.__h.push(i))}function s(n){return o=5,d(function(){return{current:n}},[])}function _(n,t,u){o=6,h(function(){\"function\"==typeof n?n(t()):n&&(n.current=t())},null==u?u:u.concat(n))}function d(n,u){var r=m(t++,7);return k(r.__H,u)&&(r.__=n(),r.__H=u,r.__h=n),r.__}function A(n,t){return o=8,d(function(){return n},t)}function F(n){var r=u.context[n.__c],o=m(t++,9);return o.__c=n,r?(null==o.__&&(o.__=!0,r.sub(u)),r.props.value):n.__}function T(t,u){n.useDebugValue&&n.useDebugValue(u?u(t):t)}function q(n){var r=m(t++,10),o=l();return r.__=n,u.componentDidCatch||(u.componentDidCatch=function(n){r.__&&r.__(n),o[1](n)}),[o[0],function(){o[1](void 0)}]}function x(){i.forEach(function(t){if(t.__P)try{t.__H.__h.forEach(g),t.__H.__h.forEach(j),t.__H.__h=[]}catch(u){t.__H.__h=[],n.__e(u,t.__v)}}),i=[]}n.__b=function(n){u=null,c&&c(n)},n.__r=function(n){f&&f(n),t=0;var r=(u=n.__c).__H;r&&(r.__h.forEach(g),r.__h.forEach(j),r.__h=[])},n.diffed=function(t){e&&e(t);var o=t.__c;o&&o.__H&&o.__H.__h.length&&(1!==i.push(o)&&r===n.requestAnimationFrame||((r=n.requestAnimationFrame)||function(n){var t,u=function(){clearTimeout(r),b&&cancelAnimationFrame(t),setTimeout(n)},r=setTimeout(u,100);b&&(t=requestAnimationFrame(u))})(x)),u=void 0},n.__c=function(t,u){u.some(function(t){try{t.__h.forEach(g),t.__h=t.__h.filter(function(n){return!n.__||j(n)})}catch(r){u.some(function(n){n.__h&&(n.__h=[])}),u=[],n.__e(r,t.__v)}}),a&&a(t,u)},n.unmount=function(t){v&&v(t);var u=t.__c;if(u&&u.__H)try{u.__H.__.forEach(g)}catch(t){n.__e(t,u.__v)}};var b=\"function\"==typeof requestAnimationFrame;function g(n){var t=u;\"function\"==typeof n.__c&&n.__c(),u=t}function j(n){var t=u;n.__c=n.__(),u=t}function k(n,t){return!n||n.length!==t.length||t.some(function(t,u){return t!==n[u]})}function w(n,t){return\"function\"==typeof t?t(n):t}export{l as useState,p as useReducer,y as useEffect,h as useLayoutEffect,s as useRef,_ as useImperativeHandle,d as useMemo,A as useCallback,F as useContext,T as useDebugValue,q as useErrorBoundary};\n//# sourceMappingURL=hooks.module.js.map\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.ModelPath = exports.Path = exports.relativePath = void 0;\r\nfunction relativePath(start, relativePath) {\r\n    return relativePath.reduce((path, e) => {\r\n        if (e === 'pop') {\r\n            return path.pop();\r\n        }\r\n        else {\r\n            return path.push(e.push);\r\n        }\r\n    }, start);\r\n}\r\nexports.relativePath = relativePath;\r\n/**\r\n * Immutable helper class to represent a path in data\r\n */\r\nclass Path {\r\n    /**\r\n     * @param modelArr Initial array of path model elements. Empty if not given\r\n     * @param contextArr Initial array of path context elements. Empty if not given\r\n     */\r\n    constructor(modelArr, contextArr) {\r\n        this.modelArr = modelArr !== null && modelArr !== void 0 ? modelArr : [];\r\n        this.contextArr = contextArr !== null && contextArr !== void 0 ? contextArr : [];\r\n    }\r\n    /**\r\n     * The last model element of this path\r\n     */\r\n    last() {\r\n        return this.modelArr[this.modelArr.length - 1];\r\n    }\r\n    /**\r\n     * A new path with the specific sliced module elements\r\n     */\r\n    slice(start, end) {\r\n        return new Path(this.modelArr.slice(start, end), this.contextArr);\r\n    }\r\n    /**\r\n     * A new path with the first model element removed\r\n     */\r\n    shift() {\r\n        return new Path(this.modelArr.slice(1), this.contextArr);\r\n    }\r\n    /**\r\n     * A new path with the last model element removed\r\n     */\r\n    pop() {\r\n        return new Path(this.modelArr.slice(0, -1), this.contextArr);\r\n    }\r\n    /**\r\n     * A new path with an element added at the end\r\n     * @param element element to push at the end of the array\r\n     */\r\n    push(element) {\r\n        return this.modelPush(element).contextPush(element);\r\n    }\r\n    /**\r\n     * Push an element exclusivly to the model array\r\n     * @param element\r\n     */\r\n    modelPush(element) {\r\n        return new Path([...this.modelArr, element], [...this.contextArr]);\r\n    }\r\n    /**\r\n     * Push an element exclusivly to the context array\r\n     * @param element\r\n     */\r\n    contextPush(element) {\r\n        if (typeof element === 'number')\r\n            return this.copy();\r\n        const newElement = element.startsWith('minecraft:') ? element.slice(10) : element;\r\n        return new Path([...this.modelArr], [...this.contextArr, newElement]);\r\n    }\r\n    copy() {\r\n        return new Path([...this.modelArr], [...this.contextArr]);\r\n    }\r\n    getArray() {\r\n        return this.modelArr;\r\n    }\r\n    /**\r\n     * Attaches a model to this path and all paths created from this\r\n     * @param model\r\n     */\r\n    withModel(model) {\r\n        return new ModelPath(model, this);\r\n    }\r\n    getContext() {\r\n        return this.contextArr;\r\n    }\r\n    /**\r\n     * Checks path equality\r\n     * @param other path to compare\r\n     */\r\n    equals(other) {\r\n        return other.modelArr.length === this.modelArr.length\r\n            && other.modelArr.every((v, i) => v === this.modelArr[i]);\r\n    }\r\n    /**\r\n     * Checks if this path starts with another path\r\n     * @param other path that this path should start with\r\n     */\r\n    startsWith(other) {\r\n        if (this.modelArr.length < other.modelArr.length)\r\n            return false;\r\n        return other.modelArr.every((v, i) => v === this.modelArr[i]);\r\n    }\r\n    /**\r\n     * Checks if this path ends with another path\r\n     * @param other parent path where this path should end with\r\n     */\r\n    endsWith(other) {\r\n        const offset = this.modelArr.length - other.modelArr.length;\r\n        if (offset < 0)\r\n            return false;\r\n        return other.modelArr.every((v, i) => v === this.modelArr[offset + i]);\r\n    }\r\n    toString() {\r\n        return this.modelArr\r\n            .map(e => (typeof e === 'string') ? `.${e}` : `[${e}]`)\r\n            .join('')\r\n            .replace(/^\\./, '');\r\n    }\r\n    forEach(fn, thisArg) {\r\n        return this.modelArr.forEach(fn, thisArg);\r\n    }\r\n}\r\nexports.Path = Path;\r\nclass ModelPath extends Path {\r\n    constructor(model, path) {\r\n        super(path === null || path === void 0 ? void 0 : path.modelArr, path === null || path === void 0 ? void 0 : path.contextArr);\r\n        this.model = model;\r\n    }\r\n    getModel() {\r\n        return this.model;\r\n    }\r\n    /**\r\n     * Gets the data from the model if it was attached\r\n     * @returns undefined, if no model was attached\r\n     */\r\n    get() {\r\n        var _a;\r\n        return (_a = this.model) === null || _a === void 0 ? void 0 : _a.get(this);\r\n    }\r\n    /**\r\n     * Sets the value to the model if it was attached\r\n     */\r\n    set(value) {\r\n        var _a;\r\n        (_a = this.model) === null || _a === void 0 ? void 0 : _a.set(this, value);\r\n    }\r\n    /**\r\n     * A new path with the specific sliced module elements\r\n     */\r\n    slice(start, end) {\r\n        return new ModelPath(this.model, super.slice(start, end));\r\n    }\r\n    /**\r\n     * A new path with the first model element removed\r\n     */\r\n    shift() {\r\n        return new ModelPath(this.model, super.shift());\r\n    }\r\n    /**\r\n     * A new path with the last model element removed\r\n     */\r\n    pop() {\r\n        return new ModelPath(this.model, super.pop());\r\n    }\r\n    /**\r\n     * A new path with an element added at the end\r\n     * @param element element to push at the end of the array\r\n     */\r\n    push(element) {\r\n        return this.modelPush(element).contextPush(element);\r\n    }\r\n    /**\r\n     * Push an element exclusivly to the model array\r\n     * @param element\r\n     */\r\n    modelPush(element) {\r\n        return new ModelPath(this.model, super.modelPush(element));\r\n    }\r\n    /**\r\n     * Push an element exclusivly to the context array\r\n     * @param element\r\n     */\r\n    contextPush(element) {\r\n        return new ModelPath(this.model, super.contextPush(element));\r\n    }\r\n    copy() {\r\n        return new ModelPath(this.model, super.copy());\r\n    }\r\n}\r\nexports.ModelPath = ModelPath;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Errors = void 0;\r\n/**\r\n * Collects errors from data paths\r\n */\r\nclass Errors {\r\n    constructor() {\r\n        this.errors = [];\r\n    }\r\n    add(path, error, ...params) {\r\n        this.errors.push({ path, error, params });\r\n        return false;\r\n    }\r\n    get(path, exact = false) {\r\n        return exact ? this.errors.filter(e => e.path.equals(path))\r\n            : this.errors.filter(e => e.path.startsWith(path));\r\n    }\r\n    getAll() {\r\n        return this.errors;\r\n    }\r\n    clear() {\r\n        this.errors = [];\r\n    }\r\n    count() {\r\n        return this.errors.length;\r\n    }\r\n    *[Symbol.iterator]() {\r\n        for (const e of this.errors) {\r\n            yield e;\r\n        }\r\n    }\r\n}\r\nexports.Errors = Errors;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.hexId = exports.quoteString = exports.escapeString = void 0;\r\nfunction escapeString(str) {\r\n    return str.replace(/(\\\\|\")/g, '\\\\$1');\r\n}\r\nexports.escapeString = escapeString;\r\nfunction quoteString(str) {\r\n    return `\"${escapeString(str)}\"`;\r\n}\r\nexports.quoteString = quoteString;\r\nconst dec2hex = (dec) => ('0' + dec.toString(16)).substr(-2);\r\nfunction hexId(length = 12) {\r\n    var arr = new Uint8Array(length / 2);\r\n    window.crypto.getRandomValues(arr);\r\n    return Array.from(arr, dec2hex).join('');\r\n}\r\nexports.hexId = hexId;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.DataModel = void 0;\r\nconst Path_1 = require(\"./Path\");\r\nconst Errors_1 = require(\"./Errors\");\r\nconst utils_1 = require(\"../utils\");\r\n/**\r\n * Holding the data linked to a given schema\r\n */\r\nclass DataModel {\r\n    /**\r\n     * @param schema node to use as schema for this model\r\n     */\r\n    constructor(schema, options) {\r\n        var _a, _b, _c, _d;\r\n        this.historyMax = (_a = options === null || options === void 0 ? void 0 : options.historyMax) !== null && _a !== void 0 ? _a : 50;\r\n        this.verbose = (_b = options === null || options === void 0 ? void 0 : options.verbose) !== null && _b !== void 0 ? _b : false;\r\n        this.wrapLists = (_c = options === null || options === void 0 ? void 0 : options.wrapLists) !== null && _c !== void 0 ? _c : false;\r\n        this.schema = schema;\r\n        const data = (_d = options === null || options === void 0 ? void 0 : options.initialData) !== null && _d !== void 0 ? _d : schema.default();\r\n        this.data = this.wrapLists ? DataModel.wrapLists(data) : data;\r\n        this.listeners = [];\r\n        this.errors = new Errors_1.Errors();\r\n        this.history = [JSON.stringify(this.data)];\r\n        this.historyIndex = 0;\r\n    }\r\n    /**\r\n     * Adds a listener to notify when the model is invalidated\r\n     * @param listener the listener to be notified\r\n     */\r\n    addListener(listener) {\r\n        this.listeners.push(listener);\r\n    }\r\n    /**\r\n     * Removes a listener from this model\r\n     * @param listener the listener to be removed\r\n     */\r\n    removeListener(listener) {\r\n        const index = this.listeners.indexOf(listener);\r\n        if (index > -1) {\r\n            this.listeners.splice(index, 1);\r\n        }\r\n    }\r\n    /**\r\n     * Updates the history and notifies all\r\n     * listeners that the model is invalidated\r\n     */\r\n    invalidate() {\r\n        const newHistory = JSON.stringify(this.data);\r\n        if (this.history[this.historyIndex] !== newHistory) {\r\n            this.historyIndex += 1;\r\n            this.history.splice(this.historyIndex, this.historyMax, newHistory);\r\n            if (this.history.length > this.historyMax) {\r\n                this.history.splice(0, 1);\r\n                this.historyIndex -= 1;\r\n            }\r\n        }\r\n        this.silentInvalidate();\r\n    }\r\n    /**\r\n     * Notifies all listeners that the model is invalidated\r\n     */\r\n    silentInvalidate() {\r\n        this.listeners.forEach(l => {\r\n            if (l.invalidated)\r\n                l.invalidated(this);\r\n            if (l.errors)\r\n                l.errors(this.errors);\r\n        });\r\n    }\r\n    /**\r\n     * Resets the full data and notifies listeners\r\n     * @param value new model data\r\n     */\r\n    reset(value, loose) {\r\n        this.data = value;\r\n        this.validate(loose);\r\n        this.invalidate();\r\n    }\r\n    /**\r\n     * Gets the data at a specified path\r\n     * @param path path at which to find the data\r\n     * @returns undefined, if the the path does not exist in the data\r\n     */\r\n    get(path) {\r\n        let node = this.data;\r\n        path.forEach(e => {\r\n            if (node === undefined)\r\n                return node;\r\n            if (this.wrapLists && typeof e === 'number') {\r\n                node = node[e].node;\r\n            }\r\n            else {\r\n                node = node[e];\r\n            }\r\n        });\r\n        return node;\r\n    }\r\n    /**\r\n     * Updates the data on a path. Node will be removed when value is undefined\r\n     * @param path path to update\r\n     * @param value new data at the specified path\r\n     */\r\n    set(path, value, silent) {\r\n        if (path.getArray().length === 0) {\r\n            this.reset(value, true);\r\n            return;\r\n        }\r\n        let node = this.data;\r\n        path.pop().forEach(e => {\r\n            if (node[e] === undefined || typeof node[e] === 'string' || typeof node[e] === 'number') {\r\n                if (this.wrapLists && typeof e === 'number') {\r\n                    node[e] = { node: {}, id: utils_1.hexId() };\r\n                }\r\n                else {\r\n                    node[e] = {};\r\n                }\r\n            }\r\n            if (this.wrapLists && typeof e === 'number') {\r\n                node = node[e].node;\r\n            }\r\n            else {\r\n                node = node[e];\r\n            }\r\n        });\r\n        if (node === null)\r\n            return;\r\n        if (value === undefined || (typeof value === 'number' && isNaN(value))) {\r\n            if (typeof path.last() === 'number') {\r\n                node.splice(path.last(), 1);\r\n            }\r\n            else {\r\n                delete node[path.last()];\r\n            }\r\n        }\r\n        else if (this.wrapLists && typeof path.last() === 'number') {\r\n            node[path.last()] = { node: value, id: utils_1.hexId() };\r\n        }\r\n        else {\r\n            node[path.last()] = value;\r\n        }\r\n        if (silent)\r\n            return;\r\n        if (this.verbose) {\r\n            console.log('Set', path.toString(), JSON.stringify(value));\r\n        }\r\n        this.validate(true);\r\n        this.invalidate();\r\n    }\r\n    /**\r\n     * Go one step back in history\r\n     */\r\n    undo() {\r\n        if (this.historyIndex > 0) {\r\n            this.historyIndex -= 1;\r\n            this.data = JSON.parse(this.history[this.historyIndex]);\r\n            this.validate(false);\r\n            this.silentInvalidate();\r\n        }\r\n    }\r\n    /**\r\n     * Go one step forward in history.\r\n     */\r\n    redo() {\r\n        if (this.historyIndex < this.history.length - 1) {\r\n            this.historyIndex += 1;\r\n            this.data = JSON.parse(this.history[this.historyIndex]);\r\n            this.validate(false);\r\n            this.silentInvalidate();\r\n        }\r\n    }\r\n    /**\r\n     * Uses the schema to check whether the data is valid\r\n     */\r\n    validate(loose) {\r\n        var _a;\r\n        const path = new Path_1.Path().withModel(this);\r\n        this.errors.clear();\r\n        this.data = (_a = this.schema.validate(path, this.data, this.errors, { loose, wrapLists: this.wrapLists })) !== null && _a !== void 0 ? _a : {};\r\n    }\r\n    error(path, error, ...params) {\r\n        const tempErrors = new Errors_1.Errors();\r\n        tempErrors.add(path, error, params);\r\n        this.listeners.forEach(l => {\r\n            if (l.errors)\r\n                l.errors(tempErrors);\r\n        });\r\n    }\r\n    static wrapLists(value) {\r\n        if (Array.isArray(value)) {\r\n            return value.map(v => ({\r\n                node: this.wrapLists(v),\r\n                id: utils_1.hexId(),\r\n            }));\r\n        }\r\n        else if (typeof value === 'object' && value !== null) {\r\n            const res = {};\r\n            Object.entries(value).map(([k, v]) => {\r\n                res[k] = this.wrapLists(v);\r\n            });\r\n            return res;\r\n        }\r\n        else {\r\n            return value;\r\n        }\r\n    }\r\n}\r\nexports.DataModel = DataModel;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Keep = exports.Opt = exports.Has = exports.Mod = exports.Base = void 0;\r\nexports.Base = ({\r\n    type: () => 'base',\r\n    category: () => undefined,\r\n    default: () => undefined,\r\n    enabled: () => true,\r\n    keep: () => false,\r\n    optional: () => false,\r\n    navigate() { return this; },\r\n    pathPush: (p) => p,\r\n    suggest: () => [],\r\n    validate: (_, v) => v,\r\n    validationOption: () => undefined,\r\n    hook(hook, path, ...args) { return hook.base({ node: this }, path, ...args); },\r\n    canUpdate: () => false,\r\n    update: () => []\r\n});\r\nexports.Mod = (node, mods) => ({\r\n    ...node, ...(typeof mods === 'function' ? mods(node) : mods)\r\n});\r\nexports.Has = (key, node) => exports.Mod(node, {\r\n    enabled: (p) => p.push(key).get() !== undefined\r\n});\r\nfunction Opt(node) {\r\n    return {\r\n        ...node,\r\n        optional: () => true\r\n    };\r\n}\r\nexports.Opt = Opt;\r\nfunction Keep(node) {\r\n    return {\r\n        ...node,\r\n        keep: () => true\r\n    };\r\n}\r\nexports.Keep = Keep;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.BooleanNode = void 0;\r\nconst DataModel_1 = require(\"../model/DataModel\");\r\nconst Node_1 = require(\"./Node\");\r\n/**\r\n * Boolean node with two buttons for true/false\r\n */\r\nexports.BooleanNode = () => {\r\n    return {\r\n        ...Node_1.Base,\r\n        type: () => 'boolean',\r\n        default: () => false,\r\n        suggest: () => ['false', 'true'],\r\n        validate(path, value, errors, options) {\r\n            if (options.loose && typeof value !== 'boolean') {\r\n                value = options.wrapLists ? DataModel_1.DataModel.wrapLists(this.default()) : this.default();\r\n            }\r\n            if (typeof value !== 'boolean' || value === undefined) {\r\n                errors.add(path, 'error.expected_boolean');\r\n            }\r\n            return value;\r\n        },\r\n        hook(hook, path, ...args) {\r\n            var _a;\r\n            return ((_a = hook.boolean) !== null && _a !== void 0 ? _a : hook.base).call(hook, { node: this }, path, ...args);\r\n        }\r\n    };\r\n};\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.ListNode = void 0;\r\nconst DataModel_1 = require(\"../model/DataModel\");\r\nconst Node_1 = require(\"./Node\");\r\nexports.ListNode = (children, config) => {\r\n    var _a, _b;\r\n    const min = (_a = config === null || config === void 0 ? void 0 : config.minLength) !== null && _a !== void 0 ? _a : 0;\r\n    const max = (_b = config === null || config === void 0 ? void 0 : config.maxLength) !== null && _b !== void 0 ? _b : Infinity;\r\n    const between = (config === null || config === void 0 ? void 0 : config.minLength) && (config === null || config === void 0 ? void 0 : config.maxLength);\r\n    return ({\r\n        ...Node_1.Base,\r\n        type: () => 'list',\r\n        default: () => (config === null || config === void 0 ? void 0 : config.minLength) ? [...Array(min)].map(_ => children.default()) : [],\r\n        navigate(path, index) {\r\n            const nextIndex = index + 1;\r\n            const pathElements = path.getArray();\r\n            if (pathElements.length <= nextIndex) {\r\n                return this;\r\n            }\r\n            return children.navigate(path, nextIndex);\r\n        },\r\n        pathPush(path, index) {\r\n            return path.push(parseInt(index.toString())).contextPush('entry');\r\n        },\r\n        validate(path, value, errors, options) {\r\n            if (options.loose && !Array.isArray(value)) {\r\n                value = options.wrapLists ? DataModel_1.DataModel.wrapLists(this.default()) : this.default();\r\n            }\r\n            if (!Array.isArray(value)) {\r\n                errors.add(path, 'error.expected_list');\r\n                return value;\r\n            }\r\n            else if (between && (value.length < min || value.length > max)) {\r\n                if (min === max) {\r\n                    errors.add(path, 'error.invalid_list_range.exact', value.length, min);\r\n                }\r\n                else {\r\n                    errors.add(path, 'error.invalid_list_range.between', value.length, min, max);\r\n                }\r\n            }\r\n            else if (value.length < min) {\r\n                errors.add(path, 'error.invalid_list_range.smaller', value.length, min);\r\n            }\r\n            else if (value.length > max) {\r\n                errors.add(path, 'error.invalid_list_range.larger', value.length, max);\r\n            }\r\n            return value.map((obj, index) => {\r\n                const newObj = children.validate(path.push(index), options.wrapLists ? obj.node : obj, errors, options);\r\n                return options.wrapLists ? { node: newObj, id: obj.id } : newObj;\r\n            });\r\n        },\r\n        hook(hook, path, ...args) {\r\n            var _a;\r\n            return ((_a = hook.list) !== null && _a !== void 0 ? _a : hook.base).call(hook, { node: this, children, config: config !== null && config !== void 0 ? config : {} }, path, ...args);\r\n        }\r\n    });\r\n};\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.SwitchNode = void 0;\r\nconst Node_1 = require(\"./Node\");\r\n/**\r\n * Node that allows multiple types\r\n */\r\nexports.SwitchNode = (cases) => {\r\n    return {\r\n        ...Node_1.Base,\r\n        type(path) {\r\n            return this.activeCase(path, true)\r\n                .node.type(path);\r\n        },\r\n        category(path) {\r\n            return this.activeCase(path, true)\r\n                .node.category(path);\r\n        },\r\n        default: () => cases[0].node.default(),\r\n        navigate(path, index) {\r\n            var _a;\r\n            const nextIndex = index + 1;\r\n            return (_a = this.activeCase(path.slice(0, nextIndex))) === null || _a === void 0 ? void 0 : _a.node.navigate(path, index);\r\n        },\r\n        pathPush(path, key) {\r\n            var _a, _b;\r\n            return (_b = (_a = this.activeCase(path)) === null || _a === void 0 ? void 0 : _a.node.pathPush(path, key)) !== null && _b !== void 0 ? _b : path;\r\n        },\r\n        suggest(path, value) {\r\n            var _a, _b;\r\n            return (_b = (_a = this.activeCase(path)) === null || _a === void 0 ? void 0 : _a.node.suggest(path, value)) !== null && _b !== void 0 ? _b : cases\r\n                .filter(c => c.match(path))\r\n                .map(c => c.node.suggest(path, value))\r\n                .reduce((p, c) => p.concat(c));\r\n        },\r\n        validate(path, value, errors, options) {\r\n            let c = this.activeCase(path);\r\n            if (c === undefined) {\r\n                return value;\r\n            }\r\n            return c.node.validate(path, value, errors, options);\r\n        },\r\n        validationOption(path) {\r\n            var _a;\r\n            return (_a = this.activeCase(path)) === null || _a === void 0 ? void 0 : _a.node.validationOption(path);\r\n        },\r\n        activeCase(path, fallback) {\r\n            const sorter = (a, b) => { var _a, _b; return ((_a = b.priority) !== null && _a !== void 0 ? _a : 0) - ((_b = a.priority) !== null && _b !== void 0 ? _b : 0); };\r\n            const matchedCases = cases.filter(c => c.match(path)).sort(sorter);\r\n            if (fallback && matchedCases.length === 0) {\r\n                return cases.sort(sorter)[0];\r\n            }\r\n            return (matchedCases.length > 0 ? matchedCases[0] : undefined);\r\n        },\r\n        hook(hook, path, ...args) {\r\n            return this.activeCase(path, true)\r\n                .node.hook(hook, path, ...args);\r\n        },\r\n    };\r\n};\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.ObjectOrPreset = exports.StringOrList = exports.ObjectOrList = exports.ChoiceNode = void 0;\r\nconst ListNode_1 = require(\"./ListNode\");\r\nconst SwitchNode_1 = require(\"./SwitchNode\");\r\nconst DataModel_1 = require(\"../model/DataModel\");\r\n/**\r\n * Node that allows multiple types\r\n */\r\nexports.ChoiceNode = (choices, config) => {\r\n    const isValid = (choice, value) => {\r\n        if (choice.match) {\r\n            return choice.match(value);\r\n        }\r\n        switch (choice.type) {\r\n            case 'list': return Array.isArray(value);\r\n            case 'object': return typeof value === 'object' && !Array.isArray(value);\r\n            default: return typeof value === choice.type;\r\n        }\r\n    };\r\n    const switchNode = SwitchNode_1.SwitchNode(choices.map(c => ({\r\n        type: c.type,\r\n        priority: c.priority,\r\n        match: (path) => isValid(c, path.get()),\r\n        node: c.node\r\n    })));\r\n    return {\r\n        ...switchNode,\r\n        validate(path, value, errors, options) {\r\n            let choice = switchNode.activeCase(path, true);\r\n            if (choice.node.optional()) {\r\n                return value;\r\n            }\r\n            return choice.node.validate(path, value, errors, options);\r\n        },\r\n        hook(hook, path, ...args) {\r\n            var _a;\r\n            return ((_a = hook.choice) !== null && _a !== void 0 ? _a : hook.base).call(hook, { node: this, choices, config: config !== null && config !== void 0 ? config : {}, switchNode }, path, ...args);\r\n        }\r\n    };\r\n};\r\nconst XOrList = (x) => ((node, config) => {\r\n    return exports.ChoiceNode([\r\n        {\r\n            type: x,\r\n            node,\r\n            change: (v, options) => { var _a; return (_a = v[0]) !== null && _a !== void 0 ? _a : ((options === null || options === void 0 ? void 0 : options.wrapLists) ? DataModel_1.DataModel.wrapLists(node.default()) : node.default()); }\r\n        },\r\n        {\r\n            type: 'list',\r\n            node: ListNode_1.ListNode(node),\r\n            change: v => v ? [v] : []\r\n        }\r\n    ], config);\r\n});\r\nexports.ObjectOrList = XOrList('object');\r\nexports.StringOrList = XOrList('string');\r\nexports.ObjectOrPreset = (presetNode, objectNode, presets) => {\r\n    return exports.ChoiceNode([\r\n        {\r\n            type: 'string',\r\n            priority: 1,\r\n            node: presetNode,\r\n            change: v => Object.keys(presets)[0]\r\n        },\r\n        {\r\n            type: 'object',\r\n            node: objectNode,\r\n            change: v => { var _a; return (_a = presets[v]) !== null && _a !== void 0 ? _a : presets[Object.keys(presets)[0]]; }\r\n        }\r\n    ]);\r\n};\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.MapNode = void 0;\r\nconst Node_1 = require(\"./Node\");\r\nconst DataModel_1 = require(\"../model/DataModel\");\r\n/**\r\n * Map nodes similar to list nodes, but a string key is required to add children\r\n */\r\nexports.MapNode = (keys, children, config) => {\r\n    return {\r\n        ...Node_1.Base,\r\n        type: () => 'map',\r\n        default: () => ({}),\r\n        navigate(path, index) {\r\n            const nextIndex = index + 1;\r\n            const pathElements = path.getArray();\r\n            if (pathElements.length <= nextIndex) {\r\n                return this;\r\n            }\r\n            return children.navigate(path, nextIndex);\r\n        },\r\n        pathPush(path, key) {\r\n            return path.modelPush(key);\r\n        },\r\n        suggest: (path) => keys.suggest(path, ''),\r\n        validate(path, value, errors, options) {\r\n            if (options.loose && typeof value !== 'object') {\r\n                value = options.wrapLists ? DataModel_1.DataModel.wrapLists(this.default()) : this.default();\r\n            }\r\n            if (value === null || typeof value !== 'object') {\r\n                errors.add(path, 'error.expected_object');\r\n                return value;\r\n            }\r\n            let res = {};\r\n            Object.keys(value).forEach(k => {\r\n                keys.validate(path, k, errors, options);\r\n                res[k] = children.validate(path.push(k), value[k], errors, options);\r\n            });\r\n            return res;\r\n        },\r\n        validationOption(path) {\r\n            var _a;\r\n            return (_a = config === null || config === void 0 ? void 0 : config.validation) !== null && _a !== void 0 ? _a : keys.validationOption(path.push(''));\r\n        },\r\n        hook(hook, path, ...args) {\r\n            var _a;\r\n            return ((_a = hook.map) !== null && _a !== void 0 ? _a : hook.base).call(hook, { node: this, keys, children, config: config !== null && config !== void 0 ? config : {} }, path, ...args);\r\n        }\r\n    };\r\n};\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.NumberNode = void 0;\r\nconst DataModel_1 = require(\"../model/DataModel\");\r\nconst Node_1 = require(\"./Node\");\r\nexports.NumberNode = (config) => {\r\n    var _a, _b, _c;\r\n    const integer = (config === null || config === void 0 ? void 0 : config.color) ? true : (_a = config === null || config === void 0 ? void 0 : config.integer) !== null && _a !== void 0 ? _a : false;\r\n    const min = (config === null || config === void 0 ? void 0 : config.color) ? 0 : (_b = config === null || config === void 0 ? void 0 : config.min) !== null && _b !== void 0 ? _b : -Infinity;\r\n    const max = (config === null || config === void 0 ? void 0 : config.color) ? 16777215 : (_c = config === null || config === void 0 ? void 0 : config.max) !== null && _c !== void 0 ? _c : Infinity;\r\n    const between = (config === null || config === void 0 ? void 0 : config.min) !== undefined && (config === null || config === void 0 ? void 0 : config.max) !== undefined;\r\n    return {\r\n        ...Node_1.Base,\r\n        type: () => 'number',\r\n        default: () => min > 0 ? min : 0,\r\n        validate(path, value, errors, options) {\r\n            if (options.loose && typeof value !== 'number') {\r\n                value = options.wrapLists ? DataModel_1.DataModel.wrapLists(this.default()) : this.default();\r\n            }\r\n            if (typeof value !== 'number') {\r\n                errors.add(path, 'error.expected_number');\r\n            }\r\n            else if (integer && !Number.isInteger(value)) {\r\n                errors.add(path, 'error.expected_integer');\r\n            }\r\n            else if (between && (value < min || value > max)) {\r\n                errors.add(path, 'error.invalid_number_range.between', value, min, max);\r\n            }\r\n            else if (value < min) {\r\n                errors.add(path, 'error.invalid_number_range.smaller', value, min);\r\n            }\r\n            else if (value > max) {\r\n                errors.add(path, 'error.invalid_number_range.larger', value, max);\r\n            }\r\n            return value;\r\n        },\r\n        hook(hook, path, ...args) {\r\n            var _a;\r\n            return ((_a = hook.number) !== null && _a !== void 0 ? _a : hook.base).call(hook, { node: this, integer, min, max, between, config: config !== null && config !== void 0 ? config : {} }, path, ...args);\r\n        }\r\n    };\r\n};\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.ObjectNode = exports.Case = exports.Switch = void 0;\r\nconst Node_1 = require(\"./Node\");\r\nconst Path_1 = require(\"../model/Path\");\r\nconst Errors_1 = require(\"../model/Errors\");\r\nconst utils_1 = require(\"../utils\");\r\nconst DataModel_1 = require(\"../model/DataModel\");\r\nexports.Switch = Symbol('switch');\r\nexports.Case = Symbol('case');\r\nexports.ObjectNode = (fields, config) => {\r\n    const { [exports.Switch]: filter, [exports.Case]: cases, ...defaultFields } = fields;\r\n    const getActiveFields = (path) => {\r\n        if (filter === undefined)\r\n            return defaultFields;\r\n        const switchValue = Path_1.relativePath(path, filter).get();\r\n        const activeCase = cases[switchValue];\r\n        return { ...defaultFields, ...activeCase };\r\n    };\r\n    const getChildModelPath = (path, childKey) => {\r\n        var _a;\r\n        const switchValue = filter ? Path_1.relativePath(path, filter).get() : undefined;\r\n        const caseFields = filter ? ((_a = cases[switchValue]) !== null && _a !== void 0 ? _a : {}) : {};\r\n        const caseKeys = Object.keys(caseFields);\r\n        const pathWithContext = (config === null || config === void 0 ? void 0 : config.context) ?\r\n            new Path_1.ModelPath(path.getModel(), new Path_1.Path(path.getArray(), [config.context])) : path;\r\n        const pathWithFilter = !(config === null || config === void 0 ? void 0 : config.disableSwitchContext) && switchValue && caseKeys.includes(childKey) ?\r\n            pathWithContext.contextPush(switchValue) : pathWithContext;\r\n        return pathWithFilter.push(childKey);\r\n    };\r\n    return ({\r\n        ...Node_1.Base,\r\n        type: () => 'object',\r\n        category: () => config === null || config === void 0 ? void 0 : config.category,\r\n        default: () => ({}),\r\n        keep() {\r\n            return this.optional();\r\n        },\r\n        navigate(path, index) {\r\n            const nextIndex = index + 1;\r\n            const pathElements = path.getArray();\r\n            if (pathElements.length <= nextIndex) {\r\n                return this;\r\n            }\r\n            const activeFields = getActiveFields(path.slice(0, nextIndex));\r\n            const node = activeFields[pathElements[nextIndex]];\r\n            return node === null || node === void 0 ? void 0 : node.navigate(path, nextIndex);\r\n        },\r\n        pathPush(path, key) {\r\n            return getChildModelPath(path, key.toString());\r\n        },\r\n        suggest(path, value) {\r\n            const activeFields = getActiveFields(path);\r\n            const existingKeys = Object.keys(typeof value === 'object' ? value : {});\r\n            return Object.keys(activeFields)\r\n                .filter(k => activeFields[k].enabled(path))\r\n                .filter(k => !existingKeys.includes(k))\r\n                .map(utils_1.quoteString);\r\n        },\r\n        validate(path, value, errors, options) {\r\n            if (options.loose && typeof value !== 'object') {\r\n                value = options.wrapLists ? DataModel_1.DataModel.wrapLists(this.default()) : this.default();\r\n            }\r\n            if (typeof value !== 'object' || value === null) {\r\n                errors.add(path, 'error.expected_object');\r\n                return value;\r\n            }\r\n            let activeFields = defaultFields;\r\n            if (filter) {\r\n                const filterPath = Path_1.relativePath(path, filter);\r\n                let switchValue = filterPath.get();\r\n                if (path.equals(filterPath.pop())) {\r\n                    const filterField = filterPath.last();\r\n                    switchValue = defaultFields[filterField].validate(path.push(filterField), value[filterField], new Errors_1.Errors(), options);\r\n                }\r\n                activeFields = { ...activeFields, ...cases[switchValue] };\r\n            }\r\n            const activeKeys = Object.keys(activeFields);\r\n            const forcedKeys = activeKeys.filter(k => !activeFields[k].optional());\r\n            const keys = new Set([...forcedKeys, ...Object.keys(value)]);\r\n            let res = {};\r\n            keys.forEach(k => {\r\n                if (activeKeys.includes(k)) {\r\n                    if (!activeFields[k].enabled(path))\r\n                        return;\r\n                    const newValue = activeFields[k].validate(path.push(k), value[k], errors, options);\r\n                    if (!activeFields[k].keep() && activeFields[k].optional()\r\n                        && (newValue === undefined\r\n                            || (Array.isArray(newValue) && newValue.length === 0)\r\n                            || (newValue.constructor === Object && Object.keys(newValue).length === 0))) {\r\n                        delete res[k];\r\n                    }\r\n                    else {\r\n                        res[k] = newValue;\r\n                        path.getModel().set(path.push(k), newValue, true);\r\n                    }\r\n                }\r\n                else {\r\n                    res[k] = value[k];\r\n                }\r\n            });\r\n            return res;\r\n        },\r\n        hook(hook, path, ...args) {\r\n            var _a;\r\n            return ((_a = hook.object) !== null && _a !== void 0 ? _a : hook.base).call(hook, { node: this, fields: defaultFields, config: config !== null && config !== void 0 ? config : {}, filter, cases, getActiveFields, getChildModelPath }, path, ...args);\r\n        }\r\n    });\r\n};\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Reference = void 0;\r\nexports.Reference = (schemas, schema) => ({\r\n    type(path) {\r\n        return schemas.get(schema).type.bind(this)(path);\r\n    },\r\n    category(path) {\r\n        return schemas.get(schema).category.bind(this)(path);\r\n    },\r\n    default() {\r\n        return schemas.get(schema).default.bind(this)();\r\n    },\r\n    transform(path, value) {\r\n        return schemas.get(schema).transform(path, value);\r\n    },\r\n    enabled(path) {\r\n        return schemas.get(schema).enabled.bind(this)(path);\r\n    },\r\n    keep() {\r\n        return schemas.get(schema).keep.bind(this)();\r\n    },\r\n    optional() {\r\n        return schemas.get(schema).optional.bind(this)();\r\n    },\r\n    navigate(path, index) {\r\n        return schemas.get(schema).navigate.bind(this)(path, index);\r\n    },\r\n    pathPush(path, key) {\r\n        return schemas.get(schema).pathPush.bind(this)(path, key);\r\n    },\r\n    suggest(path, value) {\r\n        return schemas.get(schema).suggest.bind(this)(path, value);\r\n    },\r\n    validate(path, value, errors, options) {\r\n        return schemas.get(schema).validate.bind(this)(path, value, errors, options);\r\n    },\r\n    validationOption(path) {\r\n        return schemas.get(schema).validationOption.bind(this)(path);\r\n    },\r\n    hook(hook, path, ...args) {\r\n        return schemas.get(schema).hook.bind(this)(hook, path, ...args);\r\n    },\r\n    activeCase(path, fallback) {\r\n        return schemas.get(schema).activeCase.bind(this)(path, fallback);\r\n    },\r\n    canUpdate(path, value) {\r\n        return schemas.get(schema).canUpdate.bind(this)(path, value);\r\n    },\r\n    update(path, value) {\r\n        return schemas.get(schema).update.bind(this)(path, value);\r\n    }\r\n});\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.StringNode = void 0;\r\nconst Node_1 = require(\"./Node\");\r\nconst utils_1 = require(\"../utils\");\r\nconst DataModel_1 = require(\"../model/DataModel\");\r\nconst isEnum = (value) => {\r\n    var _a;\r\n    return !!((_a = value) === null || _a === void 0 ? void 0 : _a.enum);\r\n};\r\nconst isValidator = (value) => {\r\n    var _a;\r\n    return !!((_a = value) === null || _a === void 0 ? void 0 : _a.validator);\r\n};\r\n/**\r\n * Simple string node with one text field\r\n */\r\nexports.StringNode = (collections, config) => {\r\n    const getValues = isEnum(config)\r\n        ? ((typeof config.enum === 'string')\r\n            ? () => { var _a; return (_a = collections === null || collections === void 0 ? void 0 : collections.get(config.enum)) !== null && _a !== void 0 ? _a : []; }\r\n            : () => config.enum)\r\n        : (((config === null || config === void 0 ? void 0 : config.validator) === 'resource')\r\n            ? ((typeof config.params.pool === 'string')\r\n                ? (config.params.pool.startsWith('$')\r\n                    ? () => { var _a; return (_a = collections === null || collections === void 0 ? void 0 : collections.get(config.params.pool.slice(1))) !== null && _a !== void 0 ? _a : []; }\r\n                    : () => { var _a; return (_a = collections === null || collections === void 0 ? void 0 : collections.get(config.params.pool)) !== null && _a !== void 0 ? _a : []; })\r\n                : () => config.params.pool)\r\n            : () => []);\r\n    return {\r\n        ...Node_1.Base,\r\n        type: () => 'string',\r\n        default: () => '',\r\n        validate(path, value, errors, options) {\r\n            if (options.loose && typeof value !== 'string') {\r\n                value = (options.wrapLists ? DataModel_1.DataModel.wrapLists(this.default()) : this.default()) || undefined;\r\n            }\r\n            if (typeof value !== 'string') {\r\n                errors.add(path, 'error.expected_string');\r\n                return value;\r\n            }\r\n            if (isValidator(config)) {\r\n                if (config.validator === 'resource' && value.length > 0 && !value.includes(':')) {\r\n                    value = value[0] === '#'\r\n                        ? '#minecraft:' + value.slice(1)\r\n                        : 'minecraft:' + value;\r\n                }\r\n                if (config.validator === 'resource' && ((typeof config.params.pool === 'string' && config.params.pool.startsWith('$')) ||\r\n                    (config.params.allowTag && value[0] === '#') ||\r\n                    config.params.isDefinition ||\r\n                    config.params.allowUnknown)) {\r\n                    return value;\r\n                }\r\n            }\r\n            if ((isEnum(config) && config.additional)) {\r\n                return value;\r\n            }\r\n            const values = getValues();\r\n            if (values.length > 0 && !values.includes(value)) {\r\n                errors.add(path, 'error.invalid_enum_option', value);\r\n            }\r\n            return value;\r\n        },\r\n        suggest: () => getValues().map(utils_1.quoteString),\r\n        validationOption() {\r\n            return isValidator(config) ? config : undefined;\r\n        },\r\n        hook(hook, path, ...args) {\r\n            var _a;\r\n            return ((_a = hook.string) !== null && _a !== void 0 ? _a : hook.base).call(hook, { node: this, getValues, config }, path, ...args);\r\n        }\r\n    };\r\n};\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.CollectionRegistry = exports.SchemaRegistry = void 0;\r\n/**\r\n * Registry for schemas\r\n */\r\nclass SchemaRegistry {\r\n    constructor() {\r\n        this.registry = {};\r\n    }\r\n    register(id, node) {\r\n        this.registry[id] = node;\r\n    }\r\n    get(id) {\r\n        const node = this.registry[id];\r\n        if (node === undefined) {\r\n            console.error(`Tried to access schema \"${id}\", but that doesn't exist.`);\r\n        }\r\n        return node;\r\n    }\r\n}\r\nexports.SchemaRegistry = SchemaRegistry;\r\n/**\r\n * Registry for collections\r\n */\r\nclass CollectionRegistry {\r\n    constructor() {\r\n        this.registry = {};\r\n    }\r\n    register(id, list) {\r\n        this.registry[id] = list;\r\n    }\r\n    get(id) {\r\n        const list = this.registry[id];\r\n        if (list === undefined) {\r\n            console.warn(`Tried to access collection \"${id}\", but that doesn't exist.`);\r\n        }\r\n        return list !== null && list !== void 0 ? list : [];\r\n    }\r\n}\r\nexports.CollectionRegistry = CollectionRegistry;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n","\"use strict\";\r\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}));\r\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) __createBinding(exports, m, p);\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n__exportStar(require(\"./model/DataModel\"), exports);\r\n__exportStar(require(\"./model/Path\"), exports);\r\n__exportStar(require(\"./model/Errors\"), exports);\r\n__exportStar(require(\"./nodes/Node\"), exports);\r\n__exportStar(require(\"./nodes/BooleanNode\"), exports);\r\n__exportStar(require(\"./nodes/ChoiceNode\"), exports);\r\n__exportStar(require(\"./nodes/ListNode\"), exports);\r\n__exportStar(require(\"./nodes/MapNode\"), exports);\r\n__exportStar(require(\"./nodes/NumberNode\"), exports);\r\n__exportStar(require(\"./nodes/ObjectNode\"), exports);\r\n__exportStar(require(\"./nodes/Reference\"), exports);\r\n__exportStar(require(\"./nodes/StringNode\"), exports);\r\n__exportStar(require(\"./nodes/SwitchNode\"), exports);\r\n__exportStar(require(\"./Hook\"), exports);\r\n__exportStar(require(\"./Registries\"), exports);\r\n__exportStar(require(\"./ValidationOption\"), exports);\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.initCollections = void 0;\r\nfunction initCollections(collections) {\r\n    collections.register('advancement_trigger', [\r\n        'minecraft:bee_nest_destroyed',\r\n        'minecraft:bred_animals',\r\n        'minecraft:brewed_potion',\r\n        'minecraft:changed_dimension',\r\n        'minecraft:channeled_lightning',\r\n        'minecraft:construct_beacon',\r\n        'minecraft:consume_item',\r\n        'minecraft:cured_zombie_villager',\r\n        'minecraft:effects_changed',\r\n        'minecraft:enchanted_item',\r\n        'minecraft:enter_block',\r\n        'minecraft:entity_hurt_player',\r\n        'minecraft:entity_killed_player',\r\n        'minecraft:filled_bucket',\r\n        'minecraft:fishing_rod_hooked',\r\n        'minecraft:hero_of_the_village',\r\n        'minecraft:impossible',\r\n        'minecraft:inventory_changed',\r\n        'minecraft:item_durability_changed',\r\n        'minecraft:killed_by_crossbow',\r\n        'minecraft:levitation',\r\n        'minecraft:location',\r\n        'minecraft:nether_travel',\r\n        'minecraft:placed_block',\r\n        'minecraft:player_hurt_entity',\r\n        'minecraft:player_killed_entity',\r\n        'minecraft:recipe_unlocked',\r\n        'minecraft:shot_crossbow',\r\n        'minecraft:safely_harvest_honey',\r\n        'minecraft:slept_in_bed',\r\n        'minecraft:slide_down_block',\r\n        'minecraft:summoned_entity',\r\n        'minecraft:tame_animal',\r\n        'minecraft:tick',\r\n        'minecraft:used_ender_eye',\r\n        'minecraft:used_totem',\r\n        'minecraft:villager_trade',\r\n        'minecraft:voluntary_exile'\r\n    ]);\r\n    collections.register('loot_pool_entry_type', [\r\n        'minecraft:empty',\r\n        'minecraft:item',\r\n        'minecraft:tag',\r\n        'minecraft:loot_table',\r\n        'minecraft:alternatives',\r\n        'minecraft:sequence',\r\n        'minecraft:group',\r\n        'minecraft:dynamic'\r\n    ]);\r\n    collections.register('loot_condition_type', [\r\n        'minecraft:alternative',\r\n        'minecraft:inverted',\r\n        'minecraft:reference',\r\n        'minecraft:entity_properties',\r\n        'minecraft:block_state_property',\r\n        'minecraft:match_tool',\r\n        'minecraft:damage_source_properties',\r\n        'minecraft:location_check',\r\n        'minecraft:weather_check',\r\n        'minecraft:time_check',\r\n        'minecraft:entity_scores',\r\n        'minecraft:random_chance',\r\n        'minecraft:random_chance_with_looting',\r\n        'minecraft:table_bonus',\r\n        'minecraft:killed_by_player',\r\n        'minecraft:survives_explosion'\r\n    ]);\r\n    collections.register('loot_function_type', [\r\n        'minecraft:set_count',\r\n        'minecraft:set_damage',\r\n        'minecraft:set_name',\r\n        'minecraft:set_lore',\r\n        'minecraft:set_nbt',\r\n        'minecraft:set_attributes',\r\n        'minecraft:set_contents',\r\n        'minecraft:enchant_randomly',\r\n        'minecraft:enchant_with_levels',\r\n        'minecraft:looting_enchant',\r\n        'minecraft:limit_count',\r\n        'minecraft:furnace_smelt',\r\n        'minecraft:explosion_decay',\r\n        'minecraft:fill_player_head',\r\n        'minecraft:copy_name',\r\n        'minecraft:copy_nbt',\r\n        'minecraft:copy_state',\r\n        'minecraft:apply_bonus',\r\n        'minecraft:exploration_map',\r\n        'minecraft:set_stew_effect'\r\n    ]);\r\n    collections.register('attribute', [\r\n        'generic.maxHealth',\r\n        'generic.followRange',\r\n        'generic.knockbackResistance',\r\n        'generic.movementSpeed',\r\n        'generic.attackDamage',\r\n        'generic.armor',\r\n        'generic.armorToughness',\r\n        'generic.attackSpeed',\r\n        'generic.luck',\r\n        'horse.jumpStrength',\r\n        'generic.attackKnockback',\r\n        'generic.flyingSpeed',\r\n        'zombie.spawnReinforcements'\r\n    ]);\r\n    collections.register('structure_feature', [\r\n        'pillager_outpost',\r\n        'mineshaft',\r\n        'mansion',\r\n        'jungle_pyramid',\r\n        'desert_pyramid',\r\n        'igloo',\r\n        'shipwreck',\r\n        'swamp_hut',\r\n        'stronghold',\r\n        'monument',\r\n        'ocean_ruin',\r\n        'fortress',\r\n        'endcity',\r\n        'buried_treasure',\r\n        'village'\r\n    ]);\r\n    collections.register('dimension', [\r\n        'minecraft:overworld',\r\n        'minecraft:the_nether',\r\n        'minecraft:the_end'\r\n    ]);\r\n    collections.register('keybind', [\r\n        'key.advancements',\r\n        'key.attack',\r\n        'key.back',\r\n        'key.chat',\r\n        'key.command',\r\n        'key.drop',\r\n        'key.forward',\r\n        'key.fullscreen',\r\n        'key.hotbar.1',\r\n        'key.hotbar.2',\r\n        'key.hotbar.3',\r\n        'key.hotbar.4',\r\n        'key.hotbar.5',\r\n        'key.hotbar.6',\r\n        'key.hotbar.7',\r\n        'key.hotbar.8',\r\n        'key.hotbar.9',\r\n        'key.inventory',\r\n        'key.jump',\r\n        'key.left',\r\n        'key.loadToolbarActivator',\r\n        'key.pickItem',\r\n        'key.playerlist',\r\n        'key.right',\r\n        'key.saveToolbarActivator',\r\n        'key.screenshot',\r\n        'key.smoothCamera',\r\n        'key.sneak',\r\n        'key.spectatorOutlines',\r\n        'key.sprint',\r\n        'key.swapOffhand',\r\n        'key.togglePerspective',\r\n        'key.use'\r\n    ]);\r\n    collections.register('slot', [\r\n        'mainhand',\r\n        'offhand',\r\n        'head',\r\n        'chest',\r\n        'legs',\r\n        'feet'\r\n    ]);\r\n    collections.register('gamemode', [\r\n        'survival',\r\n        'creative',\r\n        'adventure',\r\n        'spectator'\r\n    ]);\r\n    collections.register('entity_source', [\r\n        'this',\r\n        'direct_killer',\r\n        'killer',\r\n        'killer_player'\r\n    ]);\r\n    collections.register('copy_source', [\r\n        'block_entity',\r\n        'this',\r\n        'killer',\r\n        'killer_player'\r\n    ]);\r\n    collections.register('loot_table_apply_bonus_formula', [\r\n        'minecraft:uniform_bonus_count',\r\n        'minecraft:binomial_with_bonus_count',\r\n        'minecraft:ore_drops'\r\n    ]);\r\n    collections.register('map_decoration', [\r\n        'mansion',\r\n        'monument',\r\n        'player',\r\n        'frame',\r\n        'red_marker',\r\n        'blue_marker',\r\n        'target_x',\r\n        'target_point',\r\n        'player_off_map',\r\n        'player_off_limits',\r\n        'red_x',\r\n        'banner_white',\r\n        'banner_orange',\r\n        'banner_magenta',\r\n        'banner_light_blue',\r\n        'banner_yellow',\r\n        'banner_lime',\r\n        'banner_pink',\r\n        'banner_gray',\r\n        'banner_light_gray',\r\n        'banner_cyan',\r\n        'banner_purple',\r\n        'banner_blue',\r\n        'banner_brown',\r\n        'banner_green',\r\n        'banner_red',\r\n        'banner_black'\r\n    ]);\r\n    collections.register('recipe_group', [\r\n        'bed',\r\n        'light_gray_dye',\r\n        'iron_ingot',\r\n        'wooden_stairs',\r\n        'black_dye',\r\n        'stained_terracotta',\r\n        'dyed_bed',\r\n        'magenta_dye',\r\n        'bark',\r\n        'rabbit_stew',\r\n        'light_blue_dye',\r\n        'wooden_fence_gate',\r\n        'planks',\r\n        'stained_glass',\r\n        'wooden_door',\r\n        'stained_glass_pane',\r\n        'wooden_fence',\r\n        'sticks',\r\n        'concrete_powder',\r\n        'wooden_pressure_plate',\r\n        'boat',\r\n        'brown_dye',\r\n        'yellow_dye',\r\n        'bonemeal',\r\n        'red_dye',\r\n        'wooden_trapdoor',\r\n        'wooden_button',\r\n        'gold_ingot',\r\n        'pink_dye',\r\n        'wooden_slab',\r\n        'orange_dye',\r\n        'carpet',\r\n        'sign',\r\n        'wool',\r\n        'sugar',\r\n        'blue_dye',\r\n        'white_dye',\r\n        'banner',\r\n        'netherite_ingot'\r\n    ]);\r\n    collections.register('loot_context_type', [\r\n        'minecraft:empty',\r\n        'minecraft:chest',\r\n        'minecraft:command',\r\n        'minecraft:selector',\r\n        'minecraft:fishing',\r\n        'minecraft:entity',\r\n        'minecraft:gift',\r\n        'minecraft:barter',\r\n        'minecraft:advancement_reward',\r\n        'minecraft:advancement_entity',\r\n        'minecraft:generic',\r\n        'minecraft:block'\r\n    ]);\r\n}\r\nexports.initCollections = initCollections;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.initCommonSchemas = exports.Range = exports.ConditionCases = void 0;\r\nconst core_1 = require(\"@mcschema/core\");\r\nfunction initCommonSchemas(schemas, collections) {\r\n    const StringNode = core_1.StringNode.bind(undefined, collections);\r\n    const Reference = core_1.Reference.bind(undefined, schemas);\r\n    schemas.register('block_state', core_1.Mod(core_1.ObjectNode({\r\n        Name: StringNode({ validator: 'resource', params: { pool: 'block' } }),\r\n        Properties: core_1.Opt(core_1.MapNode(StringNode(), StringNode(), { validation: { validator: 'block_state_map', params: { id: ['pop', { push: 'Name' }] } } }))\r\n    }, { context: 'block_state' }), {\r\n        default: () => ({\r\n            Name: 'minecraft:stone'\r\n        })\r\n    }));\r\n    schemas.register('fluid_state', core_1.Mod(core_1.ObjectNode({\r\n        Name: StringNode({ validator: 'resource', params: { pool: 'fluid' } }),\r\n        Properties: core_1.Opt(core_1.MapNode(StringNode(), StringNode()))\r\n    }, { context: 'fluid_state' }), {\r\n        default: () => ({\r\n            Name: 'minecraft:water',\r\n            Properties: {\r\n                'level': '0'\r\n            }\r\n        })\r\n    }));\r\n    schemas.register('block_pos', core_1.Mod(core_1.ListNode(core_1.NumberNode({ integer: true })), {\r\n        default: () => [0, 0, 0]\r\n    }));\r\n    exports.Range = (config) => core_1.ChoiceNode([\r\n        ...((config === null || config === void 0 ? void 0 : config.forceRange) ? [] : [{\r\n                type: 'number',\r\n                node: core_1.NumberNode(config),\r\n                change: (v) => { var _a, _b, _c; return v === undefined ? 0 : (_c = (_b = (_a = v.min) !== null && _a !== void 0 ? _a : v.max) !== null && _b !== void 0 ? _b : v.n) !== null && _c !== void 0 ? _c : 0; }\r\n            }]),\r\n        {\r\n            type: 'object',\r\n            priority: -1,\r\n            node: core_1.ObjectNode({\r\n                min: (config === null || config === void 0 ? void 0 : config.bounds) ? core_1.NumberNode(config) : core_1.Opt(core_1.NumberNode(config)),\r\n                max: (config === null || config === void 0 ? void 0 : config.bounds) ? core_1.NumberNode(config) : core_1.Opt(core_1.NumberNode(config))\r\n            }, { context: 'range' }),\r\n            change: (v) => ({\r\n                min: typeof v === 'number' ? v : v === undefined ? 1 : v.n,\r\n                max: typeof v === 'number' ? v : v === undefined ? 1 : v.n\r\n            })\r\n        },\r\n        ...((config === null || config === void 0 ? void 0 : config.allowBinomial) ? [{\r\n                type: 'binomial',\r\n                node: core_1.ObjectNode({\r\n                    type: StringNode({ enum: ['minecraft:binomial'] }),\r\n                    n: core_1.NumberNode({ integer: true, min: 0 }),\r\n                    p: core_1.NumberNode({ min: 0, max: 1 })\r\n                }, { context: 'range' }),\r\n                match: (v) => v !== undefined && v.type === 'minecraft:binomial',\r\n                change: (v) => {\r\n                    var _a, _b;\r\n                    return ({\r\n                        type: 'minecraft:binomial',\r\n                        n: typeof v === 'number' ? v : v === undefined ? 1 : ((_b = (_a = v.min) !== null && _a !== void 0 ? _a : v.max) !== null && _b !== void 0 ? _b : 1),\r\n                        p: 0.5\r\n                    });\r\n                }\r\n            }] : [])\r\n    ], { choiceContext: 'range' });\r\n    exports.ConditionCases = {\r\n        'minecraft:alternative': {\r\n            terms: core_1.ListNode(Reference('condition'))\r\n        },\r\n        'minecraft:block_state_property': {\r\n            block: StringNode({ validator: 'resource', params: { pool: 'block' } }),\r\n            properties: core_1.MapNode(StringNode(), StringNode(), { validation: { validator: 'block_state_map', params: { id: ['pop', { push: 'block' }] } } })\r\n        },\r\n        'minecraft:damage_source_properties': {\r\n            predicate: Reference('damage_source_predicate')\r\n        },\r\n        'minecraft:entity_properties': {\r\n            entity: StringNode({ enum: 'entity_source' }),\r\n            predicate: Reference('entity_predicate')\r\n        },\r\n        'minecraft:entity_scores': {\r\n            entity: StringNode({ enum: 'entity_source' }),\r\n            scores: core_1.MapNode(StringNode({ validator: 'objective' }), exports.Range({ forceRange: true, bounds: true }))\r\n        },\r\n        'minecraft:inverted': {\r\n            term: Reference('condition')\r\n        },\r\n        'minecraft:killed_by_player': {\r\n            inverse: core_1.Opt(core_1.BooleanNode())\r\n        },\r\n        'minecraft:location_check': {\r\n            offsetX: core_1.Opt(core_1.NumberNode({ integer: true })),\r\n            offsetY: core_1.Opt(core_1.NumberNode({ integer: true })),\r\n            offsetZ: core_1.Opt(core_1.NumberNode({ integer: true })),\r\n            predicate: Reference('location_predicate')\r\n        },\r\n        'minecraft:match_tool': {\r\n            predicate: Reference('item_predicate')\r\n        },\r\n        'minecraft:random_chance': {\r\n            chance: core_1.NumberNode({ min: 0, max: 1 })\r\n        },\r\n        'minecraft:random_chance_with_looting': {\r\n            chance: core_1.NumberNode({ min: 0, max: 1 }),\r\n            looting_multiplier: core_1.NumberNode()\r\n        },\r\n        'minecraft:reference': {\r\n            name: StringNode({ validator: 'resource', params: { pool: '$predicate' } })\r\n        },\r\n        'minecraft:table_bonus': {\r\n            enchantment: StringNode({ validator: 'resource', params: { pool: 'enchantment' } }),\r\n            chances: core_1.ListNode(core_1.NumberNode({ min: 0, max: 1 }))\r\n        },\r\n        'minecraft:time_check': {\r\n            value: exports.Range(),\r\n            period: core_1.Opt(core_1.NumberNode())\r\n        },\r\n        'minecraft:weather_check': {\r\n            raining: core_1.Opt(core_1.BooleanNode()),\r\n            thundering: core_1.Opt(core_1.BooleanNode())\r\n        }\r\n    };\r\n}\r\nexports.initCommonSchemas = initCommonSchemas;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.initPredicatesSchemas = exports.LocationFields = void 0;\r\nconst core_1 = require(\"@mcschema/core\");\r\nconst Common_1 = require(\"./Common\");\r\nfunction initPredicatesSchemas(schemas, collections) {\r\n    const Reference = core_1.Reference.bind(undefined, schemas);\r\n    const StringNode = core_1.StringNode.bind(undefined, collections);\r\n    const StateChoice = core_1.ChoiceNode([\r\n        {\r\n            type: 'string',\r\n            node: StringNode(),\r\n            change: v => (typeof v === 'boolean' || typeof v === 'number') ? v.toString() : ''\r\n        },\r\n        {\r\n            type: 'number',\r\n            node: core_1.NumberNode(),\r\n            change: v => (typeof v === 'string') ? parseInt(v) : 0\r\n        },\r\n        {\r\n            type: 'object',\r\n            node: core_1.ObjectNode({\r\n                min: core_1.Opt(core_1.NumberNode({ integer: true })),\r\n                max: core_1.Opt(core_1.NumberNode({ integer: true }))\r\n            }),\r\n            change: v => (typeof v === 'number') ? ({ min: v, max: v }) : ({})\r\n        },\r\n        {\r\n            type: 'boolean',\r\n            node: core_1.BooleanNode(),\r\n            change: v => v === 'true' || v === 1\r\n        }\r\n    ]);\r\n    schemas.register('item_predicate', core_1.ObjectNode({\r\n        item: core_1.Opt(StringNode({ validator: 'resource', params: { pool: 'item' } })),\r\n        tag: core_1.Opt(StringNode({ validator: 'resource', params: { pool: '$tag/item' } })),\r\n        count: core_1.Opt(Common_1.Range()),\r\n        durability: core_1.Opt(Common_1.Range()),\r\n        potion: core_1.Opt(StringNode({ validator: 'resource', params: { pool: 'potion' } })),\r\n        nbt: core_1.Opt(StringNode({ validator: 'nbt', params: { registry: { category: 'minecraft:item', id: ['pop', { push: 'item' }] } } })),\r\n        enchantments: core_1.Opt(core_1.ListNode(Reference('enchantment_predicate')))\r\n    }, { context: 'item' }));\r\n    schemas.register('enchantment_predicate', core_1.ObjectNode({\r\n        enchantment: core_1.Opt(StringNode({ validator: 'resource', params: { pool: 'enchantment' } })),\r\n        levels: core_1.Opt(Common_1.Range())\r\n    }, { context: 'enchantment' }));\r\n    schemas.register('block_predicate', core_1.ObjectNode({\r\n        block: core_1.Opt(StringNode({ validator: 'resource', params: { pool: 'block' } })),\r\n        tag: core_1.Opt(StringNode({ validator: 'resource', params: { pool: '$tag/block' } })),\r\n        nbt: core_1.Opt(StringNode({ validator: 'nbt', params: { registry: { category: 'minecraft:block', id: ['pop', { push: 'block' }] } } })),\r\n        state: core_1.Opt(core_1.MapNode(StringNode(), StateChoice, { validation: { validator: 'block_state_map', params: { id: ['pop', { push: 'block' }] } } }))\r\n    }, { context: 'block' }));\r\n    schemas.register('fluid_predicate', core_1.ObjectNode({\r\n        fluid: core_1.Opt(StringNode({ validator: 'resource', params: { pool: 'fluid' } })),\r\n        tag: core_1.Opt(StringNode({ validator: 'resource', params: { pool: '$tag/fluid' } })),\r\n        state: core_1.Opt(core_1.MapNode(StringNode(), StateChoice))\r\n    }, { context: 'fluid' }));\r\n    exports.LocationFields = {\r\n        position: core_1.Opt(core_1.ObjectNode({\r\n            x: core_1.Opt(Common_1.Range()),\r\n            y: core_1.Opt(Common_1.Range()),\r\n            z: core_1.Opt(Common_1.Range())\r\n        })),\r\n        biome: core_1.Opt(StringNode({ enum: 'biome' })),\r\n        feature: core_1.Opt(StringNode({ enum: 'structure_feature' })),\r\n        dimension: core_1.Opt(StringNode({ enum: 'dimension' })),\r\n        light: core_1.Opt(core_1.ObjectNode({\r\n            light: core_1.Opt(Common_1.Range({ integer: true, min: 0, max: 15 }))\r\n        })),\r\n        block: core_1.Opt(Reference('block_predicate')),\r\n        fluid: core_1.Opt(Reference('fluid_predicate'))\r\n    };\r\n    schemas.register('location_predicate', core_1.ObjectNode(exports.LocationFields, { context: 'location' }));\r\n    schemas.register('statistic_predicate', core_1.ObjectNode({\r\n        type: StringNode({ validator: 'resource', params: { pool: 'stat_type' } }),\r\n        stat: StringNode(),\r\n        value: Common_1.Range(),\r\n        [core_1.Switch]: [{ push: 'type' }],\r\n        [core_1.Case]: {\r\n            'minecraft:mined': {\r\n                stat: StringNode({ validator: 'resource', params: { pool: 'block' } })\r\n            },\r\n            'minecraft:crafted': {\r\n                stat: StringNode({ validator: 'resource', params: { pool: 'item' } })\r\n            },\r\n            'minecraft:used': {\r\n                stat: StringNode({ validator: 'resource', params: { pool: 'item' } })\r\n            },\r\n            'minecraft:broken': {\r\n                stat: StringNode({ validator: 'resource', params: { pool: 'item' } })\r\n            },\r\n            'minecraft:picked_up': {\r\n                stat: StringNode({ validator: 'resource', params: { pool: 'item' } })\r\n            },\r\n            'minecraft:dropped': {\r\n                stat: StringNode({ validator: 'resource', params: { pool: 'item' } })\r\n            },\r\n            'minecraft:killed': {\r\n                stat: StringNode({ validator: 'resource', params: { pool: 'entity_type' } })\r\n            },\r\n            'minecraft:killed_by': {\r\n                stat: StringNode({ validator: 'resource', params: { pool: 'entity_type' } })\r\n            },\r\n            'minecraft:custom': {\r\n                stat: StringNode({ validator: 'resource', params: { pool: 'custom_stat' } })\r\n            }\r\n        }\r\n    }));\r\n    schemas.register('player_predicate', core_1.ObjectNode({\r\n        gamemode: core_1.Opt(StringNode({ enum: 'gamemode' })),\r\n        level: core_1.Opt(Common_1.Range()),\r\n        advancements: core_1.Opt(core_1.MapNode(StringNode({ validator: 'resource', params: { pool: '$advancement' } }), core_1.ChoiceNode([\r\n            { type: 'boolean', node: core_1.BooleanNode(), change: _ => true },\r\n            {\r\n                type: 'object', node: core_1.MapNode(StringNode(), core_1.BooleanNode())\r\n            }\r\n        ]))),\r\n        recipes: core_1.Opt(core_1.MapNode(StringNode({ validator: 'resource', params: { pool: '$recipe' } }), core_1.BooleanNode())),\r\n        stats: core_1.Opt(core_1.ListNode(Reference('statistic_predicate')))\r\n    }, { context: 'player' }));\r\n    schemas.register('status_effect_predicate', core_1.ObjectNode({\r\n        amplifier: core_1.Opt(Common_1.Range()),\r\n        duration: core_1.Opt(Common_1.Range()),\r\n        ambient: core_1.Opt(core_1.BooleanNode()),\r\n        visible: core_1.Opt(core_1.BooleanNode())\r\n    }, { context: 'status_effect' }));\r\n    schemas.register('distance_predicate', core_1.ObjectNode({\r\n        x: core_1.Opt(Common_1.Range()),\r\n        y: core_1.Opt(Common_1.Range()),\r\n        z: core_1.Opt(Common_1.Range()),\r\n        absolute: core_1.Opt(Common_1.Range()),\r\n        horizontal: core_1.Opt(Common_1.Range())\r\n    }, { context: 'distance' }));\r\n    schemas.register('entity_predicate', core_1.ObjectNode({\r\n        type: core_1.Opt(StringNode({ validator: 'resource', params: { pool: 'entity_type', allowTag: true } })),\r\n        nbt: core_1.Opt(StringNode({ validator: 'nbt', params: { registry: { category: 'minecraft:entity', id: ['pop', { push: 'type' }] } } })),\r\n        team: core_1.Opt(StringNode({ validator: 'team' })),\r\n        location: core_1.Opt(Reference('location_predicate')),\r\n        distance: core_1.Opt(Reference('distance_predicate')),\r\n        flags: core_1.Opt(core_1.ObjectNode({\r\n            is_on_fire: core_1.Opt(core_1.BooleanNode()),\r\n            is_sneaking: core_1.Opt(core_1.BooleanNode()),\r\n            is_sprinting: core_1.Opt(core_1.BooleanNode()),\r\n            is_swimming: core_1.Opt(core_1.BooleanNode()),\r\n            is_baby: core_1.Opt(core_1.BooleanNode())\r\n        })),\r\n        equipment: core_1.Opt(core_1.MapNode(StringNode({ enum: 'slot' }), Reference('item_predicate'))),\r\n        player: core_1.Opt(Reference('player_predicate')),\r\n        effects: core_1.Opt(core_1.MapNode(StringNode({ validator: 'resource', params: { pool: 'mob_effect' } }), Reference('status_effect_predicate')))\r\n    }, { context: 'entity' }));\r\n    schemas.register('damage_source_predicate', core_1.ObjectNode({\r\n        is_explosion: core_1.Opt(core_1.BooleanNode()),\r\n        is_fire: core_1.Opt(core_1.BooleanNode()),\r\n        is_magic: core_1.Opt(core_1.BooleanNode()),\r\n        is_projectile: core_1.Opt(core_1.BooleanNode()),\r\n        is_lightning: core_1.Opt(core_1.BooleanNode()),\r\n        bypasses_armor: core_1.Opt(core_1.BooleanNode()),\r\n        bypasses_invulnerability: core_1.Opt(core_1.BooleanNode()),\r\n        bypasses_magic: core_1.Opt(core_1.BooleanNode()),\r\n        source_entity: core_1.Opt(Reference('entity_predicate')),\r\n        direct_entity: core_1.Opt(Reference('entity_predicate'))\r\n    }, { context: 'damage_source' }));\r\n    schemas.register('damage_predicate', core_1.ObjectNode({\r\n        dealt: core_1.Opt(Common_1.Range()),\r\n        taken: core_1.Opt(Common_1.Range()),\r\n        blocked: core_1.Opt(core_1.BooleanNode()),\r\n        source_entity: core_1.Opt(Reference('entity_predicate')),\r\n        type: core_1.Opt(Reference('damage_source_predicate'))\r\n    }, { context: 'damage' }));\r\n}\r\nexports.initPredicatesSchemas = initPredicatesSchemas;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.initAdvancementSchemas = void 0;\r\nconst core_1 = require(\"@mcschema/core\");\r\nconst Common_1 = require(\"./Common\");\r\nconst Predicates_1 = require(\"./Predicates\");\r\nfunction initAdvancementSchemas(schemas, collections) {\r\n    const Reference = core_1.Reference.bind(undefined, schemas);\r\n    const StringNode = core_1.StringNode.bind(undefined, collections);\r\n    schemas.register('advancement', core_1.Mod(core_1.ObjectNode({\r\n        display: core_1.Opt(core_1.Mod(core_1.ObjectNode({\r\n            icon: core_1.ObjectNode({\r\n                item: StringNode({ validator: 'resource', params: { pool: 'item' } }),\r\n                nbt: core_1.Opt(StringNode({ validator: 'nbt', params: { registry: { category: 'minecraft:item', id: ['pop', { push: 'item' }] } } }))\r\n            }),\r\n            title: Reference('text_component'),\r\n            description: Reference('text_component'),\r\n            background: core_1.Opt(StringNode()),\r\n            frame: core_1.Opt(StringNode({ enum: ['task', 'challenge', 'goal'] })),\r\n            show_toast: core_1.Opt(core_1.BooleanNode()),\r\n            announce_to_chat: core_1.Opt(core_1.BooleanNode()),\r\n            hidden: core_1.Opt(core_1.BooleanNode())\r\n        }), {\r\n            default: () => ({\r\n                icon: {\r\n                    item: 'minecraft:stone'\r\n                },\r\n                title: '',\r\n                description: ''\r\n            })\r\n        })),\r\n        parent: core_1.Opt(StringNode({ validator: 'resource', params: { pool: '$advancement' } })),\r\n        criteria: core_1.MapNode(StringNode(), Reference('advancement_criteria')),\r\n        requirements: core_1.Opt(core_1.ListNode(core_1.ListNode(StringNode() // TODO: add validation\r\n        ))),\r\n        rewards: core_1.Opt(core_1.ObjectNode({\r\n            function: core_1.Opt(StringNode({ validator: 'resource', params: { pool: '$function' } })),\r\n            loot: core_1.Opt(core_1.ListNode(StringNode({ validator: 'resource', params: { pool: '$loot_table' } }))),\r\n            recipes: core_1.Opt(core_1.ListNode(StringNode({ validator: 'resource', params: { pool: '$recipe' } }))),\r\n            experience: core_1.Opt(core_1.NumberNode({ integer: true }))\r\n        })),\r\n    }, { context: 'advancement' }), {\r\n        default: () => ({\r\n            criteria: {\r\n                requirement: {\r\n                    trigger: 'minecraft:location'\r\n                }\r\n            }\r\n        })\r\n    }));\r\n    schemas.register('advancement_criteria', core_1.ObjectNode({\r\n        trigger: StringNode({ validator: 'resource', params: { pool: collections.get('advancement_trigger') } }),\r\n        conditions: core_1.Opt(core_1.ObjectNode({\r\n            [core_1.Switch]: ['pop', { push: 'trigger' }],\r\n            [core_1.Case]: {\r\n                'minecraft:bee_nest_destroyed': {\r\n                    block: core_1.Opt(StringNode({ validator: 'resource', params: { pool: 'block' } })),\r\n                    num_bees_inside: core_1.Opt(core_1.NumberNode({ integer: true })),\r\n                    item: core_1.Opt(Reference('item_predicate'))\r\n                },\r\n                'minecraft:bred_animals': {\r\n                    parent: core_1.Opt(Reference('entity_predicate')),\r\n                    partner: core_1.Opt(Reference('entity_predicate')),\r\n                    child: core_1.Opt(Reference('entity_predicate'))\r\n                },\r\n                'minecraft:brewed_potion': {\r\n                    potion: core_1.Opt(StringNode({ validator: 'resource', params: { pool: 'potion' } }))\r\n                },\r\n                'minecraft:changed_dimension': {\r\n                    from: core_1.Opt(StringNode({ enum: 'dimension' })),\r\n                    to: core_1.Opt(StringNode({ enum: 'dimension' }))\r\n                },\r\n                'minecraft:channeled_lightning': {\r\n                    victims: core_1.Opt(core_1.ListNode(core_1.Opt(Reference('entity_predicate'))))\r\n                },\r\n                'minecraft:construct_beacon': {\r\n                    level: core_1.Opt(Common_1.Range())\r\n                },\r\n                'minecraft:consume_item': {\r\n                    item: core_1.Opt(Reference('item_predicate'))\r\n                },\r\n                'minecraft:cured_zombie_villager': {\r\n                    villager: core_1.Opt(Reference('entity_predicate')),\r\n                    zombie: core_1.Opt(Reference('entity_predicate'))\r\n                },\r\n                'minecraft:effects_changed': {\r\n                    effects: core_1.Opt(core_1.MapNode(StringNode({ validator: 'resource', params: { pool: 'mob_effect' } }), Reference('status_effect_predicate')))\r\n                },\r\n                'minecraft:enter_block': {\r\n                    block: core_1.Opt(StringNode({ validator: 'resource', params: { pool: 'block' } })),\r\n                    state: core_1.Opt(core_1.MapNode(StringNode(), StringNode(), { validation: { validator: 'block_state_map', params: { id: ['pop', { push: 'block' }] } } }))\r\n                },\r\n                'minecraft:enchanted_item': {\r\n                    levels: core_1.Opt(Common_1.Range()),\r\n                    item: core_1.Opt(Reference('item_predicate'))\r\n                },\r\n                'minecraft:entity_hurt_player': {\r\n                    damage: core_1.Opt(Reference('damage_predicate'))\r\n                },\r\n                'minecraft:entity_killed_player': {\r\n                    entity: core_1.Opt(Reference('entity_predicate')),\r\n                    killing_blow: core_1.Opt(Reference('damage_source_predicate'))\r\n                },\r\n                'minecraft:filled_bucket': {\r\n                    item: core_1.Opt(Reference('item_predicate'))\r\n                },\r\n                'minecraft:fishing_rod_hooked': {\r\n                    entity: core_1.Opt(Reference('entity_predicate')),\r\n                    item: core_1.Opt(Reference('item_predicate'))\r\n                },\r\n                'minecraft:hero_of_the_village': Predicates_1.LocationFields,\r\n                'minecraft:inventory_changed': {\r\n                    slots: core_1.Opt(core_1.ObjectNode({\r\n                        empty: core_1.Opt(Common_1.Range()),\r\n                        occupied: core_1.Opt(Common_1.Range()),\r\n                        full: core_1.Opt(Common_1.Range())\r\n                    })),\r\n                    items: core_1.Opt(core_1.ListNode(Reference('item_predicate')))\r\n                },\r\n                'minecraft:item_durability_changed': {\r\n                    delta: core_1.Opt(Common_1.Range()),\r\n                    durability: core_1.Opt(Common_1.Range()),\r\n                    item: core_1.Opt(Reference('item_predicate'))\r\n                },\r\n                'minecraft:killed_by_crossbow': {\r\n                    unique_entity_types: core_1.Opt(Common_1.Range()),\r\n                    victims: core_1.Opt(core_1.ListNode(core_1.Opt(Reference('entity_predicate'))))\r\n                },\r\n                'minecraft:levitation': {\r\n                    distance: core_1.Opt(Common_1.Range()),\r\n                    duration: core_1.Opt(Common_1.Range())\r\n                },\r\n                'minecraft:location': Predicates_1.LocationFields,\r\n                'minecraft:nether_travel': {\r\n                    distance: core_1.Opt(Common_1.Range()),\r\n                    entered: core_1.Opt(Reference('location_predicate')),\r\n                    exited: core_1.Opt(Reference('location_predicate'))\r\n                },\r\n                'minecraft:placed_block': {\r\n                    block: core_1.Opt(StringNode({ validator: 'resource', params: { pool: 'block' } })),\r\n                    state: core_1.Opt(core_1.MapNode(StringNode(), StringNode(), { validation: { validator: 'block_state_map', params: { id: ['pop', { push: 'block' }] } } })),\r\n                    item: core_1.Opt(Reference('item_predicate')),\r\n                    location: core_1.Opt(Reference('location_predicate'))\r\n                },\r\n                'minecraft:player_hurt_entity': {\r\n                    damage: core_1.Opt(Reference('damage_predicate')),\r\n                    entity: core_1.Opt(Reference('entity_predicate'))\r\n                },\r\n                'minecraft:player_killed_entity': {\r\n                    entity: core_1.Opt(Reference('entity_predicate')),\r\n                    killing_blow: core_1.Opt(Reference('damage_source_predicate'))\r\n                },\r\n                'minecraft:recipe_unlocked': {\r\n                    recipe: StringNode({ validator: 'resource', params: { pool: '$recipe' } })\r\n                },\r\n                'minecraft:safely_harvest_honey': {\r\n                    block: core_1.Opt(core_1.ObjectNode({\r\n                        block: core_1.Opt(StringNode({ validator: 'resource', params: { pool: 'block' } })),\r\n                        tag: core_1.Opt(StringNode({ validator: 'resource', params: { pool: '$tag/block' } }))\r\n                    })),\r\n                    item: core_1.Opt(Reference('item_predicate'))\r\n                },\r\n                'minecraft:slept_in_bed': Predicates_1.LocationFields,\r\n                'minecraft:slide_down_block': {\r\n                    block: core_1.Opt(StringNode({ validator: 'resource', params: { pool: 'block' } }))\r\n                },\r\n                'minecraft:shot_crossbow': {\r\n                    item: core_1.Opt(Reference('item_predicate'))\r\n                },\r\n                'minecraft:summoned_entity': {\r\n                    entity: core_1.Opt(Reference('entity_predicate'))\r\n                },\r\n                'minecraft:tame_animal': {\r\n                    entity: core_1.Opt(Reference('entity_predicate'))\r\n                },\r\n                'minecraft:used_ender_eye': {\r\n                    distance: core_1.Opt(Common_1.Range())\r\n                },\r\n                'minecraft:used_totem': {\r\n                    item: core_1.Opt(Reference('item_predicate'))\r\n                },\r\n                'minecraft:villager_trade': {\r\n                    villager: core_1.Opt(Reference('entity_predicate')),\r\n                    item: core_1.Opt(Reference('item_predicate'))\r\n                },\r\n                'minecraft:voluntary_exile': Predicates_1.LocationFields\r\n            }\r\n        }, { context: 'criterion' }))\r\n    }, { category: 'predicate', context: 'criterion' }));\r\n}\r\nexports.initAdvancementSchemas = initAdvancementSchemas;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.initConditionSchemas = void 0;\r\nconst core_1 = require(\"@mcschema/core\");\r\nconst Common_1 = require(\"./Common\");\r\nfunction initConditionSchemas(schemas, collections) {\r\n    const Reference = core_1.Reference.bind(undefined, schemas);\r\n    const StringNode = core_1.StringNode.bind(undefined, collections);\r\n    schemas.register('predicate', core_1.ObjectOrList(Reference('condition'), { choiceContext: 'condition' }));\r\n    schemas.register('condition', core_1.Mod(core_1.ObjectNode({\r\n        condition: StringNode({ validator: 'resource', params: { pool: 'loot_condition_type' } }),\r\n        [core_1.Switch]: [{ push: 'condition' }],\r\n        [core_1.Case]: Common_1.ConditionCases\r\n    }, { category: 'predicate', context: 'condition' }), {\r\n        default: () => ({\r\n            condition: 'minecraft:entity_properties',\r\n            entity: 'this'\r\n        })\r\n    }));\r\n}\r\nexports.initConditionSchemas = initConditionSchemas;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.LootFunctions = exports.LootConditions = exports.LootCopySources = exports.LootEntitySources = exports.LootTableTypes = void 0;\r\nexports.LootTableTypes = new Map([\r\n    ['minecraft:advancement_entity', { requires: [7 /* Origin */, 8 /* ThisEntity */], allows: [] }],\r\n    ['minecraft:advancement_reward', { requires: [7 /* Origin */, 8 /* ThisEntity */], allows: [] }],\r\n    ['minecraft:barter', { requires: [8 /* ThisEntity */], allows: [] }],\r\n    ['minecraft:block', { requires: [1 /* BlockState */, 7 /* Origin */, 9 /* Tool */], allows: [0 /* BlockEntity */, 4 /* ExplosionRadius */, 8 /* ThisEntity */] }],\r\n    ['minecraft:chest', { requires: [7 /* Origin */], allows: [8 /* ThisEntity */] }],\r\n    ['minecraft:command', { requires: [7 /* Origin */], allows: [8 /* ThisEntity */] }],\r\n    ['minecraft:empty', { requires: [], allows: [] }],\r\n    ['minecraft:entity', { requires: [2 /* DamageSource */, 7 /* Origin */, 8 /* ThisEntity */], allows: [3 /* DirectKillerEntity */, 5 /* KillerEntity */, 6 /* LastDamagePlayer */] }],\r\n    ['minecraft:fishing', { requires: [7 /* Origin */, 9 /* Tool */], allows: [8 /* ThisEntity */] }],\r\n    ['minecraft:generic', { requires: [2 /* DamageSource */, 0 /* BlockEntity */, 1 /* BlockState */, 3 /* DirectKillerEntity */, 4 /* ExplosionRadius */, 5 /* KillerEntity */, 6 /* LastDamagePlayer */, 7 /* Origin */, 8 /* ThisEntity */, 9 /* Tool */], allows: [] }],\r\n    ['minecraft:gift', { requires: [7 /* Origin */, 8 /* ThisEntity */], allows: [] }],\r\n    ['minecraft:selector', { requires: [7 /* Origin */], allows: [8 /* ThisEntity */] }]\r\n]);\r\n/**\r\n * A map from loot entity sources to an array of their required context.\r\n */\r\nexports.LootEntitySources = new Map([\r\n    ['direct_killer', [3 /* DirectKillerEntity */]],\r\n    ['killer', [5 /* KillerEntity */]],\r\n    ['killer_player', [5 /* KillerEntity */]],\r\n    ['this', [8 /* ThisEntity */]]\r\n]);\r\n/**\r\n * A map from loot copy sources to an array of their required context.\r\n */\r\nexports.LootCopySources = new Map([\r\n    ['block_entity', [0 /* BlockEntity */]],\r\n    ['killer', [5 /* KillerEntity */]],\r\n    ['killer_player', [5 /* KillerEntity */]],\r\n    ['this', [8 /* ThisEntity */]]\r\n]);\r\n/**\r\n * A map from loot condition IDs to an array of their required context.\r\n */\r\nexports.LootConditions = new Map([\r\n    ['minecraft:alternative', []],\r\n    ['minecraft:block_state_property', [1 /* BlockState */]],\r\n    ['minecraft:damage_source_properties', [2 /* DamageSource */]],\r\n    ['minecraft:entity_properties', [7 /* Origin */]],\r\n    ['minecraft:entity_scores', []],\r\n    ['minecraft:inverted', []],\r\n    ['minecraft:killed_by_player', [6 /* LastDamagePlayer */]],\r\n    ['minecraft:location_check', []],\r\n    ['minecraft:match_tool', [9 /* Tool */]],\r\n    ['minecraft:random_chance', []],\r\n    ['minecraft:random_chance_with_looting', [5 /* KillerEntity */]],\r\n    ['minecraft:reference', []],\r\n    ['minecraft:survives_explosion', [4 /* ExplosionRadius */]],\r\n    ['minecraft:table_bonus', [9 /* Tool */]],\r\n    ['minecraft:time_check', []],\r\n    ['minecraft:weather_check', []]\r\n]);\r\n/**\r\n * A map from loot function IDs to an array of their required context.\r\n */\r\nexports.LootFunctions = new Map([\r\n    ['minecraft:apply_bonus', [9 /* Tool */]],\r\n    ['minecraft:copy_name', []],\r\n    ['minecraft:copy_nbt', []],\r\n    ['minecraft:copy_state', [1 /* BlockState */]],\r\n    ['minecraft:enchant_randomly', []],\r\n    ['minecraft:enchant_with_levels', []],\r\n    ['minecraft:exploration_map', [7 /* Origin */]],\r\n    ['minecraft:explosion_decay', []],\r\n    ['minecraft:fill_player_head', []],\r\n    ['minecraft:furnace_smelt', []],\r\n    ['minecraft:limit_count', []],\r\n    ['minecraft:looting_enchant', [5 /* KillerEntity */]],\r\n    ['minecraft:set_attributes', []],\r\n    ['minecraft:set_contents', []],\r\n    ['minecraft:set_count', []],\r\n    ['minecraft:set_damage', []],\r\n    ['minecraft:set_loot_table', []],\r\n    ['minecraft:set_lore', []],\r\n    ['minecraft:set_name', []],\r\n    ['minecraft:set_nbt', []],\r\n    ['minecraft:set_stew_effect', []]\r\n]);\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.initLootTableSchemas = void 0;\r\nconst core_1 = require(\"@mcschema/core\");\r\nconst LootContext_1 = require(\"../LootContext\");\r\nconst Common_1 = require(\"./Common\");\r\nfunction initLootTableSchemas(schemas, collections) {\r\n    const Reference = core_1.Reference.bind(undefined, schemas);\r\n    const StringNode = core_1.StringNode.bind(undefined, collections);\r\n    const conditions = {\r\n        conditions: core_1.Opt(core_1.ListNode(Reference('loot_condition')))\r\n    };\r\n    const functionsAndConditions = {\r\n        functions: core_1.Opt(core_1.ListNode(Reference('loot_function'))),\r\n        ...conditions\r\n    };\r\n    function compileSwitchNode(contextMap, collectionID, getNode) {\r\n        const cases = [];\r\n        const getAvailableOptions = (providedContext) => collections\r\n            .get(collectionID)\r\n            .filter(t => {\r\n            var _a;\r\n            const requiredContext = (_a = contextMap.get(t)) !== null && _a !== void 0 ? _a : [];\r\n            return requiredContext.every(c => providedContext.includes(c));\r\n        });\r\n        for (const [tableType, { allows, requires }] of LootContext_1.LootTableTypes) {\r\n            const providedContext = [...allows, ...requires];\r\n            cases.push({\r\n                match: path => path.getModel().get(new core_1.Path(['type'])) === tableType,\r\n                node: getNode(getAvailableOptions(providedContext))\r\n            });\r\n        }\r\n        cases.push({ match: _ => true, node: getNode(collectionID) });\r\n        return core_1.SwitchNode(cases);\r\n    }\r\n    const conditionSwtichNode = compileSwitchNode(LootContext_1.LootConditions, 'loot_condition_type', type => StringNode({ validator: 'resource', params: { pool: type instanceof Array ? type : `loot_condition_type` } }));\r\n    const functionSwtichNode = compileSwitchNode(LootContext_1.LootFunctions, 'loot_function_type', type => StringNode({ validator: 'resource', params: { pool: type instanceof Array ? type : `loot_function_type` } }));\r\n    const entitySourceSwtichNode = compileSwitchNode(LootContext_1.LootEntitySources, 'entity_source', type => StringNode({ enum: type }));\r\n    const copySourceSwtichNode = compileSwitchNode(LootContext_1.LootCopySources, 'copy_source', type => StringNode({ enum: type }));\r\n    schemas.register('loot_table', core_1.Mod(core_1.ObjectNode({\r\n        type: core_1.Opt(StringNode({ validator: \"resource\", params: { pool: collections.get('loot_context_type') } })),\r\n        pools: core_1.Opt(core_1.ListNode(core_1.Mod(core_1.ObjectNode({\r\n            rolls: Common_1.Range({ allowBinomial: true, integer: true }),\r\n            bonus_rolls: core_1.Opt(Common_1.Range({ integer: true })),\r\n            entries: core_1.ListNode(Reference('loot_entry')),\r\n            ...functionsAndConditions\r\n        }, { category: 'pool', context: 'loot_pool' }), {\r\n            default: () => ({\r\n                rolls: 1,\r\n                entries: [{\r\n                        type: 'minecraft:item',\r\n                        name: 'minecraft:stone'\r\n                    }]\r\n            })\r\n        }))),\r\n        functions: core_1.Opt(core_1.ListNode(Reference('loot_function')))\r\n    }, { context: 'loot_table' }), {\r\n        default: () => ({\r\n            pools: [{\r\n                    rolls: 1,\r\n                    entries: [{\r\n                            type: 'minecraft:item',\r\n                            name: 'minecraft:stone'\r\n                        }]\r\n                }]\r\n        })\r\n    }));\r\n    const weightMod = {\r\n        enabled: path => {\r\n            var _a;\r\n            return ((_a = path.pop().get()) === null || _a === void 0 ? void 0 : _a.length) > 1\r\n                && !['minecraft:alternatives', 'minecraft:group', 'minecraft:sequence'].includes(path.push('type').get());\r\n        }\r\n    };\r\n    schemas.register('loot_entry', core_1.Mod(core_1.ObjectNode({\r\n        type: StringNode({ validator: 'resource', params: { pool: 'loot_pool_entry_type' } }),\r\n        weight: core_1.Opt(core_1.Mod(core_1.NumberNode({ integer: true, min: 1 }), weightMod)),\r\n        quality: core_1.Opt(core_1.Mod(core_1.NumberNode({ integer: true }), weightMod)),\r\n        [core_1.Switch]: [{ push: 'type' }],\r\n        [core_1.Case]: {\r\n            'minecraft:alternatives': {\r\n                children: core_1.ListNode(Reference('loot_entry')),\r\n                ...functionsAndConditions\r\n            },\r\n            'minecraft:dynamic': {\r\n                name: StringNode(),\r\n                ...functionsAndConditions\r\n            },\r\n            'minecraft:group': {\r\n                children: core_1.ListNode(Reference('loot_entry')),\r\n                ...functionsAndConditions\r\n            },\r\n            'minecraft:item': {\r\n                name: StringNode({ validator: 'resource', params: { pool: 'item' } }),\r\n                ...functionsAndConditions\r\n            },\r\n            'minecraft:loot_table': {\r\n                name: StringNode({ validator: 'resource', params: { pool: '$loot_table' } }),\r\n                ...functionsAndConditions\r\n            },\r\n            'minecraft:sequence': {\r\n                children: core_1.ListNode(Reference('loot_entry')),\r\n                ...functionsAndConditions\r\n            },\r\n            'minecraft:tag': {\r\n                name: StringNode({ validator: 'resource', params: { pool: '$tag/item' } }),\r\n                expand: core_1.Opt(core_1.BooleanNode()),\r\n                ...functionsAndConditions\r\n            }\r\n        }\r\n    }, { context: 'loot_entry' }), {\r\n        default: () => ({\r\n            type: 'minecraft:item',\r\n            name: 'minecraft:stone'\r\n        })\r\n    }));\r\n    schemas.register('loot_function', core_1.Mod(core_1.ObjectNode({\r\n        function: functionSwtichNode,\r\n        [core_1.Switch]: [{ push: 'function' }],\r\n        [core_1.Case]: (() => {\r\n            const cases = {\r\n                'minecraft:apply_bonus': {\r\n                    enchantment: StringNode({ validator: 'resource', params: { pool: 'enchantment' } }),\r\n                    formula: StringNode({ validator: 'resource', params: { pool: collections.get('loot_table_apply_bonus_formula') } }),\r\n                    parameters: core_1.Mod(core_1.ObjectNode({\r\n                        bonusMultiplier: core_1.Mod(core_1.NumberNode(), {\r\n                            enabled: path => path.pop().push('formula').get() === 'minecraft:uniform_bonus_count'\r\n                        }),\r\n                        extra: core_1.Mod(core_1.NumberNode(), {\r\n                            enabled: path => path.pop().push('formula').get() === 'minecraft:binomial_with_bonus_count'\r\n                        }),\r\n                        probability: core_1.Mod(core_1.NumberNode(), {\r\n                            enabled: path => path.pop().push('formula').get() === 'minecraft:binomial_with_bonus_count'\r\n                        })\r\n                    }), {\r\n                        enabled: path => path.push('formula').get() !== 'minecraft:ore_drops'\r\n                    })\r\n                },\r\n                'minecraft:copy_name': {\r\n                    source: copySourceSwtichNode\r\n                },\r\n                'minecraft:copy_nbt': {\r\n                    source: copySourceSwtichNode,\r\n                    ops: core_1.ListNode(core_1.ObjectNode({\r\n                        source: StringNode({ validator: 'nbt_path', params: { category: { getter: 'copy_source', path: ['pop', 'pop', 'pop', { push: 'source' }] } } }),\r\n                        target: StringNode({ validator: 'nbt_path', params: { category: 'minecraft:item' } }),\r\n                        op: StringNode({ enum: ['replace', 'append', 'merge'] })\r\n                    }, { context: 'nbt_operation' }))\r\n                },\r\n                'minecraft:copy_state': {\r\n                    block: StringNode({ validator: 'resource', params: { pool: 'block' } }),\r\n                    properties: core_1.ListNode(StringNode({ validator: 'block_state_key', params: { id: ['pop', 'pop', { push: 'block' }] } }))\r\n                },\r\n                'minecraft:enchant_randomly': {\r\n                    enchantments: core_1.Opt(core_1.ListNode(StringNode({ validator: 'resource', params: { pool: 'enchantment' } })))\r\n                },\r\n                'minecraft:enchant_with_levels': {\r\n                    levels: Common_1.Range({ allowBinomial: true }),\r\n                    treasure: core_1.Opt(core_1.BooleanNode())\r\n                },\r\n                'minecraft:exploration_map': {\r\n                    destination: core_1.Opt(StringNode({ enum: 'structure_feature' })),\r\n                    decoration: core_1.Opt(StringNode({ enum: 'map_decoration' })),\r\n                    zoom: core_1.Opt(core_1.NumberNode({ integer: true })),\r\n                    search_radius: core_1.Opt(core_1.NumberNode({ integer: true })),\r\n                    skip_existing_chunks: core_1.Opt(core_1.BooleanNode())\r\n                },\r\n                'minecraft:fill_player_head': {\r\n                    entity: entitySourceSwtichNode\r\n                },\r\n                'minecraft:limit_count': {\r\n                    limit: Common_1.Range({ bounds: true })\r\n                },\r\n                'minecraft:looting_enchant': {\r\n                    count: Common_1.Range({ bounds: true }),\r\n                    limit: core_1.Opt(core_1.NumberNode({ integer: true }))\r\n                },\r\n                'minecraft:set_attributes': {\r\n                    modifiers: core_1.ListNode(Reference('attribute_modifier'))\r\n                },\r\n                'minecraft:set_contents': {\r\n                    entries: core_1.ListNode(Reference('loot_entry'))\r\n                },\r\n                'minecraft:set_count': {\r\n                    count: Common_1.Range({ allowBinomial: true })\r\n                },\r\n                'minecraft:set_damage': {\r\n                    damage: Common_1.Range({ forceRange: true })\r\n                },\r\n                'minecraft:set_loot_table': {\r\n                    name: StringNode({ validator: 'resource', params: { pool: '$loot_table' } }),\r\n                    seed: core_1.Opt(core_1.NumberNode({ integer: true }))\r\n                },\r\n                'minecraft:set_lore': {\r\n                    entity: core_1.Opt(entitySourceSwtichNode),\r\n                    lore: core_1.ListNode(Reference('text_component')),\r\n                    replace: core_1.Opt(core_1.BooleanNode())\r\n                },\r\n                'minecraft:set_name': {\r\n                    entity: core_1.Opt(entitySourceSwtichNode),\r\n                    name: core_1.Opt(Reference('text_component'))\r\n                },\r\n                'minecraft:set_nbt': {\r\n                    tag: StringNode({ validator: 'nbt', params: { registry: { category: 'minecraft:item' } } })\r\n                },\r\n                'minecraft:set_stew_effect': {\r\n                    effects: core_1.Opt(core_1.ListNode(core_1.ObjectNode({\r\n                        type: StringNode({ validator: 'resource', params: { pool: 'mob_effect' } }),\r\n                        duration: Common_1.Range()\r\n                    })))\r\n                }\r\n            };\r\n            const res = {};\r\n            collections.get('loot_function_type').forEach(f => {\r\n                res[f] = { ...cases[f], ...conditions };\r\n            });\r\n            return res;\r\n        })()\r\n    }, { category: 'function', context: 'function' }), {\r\n        default: () => ({\r\n            function: 'minecraft:set_count',\r\n            count: 1\r\n        })\r\n    }));\r\n    schemas.register('loot_condition', core_1.Mod(core_1.ObjectNode({\r\n        condition: conditionSwtichNode,\r\n        [core_1.Switch]: [{ push: 'condition' }],\r\n        [core_1.Case]: {\r\n            ...Common_1.ConditionCases,\r\n            'minecraft:entity_properties': {\r\n                entity: entitySourceSwtichNode,\r\n                predicate: Reference('entity_predicate')\r\n            },\r\n            'minecraft:entity_scores': {\r\n                entity: entitySourceSwtichNode,\r\n                scores: core_1.MapNode(StringNode({ validator: 'objective' }), Common_1.Range({ bounds: true }))\r\n            }\r\n        }\r\n    }, { category: 'predicate', context: 'condition' }), {\r\n        default: () => ({\r\n            condition: 'minecraft:random_chance',\r\n            chance: 0.5\r\n        })\r\n    }));\r\n    schemas.register('attribute_modifier', core_1.Mod(core_1.ObjectNode({\r\n        attribute: StringNode({ validator: 'resource', params: { pool: 'attribute' } }),\r\n        name: StringNode(),\r\n        amount: Common_1.Range({ bounds: true }),\r\n        operation: StringNode({ enum: ['addition', 'multiply_base', 'multiply_total'] }),\r\n        slot: core_1.StringOrList(StringNode({ enum: 'slot' }))\r\n    }, { context: 'attribute_modifier' }), {\r\n        default: () => ({\r\n            attribute: 'minecraft:generic.max_health',\r\n            name: '',\r\n            amount: 1,\r\n            operation: 'addition',\r\n            slot: 'mainhand'\r\n        })\r\n    }));\r\n}\r\nexports.initLootTableSchemas = initLootTableSchemas;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.initPackMcmetaSchemas = void 0;\r\nconst core_1 = require(\"@mcschema/core\");\r\nfunction initPackMcmetaSchemas(schemas, _) {\r\n    const getSimpleString = (jsonText) => { var _a, _b; return jsonText instanceof Array ? getSimpleString(jsonText[0]) : (_b = (_a = jsonText === null || jsonText === void 0 ? void 0 : jsonText.text) !== null && _a !== void 0 ? _a : jsonText === null || jsonText === void 0 ? void 0 : jsonText.toString()) !== null && _b !== void 0 ? _b : ''; };\r\n    schemas.register('pack_mcmeta', core_1.Mod(core_1.ObjectNode({\r\n        pack: core_1.Mod(core_1.ObjectNode({\r\n            pack_format: core_1.Mod(core_1.NumberNode({ integer: true, min: 5, max: 5 }), { default: () => 5 }),\r\n            description: core_1.Reference(schemas, 'text_component')\r\n        }), {\r\n            default: () => ({\r\n                pack_format: 5,\r\n                description: ''\r\n            })\r\n        })\r\n    }), {\r\n        default: () => ({\r\n            pack: {\r\n                pack_format: 5,\r\n                description: ''\r\n            }\r\n        })\r\n    }));\r\n}\r\nexports.initPackMcmetaSchemas = initPackMcmetaSchemas;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.initRecipeSchemas = void 0;\r\nconst core_1 = require(\"@mcschema/core\");\r\nfunction initRecipeSchemas(schemas, collections) {\r\n    const Reference = core_1.Reference.bind(undefined, schemas);\r\n    const StringNode = core_1.StringNode.bind(undefined, collections);\r\n    schemas.register('recipe', core_1.Mod(core_1.ObjectNode({\r\n        type: StringNode({ validator: 'resource', params: { pool: 'recipe_serializer' } }),\r\n        [core_1.Switch]: [{ push: 'type' }],\r\n        [core_1.Case]: {\r\n            'minecraft:crafting_shaped': {\r\n                group: core_1.Opt(StringNode({ enum: 'recipe_group', additional: true })),\r\n                pattern: core_1.ListNode(StringNode()),\r\n                key: core_1.MapNode(StringNode(), // TODO: add validation\r\n                Reference('recipe_ingredient')),\r\n                result: Reference('recipe_result')\r\n            },\r\n            'minecraft:crafting_shapeless': {\r\n                group: core_1.Opt(StringNode()),\r\n                ingredients: core_1.ListNode(Reference('recipe_ingredient')),\r\n                result: Reference('recipe_result')\r\n            },\r\n            'minecraft:smelting': {\r\n                group: core_1.Opt(StringNode()),\r\n                ingredient: Reference('recipe_ingredient'),\r\n                result: StringNode({ validator: 'resource', params: { pool: 'item' } }),\r\n                experience: core_1.Opt(core_1.NumberNode()),\r\n                cookingtime: core_1.Opt(core_1.Mod(core_1.NumberNode({ integer: true }), { default: () => 200 }))\r\n            },\r\n            'minecraft:blasting': {\r\n                group: core_1.Opt(StringNode()),\r\n                ingredient: Reference('recipe_ingredient'),\r\n                result: StringNode({ validator: 'resource', params: { pool: 'item' } }),\r\n                experience: core_1.Opt(core_1.NumberNode()),\r\n                cookingtime: core_1.Opt(core_1.Mod(core_1.NumberNode({ integer: true }), { default: () => 100 }))\r\n            },\r\n            'minecraft:smoking': {\r\n                group: core_1.Opt(StringNode()),\r\n                ingredient: Reference('recipe_ingredient'),\r\n                result: StringNode({ validator: 'resource', params: { pool: 'item' } }),\r\n                experience: core_1.Opt(core_1.NumberNode()),\r\n                cookingtime: core_1.Opt(core_1.Mod(core_1.NumberNode({ integer: true }), { default: () => 100 }))\r\n            },\r\n            'minecraft:campfire_cooking': {\r\n                group: core_1.Opt(StringNode()),\r\n                ingredient: Reference('recipe_ingredient'),\r\n                result: StringNode({ validator: 'resource', params: { pool: 'item' } }),\r\n                experience: core_1.Opt(core_1.NumberNode()),\r\n                cookingtime: core_1.Opt(core_1.Mod(core_1.NumberNode({ integer: true }), { default: () => 100 }))\r\n            },\r\n            'minecraft:stonecutting': {\r\n                group: core_1.Opt(StringNode()),\r\n                ingredient: Reference('recipe_ingredient'),\r\n                result: StringNode({ validator: 'resource', params: { pool: 'item' } }),\r\n                count: core_1.NumberNode({ integer: true })\r\n            },\r\n            'minecraft:smithing': {\r\n                group: core_1.Opt(StringNode()),\r\n                base: Reference('recipe_ingredient_object'),\r\n                addition: Reference('recipe_ingredient_object'),\r\n                result: Reference('recipe_result')\r\n            }\r\n        }\r\n    }, { context: 'recipe' }), {\r\n        default: () => ({\r\n            type: 'minecraft:crafting_shaped'\r\n        })\r\n    }));\r\n    schemas.register('recipe_ingredient', core_1.Mod(core_1.ChoiceNode([\r\n        {\r\n            type: 'object',\r\n            node: Reference('recipe_ingredient_object'),\r\n            change: v => v[0]\r\n        },\r\n        {\r\n            type: 'list',\r\n            node: core_1.ListNode(Reference('recipe_ingredient_object')),\r\n            change: v => [v]\r\n        }\r\n    ]), {\r\n        default: () => ({\r\n            item: 'minecraft:stone'\r\n        })\r\n    }));\r\n    schemas.register('recipe_ingredient_object', core_1.Mod(core_1.ObjectNode({\r\n        item: core_1.Opt(StringNode({ validator: 'resource', params: { pool: 'item' } })),\r\n        tag: core_1.Opt(StringNode({ validator: 'resource', params: { pool: '$tag/item' } }))\r\n    }), {\r\n        default: () => ({\r\n            item: 'minecraft:stone'\r\n        })\r\n    }));\r\n    schemas.register('recipe_result', core_1.Mod(core_1.ObjectNode({\r\n        item: StringNode({ validator: 'resource', params: { pool: 'item' } }),\r\n        count: core_1.Opt(core_1.Mod(core_1.NumberNode({ integer: true }), { default: () => 1 }))\r\n    }), {\r\n        default: () => ({\r\n            item: 'minecraft:stone'\r\n        })\r\n    }));\r\n}\r\nexports.initRecipeSchemas = initRecipeSchemas;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.initTagsSchemas = void 0;\r\nconst core_1 = require(\"@mcschema/core\");\r\nfunction initTagsSchemas(schemas, collections) {\r\n    const StringNode = core_1.StringNode.bind(undefined, collections);\r\n    const TagBase = (type) => core_1.Mod(core_1.ObjectNode({\r\n        replace: core_1.Opt(core_1.BooleanNode()),\r\n        values: core_1.ListNode(core_1.ChoiceNode([\r\n            {\r\n                type: 'string',\r\n                node: StringNode({ validator: 'resource', params: { pool: type, allowTag: true } }),\r\n                change: v => v.id\r\n            },\r\n            {\r\n                type: 'object',\r\n                node: core_1.ObjectNode({\r\n                    id: StringNode({ validator: 'resource', params: { pool: type, allowTag: true, allowUnknown: true } }),\r\n                    required: core_1.BooleanNode()\r\n                }),\r\n                change: v => ({ id: v })\r\n            }\r\n        ])),\r\n    }, { context: 'tag' }), {\r\n        default: () => ({\r\n            values: []\r\n        })\r\n    });\r\n    schemas.register('block_tag', TagBase('block'));\r\n    schemas.register('entity_type_tag', TagBase('entity_type'));\r\n    schemas.register('fluid_tag', TagBase('fluid'));\r\n    schemas.register('function_tag', TagBase('$function'));\r\n    schemas.register('item_tag', TagBase('item'));\r\n}\r\nexports.initTagsSchemas = initTagsSchemas;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.initTextComponentSchemas = void 0;\r\nconst core_1 = require(\"@mcschema/core\");\r\nfunction initTextComponentSchemas(schemas, collections) {\r\n    const Reference = core_1.Reference.bind(undefined, schemas);\r\n    const StringNode = core_1.StringNode.bind(undefined, collections);\r\n    const getSimpleString = (v) => { var _a; return v instanceof Array ? getSimpleString(v[0]) : (_a = v === null || v === void 0 ? void 0 : v.text) !== null && _a !== void 0 ? _a : (typeof v === 'object' ? '' : v === null || v === void 0 ? void 0 : v.toString()); };\r\n    schemas.register('text_component', core_1.Mod(core_1.ChoiceNode([\r\n        {\r\n            type: 'object',\r\n            node: Reference('text_component_object'),\r\n            change: v => v instanceof Array ? (typeof v[0] === 'object' ? v[0] : { text: getSimpleString(v[0]) }) : typeof v === 'object' ? v : { text: getSimpleString(v) }\r\n        },\r\n        {\r\n            type: 'list',\r\n            node: Reference('text_component_list'),\r\n            change: v => [v]\r\n        },\r\n        {\r\n            type: 'string',\r\n            priority: 1,\r\n            node: StringNode(),\r\n            change: getSimpleString\r\n        },\r\n        {\r\n            type: 'number',\r\n            node: core_1.NumberNode(),\r\n            change: v => {\r\n                const n = parseFloat(getSimpleString(v));\r\n                return isFinite(n) ? n : (!!v ? 1 : 0);\r\n            }\r\n        },\r\n        {\r\n            type: 'boolean',\r\n            node: core_1.BooleanNode(),\r\n            change: v => {\r\n                const s = getSimpleString(v);\r\n                return s === 'true' || s === 'false' ? s === 'true' : !!s;\r\n            }\r\n        }\r\n    ], { context: 'text_component' }), {\r\n        default: () => ({\r\n            text: \"\"\r\n        })\r\n    }));\r\n    const CommonFields = {\r\n        bold: core_1.Opt(core_1.BooleanNode()),\r\n        italic: core_1.Opt(core_1.BooleanNode()),\r\n        underlined: core_1.Opt(core_1.BooleanNode()),\r\n        strikethrough: core_1.Opt(core_1.BooleanNode()),\r\n        obfuscated: core_1.Opt(core_1.BooleanNode()),\r\n        insertion: core_1.Opt(StringNode()),\r\n        clickEvent: core_1.Opt(core_1.ObjectNode({\r\n            action: StringNode({ enum: ['open_url', 'open_file', 'run_command', 'suggest_command', 'change_page', 'copy_to_clipboard'] }),\r\n            [core_1.Switch]: [{ push: 'action' }],\r\n            [core_1.Case]: {\r\n                'change_page': {\r\n                    value: StringNode()\r\n                },\r\n                'copy_to_clipboard': {\r\n                    value: StringNode()\r\n                },\r\n                'open_file': {\r\n                    value: StringNode()\r\n                },\r\n                'open_url': {\r\n                    value: StringNode()\r\n                },\r\n                'run_command': {\r\n                    value: StringNode({ validator: 'command', params: { leadingSlash: true, allowPartial: true } })\r\n                },\r\n                'suggest_command': {\r\n                    value: StringNode({ validator: 'command', params: { leadingSlash: true, allowPartial: true } })\r\n                }\r\n            }\r\n        })),\r\n        hoverEvent: core_1.Opt(core_1.ObjectNode({\r\n            action: StringNode({ enum: ['show_text', 'show_item', 'show_entity'] }),\r\n            [core_1.Switch]: [{ push: 'action' }],\r\n            [core_1.Case]: {\r\n                'show_text': {\r\n                    value: core_1.Opt(Reference('text_component'))\r\n                },\r\n                'show_item': {\r\n                    value: core_1.Opt(StringNode({ validator: 'nbt', params: { module: 'util::InventoryItem' } }))\r\n                },\r\n                'show_entity': {\r\n                    value: core_1.Opt(core_1.ObjectNode({\r\n                        name: core_1.Opt(StringNode()),\r\n                        type: core_1.Opt(StringNode()),\r\n                        id: core_1.Opt(StringNode())\r\n                    }))\r\n                }\r\n            }\r\n        })),\r\n        extra: core_1.Opt(Reference('text_component_list'))\r\n    };\r\n    schemas.register('text_component_object', core_1.Mod(core_1.ChoiceNode([\r\n        {\r\n            type: 'text',\r\n            match: v => typeof v === 'object',\r\n            change: v => ({ text: '' }),\r\n            priority: -1,\r\n            node: core_1.ObjectNode({\r\n                text: StringNode(),\r\n                ...CommonFields\r\n            })\r\n        },\r\n        {\r\n            type: 'translation',\r\n            match: v => (v === null || v === void 0 ? void 0 : v.translate) !== undefined,\r\n            change: v => ({ translate: '' }),\r\n            node: core_1.ObjectNode({\r\n                translate: StringNode(),\r\n                with: core_1.Opt(Reference('text_component_list')),\r\n                ...CommonFields\r\n            })\r\n        },\r\n        {\r\n            type: 'score',\r\n            match: v => (v === null || v === void 0 ? void 0 : v.score) !== undefined,\r\n            change: v => ({ score: {} }),\r\n            node: core_1.ObjectNode({\r\n                score: core_1.ObjectNode({\r\n                    name: StringNode({ validator: 'entity', params: { amount: 'single', type: 'entities', isScoreHolder: true } }),\r\n                    objective: StringNode({ validator: 'objective' }),\r\n                    value: core_1.Opt(StringNode())\r\n                }),\r\n                ...CommonFields\r\n            })\r\n        },\r\n        {\r\n            type: 'selector',\r\n            match: v => (v === null || v === void 0 ? void 0 : v.selector) !== undefined,\r\n            change: v => ({ selector: '' }),\r\n            node: core_1.ObjectNode({\r\n                selector: StringNode({ validator: 'entity', params: { amount: 'multiple', type: 'entities' } }),\r\n                ...CommonFields\r\n            })\r\n        },\r\n        {\r\n            type: 'keybind',\r\n            match: v => (v === null || v === void 0 ? void 0 : v.keybind) !== undefined,\r\n            change: v => ({ keybind: '' }),\r\n            node: core_1.ObjectNode({\r\n                keybind: StringNode({ enum: 'keybind', additional: true }),\r\n                ...CommonFields\r\n            })\r\n        },\r\n        {\r\n            type: 'nbt',\r\n            match: v => (v === null || v === void 0 ? void 0 : v.nbt) !== undefined,\r\n            change: v => ({ nbt: '' }),\r\n            node: core_1.ObjectNode({\r\n                nbt: StringNode({ validator: 'nbt_path' }),\r\n                block: core_1.Opt(StringNode({ validator: 'vector', params: { dimension: 3, isInteger: true } })),\r\n                entity: core_1.Opt(StringNode({ validator: 'entity', params: { amount: 'multiple', type: 'entities' } })),\r\n                storage: core_1.Opt(StringNode({ validator: 'resource', params: { pool: '$storage' } })),\r\n                interpret: core_1.Opt(core_1.BooleanNode()),\r\n                ...CommonFields\r\n            })\r\n        }\r\n    ], { context: 'text_component_object', choiceContext: 'text_component.object' }), {\r\n        default: () => ({\r\n            text: \"\"\r\n        })\r\n    }));\r\n    schemas.register('text_component_list', core_1.Mod(core_1.ListNode(Reference('text_component')), {\r\n        default: () => [{\r\n                text: \"\"\r\n            }]\r\n    }));\r\n}\r\nexports.initTextComponentSchemas = initTextComponentSchemas;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.initSchemas = void 0;\r\nconst Advancement_1 = require(\"./Advancement\");\r\nconst Common_1 = require(\"./Common\");\r\nconst Condition_1 = require(\"./Condition\");\r\nconst LootTable_1 = require(\"./LootTable\");\r\nconst PackMcmeta_1 = require(\"./PackMcmeta\");\r\nconst Predicates_1 = require(\"./Predicates\");\r\nconst Recipe_1 = require(\"./Recipe\");\r\nconst Tags_1 = require(\"./Tags\");\r\nconst TextComponent_1 = require(\"./TextComponent\");\r\nfunction initSchemas(schemas, collections) {\r\n    // `Common.ts` and `Predicates.ts` are files that have exports. They should be initialized first. \r\n    Common_1.initCommonSchemas(schemas, collections);\r\n    Predicates_1.initPredicatesSchemas(schemas, collections);\r\n    Advancement_1.initAdvancementSchemas(schemas, collections);\r\n    Condition_1.initConditionSchemas(schemas, collections);\r\n    LootTable_1.initLootTableSchemas(schemas, collections);\r\n    PackMcmeta_1.initPackMcmetaSchemas(schemas, collections);\r\n    Recipe_1.initRecipeSchemas(schemas, collections);\r\n    Tags_1.initTagsSchemas(schemas, collections);\r\n    TextComponent_1.initTextComponentSchemas(schemas, collections);\r\n}\r\nexports.initSchemas = initSchemas;\r\n","\"use strict\";\r\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}));\r\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n});\r\nvar __importStar = (this && this.__importStar) || function (mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.getSchemas = exports.getCollections = void 0;\r\nconst core_1 = require(\"@mcschema/core\");\r\nconst Collections_1 = require(\"./Collections\");\r\nconst schemas_1 = require(\"./schemas\");\r\nexports.lootContext = __importStar(require(\"./LootContext\"));\r\nfunction getCollections() {\r\n    const collections = new core_1.CollectionRegistry();\r\n    Collections_1.initCollections(collections);\r\n    return collections;\r\n}\r\nexports.getCollections = getCollections;\r\n/**\r\n * @param collections The CollectionRegistry for this version. Note that apart from\r\n * the built-in collections, the client of this module is responsible for futhermore\r\n * adding the vanilla registries to it: the collection IDs shouldn't contain the\r\n * namespace (`minecraft:`) part, while the values within the collections should.\r\n *\r\n * @example\r\n * for (const key in VANILLA_REGISTRIES>) {\r\n *   collections.register(\r\n *     key.replace(/^minecraft:/, ''),\r\n *     Object.keys(VANILLA_REGISTRIES[key].entries)\r\n *   )\r\n * }\r\n */\r\nfunction getSchemas(collections) {\r\n    const schemas = new core_1.SchemaRegistry();\r\n    schemas_1.initSchemas(schemas, collections);\r\n    return schemas;\r\n}\r\nexports.getSchemas = getSchemas;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.initCollections = void 0;\r\nfunction initCollections(collections) {\r\n    collections.register('advancement_trigger', [\r\n        'minecraft:bee_nest_destroyed',\r\n        'minecraft:bred_animals',\r\n        'minecraft:brewed_potion',\r\n        'minecraft:changed_dimension',\r\n        'minecraft:channeled_lightning',\r\n        'minecraft:construct_beacon',\r\n        'minecraft:consume_item',\r\n        'minecraft:cured_zombie_villager',\r\n        'minecraft:effects_changed',\r\n        'minecraft:enchanted_item',\r\n        'minecraft:enter_block',\r\n        'minecraft:entity_hurt_player',\r\n        'minecraft:entity_killed_player',\r\n        'minecraft:filled_bucket',\r\n        'minecraft:fishing_rod_hooked',\r\n        'minecraft:hero_of_the_village',\r\n        'minecraft:impossible',\r\n        'minecraft:inventory_changed',\r\n        'minecraft:item_durability_changed',\r\n        'minecraft:item_used_on_block',\r\n        'minecraft:killed_by_crossbow',\r\n        'minecraft:levitation',\r\n        'minecraft:location',\r\n        'minecraft:nether_travel',\r\n        'minecraft:placed_block',\r\n        'minecraft:player_generates_container_loot',\r\n        'minecraft:player_hurt_entity',\r\n        'minecraft:player_interacted_with_entity',\r\n        'minecraft:player_killed_entity',\r\n        'minecraft:recipe_unlocked',\r\n        'minecraft:shot_crossbow',\r\n        'minecraft:slept_in_bed',\r\n        'minecraft:slide_down_block',\r\n        'minecraft:summoned_entity',\r\n        'minecraft:tame_animal',\r\n        'minecraft:target_hit',\r\n        'minecraft:tick',\r\n        'minecraft:thrown_item_picked_up_by_entity',\r\n        'minecraft:used_ender_eye',\r\n        'minecraft:used_totem',\r\n        'minecraft:villager_trade',\r\n        'minecraft:voluntary_exile'\r\n    ]);\r\n    collections.register('dimension', [\r\n        'minecraft:overworld',\r\n        'minecraft:the_nether',\r\n        'minecraft:the_end'\r\n    ]);\r\n    collections.register('dimension_type', [\r\n        'minecraft:overworld',\r\n        'minecraft:the_nether',\r\n        'minecraft:the_end'\r\n    ]);\r\n    collections.register('keybind', [\r\n        'key.advancements',\r\n        'key.attack',\r\n        'key.back',\r\n        'key.chat',\r\n        'key.command',\r\n        'key.drop',\r\n        'key.forward',\r\n        'key.fullscreen',\r\n        'key.hotbar.1',\r\n        'key.hotbar.2',\r\n        'key.hotbar.3',\r\n        'key.hotbar.4',\r\n        'key.hotbar.5',\r\n        'key.hotbar.6',\r\n        'key.hotbar.7',\r\n        'key.hotbar.8',\r\n        'key.hotbar.9',\r\n        'key.inventory',\r\n        'key.jump',\r\n        'key.left',\r\n        'key.loadToolbarActivator',\r\n        'key.pickItem',\r\n        'key.playerlist',\r\n        'key.right',\r\n        'key.saveToolbarActivator',\r\n        'key.screenshot',\r\n        'key.smoothCamera',\r\n        'key.sneak',\r\n        'key.spectatorOutlines',\r\n        'key.sprint',\r\n        'key.swapOffhand',\r\n        'key.togglePerspective',\r\n        'key.use'\r\n    ]);\r\n    collections.register('slot', [\r\n        'mainhand',\r\n        'offhand',\r\n        'head',\r\n        'chest',\r\n        'legs',\r\n        'feet'\r\n    ]);\r\n    collections.register('gamemode', [\r\n        'survival',\r\n        'creative',\r\n        'adventure',\r\n        'spectator'\r\n    ]);\r\n    collections.register('worldgen/noise_settings', [\r\n        'minecraft:overworld',\r\n        'minecraft:nether',\r\n        'minecraft:end',\r\n        'minecraft:amplified',\r\n        'minecraft:caves',\r\n        'minecraft:floating_islands'\r\n    ]);\r\n    collections.register('entity_source', [\r\n        'this',\r\n        'direct_killer',\r\n        'killer',\r\n        'killer_player'\r\n    ]);\r\n    collections.register('copy_source', [\r\n        'block_entity',\r\n        'this',\r\n        'killer',\r\n        'killer_player'\r\n    ]);\r\n    collections.register('loot_table_apply_bonus_formula', [\r\n        'minecraft:uniform_bonus_count',\r\n        'minecraft:binomial_with_bonus_count',\r\n        'minecraft:ore_drops'\r\n    ]);\r\n    collections.register('map_decoration', [\r\n        'mansion',\r\n        'monument',\r\n        'player',\r\n        'frame',\r\n        'red_marker',\r\n        'blue_marker',\r\n        'target_x',\r\n        'target_point',\r\n        'player_off_map',\r\n        'player_off_limits',\r\n        'red_x',\r\n        'banner_white',\r\n        'banner_orange',\r\n        'banner_magenta',\r\n        'banner_light_blue',\r\n        'banner_yellow',\r\n        'banner_lime',\r\n        'banner_pink',\r\n        'banner_gray',\r\n        'banner_light_gray',\r\n        'banner_cyan',\r\n        'banner_purple',\r\n        'banner_blue',\r\n        'banner_brown',\r\n        'banner_green',\r\n        'banner_red',\r\n        'banner_black'\r\n    ]);\r\n    collections.register('map_feature', [\r\n        'bastion_remnant',\r\n        'buried_treasure',\r\n        'desert_pyramid',\r\n        'endcity',\r\n        'fortress',\r\n        'igloo',\r\n        'jungle_pyramid',\r\n        'mansion',\r\n        'mineshaft',\r\n        'monument',\r\n        'nether_fossil',\r\n        'ocean_ruin',\r\n        'pillager_outpost',\r\n        'ruined_portal',\r\n        'shipwreck',\r\n        'stronghold',\r\n        'swamp_hut',\r\n        'village'\r\n    ]);\r\n    collections.register('recipe_group', [\r\n        'bed',\r\n        'light_gray_dye',\r\n        'iron_ingot',\r\n        'wooden_stairs',\r\n        'black_dye',\r\n        'stained_terracotta',\r\n        'dyed_bed',\r\n        'magenta_dye',\r\n        'bark',\r\n        'rabbit_stew',\r\n        'light_blue_dye',\r\n        'wooden_fence_gate',\r\n        'planks',\r\n        'stained_glass',\r\n        'wooden_door',\r\n        'stained_glass_pane',\r\n        'wooden_fence',\r\n        'sticks',\r\n        'concrete_powder',\r\n        'wooden_pressure_plate',\r\n        'boat',\r\n        'brown_dye',\r\n        'yellow_dye',\r\n        'bonemeal',\r\n        'red_dye',\r\n        'wooden_trapdoor',\r\n        'wooden_button',\r\n        'gold_ingot',\r\n        'pink_dye',\r\n        'wooden_slab',\r\n        'orange_dye',\r\n        'carpet',\r\n        'sign',\r\n        'wool',\r\n        'sugar',\r\n        'blue_dye',\r\n        'white_dye',\r\n        'banner',\r\n        'netherite_ingot'\r\n    ]);\r\n    collections.register('worldgen/configured_feature', [\r\n        'minecraft:acacia',\r\n        'minecraft:bamboo_light',\r\n        'minecraft:bamboo_vegetation',\r\n        'minecraft:bamboo',\r\n        'minecraft:basalt_blobs',\r\n        'minecraft:basalt_pillar',\r\n        'minecraft:birch_bees_0002',\r\n        'minecraft:birch_bees_002',\r\n        'minecraft:birch_bees_005',\r\n        'minecraft:birch_other',\r\n        'minecraft:birch_tall',\r\n        'minecraft:birch',\r\n        'minecraft:blackstone_blobs',\r\n        'minecraft:blue_ice',\r\n        'minecraft:bonus_chest',\r\n        'minecraft:brown_mushroom_giant',\r\n        'minecraft:brown_mushroom_nether',\r\n        'minecraft:brown_mushroom_normal',\r\n        'minecraft:brown_mushroom_swamp',\r\n        'minecraft:brown_mushroom_taiga',\r\n        'minecraft:chorus_plant',\r\n        'minecraft:crimson_forest_vegetation',\r\n        'minecraft:crimson_fungi_planted',\r\n        'minecraft:crimson_fungi',\r\n        'minecraft:dark_forest_vegetation_brown',\r\n        'minecraft:dark_forest_vegetation_red',\r\n        'minecraft:dark_oak',\r\n        'minecraft:delta',\r\n        'minecraft:desert_well',\r\n        'minecraft:disk_clay',\r\n        'minecraft:disk_gravel',\r\n        'minecraft:disk_sand',\r\n        'minecraft:end_gateway_delayed',\r\n        'minecraft:end_gateway',\r\n        'minecraft:end_island_decorated',\r\n        'minecraft:end_island',\r\n        'minecraft:end_spike',\r\n        'minecraft:fancy_oak_bees_0002',\r\n        'minecraft:fancy_oak_bees_002',\r\n        'minecraft:fancy_oak_bees_005',\r\n        'minecraft:fancy_oak',\r\n        'minecraft:flower_default',\r\n        'minecraft:flower_forest',\r\n        'minecraft:flower_plain_decorated',\r\n        'minecraft:flower_plain',\r\n        'minecraft:flower_swamp',\r\n        'minecraft:flower_warm',\r\n        'minecraft:forest_flower_trees',\r\n        'minecraft:forest_flower_vegetation_common',\r\n        'minecraft:forest_flower_vegetation',\r\n        'minecraft:forest_rock',\r\n        'minecraft:fossil',\r\n        'minecraft:freeze_top_layer',\r\n        'minecraft:glowstone_extra',\r\n        'minecraft:glowstone',\r\n        'minecraft:huge_brown_mushroom',\r\n        'minecraft:huge_red_mushroom',\r\n        'minecraft:ice_patch',\r\n        'minecraft:ice_spike',\r\n        'minecraft:iceberg_blue',\r\n        'minecraft:iceberg_packed',\r\n        'minecraft:jungle_bush',\r\n        'minecraft:jungle_tree_no_vine',\r\n        'minecraft:jungle_tree',\r\n        'minecraft:kelp_cold',\r\n        'minecraft:kelp_warm',\r\n        'minecraft:lake_lava',\r\n        'minecraft:lake_water',\r\n        'minecraft:large_basalt_columns',\r\n        'minecraft:mega_jungle_tree',\r\n        'minecraft:mega_pine',\r\n        'minecraft:mega_spruce',\r\n        'minecraft:monster_room',\r\n        'minecraft:mushroom_field_vegetation',\r\n        'minecraft:nether_sprouts',\r\n        'minecraft:oak_badlands',\r\n        'minecraft:oak_bees_0002',\r\n        'minecraft:oak_bees_002',\r\n        'minecraft:oak_bees_005',\r\n        'minecraft:oak',\r\n        'minecraft:ore_andesite',\r\n        'minecraft:ore_blackstone',\r\n        'minecraft:ore_coal',\r\n        'minecraft:ore_debris_large',\r\n        'minecraft:ore_debris_small',\r\n        'minecraft:ore_diamond',\r\n        'minecraft:ore_diorite',\r\n        'minecraft:ore_dirt',\r\n        'minecraft:ore_emerald',\r\n        'minecraft:ore_gold_deltas',\r\n        'minecraft:ore_gold_extra',\r\n        'minecraft:ore_gold_nether',\r\n        'minecraft:ore_gold',\r\n        'minecraft:ore_granite',\r\n        'minecraft:ore_gravel_nether',\r\n        'minecraft:ore_gravel',\r\n        'minecraft:ore_infested',\r\n        'minecraft:ore_iron',\r\n        'minecraft:ore_lapis',\r\n        'minecraft:ore_magma',\r\n        'minecraft:ore_quartz_deltas',\r\n        'minecraft:ore_quartz_nether',\r\n        'minecraft:ore_redstone',\r\n        'minecraft:ore_soul_sand',\r\n        'minecraft:patch_berry_bush',\r\n        'minecraft:patch_berry_decorated',\r\n        'minecraft:patch_berry_sparse',\r\n        'minecraft:patch_brown_mushroom',\r\n        'minecraft:patch_cactus_decorated',\r\n        'minecraft:patch_cactus_desert',\r\n        'minecraft:patch_cactus',\r\n        'minecraft:patch_crimson_roots',\r\n        'minecraft:patch_dead_bush_2',\r\n        'minecraft:patch_dead_bush_badlands',\r\n        'minecraft:patch_dead_bush',\r\n        'minecraft:patch_fire',\r\n        'minecraft:patch_grass_badlands',\r\n        'minecraft:patch_grass_forest',\r\n        'minecraft:patch_grass_jungle',\r\n        'minecraft:patch_grass_normal',\r\n        'minecraft:patch_grass_plain',\r\n        'minecraft:patch_grass_savanna',\r\n        'minecraft:patch_grass_taiga_2',\r\n        'minecraft:patch_grass_taiga',\r\n        'minecraft:patch_large_fern',\r\n        'minecraft:patch_melon',\r\n        'minecraft:patch_pumpkin',\r\n        'minecraft:patch_red_mushroom',\r\n        'minecraft:patch_soul_fire',\r\n        'minecraft:patch_sugar_cane_badlands',\r\n        'minecraft:patch_sugar_cane_desert',\r\n        'minecraft:patch_sugar_cane_swamp',\r\n        'minecraft:patch_sugar_cane',\r\n        'minecraft:patch_sunflower',\r\n        'minecraft:patch_taiga_grass',\r\n        'minecraft:patch_tall_grass_2',\r\n        'minecraft:patch_tall_grass',\r\n        'minecraft:patch_waterlilly',\r\n        'minecraft:pile_hay',\r\n        'minecraft:pile_ice',\r\n        'minecraft:pile_melon',\r\n        'minecraft:pile_pumpkin',\r\n        'minecraft:pile_snow',\r\n        'minecraft:pine',\r\n        'minecraft:plain_vegetation',\r\n        'minecraft:red_mushroom_giant',\r\n        'minecraft:red_mushroom_nether',\r\n        'minecraft:red_mushroom_normal',\r\n        'minecraft:red_mushroom_swamp',\r\n        'minecraft:red_mushroom_taiga',\r\n        'minecraft:sea_pickle',\r\n        'minecraft:seagrass_cold',\r\n        'minecraft:seagrass_deep_cold',\r\n        'minecraft:seagrass_deep_warm',\r\n        'minecraft:seagrass_deep',\r\n        'minecraft:seagrass_normal',\r\n        'minecraft:seagrass_river',\r\n        'minecraft:seagrass_simple',\r\n        'minecraft:seagrass_swamp',\r\n        'minecraft:seagrass_warm',\r\n        'minecraft:small_basalt_columns',\r\n        'minecraft:spring_closed_double',\r\n        'minecraft:spring_closed',\r\n        'minecraft:spring_delta',\r\n        'minecraft:spring_lava_double',\r\n        'minecraft:spring_lava',\r\n        'minecraft:spring_open',\r\n        'minecraft:spring_water',\r\n        'minecraft:spruce_snowy',\r\n        'minecraft:spruce',\r\n        'minecraft:super_birch_bees_0002',\r\n        'minecraft:swamp_tree',\r\n        'minecraft:taiga_vegetation',\r\n        'minecraft:trees_birch',\r\n        'minecraft:trees_giant_spruce',\r\n        'minecraft:trees_giant',\r\n        'minecraft:trees_jungle_edge',\r\n        'minecraft:trees_jungle',\r\n        'minecraft:trees_mountain_edge',\r\n        'minecraft:trees_mountain',\r\n        'minecraft:trees_savanna',\r\n        'minecraft:trees_shattered_savanna',\r\n        'minecraft:trees_water',\r\n        'minecraft:twisting_vines',\r\n        'minecraft:vines',\r\n        'minecraft:void_start_platform',\r\n        'minecraft:warm_ocean_vegetation',\r\n        'minecraft:warped_forest_vegetation',\r\n        'minecraft:warped_fungi_planted',\r\n        'minecraft:warped_fungi',\r\n        'minecraft:weeping_vines'\r\n    ]);\r\n    collections.register('worldgen/configured_structure_feature', [\r\n        'minecraft:bastion_remnant',\r\n        'minecraft:buried_treasure',\r\n        'minecraft:desert_pyramid',\r\n        'minecraft:end_city',\r\n        'minecraft:fortress',\r\n        'minecraft:igloo',\r\n        'minecraft:jungle_pyramid',\r\n        'minecraft:mansion',\r\n        'minecraft:mineshaft_mesa',\r\n        'minecraft:mineshaft',\r\n        'minecraft:monument',\r\n        'minecraft:nether_fossil',\r\n        'minecraft:ocean_ruin_cold',\r\n        'minecraft:ocean_ruin_warm',\r\n        'minecraft:pillager_outpost',\r\n        'minecraft:ruined_portal_desert',\r\n        'minecraft:ruined_portal_jungle',\r\n        'minecraft:ruined_portal_mountain',\r\n        'minecraft:ruined_portal_nether',\r\n        'minecraft:ruined_portal_ocean',\r\n        'minecraft:ruined_portal_swamp',\r\n        'minecraft:ruined_portal',\r\n        'minecraft:shipwreck_beached',\r\n        'minecraft:shipwreck',\r\n        'minecraft:stronghold',\r\n        'minecraft:swamp_hut',\r\n        'minecraft:village_desert',\r\n        'minecraft:village_plains',\r\n        'minecraft:village_savanna',\r\n        'minecraft:village_snowy',\r\n        'minecraft:village_taiga'\r\n    ]);\r\n    collections.register('worldgen/configured_surface_builder', [\r\n        'minecraft:badlands',\r\n        'minecraft:basalt_deltas',\r\n        'minecraft:crimson_forest',\r\n        'minecraft:desert',\r\n        'minecraft:end',\r\n        'minecraft:eroded_badlands',\r\n        'minecraft:frozen_ocean',\r\n        'minecraft:full_sand',\r\n        'minecraft:giant_tree_taiga',\r\n        'minecraft:grass',\r\n        'minecraft:gravelly_mountain',\r\n        'minecraft:ice_spikes',\r\n        'minecraft:mountain',\r\n        'minecraft:mycelium',\r\n        'minecraft:nether',\r\n        'minecraft:nope',\r\n        'minecraft:ocean_sand',\r\n        'minecraft:shattered_savanna',\r\n        'minecraft:soul_sand_valley',\r\n        'minecraft:stone',\r\n        'minecraft:swamp',\r\n        'minecraft:warped_forest',\r\n        'minecraft:wooded_badlands'\r\n    ]);\r\n    collections.register('biome_category', [\r\n        'beach',\r\n        'desert',\r\n        'extreme_hills',\r\n        'forest',\r\n        'icy',\r\n        'jungle',\r\n        'mesa',\r\n        'mushroom',\r\n        'nether',\r\n        'none',\r\n        'ocean',\r\n        'plains',\r\n        'river',\r\n        'savanna',\r\n        'swamp',\r\n        'taiga',\r\n        'the_end'\r\n    ]);\r\n    collections.register('heightmap_type', [\r\n        'MOTION_BLOCKING',\r\n        'MOTION_BLOCKING_NO_LEAVES',\r\n        'OCEAN_FLOOR',\r\n        'OCEAN_FLOOR_WG',\r\n        'WORLD_SURFACE',\r\n        'WORLD_SURFACE_WG'\r\n    ]);\r\n    collections.register('generation_step', [\r\n        'air',\r\n        'liquid'\r\n    ]);\r\n    collections.register('loot_context_type', [\r\n        'minecraft:empty',\r\n        'minecraft:chest',\r\n        'minecraft:command',\r\n        'minecraft:selector',\r\n        'minecraft:fishing',\r\n        'minecraft:entity',\r\n        'minecraft:gift',\r\n        'minecraft:barter',\r\n        'minecraft:advancement_reward',\r\n        'minecraft:advancement_entity',\r\n        'minecraft:generic',\r\n        'minecraft:block'\r\n    ]);\r\n}\r\nexports.initCollections = initCollections;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.initCommonSchemas = exports.UniformInt = exports.Range = exports.NoiseSettingsPresets = exports.DefaultNoiseSettings = exports.DimensionTypePresets = exports.DefaultDimensionType = exports.ConditionCases = void 0;\r\nconst core_1 = require(\"@mcschema/core\");\r\nexports.DefaultDimensionType = {\r\n    ultrawarm: false,\r\n    natural: true,\r\n    piglin_safe: false,\r\n    respawn_anchor_works: false,\r\n    bed_works: true,\r\n    has_raids: true,\r\n    has_skylight: true,\r\n    has_ceiling: false,\r\n    coordinate_scale: 1,\r\n    ambient_light: 0,\r\n    logical_height: 256,\r\n    infiniburn: 'minecraft:infiniburn_overworld',\r\n};\r\nexports.DefaultNoiseSettings = {\r\n    name: 'minecraft:overworld',\r\n    bedrock_roof_position: -10,\r\n    bedrock_floor_position: 0,\r\n    sea_level: 63,\r\n    disable_mob_generation: false,\r\n    noise: {\r\n        density_factor: 1,\r\n        density_offset: -0.46875,\r\n        simplex_surface_noise: true,\r\n        random_density_offset: true,\r\n        size_horizontal: 1,\r\n        size_vertical: 2,\r\n        height: 256,\r\n        sampling: {\r\n            xz_scale: 1,\r\n            y_scale: 1,\r\n            xz_factor: 80,\r\n            y_factor: 160\r\n        },\r\n        top_slide: {\r\n            target: -10,\r\n            size: 3,\r\n            offset: 0\r\n        },\r\n        bottom_slide: {\r\n            target: -30,\r\n            size: 0,\r\n            offset: 0\r\n        }\r\n    },\r\n    default_block: {\r\n        Name: \"minecraft:stone\"\r\n    },\r\n    default_fluid: {\r\n        Name: \"minecraft:water\",\r\n        Properties: {\r\n            level: \"0\"\r\n        }\r\n    }\r\n};\r\nfunction initCommonSchemas(schemas, collections) {\r\n    const StringNode = core_1.StringNode.bind(undefined, collections);\r\n    const Reference = core_1.Reference.bind(undefined, schemas);\r\n    schemas.register('block_state', core_1.Mod(core_1.ObjectNode({\r\n        Name: StringNode({ validator: 'resource', params: { pool: 'block' } }),\r\n        Properties: core_1.Opt(core_1.MapNode(StringNode(), StringNode(), { validation: { validator: 'block_state_map', params: { id: ['pop', { push: 'Name' }] } } }))\r\n    }, { context: 'block_state' }), {\r\n        default: () => ({\r\n            Name: 'minecraft:stone'\r\n        })\r\n    }));\r\n    schemas.register('fluid_state', core_1.Mod(core_1.ObjectNode({\r\n        Name: StringNode({ validator: 'resource', params: { pool: 'fluid' } }),\r\n        Properties: core_1.Opt(core_1.MapNode(StringNode(), StringNode()))\r\n    }, { context: 'fluid_state' }), {\r\n        default: () => ({\r\n            Name: 'minecraft:water',\r\n            Properties: {\r\n                'level': '0'\r\n            }\r\n        })\r\n    }));\r\n    schemas.register('block_pos', core_1.Mod(core_1.ListNode(core_1.NumberNode({ integer: true }), { minLength: 3, maxLength: 3 }), {\r\n        default: () => [0, 0, 0]\r\n    }));\r\n    exports.Range = (config) => core_1.ChoiceNode([\r\n        ...((config === null || config === void 0 ? void 0 : config.forceRange) ? [] : [{\r\n                type: 'number',\r\n                node: core_1.NumberNode(config),\r\n                change: (v) => { var _a, _b, _c; return v === undefined ? 0 : (_c = (_b = (_a = v.min) !== null && _a !== void 0 ? _a : v.max) !== null && _b !== void 0 ? _b : v.n) !== null && _c !== void 0 ? _c : 0; }\r\n            }]),\r\n        {\r\n            type: 'object',\r\n            priority: -1,\r\n            node: core_1.ObjectNode({\r\n                min: (config === null || config === void 0 ? void 0 : config.bounds) ? core_1.NumberNode(config) : core_1.Opt(core_1.NumberNode(config)),\r\n                max: (config === null || config === void 0 ? void 0 : config.bounds) ? core_1.NumberNode(config) : core_1.Opt(core_1.NumberNode(config))\r\n            }, { context: 'range' }),\r\n            change: (v) => ({\r\n                min: typeof v === 'number' ? v : v === undefined ? 1 : v.n,\r\n                max: typeof v === 'number' ? v : v === undefined ? 1 : v.n\r\n            })\r\n        },\r\n        ...((config === null || config === void 0 ? void 0 : config.allowBinomial) ? [{\r\n                type: 'binomial',\r\n                node: core_1.ObjectNode({\r\n                    type: StringNode({ enum: ['minecraft:binomial'] }),\r\n                    n: core_1.NumberNode({ integer: true, min: 0 }),\r\n                    p: core_1.NumberNode({ min: 0, max: 1 })\r\n                }, { context: 'range' }),\r\n                match: (v) => v !== undefined && v.type === 'minecraft:binomial',\r\n                change: (v) => {\r\n                    var _a, _b;\r\n                    return ({\r\n                        type: 'minecraft:binomial',\r\n                        n: typeof v === 'number' ? v : v === undefined ? 1 : ((_b = (_a = v.min) !== null && _a !== void 0 ? _a : v.max) !== null && _b !== void 0 ? _b : 1),\r\n                        p: 0.5\r\n                    });\r\n                }\r\n            }] : [])\r\n    ], { choiceContext: 'range' });\r\n    exports.UniformInt = (config) => core_1.ChoiceNode([\r\n        {\r\n            type: 'number',\r\n            node: core_1.NumberNode({ integer: true, min: config === null || config === void 0 ? void 0 : config.min, max: config === null || config === void 0 ? void 0 : config.max }),\r\n            change: v => v.base\r\n        },\r\n        {\r\n            type: 'object',\r\n            node: core_1.ObjectNode({\r\n                base: core_1.NumberNode({ integer: true, min: config === null || config === void 0 ? void 0 : config.min, max: config === null || config === void 0 ? void 0 : config.max }),\r\n                spread: core_1.NumberNode({ integer: true, min: 0, max: config === null || config === void 0 ? void 0 : config.maxSpread })\r\n            }),\r\n            change: v => ({\r\n                base: v,\r\n                spread: 0\r\n            })\r\n        }\r\n    ], { context: 'uniform_int' });\r\n    exports.ConditionCases = {\r\n        'minecraft:alternative': {\r\n            terms: core_1.ListNode(Reference('condition'))\r\n        },\r\n        'minecraft:block_state_property': {\r\n            block: StringNode({ validator: 'resource', params: { pool: 'block' } }),\r\n            properties: core_1.MapNode(StringNode(), StringNode(), { validation: { validator: 'block_state_map', params: { id: ['pop', { push: 'block' }] } } })\r\n        },\r\n        'minecraft:damage_source_properties': {\r\n            predicate: Reference('damage_source_predicate')\r\n        },\r\n        'minecraft:entity_properties': {\r\n            entity: StringNode({ enum: 'entity_source' }),\r\n            predicate: Reference('entity_predicate')\r\n        },\r\n        'minecraft:entity_scores': {\r\n            entity: StringNode({ enum: 'entity_source' }),\r\n            scores: core_1.MapNode(StringNode({ validator: 'objective' }), exports.Range({ forceRange: true }))\r\n        },\r\n        'minecraft:inverted': {\r\n            term: Reference('condition')\r\n        },\r\n        'minecraft:killed_by_player': {\r\n            inverse: core_1.Opt(core_1.BooleanNode())\r\n        },\r\n        'minecraft:location_check': {\r\n            offsetX: core_1.Opt(core_1.NumberNode({ integer: true })),\r\n            offsetY: core_1.Opt(core_1.NumberNode({ integer: true })),\r\n            offsetZ: core_1.Opt(core_1.NumberNode({ integer: true })),\r\n            predicate: Reference('location_predicate')\r\n        },\r\n        'minecraft:match_tool': {\r\n            predicate: Reference('item_predicate')\r\n        },\r\n        'minecraft:random_chance': {\r\n            chance: core_1.NumberNode({ min: 0, max: 1 })\r\n        },\r\n        'minecraft:random_chance_with_looting': {\r\n            chance: core_1.NumberNode({ min: 0, max: 1 }),\r\n            looting_multiplier: core_1.NumberNode()\r\n        },\r\n        'minecraft:reference': {\r\n            name: StringNode({ validator: 'resource', params: { pool: '$predicate' } })\r\n        },\r\n        'minecraft:table_bonus': {\r\n            enchantment: StringNode({ validator: 'resource', params: { pool: 'enchantment' } }),\r\n            chances: core_1.ListNode(core_1.NumberNode({ min: 0, max: 1 }))\r\n        },\r\n        'minecraft:time_check': {\r\n            value: exports.Range(),\r\n            period: core_1.Opt(core_1.NumberNode())\r\n        },\r\n        'minecraft:weather_check': {\r\n            raining: core_1.Opt(core_1.BooleanNode()),\r\n            thundering: core_1.Opt(core_1.BooleanNode())\r\n        }\r\n    };\r\n    exports.DimensionTypePresets = (node) => core_1.ObjectOrPreset(StringNode({ validator: 'resource', params: { pool: '$dimension_type' } }), node, {\r\n        'minecraft:overworld': exports.DefaultDimensionType,\r\n        'minecraft:the_nether': {\r\n            name: 'minecraft:the_nether',\r\n            ultrawarm: true,\r\n            natural: false,\r\n            shrunk: true,\r\n            piglin_safe: true,\r\n            respawn_anchor_works: true,\r\n            bed_works: false,\r\n            has_raids: false,\r\n            has_skylight: false,\r\n            has_ceiling: true,\r\n            ambient_light: 0.1,\r\n            fixed_time: 18000,\r\n            logical_height: 128,\r\n            effects: 'minecraft:the_nether',\r\n            infiniburn: 'minecraft:infiniburn_nether',\r\n        },\r\n        'minecraft:the_end': {\r\n            name: 'minecraft:the_end',\r\n            ultrawarm: false,\r\n            natural: false,\r\n            shrunk: false,\r\n            piglin_safe: false,\r\n            respawn_anchor_works: false,\r\n            bed_works: false,\r\n            has_raids: true,\r\n            has_skylight: false,\r\n            has_ceiling: false,\r\n            ambient_light: 0,\r\n            fixed_time: 6000,\r\n            logical_height: 256,\r\n            effects: 'minecraft:the_end',\r\n            infiniburn: 'minecraft:infiniburn_end',\r\n        }\r\n    });\r\n    exports.NoiseSettingsPresets = (node) => core_1.ObjectOrPreset(StringNode({ validator: 'resource', params: { pool: '$worldgen/noise_settings' } }), node, {\r\n        'minecraft:overworld': exports.DefaultNoiseSettings,\r\n        'minecraft:nether': {\r\n            name: 'minecraft:nether',\r\n            bedrock_roof_position: 0,\r\n            bedrock_floor_position: 0,\r\n            sea_level: 32,\r\n            disable_mob_generation: true,\r\n            noise: {\r\n                density_factor: 0,\r\n                density_offset: 0.019921875,\r\n                simplex_surface_noise: false,\r\n                random_density_offset: false,\r\n                size_horizontal: 1,\r\n                size_vertical: 2,\r\n                height: 128,\r\n                sampling: {\r\n                    xz_scale: 1,\r\n                    y_scale: 3,\r\n                    xz_factor: 80,\r\n                    y_factor: 60\r\n                },\r\n                top_slide: {\r\n                    target: 120,\r\n                    size: 3,\r\n                    offset: 0\r\n                },\r\n                bottom_slide: {\r\n                    target: 320,\r\n                    size: 4,\r\n                    offset: -1\r\n                }\r\n            },\r\n            default_block: {\r\n                Name: \"minecraft:netherrack\"\r\n            },\r\n            default_fluid: {\r\n                Name: \"minecraft:lava\",\r\n                Properties: {\r\n                    level: \"0\"\r\n                }\r\n            }\r\n        },\r\n        'minecraft:end': {\r\n            name: 'minecraft:end',\r\n            bedrock_roof_position: -10,\r\n            bedrock_floor_position: -10,\r\n            sea_level: 0,\r\n            disable_mob_generation: true,\r\n            noise: {\r\n                density_factor: 0,\r\n                density_offset: 0,\r\n                simplex_surface_noise: true,\r\n                random_density_offset: false,\r\n                island_noise_override: true,\r\n                size_horizontal: 2,\r\n                size_vertical: 1,\r\n                height: 128,\r\n                sampling: {\r\n                    xz_scale: 2,\r\n                    y_scale: 1,\r\n                    xz_factor: 80,\r\n                    y_factor: 160\r\n                },\r\n                top_slide: {\r\n                    target: -3000,\r\n                    size: 64,\r\n                    offset: -46\r\n                },\r\n                bottom_slide: {\r\n                    target: -30,\r\n                    size: 7,\r\n                    offset: 1\r\n                }\r\n            },\r\n            default_block: {\r\n                Name: \"minecraft:end_stone\"\r\n            },\r\n            default_fluid: {\r\n                Name: \"minecraft:air\"\r\n            }\r\n        },\r\n        'minecraft:amplified': {\r\n            name: 'minecraft:amplified',\r\n            bedrock_roof_position: -10,\r\n            bedrock_floor_position: 0,\r\n            sea_level: 63,\r\n            disable_mob_generation: false,\r\n            noise: {\r\n                density_factor: 1,\r\n                density_offset: -0.46875,\r\n                simplex_surface_noise: true,\r\n                random_density_offset: true,\r\n                amplified: true,\r\n                size_horizontal: 1,\r\n                size_vertical: 2,\r\n                height: 256,\r\n                sampling: {\r\n                    xz_scale: 1,\r\n                    y_scale: 1,\r\n                    xz_factor: 80,\r\n                    y_factor: 160\r\n                },\r\n                top_slide: {\r\n                    target: -10,\r\n                    size: 3,\r\n                    offset: 0\r\n                },\r\n                bottom_slide: {\r\n                    target: -30,\r\n                    size: 0,\r\n                    offset: 0\r\n                }\r\n            },\r\n            default_block: {\r\n                Name: \"minecraft:stone\"\r\n            },\r\n            default_fluid: {\r\n                Name: \"minecraft:water\",\r\n                Properties: {\r\n                    level: \"0\"\r\n                }\r\n            }\r\n        },\r\n        'minecraft:caves': {\r\n            name: 'minecraft:caves',\r\n            bedrock_roof_position: 0,\r\n            bedrock_floor_position: 0,\r\n            sea_level: 32,\r\n            disable_mob_generation: true,\r\n            noise: {\r\n                density_factor: 0,\r\n                density_offset: 0.019921875,\r\n                simplex_surface_noise: false,\r\n                random_density_offset: false,\r\n                size_horizontal: 1,\r\n                size_vertical: 2,\r\n                height: 128,\r\n                sampling: {\r\n                    xz_scale: 1,\r\n                    y_scale: 3,\r\n                    xz_factor: 80,\r\n                    y_factor: 60\r\n                },\r\n                top_slide: {\r\n                    target: 120,\r\n                    size: 3,\r\n                    offset: 0\r\n                },\r\n                bottom_slide: {\r\n                    target: 320,\r\n                    size: 4,\r\n                    offset: -1\r\n                }\r\n            },\r\n            default_block: {\r\n                Name: \"minecraft:stone\"\r\n            },\r\n            default_fluid: {\r\n                Name: \"minecraft:water\",\r\n                Properties: {\r\n                    level: \"0\"\r\n                }\r\n            }\r\n        },\r\n        'minecraft:floating_islands': {\r\n            name: 'minecraft:floating_islands',\r\n            bedrock_roof_position: -10,\r\n            bedrock_floor_position: -10,\r\n            sea_level: 0,\r\n            disable_mob_generation: true,\r\n            noise: {\r\n                density_factor: 0,\r\n                density_offset: 0,\r\n                simplex_surface_noise: true,\r\n                random_density_offset: false,\r\n                island_noise_override: true,\r\n                size_horizontal: 2,\r\n                size_vertical: 1,\r\n                height: 128,\r\n                sampling: {\r\n                    xz_scale: 2,\r\n                    y_scale: 1,\r\n                    xz_factor: 80,\r\n                    y_factor: 160\r\n                },\r\n                top_slide: {\r\n                    target: -3000,\r\n                    size: 64,\r\n                    offset: -46\r\n                },\r\n                bottom_slide: {\r\n                    target: -30,\r\n                    size: 7,\r\n                    offset: 1\r\n                }\r\n            },\r\n            default_block: {\r\n                Name: \"minecraft:stone\"\r\n            },\r\n            default_fluid: {\r\n                Name: \"minecraft:water\",\r\n                Properties: {\r\n                    level: \"0\"\r\n                }\r\n            }\r\n        }\r\n    });\r\n}\r\nexports.initCommonSchemas = initCommonSchemas;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.initAdvancementSchemas = void 0;\r\nconst core_1 = require(\"@mcschema/core\");\r\nconst Common_1 = require(\"./Common\");\r\nfunction initAdvancementSchemas(schemas, collections) {\r\n    const Reference = core_1.Reference.bind(undefined, schemas);\r\n    const StringNode = core_1.StringNode.bind(undefined, collections);\r\n    const EntityPredicate = core_1.ChoiceNode([\r\n        {\r\n            type: 'object',\r\n            node: core_1.Opt(Reference('entity_predicate')),\r\n            change: v => { var _a, _b; return (_b = (_a = v[0]) === null || _a === void 0 ? void 0 : _a.predicate) !== null && _b !== void 0 ? _b : ({}); }\r\n        },\r\n        {\r\n            type: 'list',\r\n            node: core_1.ListNode(Reference('condition')),\r\n            change: v => [{\r\n                    condition: 'minecraft:entity_properties',\r\n                    predicate: v\r\n                }]\r\n        }\r\n    ], { context: 'conditions' });\r\n    schemas.register('advancement', core_1.Mod(core_1.ObjectNode({\r\n        display: core_1.Opt(core_1.Mod(core_1.ObjectNode({\r\n            icon: core_1.ObjectNode({\r\n                item: StringNode({ validator: 'resource', params: { pool: 'item' } }),\r\n                nbt: core_1.Opt(StringNode({ validator: 'nbt', params: { registry: { category: 'minecraft:item', id: ['pop', { push: 'item' }] } } }))\r\n            }),\r\n            title: Reference('text_component'),\r\n            description: Reference('text_component'),\r\n            background: core_1.Opt(StringNode()),\r\n            frame: core_1.Opt(StringNode({ enum: ['task', 'challenge', 'goal'] })),\r\n            show_toast: core_1.Opt(core_1.BooleanNode()),\r\n            announce_to_chat: core_1.Opt(core_1.BooleanNode()),\r\n            hidden: core_1.Opt(core_1.BooleanNode())\r\n        }), {\r\n            default: () => ({\r\n                icon: {\r\n                    item: 'minecraft:stone'\r\n                },\r\n                title: '',\r\n                description: ''\r\n            })\r\n        })),\r\n        parent: core_1.Opt(StringNode({ validator: 'resource', params: { pool: '$advancement' } })),\r\n        criteria: core_1.MapNode(StringNode(), Reference('advancement_criteria')),\r\n        requirements: core_1.Opt(core_1.ListNode(core_1.ListNode(StringNode() // TODO: add validation\r\n        ))),\r\n        rewards: core_1.Opt(core_1.ObjectNode({\r\n            function: core_1.Opt(StringNode({ validator: 'resource', params: { pool: '$function' } })),\r\n            loot: core_1.Opt(core_1.ListNode(StringNode({ validator: 'resource', params: { pool: '$loot_table' } }))),\r\n            recipes: core_1.Opt(core_1.ListNode(StringNode({ validator: 'resource', params: { pool: '$recipe' } }))),\r\n            experience: core_1.Opt(core_1.NumberNode({ integer: true }))\r\n        })),\r\n    }, { context: 'advancement' }), {\r\n        default: () => ({\r\n            criteria: {\r\n                requirement: {\r\n                    trigger: 'minecraft:location'\r\n                }\r\n            }\r\n        })\r\n    }));\r\n    schemas.register('advancement_criteria', core_1.ObjectNode({\r\n        trigger: StringNode({ validator: 'resource', params: { pool: collections.get('advancement_trigger') } }),\r\n        conditions: core_1.Opt(core_1.ObjectNode({\r\n            player: core_1.Mod(EntityPredicate, {\r\n                enabled: path => path.pop().push('trigger').get() !== 'minecraft:impossible'\r\n            }),\r\n            [core_1.Switch]: ['pop', { push: 'trigger' }],\r\n            [core_1.Case]: {\r\n                'minecraft:bee_nest_destroyed': {\r\n                    block: core_1.Opt(StringNode({ validator: 'resource', params: { pool: 'block' } })),\r\n                    num_bees_inside: core_1.Opt(core_1.NumberNode({ integer: true })),\r\n                    item: core_1.Opt(Reference('item_predicate'))\r\n                },\r\n                'minecraft:bred_animals': {\r\n                    parent: EntityPredicate,\r\n                    partner: EntityPredicate,\r\n                    child: EntityPredicate\r\n                },\r\n                'minecraft:brewed_potion': {\r\n                    potion: core_1.Opt(StringNode({ validator: 'resource', params: { pool: 'potion' } }))\r\n                },\r\n                'minecraft:changed_dimension': {\r\n                    from: core_1.Opt(StringNode({ validator: 'resource', params: { pool: '$dimension' } })),\r\n                    to: core_1.Opt(StringNode({ validator: 'resource', params: { pool: '$dimension' } }))\r\n                },\r\n                'minecraft:channeled_lightning': {\r\n                    victims: core_1.Opt(core_1.ListNode(EntityPredicate))\r\n                },\r\n                'minecraft:construct_beacon': {\r\n                    level: core_1.Opt(Common_1.Range())\r\n                },\r\n                'minecraft:consume_item': {\r\n                    item: core_1.Opt(Reference('item_predicate'))\r\n                },\r\n                'minecraft:cured_zombie_villager': {\r\n                    villager: EntityPredicate,\r\n                    zombie: EntityPredicate\r\n                },\r\n                'minecraft:effects_changed': {\r\n                    effects: core_1.Opt(core_1.MapNode(StringNode({ validator: 'resource', params: { pool: 'mob_effect' } }), Reference('status_effect_predicate')))\r\n                },\r\n                'minecraft:enter_block': {\r\n                    block: core_1.Opt(StringNode({ validator: 'resource', params: { pool: 'block' } })),\r\n                    state: core_1.Opt(core_1.MapNode(StringNode(), StringNode(), { validation: { validator: 'block_state_map', params: { id: ['pop', { push: 'block' }] } } }))\r\n                },\r\n                'minecraft:enchanted_item': {\r\n                    levels: core_1.Opt(Common_1.Range()),\r\n                    item: core_1.Opt(Reference('item_predicate'))\r\n                },\r\n                'minecraft:entity_hurt_player': {\r\n                    damage: core_1.Opt(Reference('damage_predicate'))\r\n                },\r\n                'minecraft:entity_killed_player': {\r\n                    entity: EntityPredicate,\r\n                    killing_blow: core_1.Opt(Reference('damage_source_predicate'))\r\n                },\r\n                'minecraft:filled_bucket': {\r\n                    item: core_1.Opt(Reference('item_predicate'))\r\n                },\r\n                'minecraft:fishing_rod_hooked': {\r\n                    entity: EntityPredicate,\r\n                    item: core_1.Opt(Reference('item_predicate'))\r\n                },\r\n                'minecraft:hero_of_the_village': {\r\n                    location: core_1.Opt(Reference('location_predicate'))\r\n                },\r\n                'minecraft:inventory_changed': {\r\n                    slots: core_1.Opt(core_1.ObjectNode({\r\n                        empty: core_1.Opt(Common_1.Range()),\r\n                        occupied: core_1.Opt(Common_1.Range()),\r\n                        full: core_1.Opt(Common_1.Range())\r\n                    })),\r\n                    items: core_1.Opt(core_1.ListNode(Reference('item_predicate')))\r\n                },\r\n                'minecraft:item_durability_changed': {\r\n                    delta: core_1.Opt(Common_1.Range()),\r\n                    durability: core_1.Opt(Common_1.Range()),\r\n                    item: core_1.Opt(Reference('item_predicate'))\r\n                },\r\n                'minecraft:item_used_on_block': {\r\n                    item: core_1.Opt(Reference('item_predicate')),\r\n                    location: core_1.Opt(Reference('location_predicate'))\r\n                },\r\n                'minecraft:killed_by_crossbow': {\r\n                    unique_entity_types: core_1.Opt(Common_1.Range()),\r\n                    victims: core_1.Opt(core_1.ListNode(EntityPredicate))\r\n                },\r\n                'minecraft:levitation': {\r\n                    distance: core_1.Opt(Common_1.Range()),\r\n                    duration: core_1.Opt(Common_1.Range())\r\n                },\r\n                'minecraft:location': {\r\n                    location: core_1.Opt(Reference('location_predicate'))\r\n                },\r\n                'minecraft:nether_travel': {\r\n                    distance: core_1.Opt(Common_1.Range()),\r\n                    entered: core_1.Opt(Reference('location_predicate')),\r\n                    exited: core_1.Opt(Reference('location_predicate'))\r\n                },\r\n                'minecraft:placed_block': {\r\n                    block: core_1.Opt(StringNode({ validator: 'resource', params: { pool: 'block' } })),\r\n                    state: core_1.Opt(core_1.MapNode(StringNode(), StringNode(), { validation: { validator: 'block_state_map', params: { id: ['pop', { push: 'block' }] } } })),\r\n                    item: core_1.Opt(Reference('item_predicate')),\r\n                    location: core_1.Opt(Reference('location_predicate'))\r\n                },\r\n                'minecraft:player_generates_container_loot': {\r\n                    loot_table: StringNode({ validator: 'resource', params: { pool: '$loot_table' } })\r\n                },\r\n                'minecraft:player_hurt_entity': {\r\n                    damage: core_1.Opt(Reference('damage_predicate')),\r\n                    entity: EntityPredicate\r\n                },\r\n                'minecraft:player_interacted_with_entity': {\r\n                    item: core_1.Opt(Reference('item_predicate')),\r\n                    entity: EntityPredicate\r\n                },\r\n                'minecraft:player_killed_entity': {\r\n                    entity: EntityPredicate,\r\n                    killing_blow: core_1.Opt(Reference('damage_source_predicate'))\r\n                },\r\n                'minecraft:recipe_unlocked': {\r\n                    recipe: StringNode({ validator: 'resource', params: { pool: '$recipe' } })\r\n                },\r\n                'minecraft:slept_in_bed': {\r\n                    location: core_1.Opt(Reference('location_predicate'))\r\n                },\r\n                'minecraft:slide_down_block': {\r\n                    block: core_1.Opt(StringNode({ validator: 'resource', params: { pool: 'block' } }))\r\n                },\r\n                'minecraft:shot_crossbow': {\r\n                    item: core_1.Opt(Reference('item_predicate'))\r\n                },\r\n                'minecraft:summoned_entity': {\r\n                    entity: EntityPredicate\r\n                },\r\n                'minecraft:tame_animal': {\r\n                    entity: EntityPredicate\r\n                },\r\n                'minecraft:target_hit': {\r\n                    projectile: EntityPredicate,\r\n                    shooter: EntityPredicate,\r\n                    signal_strength: core_1.Opt(Common_1.Range({ integer: true }))\r\n                },\r\n                'minecraft:thrown_item_picked_up_by_entity': {\r\n                    entity: core_1.Opt(Reference('entity_predicate')),\r\n                    item: core_1.Opt(Reference('item_predicate'))\r\n                },\r\n                'minecraft:used_ender_eye': {\r\n                    distance: core_1.Opt(Common_1.Range())\r\n                },\r\n                'minecraft:used_totem': {\r\n                    item: core_1.Opt(Reference('item_predicate'))\r\n                },\r\n                'minecraft:villager_trade': {\r\n                    villager: core_1.Opt(Reference('entity_predicate')),\r\n                    item: core_1.Opt(Reference('item_predicate'))\r\n                },\r\n                'minecraft:voluntary_exile': {\r\n                    location: Reference('location_predicate')\r\n                }\r\n            }\r\n        }, { context: 'criterion' }))\r\n    }, { category: 'predicate', context: 'criterion' }));\r\n}\r\nexports.initAdvancementSchemas = initAdvancementSchemas;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.initConditionSchemas = void 0;\r\nconst core_1 = require(\"@mcschema/core\");\r\nconst Common_1 = require(\"./Common\");\r\nfunction initConditionSchemas(schemas, collections) {\r\n    const Reference = core_1.Reference.bind(undefined, schemas);\r\n    const StringNode = core_1.StringNode.bind(undefined, collections);\r\n    schemas.register('predicate', core_1.ObjectOrList(Reference('condition'), { choiceContext: 'condition' }));\r\n    schemas.register('condition', core_1.Mod(core_1.ObjectNode({\r\n        condition: StringNode({ validator: 'resource', params: { pool: 'loot_condition_type' } }),\r\n        [core_1.Switch]: [{ push: 'condition' }],\r\n        [core_1.Case]: Common_1.ConditionCases\r\n    }, { category: 'predicate', context: 'condition' }), {\r\n        default: () => ({\r\n            condition: 'minecraft:entity_properties',\r\n            entity: 'this'\r\n        })\r\n    }));\r\n}\r\nexports.initConditionSchemas = initConditionSchemas;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.initDimensionSchemas = void 0;\r\nconst core_1 = require(\"@mcschema/core\");\r\nconst Common_1 = require(\"./Common\");\r\nfunction initDimensionSchemas(schemas, collections) {\r\n    const Reference = core_1.Reference.bind(undefined, schemas);\r\n    const StringNode = core_1.StringNode.bind(undefined, collections);\r\n    const NoPreset = (node) => core_1.Mod(node, {\r\n        enabled: path => path.push('preset').get() === undefined\r\n    });\r\n    schemas.register('dimension', core_1.Mod(core_1.ObjectNode({\r\n        type: Common_1.DimensionTypePresets(Reference('dimension_type')),\r\n        generator: core_1.ObjectNode({\r\n            type: StringNode({ validator: 'resource', params: { pool: 'worldgen/chunk_generator' } }),\r\n            [core_1.Switch]: [{ push: 'type' }],\r\n            [core_1.Case]: {\r\n                'minecraft:noise': {\r\n                    seed: core_1.NumberNode({ integer: true }),\r\n                    settings: Common_1.NoiseSettingsPresets(Reference('noise_settings')),\r\n                    biome_source: core_1.ObjectNode({\r\n                        type: StringNode({ validator: 'resource', params: { pool: 'worldgen/biome_source' } }),\r\n                        [core_1.Switch]: [{ push: 'type' }],\r\n                        [core_1.Case]: {\r\n                            'minecraft:fixed': {\r\n                                biome: StringNode({ validator: 'resource', params: { pool: '$worldgen/biome' } })\r\n                            },\r\n                            'minecraft:multi_noise': {\r\n                                seed: core_1.NumberNode({ integer: true }),\r\n                                preset: core_1.Opt(StringNode({ enum: ['nether'] })),\r\n                                altitude_noise: NoPreset(Reference('generator_biome_noise')),\r\n                                temperature_noise: NoPreset(Reference('generator_biome_noise')),\r\n                                humidity_noise: NoPreset(Reference('generator_biome_noise')),\r\n                                weirdness_noise: NoPreset(Reference('generator_biome_noise')),\r\n                                biomes: NoPreset(core_1.Mod(core_1.ListNode(Reference('generator_biome')), {\r\n                                    default: () => [{\r\n                                            biome: 'minecraft:plains'\r\n                                        }]\r\n                                }))\r\n                            },\r\n                            'minecraft:checkerboard': {\r\n                                scale: core_1.Opt(core_1.NumberNode({ integer: true, min: 0, max: 62 })),\r\n                                biomes: core_1.ListNode(StringNode({ validator: 'resource', params: { pool: '$worldgen/biome' } }))\r\n                            },\r\n                            'minecraft:the_end': {\r\n                                seed: core_1.NumberNode({ integer: true })\r\n                            },\r\n                            'minecraft:vanilla_layered': {\r\n                                seed: core_1.NumberNode({ integer: true }),\r\n                                large_biomes: core_1.Opt(core_1.BooleanNode()),\r\n                                legacy_biome_init_layer: core_1.Opt(core_1.BooleanNode())\r\n                            }\r\n                        }\r\n                    }, { category: 'predicate', disableSwitchContext: true })\r\n                },\r\n                'minecraft:flat': {\r\n                    settings: core_1.ObjectNode({\r\n                        biome: core_1.Opt(StringNode({ validator: 'resource', params: { pool: '$worldgen/biome' } })),\r\n                        lakes: core_1.Opt(core_1.BooleanNode()),\r\n                        features: core_1.Opt(core_1.BooleanNode()),\r\n                        layers: core_1.ListNode(Reference('generator_layer')),\r\n                        structures: Reference('generator_structures')\r\n                    })\r\n                }\r\n            }\r\n        }, { disableSwitchContext: true })\r\n    }, { category: 'pool', context: 'dimension' }), {\r\n        default: () => {\r\n            const seed = Math.floor(Math.random() * (4294967296)) - 2147483648;\r\n            return {\r\n                type: 'minecraft:overworld',\r\n                generator: {\r\n                    type: 'minecraft:noise',\r\n                    seed,\r\n                    biome_source: {\r\n                        type: 'minecraft:fixed',\r\n                        seed,\r\n                        biome: 'minecraft:plains'\r\n                    },\r\n                    settings: 'minecraft:overworld'\r\n                }\r\n            };\r\n        }\r\n    }));\r\n    schemas.register('generator_biome', core_1.Mod(core_1.ObjectNode({\r\n        biome: StringNode({ validator: 'resource', params: { pool: '$worldgen/biome' } }),\r\n        parameters: core_1.ObjectNode({\r\n            altitude: core_1.NumberNode(),\r\n            temperature: core_1.NumberNode(),\r\n            humidity: core_1.NumberNode(),\r\n            weirdness: core_1.NumberNode(),\r\n            offset: core_1.NumberNode()\r\n        })\r\n    }, { context: 'generator_biome' }), {\r\n        default: () => ({\r\n            biome: 'minecraft:plains',\r\n            parameters: {\r\n                altitude: 0,\r\n                temperature: 0,\r\n                humidity: 0,\r\n                weirdness: 0,\r\n                offset: 0\r\n            }\r\n        })\r\n    }));\r\n    schemas.register('generator_biome_noise', core_1.Mod(core_1.ObjectNode({\r\n        firstOctave: core_1.NumberNode({ integer: true }),\r\n        amplitudes: core_1.ListNode(core_1.NumberNode())\r\n    }, { context: 'generator_biome_noise' }), {\r\n        default: () => ({\r\n            firstOctave: -7,\r\n            amplitudes: [1, 1]\r\n        })\r\n    }));\r\n}\r\nexports.initDimensionSchemas = initDimensionSchemas;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.initDimensionTypeSchemas = void 0;\r\nconst core_1 = require(\"@mcschema/core\");\r\nconst Common_1 = require(\"./Common\");\r\nfunction initDimensionTypeSchemas(schemas, collections) {\r\n    const StringNode = core_1.StringNode.bind(undefined, collections);\r\n    schemas.register('dimension_type', core_1.Mod(core_1.ObjectNode({\r\n        name: core_1.Mod(StringNode({ validator: 'resource', params: { pool: '$dimension_type', isDefinition: true } }), {\r\n            enabled: (path) => path.getArray().length > 0\r\n        }),\r\n        ultrawarm: core_1.BooleanNode(),\r\n        natural: core_1.BooleanNode(),\r\n        piglin_safe: core_1.BooleanNode(),\r\n        respawn_anchor_works: core_1.BooleanNode(),\r\n        bed_works: core_1.BooleanNode(),\r\n        has_raids: core_1.BooleanNode(),\r\n        has_skylight: core_1.BooleanNode(),\r\n        has_ceiling: core_1.BooleanNode(),\r\n        coordinate_scale: core_1.NumberNode({ min: 0.00001, max: 30000000 }),\r\n        ambient_light: core_1.NumberNode(),\r\n        fixed_time: core_1.Opt(core_1.NumberNode({ integer: true })),\r\n        logical_height: core_1.NumberNode({ integer: true, min: 0, max: 256 }),\r\n        effects: core_1.Opt(StringNode({ enum: ['minecraft:overworld', 'minecraft:the_nether', 'minecraft:the_end'] })),\r\n        infiniburn: StringNode({ validator: 'resource', params: { pool: '$tag/block' } })\r\n    }, { context: 'dimension_type' }), {\r\n        default: () => Common_1.DefaultDimensionType\r\n    }));\r\n}\r\nexports.initDimensionTypeSchemas = initDimensionTypeSchemas;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.LootFunctions = exports.LootConditions = exports.LootCopySources = exports.LootEntitySources = exports.LootTableTypes = void 0;\r\nexports.LootTableTypes = new Map([\r\n    ['minecraft:advancement_entity', { requires: [7 /* Origin */, 8 /* ThisEntity */], allows: [] }],\r\n    ['minecraft:advancement_reward', { requires: [7 /* Origin */, 8 /* ThisEntity */], allows: [] }],\r\n    ['minecraft:barter', { requires: [8 /* ThisEntity */], allows: [] }],\r\n    ['minecraft:block', { requires: [1 /* BlockState */, 7 /* Origin */, 9 /* Tool */], allows: [0 /* BlockEntity */, 4 /* ExplosionRadius */, 8 /* ThisEntity */] }],\r\n    ['minecraft:chest', { requires: [7 /* Origin */], allows: [8 /* ThisEntity */] }],\r\n    ['minecraft:command', { requires: [7 /* Origin */], allows: [8 /* ThisEntity */] }],\r\n    ['minecraft:empty', { requires: [], allows: [] }],\r\n    ['minecraft:entity', { requires: [2 /* DamageSource */, 7 /* Origin */, 8 /* ThisEntity */], allows: [3 /* DirectKillerEntity */, 5 /* KillerEntity */, 6 /* LastDamagePlayer */] }],\r\n    ['minecraft:fishing', { requires: [7 /* Origin */, 9 /* Tool */], allows: [8 /* ThisEntity */] }],\r\n    ['minecraft:generic', { requires: [2 /* DamageSource */, 0 /* BlockEntity */, 1 /* BlockState */, 3 /* DirectKillerEntity */, 4 /* ExplosionRadius */, 5 /* KillerEntity */, 6 /* LastDamagePlayer */, 7 /* Origin */, 8 /* ThisEntity */, 9 /* Tool */], allows: [] }],\r\n    ['minecraft:gift', { requires: [7 /* Origin */, 8 /* ThisEntity */], allows: [] }],\r\n    ['minecraft:selector', { requires: [7 /* Origin */], allows: [8 /* ThisEntity */] }]\r\n]);\r\n/**\r\n * A map from loot entity sources to an array of their required context.\r\n */\r\nexports.LootEntitySources = new Map([\r\n    ['direct_killer', [3 /* DirectKillerEntity */]],\r\n    ['killer', [5 /* KillerEntity */]],\r\n    ['killer_player', [5 /* KillerEntity */]],\r\n    ['this', [8 /* ThisEntity */]]\r\n]);\r\n/**\r\n * A map from loot copy sources to an array of their required context.\r\n */\r\nexports.LootCopySources = new Map([\r\n    ['block_entity', [0 /* BlockEntity */]],\r\n    ['killer', [5 /* KillerEntity */]],\r\n    ['killer_player', [5 /* KillerEntity */]],\r\n    ['this', [8 /* ThisEntity */]]\r\n]);\r\n/**\r\n * A map from loot condition IDs to an array of their required context.\r\n */\r\nexports.LootConditions = new Map([\r\n    ['minecraft:alternative', []],\r\n    ['minecraft:block_state_property', [1 /* BlockState */]],\r\n    ['minecraft:damage_source_properties', [2 /* DamageSource */]],\r\n    ['minecraft:entity_properties', [7 /* Origin */]],\r\n    ['minecraft:entity_scores', []],\r\n    ['minecraft:inverted', []],\r\n    ['minecraft:killed_by_player', [6 /* LastDamagePlayer */]],\r\n    ['minecraft:location_check', []],\r\n    ['minecraft:match_tool', [9 /* Tool */]],\r\n    ['minecraft:random_chance', []],\r\n    ['minecraft:random_chance_with_looting', [5 /* KillerEntity */]],\r\n    ['minecraft:reference', []],\r\n    ['minecraft:survives_explosion', [4 /* ExplosionRadius */]],\r\n    ['minecraft:table_bonus', [9 /* Tool */]],\r\n    ['minecraft:time_check', []],\r\n    ['minecraft:weather_check', []]\r\n]);\r\n/**\r\n * A map from loot function IDs to an array of their required context.\r\n */\r\nexports.LootFunctions = new Map([\r\n    ['minecraft:apply_bonus', [9 /* Tool */]],\r\n    ['minecraft:copy_name', []],\r\n    ['minecraft:copy_nbt', []],\r\n    ['minecraft:copy_state', [1 /* BlockState */]],\r\n    ['minecraft:enchant_randomly', []],\r\n    ['minecraft:enchant_with_levels', []],\r\n    ['minecraft:exploration_map', [7 /* Origin */]],\r\n    ['minecraft:explosion_decay', []],\r\n    ['minecraft:fill_player_head', []],\r\n    ['minecraft:furnace_smelt', []],\r\n    ['minecraft:limit_count', []],\r\n    ['minecraft:looting_enchant', [5 /* KillerEntity */]],\r\n    ['minecraft:set_attributes', []],\r\n    ['minecraft:set_contents', []],\r\n    ['minecraft:set_count', []],\r\n    ['minecraft:set_damage', []],\r\n    ['minecraft:set_loot_table', []],\r\n    ['minecraft:set_lore', []],\r\n    ['minecraft:set_name', []],\r\n    ['minecraft:set_nbt', []],\r\n    ['minecraft:set_stew_effect', []]\r\n]);\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.initLootTableSchemas = void 0;\r\nconst core_1 = require(\"@mcschema/core\");\r\nconst LootContext_1 = require(\"../LootContext\");\r\nconst Common_1 = require(\"./Common\");\r\nfunction initLootTableSchemas(schemas, collections) {\r\n    const Reference = core_1.Reference.bind(undefined, schemas);\r\n    const StringNode = core_1.StringNode.bind(undefined, collections);\r\n    const conditions = {\r\n        conditions: core_1.Opt(core_1.ListNode(Reference('loot_condition')))\r\n    };\r\n    const functionsAndConditions = {\r\n        functions: core_1.Opt(core_1.ListNode(Reference('loot_function'))),\r\n        ...conditions\r\n    };\r\n    function compileSwitchNode(contextMap, collectionID, getNode) {\r\n        const cases = [];\r\n        const getAvailableOptions = (providedContext) => collections\r\n            .get(collectionID)\r\n            .filter(t => {\r\n            var _a;\r\n            const requiredContext = (_a = contextMap.get(t)) !== null && _a !== void 0 ? _a : [];\r\n            return requiredContext.every(c => providedContext.includes(c));\r\n        });\r\n        for (const [tableType, { allows, requires }] of LootContext_1.LootTableTypes) {\r\n            const providedContext = [...allows, ...requires];\r\n            cases.push({\r\n                match: path => path.getModel().get(new core_1.Path(['type'])) === tableType,\r\n                node: getNode(getAvailableOptions(providedContext))\r\n            });\r\n        }\r\n        cases.push({ match: _ => true, node: getNode(collectionID) });\r\n        return core_1.SwitchNode(cases);\r\n    }\r\n    const conditionSwtichNode = compileSwitchNode(LootContext_1.LootConditions, 'loot_condition_type', type => StringNode({ validator: 'resource', params: { pool: type instanceof Array ? type : `loot_condition_type` } }));\r\n    const functionSwtichNode = compileSwitchNode(LootContext_1.LootFunctions, 'loot_function_type', type => StringNode({ validator: 'resource', params: { pool: type instanceof Array ? type : `loot_function_type` } }));\r\n    const entitySourceSwtichNode = compileSwitchNode(LootContext_1.LootEntitySources, 'entity_source', type => StringNode({ enum: type }));\r\n    const copySourceSwtichNode = compileSwitchNode(LootContext_1.LootCopySources, 'copy_source', type => StringNode({ enum: type }));\r\n    schemas.register('loot_table', core_1.Mod(core_1.ObjectNode({\r\n        type: core_1.Opt(StringNode({ validator: \"resource\", params: { pool: collections.get('loot_context_type') } })),\r\n        pools: core_1.Opt(core_1.ListNode(core_1.Mod(core_1.ObjectNode({\r\n            rolls: Common_1.Range({ allowBinomial: true, integer: true }),\r\n            bonus_rolls: core_1.Opt(Common_1.Range({ integer: true })),\r\n            entries: core_1.ListNode(Reference('loot_entry')),\r\n            ...functionsAndConditions\r\n        }, { category: 'pool', context: 'loot_pool' }), {\r\n            default: () => ({\r\n                rolls: 1,\r\n                entries: [{\r\n                        type: 'minecraft:item',\r\n                        name: 'minecraft:stone'\r\n                    }]\r\n            })\r\n        }))),\r\n        functions: core_1.Opt(core_1.ListNode(Reference('loot_function')))\r\n    }, { context: 'loot_table' }), {\r\n        default: () => ({\r\n            pools: [{\r\n                    rolls: 1,\r\n                    entries: [{\r\n                            type: 'minecraft:item',\r\n                            name: 'minecraft:stone'\r\n                        }]\r\n                }]\r\n        })\r\n    }));\r\n    const weightMod = {\r\n        enabled: path => {\r\n            var _a;\r\n            return ((_a = path.pop().get()) === null || _a === void 0 ? void 0 : _a.length) > 1\r\n                && !['minecraft:alternatives', 'minecraft:group', 'minecraft:sequence'].includes(path.push('type').get());\r\n        }\r\n    };\r\n    schemas.register('loot_entry', core_1.Mod(core_1.ObjectNode({\r\n        type: StringNode({ validator: 'resource', params: { pool: 'loot_pool_entry_type' } }),\r\n        weight: core_1.Opt(core_1.Mod(core_1.NumberNode({ integer: true, min: 1 }), weightMod)),\r\n        quality: core_1.Opt(core_1.Mod(core_1.NumberNode({ integer: true }), weightMod)),\r\n        [core_1.Switch]: [{ push: 'type' }],\r\n        [core_1.Case]: {\r\n            'minecraft:alternatives': {\r\n                children: core_1.ListNode(Reference('loot_entry')),\r\n                ...functionsAndConditions\r\n            },\r\n            'minecraft:dynamic': {\r\n                name: StringNode(),\r\n                ...functionsAndConditions\r\n            },\r\n            'minecraft:group': {\r\n                children: core_1.ListNode(Reference('loot_entry')),\r\n                ...functionsAndConditions\r\n            },\r\n            'minecraft:item': {\r\n                name: StringNode({ validator: 'resource', params: { pool: 'item' } }),\r\n                ...functionsAndConditions\r\n            },\r\n            'minecraft:loot_table': {\r\n                name: StringNode({ validator: 'resource', params: { pool: '$loot_table' } }),\r\n                ...functionsAndConditions\r\n            },\r\n            'minecraft:sequence': {\r\n                children: core_1.ListNode(Reference('loot_entry')),\r\n                ...functionsAndConditions\r\n            },\r\n            'minecraft:tag': {\r\n                name: StringNode({ validator: 'resource', params: { pool: '$tag/item' } }),\r\n                expand: core_1.Opt(core_1.BooleanNode()),\r\n                ...functionsAndConditions\r\n            }\r\n        }\r\n    }, { context: 'loot_entry' }), {\r\n        default: () => ({\r\n            type: 'minecraft:item',\r\n            name: 'minecraft:stone'\r\n        })\r\n    }));\r\n    schemas.register('loot_function', core_1.Mod(core_1.ObjectNode({\r\n        function: functionSwtichNode,\r\n        [core_1.Switch]: [{ push: 'function' }],\r\n        [core_1.Case]: (() => {\r\n            const cases = {\r\n                'minecraft:apply_bonus': {\r\n                    enchantment: StringNode({ validator: 'resource', params: { pool: 'enchantment' } }),\r\n                    formula: StringNode({ validator: 'resource', params: { pool: collections.get('loot_table_apply_bonus_formula') } }),\r\n                    parameters: core_1.Mod(core_1.ObjectNode({\r\n                        bonusMultiplier: core_1.Mod(core_1.NumberNode(), {\r\n                            enabled: path => path.pop().push('formula').get() === 'minecraft:uniform_bonus_count'\r\n                        }),\r\n                        extra: core_1.Mod(core_1.NumberNode(), {\r\n                            enabled: path => path.pop().push('formula').get() === 'minecraft:binomial_with_bonus_count'\r\n                        }),\r\n                        probability: core_1.Mod(core_1.NumberNode(), {\r\n                            enabled: path => path.pop().push('formula').get() === 'minecraft:binomial_with_bonus_count'\r\n                        })\r\n                    }), {\r\n                        enabled: path => path.push('formula').get() !== 'minecraft:ore_drops'\r\n                    })\r\n                },\r\n                'minecraft:copy_name': {\r\n                    source: copySourceSwtichNode\r\n                },\r\n                'minecraft:copy_nbt': {\r\n                    source: copySourceSwtichNode,\r\n                    ops: core_1.ListNode(core_1.ObjectNode({\r\n                        source: StringNode({ validator: 'nbt_path', params: { category: { getter: 'copy_source', path: ['pop', 'pop', 'pop', { push: 'source' }] } } }),\r\n                        target: StringNode({ validator: 'nbt_path', params: { category: 'minecraft:item' } }),\r\n                        op: StringNode({ enum: ['replace', 'append', 'merge'] })\r\n                    }, { context: 'nbt_operation' }))\r\n                },\r\n                'minecraft:copy_state': {\r\n                    block: StringNode({ validator: 'resource', params: { pool: 'block' } }),\r\n                    properties: core_1.ListNode(StringNode({ validator: 'block_state_key', params: { id: ['pop', 'pop', { push: 'block' }] } }))\r\n                },\r\n                'minecraft:enchant_randomly': {\r\n                    enchantments: core_1.Opt(core_1.ListNode(StringNode({ validator: 'resource', params: { pool: 'enchantment' } })))\r\n                },\r\n                'minecraft:enchant_with_levels': {\r\n                    levels: Common_1.Range({ allowBinomial: true }),\r\n                    treasure: core_1.Opt(core_1.BooleanNode())\r\n                },\r\n                'minecraft:exploration_map': {\r\n                    destination: core_1.Opt(StringNode({ enum: 'map_feature' })),\r\n                    decoration: core_1.Opt(StringNode({ enum: 'map_decoration' })),\r\n                    zoom: core_1.Opt(core_1.NumberNode({ integer: true })),\r\n                    search_radius: core_1.Opt(core_1.NumberNode({ integer: true })),\r\n                    skip_existing_chunks: core_1.Opt(core_1.BooleanNode())\r\n                },\r\n                'minecraft:fill_player_head': {\r\n                    entity: entitySourceSwtichNode\r\n                },\r\n                'minecraft:limit_count': {\r\n                    limit: Common_1.Range({ bounds: true })\r\n                },\r\n                'minecraft:looting_enchant': {\r\n                    count: Common_1.Range({ bounds: true }),\r\n                    limit: core_1.Opt(core_1.NumberNode({ integer: true }))\r\n                },\r\n                'minecraft:set_attributes': {\r\n                    modifiers: core_1.ListNode(Reference('attribute_modifier'))\r\n                },\r\n                'minecraft:set_contents': {\r\n                    entries: core_1.ListNode(Reference('loot_entry'))\r\n                },\r\n                'minecraft:set_count': {\r\n                    count: Common_1.Range({ allowBinomial: true })\r\n                },\r\n                'minecraft:set_damage': {\r\n                    damage: Common_1.Range({ forceRange: true })\r\n                },\r\n                'minecraft:set_loot_table': {\r\n                    name: StringNode({ validator: 'resource', params: { pool: '$loot_table' } }),\r\n                    seed: core_1.Opt(core_1.NumberNode({ integer: true }))\r\n                },\r\n                'minecraft:set_lore': {\r\n                    entity: core_1.Opt(entitySourceSwtichNode),\r\n                    lore: core_1.ListNode(Reference('text_component')),\r\n                    replace: core_1.Opt(core_1.BooleanNode())\r\n                },\r\n                'minecraft:set_name': {\r\n                    entity: core_1.Opt(entitySourceSwtichNode),\r\n                    name: core_1.Opt(Reference('text_component'))\r\n                },\r\n                'minecraft:set_nbt': {\r\n                    tag: StringNode({ validator: 'nbt', params: { registry: { category: 'minecraft:item' } } })\r\n                },\r\n                'minecraft:set_stew_effect': {\r\n                    effects: core_1.Opt(core_1.ListNode(core_1.ObjectNode({\r\n                        type: StringNode({ validator: 'resource', params: { pool: 'mob_effect' } }),\r\n                        duration: Common_1.Range()\r\n                    })))\r\n                }\r\n            };\r\n            const res = {};\r\n            collections.get('loot_function_type').forEach(f => {\r\n                res[f] = { ...cases[f], ...conditions };\r\n            });\r\n            return res;\r\n        })()\r\n    }, { category: 'function', context: 'function' }), {\r\n        default: () => ({\r\n            function: 'minecraft:set_count',\r\n            count: 1\r\n        })\r\n    }));\r\n    schemas.register('loot_condition', core_1.Mod(core_1.ObjectNode({\r\n        condition: conditionSwtichNode,\r\n        [core_1.Switch]: [{ push: 'condition' }],\r\n        [core_1.Case]: {\r\n            ...Common_1.ConditionCases,\r\n            'minecraft:entity_properties': {\r\n                entity: entitySourceSwtichNode,\r\n                predicate: Reference('entity_predicate')\r\n            },\r\n            'minecraft:entity_scores': {\r\n                entity: entitySourceSwtichNode,\r\n                scores: core_1.MapNode(StringNode({ validator: 'objective' }), Common_1.Range({ bounds: true }))\r\n            }\r\n        }\r\n    }, { category: 'predicate', context: 'condition' }), {\r\n        default: () => ({\r\n            condition: 'minecraft:random_chance',\r\n            chance: 0.5\r\n        })\r\n    }));\r\n    schemas.register('attribute_modifier', core_1.Mod(core_1.ObjectNode({\r\n        attribute: StringNode({ validator: 'resource', params: { pool: 'attribute' } }),\r\n        name: StringNode(),\r\n        amount: Common_1.Range({ bounds: true }),\r\n        operation: StringNode({ enum: ['addition', 'multiply_base', 'multiply_total'] }),\r\n        slot: core_1.StringOrList(StringNode({ enum: 'slot' }))\r\n    }, { context: 'attribute_modifier' }), {\r\n        default: () => ({\r\n            attribute: 'minecraft:generic.max_health',\r\n            name: '',\r\n            amount: 1,\r\n            operation: 'addition',\r\n            slot: 'mainhand'\r\n        })\r\n    }));\r\n}\r\nexports.initLootTableSchemas = initLootTableSchemas;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.initPackMcmetaSchemas = void 0;\r\nconst core_1 = require(\"@mcschema/core\");\r\nfunction initPackMcmetaSchemas(schemas, _) {\r\n    const getSimpleString = (jsonText) => { var _a, _b; return jsonText instanceof Array ? getSimpleString(jsonText[0]) : (_b = (_a = jsonText === null || jsonText === void 0 ? void 0 : jsonText.text) !== null && _a !== void 0 ? _a : jsonText === null || jsonText === void 0 ? void 0 : jsonText.toString()) !== null && _b !== void 0 ? _b : ''; };\r\n    schemas.register('pack_mcmeta', core_1.Mod(core_1.ObjectNode({\r\n        pack: core_1.Mod(core_1.ObjectNode({\r\n            pack_format: core_1.Mod(core_1.NumberNode({ integer: true, min: 6, max: 6 }), { default: () => 6 }),\r\n            description: core_1.Reference(schemas, 'text_component')\r\n        }), {\r\n            default: () => ({\r\n                pack_format: 6,\r\n                description: ''\r\n            })\r\n        })\r\n    }), {\r\n        default: () => ({\r\n            pack: {\r\n                pack_format: 6,\r\n                description: ''\r\n            }\r\n        })\r\n    }));\r\n}\r\nexports.initPackMcmetaSchemas = initPackMcmetaSchemas;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.initPredicatesSchemas = void 0;\r\nconst core_1 = require(\"@mcschema/core\");\r\nconst Common_1 = require(\"./Common\");\r\nfunction initPredicatesSchemas(schemas, collections) {\r\n    const Reference = core_1.Reference.bind(undefined, schemas);\r\n    const StringNode = core_1.StringNode.bind(undefined, collections);\r\n    const StateChoice = core_1.ChoiceNode([\r\n        {\r\n            type: 'string',\r\n            node: StringNode(),\r\n            change: v => (typeof v === 'boolean' || typeof v === 'number') ? v.toString() : ''\r\n        },\r\n        {\r\n            type: 'number',\r\n            node: core_1.NumberNode(),\r\n            change: v => (typeof v === 'string') ? parseInt(v) : 0\r\n        },\r\n        {\r\n            type: 'object',\r\n            node: core_1.ObjectNode({\r\n                min: core_1.Opt(core_1.NumberNode({ integer: true })),\r\n                max: core_1.Opt(core_1.NumberNode({ integer: true }))\r\n            }),\r\n            change: v => (typeof v === 'number') ? ({ min: v, max: v }) : ({})\r\n        },\r\n        {\r\n            type: 'boolean',\r\n            node: core_1.BooleanNode(),\r\n            change: v => v === 'true' || v === 1\r\n        }\r\n    ]);\r\n    schemas.register('item_predicate', core_1.ObjectNode({\r\n        item: core_1.Opt(StringNode({ validator: 'resource', params: { pool: 'item' } })),\r\n        tag: core_1.Opt(StringNode({ validator: 'resource', params: { pool: '$tag/item' } })),\r\n        count: core_1.Opt(Common_1.Range()),\r\n        durability: core_1.Opt(Common_1.Range()),\r\n        potion: core_1.Opt(StringNode({ validator: 'resource', params: { pool: 'potion' } })),\r\n        nbt: core_1.Opt(StringNode({ validator: 'nbt', params: { registry: { category: 'minecraft:item', id: ['pop', { push: 'item' }] } } })),\r\n        enchantments: core_1.Opt(core_1.ListNode(Reference('enchantment_predicate')))\r\n    }, { context: 'item' }));\r\n    schemas.register('enchantment_predicate', core_1.ObjectNode({\r\n        enchantment: core_1.Opt(StringNode({ validator: 'resource', params: { pool: 'enchantment' } })),\r\n        levels: core_1.Opt(Common_1.Range())\r\n    }, { context: 'enchantment' }));\r\n    schemas.register('block_predicate', core_1.ObjectNode({\r\n        block: core_1.Opt(StringNode({ validator: 'resource', params: { pool: 'block' } })),\r\n        tag: core_1.Opt(StringNode({ validator: 'resource', params: { pool: '$tag/block' } })),\r\n        nbt: core_1.Opt(StringNode({ validator: 'nbt', params: { registry: { category: 'minecraft:block', id: ['pop', { push: 'block' }] } } })),\r\n        state: core_1.Opt(core_1.MapNode(StringNode(), StateChoice, { validation: { validator: 'block_state_map', params: { id: ['pop', { push: 'block' }] } } }))\r\n    }, { context: 'block' }));\r\n    schemas.register('fluid_predicate', core_1.ObjectNode({\r\n        fluid: core_1.Opt(StringNode({ validator: 'resource', params: { pool: 'fluid' } })),\r\n        tag: core_1.Opt(StringNode({ validator: 'resource', params: { pool: '$tag/fluid' } })),\r\n        state: core_1.Opt(core_1.MapNode(StringNode(), StateChoice))\r\n    }, { context: 'fluid' }));\r\n    schemas.register('location_predicate', core_1.ObjectNode({\r\n        position: core_1.Opt(core_1.ObjectNode({\r\n            x: core_1.Opt(Common_1.Range()),\r\n            y: core_1.Opt(Common_1.Range()),\r\n            z: core_1.Opt(Common_1.Range())\r\n        })),\r\n        biome: core_1.Opt(StringNode({ validator: 'resource', params: { pool: '$worldgen/biome' } })),\r\n        feature: core_1.Opt(StringNode({ enum: collections.get('worldgen/structure_feature').map(v => v.slice(10)) })),\r\n        dimension: core_1.Opt(StringNode({ validator: 'resource', params: { pool: '$dimension' } })),\r\n        light: core_1.Opt(core_1.ObjectNode({\r\n            light: core_1.Opt(Common_1.Range({ integer: true, min: 0, max: 15 }))\r\n        })),\r\n        smokey: core_1.Opt(core_1.BooleanNode()),\r\n        block: core_1.Opt(Reference('block_predicate')),\r\n        fluid: core_1.Opt(Reference('fluid_predicate'))\r\n    }, { context: 'location' }));\r\n    schemas.register('statistic_predicate', core_1.ObjectNode({\r\n        type: StringNode({ validator: 'resource', params: { pool: 'stat_type' } }),\r\n        stat: StringNode(),\r\n        value: Common_1.Range(),\r\n        [core_1.Switch]: [{ push: 'type' }],\r\n        [core_1.Case]: {\r\n            'minecraft:mined': {\r\n                stat: StringNode({ validator: 'resource', params: { pool: 'block' } })\r\n            },\r\n            'minecraft:crafted': {\r\n                stat: StringNode({ validator: 'resource', params: { pool: 'item' } })\r\n            },\r\n            'minecraft:used': {\r\n                stat: StringNode({ validator: 'resource', params: { pool: 'item' } })\r\n            },\r\n            'minecraft:broken': {\r\n                stat: StringNode({ validator: 'resource', params: { pool: 'item' } })\r\n            },\r\n            'minecraft:picked_up': {\r\n                stat: StringNode({ validator: 'resource', params: { pool: 'item' } })\r\n            },\r\n            'minecraft:dropped': {\r\n                stat: StringNode({ validator: 'resource', params: { pool: 'item' } })\r\n            },\r\n            'minecraft:killed': {\r\n                stat: StringNode({ validator: 'resource', params: { pool: 'entity_type' } })\r\n            },\r\n            'minecraft:killed_by': {\r\n                stat: StringNode({ validator: 'resource', params: { pool: 'entity_type' } })\r\n            },\r\n            'minecraft:custom': {\r\n                stat: StringNode({ validator: 'resource', params: { pool: 'custom_stat' } })\r\n            }\r\n        }\r\n    }));\r\n    schemas.register('player_predicate', core_1.ObjectNode({\r\n        gamemode: core_1.Opt(StringNode({ enum: 'gamemode' })),\r\n        level: core_1.Opt(Common_1.Range()),\r\n        advancements: core_1.Opt(core_1.MapNode(StringNode({ validator: 'resource', params: { pool: '$advancement' } }), core_1.ChoiceNode([\r\n            { type: 'boolean', node: core_1.BooleanNode(), change: _ => true },\r\n            {\r\n                type: 'object', node: core_1.MapNode(StringNode(), core_1.BooleanNode())\r\n            }\r\n        ]))),\r\n        recipes: core_1.Opt(core_1.MapNode(StringNode({ validator: 'resource', params: { pool: '$recipe' } }), core_1.BooleanNode())),\r\n        stats: core_1.Opt(core_1.ListNode(Reference('statistic_predicate')))\r\n    }, { context: 'player' }));\r\n    schemas.register('status_effect_predicate', core_1.ObjectNode({\r\n        amplifier: core_1.Opt(Common_1.Range()),\r\n        duration: core_1.Opt(Common_1.Range()),\r\n        ambient: core_1.Opt(core_1.BooleanNode()),\r\n        visible: core_1.Opt(core_1.BooleanNode())\r\n    }, { context: 'status_effect' }));\r\n    schemas.register('distance_predicate', core_1.ObjectNode({\r\n        x: core_1.Opt(Common_1.Range()),\r\n        y: core_1.Opt(Common_1.Range()),\r\n        z: core_1.Opt(Common_1.Range()),\r\n        absolute: core_1.Opt(Common_1.Range()),\r\n        horizontal: core_1.Opt(Common_1.Range())\r\n    }, { context: 'distance' }));\r\n    schemas.register('entity_predicate', core_1.ObjectNode({\r\n        type: core_1.Opt(StringNode({ validator: 'resource', params: { pool: 'entity_type', allowTag: true } })),\r\n        nbt: core_1.Opt(StringNode({ validator: 'nbt', params: { registry: { category: 'minecraft:entity', id: ['pop', { push: 'type' }] } } })),\r\n        team: core_1.Opt(StringNode({ validator: 'team' })),\r\n        location: core_1.Opt(Reference('location_predicate')),\r\n        distance: core_1.Opt(Reference('distance_predicate')),\r\n        flags: core_1.Opt(core_1.ObjectNode({\r\n            is_on_fire: core_1.Opt(core_1.BooleanNode()),\r\n            is_sneaking: core_1.Opt(core_1.BooleanNode()),\r\n            is_sprinting: core_1.Opt(core_1.BooleanNode()),\r\n            is_swimming: core_1.Opt(core_1.BooleanNode()),\r\n            is_baby: core_1.Opt(core_1.BooleanNode())\r\n        })),\r\n        equipment: core_1.Opt(core_1.MapNode(StringNode({ enum: 'slot' }), Reference('item_predicate'))),\r\n        vehicle: core_1.Opt(Reference('entity_predicate')),\r\n        targeted_entity: core_1.Opt(Reference('entity_predicate')),\r\n        player: core_1.Opt(Reference('player_predicate')),\r\n        fishing_hook: core_1.Opt(core_1.ObjectNode({\r\n            in_open_water: core_1.Opt(core_1.BooleanNode())\r\n        })),\r\n        effects: core_1.Opt(core_1.MapNode(StringNode({ validator: 'resource', params: { pool: 'mob_effect' } }), Reference('status_effect_predicate')))\r\n    }, { context: 'entity' }));\r\n    schemas.register('damage_source_predicate', core_1.ObjectNode({\r\n        is_explosion: core_1.Opt(core_1.BooleanNode()),\r\n        is_fire: core_1.Opt(core_1.BooleanNode()),\r\n        is_magic: core_1.Opt(core_1.BooleanNode()),\r\n        is_projectile: core_1.Opt(core_1.BooleanNode()),\r\n        is_lightning: core_1.Opt(core_1.BooleanNode()),\r\n        bypasses_armor: core_1.Opt(core_1.BooleanNode()),\r\n        bypasses_invulnerability: core_1.Opt(core_1.BooleanNode()),\r\n        bypasses_magic: core_1.Opt(core_1.BooleanNode()),\r\n        source_entity: core_1.Opt(Reference('entity_predicate')),\r\n        direct_entity: core_1.Opt(Reference('entity_predicate'))\r\n    }, { context: 'damage_source' }));\r\n    schemas.register('damage_predicate', core_1.ObjectNode({\r\n        dealt: core_1.Opt(Common_1.Range()),\r\n        taken: core_1.Opt(Common_1.Range()),\r\n        blocked: core_1.Opt(core_1.BooleanNode()),\r\n        source_entity: core_1.Opt(Reference('entity_predicate')),\r\n        type: core_1.Opt(Reference('damage_source_predicate'))\r\n    }, { context: 'damage' }));\r\n}\r\nexports.initPredicatesSchemas = initPredicatesSchemas;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.initRecipeSchemas = void 0;\r\nconst core_1 = require(\"@mcschema/core\");\r\nfunction initRecipeSchemas(schemas, collections) {\r\n    const Reference = core_1.Reference.bind(undefined, schemas);\r\n    const StringNode = core_1.StringNode.bind(undefined, collections);\r\n    schemas.register('recipe', core_1.Mod(core_1.ObjectNode({\r\n        type: StringNode({ validator: 'resource', params: { pool: 'recipe_serializer' } }),\r\n        [core_1.Switch]: [{ push: 'type' }],\r\n        [core_1.Case]: {\r\n            'minecraft:crafting_shaped': {\r\n                group: core_1.Opt(StringNode({ enum: 'recipe_group', additional: true })),\r\n                pattern: core_1.ListNode(StringNode()),\r\n                key: core_1.MapNode(StringNode(), // TODO: add validation\r\n                Reference('recipe_ingredient')),\r\n                result: Reference('recipe_result')\r\n            },\r\n            'minecraft:crafting_shapeless': {\r\n                group: core_1.Opt(StringNode()),\r\n                ingredients: core_1.ListNode(Reference('recipe_ingredient')),\r\n                result: Reference('recipe_result')\r\n            },\r\n            'minecraft:smelting': {\r\n                group: core_1.Opt(StringNode()),\r\n                ingredient: Reference('recipe_ingredient'),\r\n                result: StringNode({ validator: 'resource', params: { pool: 'item' } }),\r\n                experience: core_1.Opt(core_1.NumberNode()),\r\n                cookingtime: core_1.Opt(core_1.Mod(core_1.NumberNode({ integer: true }), { default: () => 200 }))\r\n            },\r\n            'minecraft:blasting': {\r\n                group: core_1.Opt(StringNode()),\r\n                ingredient: Reference('recipe_ingredient'),\r\n                result: StringNode({ validator: 'resource', params: { pool: 'item' } }),\r\n                experience: core_1.Opt(core_1.NumberNode()),\r\n                cookingtime: core_1.Opt(core_1.Mod(core_1.NumberNode({ integer: true }), { default: () => 100 }))\r\n            },\r\n            'minecraft:smoking': {\r\n                group: core_1.Opt(StringNode()),\r\n                ingredient: Reference('recipe_ingredient'),\r\n                result: StringNode({ validator: 'resource', params: { pool: 'item' } }),\r\n                experience: core_1.Opt(core_1.NumberNode()),\r\n                cookingtime: core_1.Opt(core_1.Mod(core_1.NumberNode({ integer: true }), { default: () => 100 }))\r\n            },\r\n            'minecraft:campfire_cooking': {\r\n                group: core_1.Opt(StringNode()),\r\n                ingredient: Reference('recipe_ingredient'),\r\n                result: StringNode({ validator: 'resource', params: { pool: 'item' } }),\r\n                experience: core_1.Opt(core_1.NumberNode()),\r\n                cookingtime: core_1.Opt(core_1.Mod(core_1.NumberNode({ integer: true }), { default: () => 100 }))\r\n            },\r\n            'minecraft:stonecutting': {\r\n                group: core_1.Opt(StringNode()),\r\n                ingredient: Reference('recipe_ingredient'),\r\n                result: StringNode({ validator: 'resource', params: { pool: 'item' } }),\r\n                count: core_1.NumberNode({ integer: true })\r\n            },\r\n            'minecraft:smithing': {\r\n                group: core_1.Opt(StringNode()),\r\n                base: Reference('recipe_ingredient_object'),\r\n                addition: Reference('recipe_ingredient_object'),\r\n                result: Reference('recipe_result')\r\n            }\r\n        }\r\n    }, { context: 'recipe' }), {\r\n        default: () => ({\r\n            type: 'minecraft:crafting_shaped'\r\n        })\r\n    }));\r\n    schemas.register('recipe_ingredient', core_1.Mod(core_1.ChoiceNode([\r\n        {\r\n            type: 'object',\r\n            node: Reference('recipe_ingredient_object'),\r\n            change: v => v[0]\r\n        },\r\n        {\r\n            type: 'list',\r\n            node: core_1.ListNode(Reference('recipe_ingredient_object')),\r\n            change: v => [v]\r\n        }\r\n    ]), {\r\n        default: () => ({\r\n            item: 'minecraft:stone'\r\n        })\r\n    }));\r\n    schemas.register('recipe_ingredient_object', core_1.Mod(core_1.ObjectNode({\r\n        item: core_1.Opt(StringNode({ validator: 'resource', params: { pool: 'item' } })),\r\n        tag: core_1.Opt(StringNode({ validator: 'resource', params: { pool: '$tag/item' } }))\r\n    }), {\r\n        default: () => ({\r\n            item: 'minecraft:stone'\r\n        })\r\n    }));\r\n    schemas.register('recipe_result', core_1.Mod(core_1.ObjectNode({\r\n        item: StringNode({ validator: 'resource', params: { pool: 'item' } }),\r\n        count: core_1.Opt(core_1.Mod(core_1.NumberNode({ integer: true }), { default: () => 1 }))\r\n    }), {\r\n        default: () => ({\r\n            item: 'minecraft:stone'\r\n        })\r\n    }));\r\n}\r\nexports.initRecipeSchemas = initRecipeSchemas;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.initTagsSchemas = void 0;\r\nconst core_1 = require(\"@mcschema/core\");\r\nfunction initTagsSchemas(schemas, collections) {\r\n    const StringNode = core_1.StringNode.bind(undefined, collections);\r\n    const TagBase = (type) => core_1.Mod(core_1.ObjectNode({\r\n        replace: core_1.Opt(core_1.BooleanNode()),\r\n        values: core_1.ListNode(core_1.ChoiceNode([\r\n            {\r\n                type: 'string',\r\n                node: StringNode({ validator: 'resource', params: { pool: type, allowTag: true } }),\r\n                change: v => v.id\r\n            },\r\n            {\r\n                type: 'object',\r\n                node: core_1.ObjectNode({\r\n                    id: StringNode({ validator: 'resource', params: { pool: type, allowTag: true, allowUnknown: true } }),\r\n                    required: core_1.BooleanNode()\r\n                }),\r\n                change: v => ({ id: v })\r\n            }\r\n        ])),\r\n    }, { context: 'tag' }), {\r\n        default: () => ({\r\n            values: []\r\n        })\r\n    });\r\n    schemas.register('block_tag', TagBase('block'));\r\n    schemas.register('entity_type_tag', TagBase('entity_type'));\r\n    schemas.register('fluid_tag', TagBase('fluid'));\r\n    schemas.register('function_tag', TagBase('$function'));\r\n    schemas.register('item_tag', TagBase('item'));\r\n}\r\nexports.initTagsSchemas = initTagsSchemas;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.initTextComponentSchemas = void 0;\r\nconst core_1 = require(\"@mcschema/core\");\r\nfunction initTextComponentSchemas(schemas, collections) {\r\n    const Reference = core_1.Reference.bind(undefined, schemas);\r\n    const StringNode = core_1.StringNode.bind(undefined, collections);\r\n    const getSimpleString = (v) => { var _a; return v instanceof Array ? getSimpleString(v[0]) : (_a = v === null || v === void 0 ? void 0 : v.text) !== null && _a !== void 0 ? _a : (typeof v === 'object' ? '' : v === null || v === void 0 ? void 0 : v.toString()); };\r\n    schemas.register('text_component', core_1.Mod(core_1.ChoiceNode([\r\n        {\r\n            type: 'object',\r\n            node: Reference('text_component_object'),\r\n            change: v => v instanceof Array ? (typeof v[0] === 'object' ? v[0] : { text: getSimpleString(v[0]) }) : typeof v === 'object' ? v : { text: getSimpleString(v) }\r\n        },\r\n        {\r\n            type: 'list',\r\n            node: Reference('text_component_list'),\r\n            change: v => [v]\r\n        },\r\n        {\r\n            type: 'string',\r\n            priority: 1,\r\n            node: StringNode(),\r\n            change: getSimpleString\r\n        },\r\n        {\r\n            type: 'number',\r\n            node: core_1.NumberNode(),\r\n            change: v => {\r\n                const n = parseFloat(getSimpleString(v));\r\n                return isFinite(n) ? n : (!!v ? 1 : 0);\r\n            }\r\n        },\r\n        {\r\n            type: 'boolean',\r\n            node: core_1.BooleanNode(),\r\n            change: v => {\r\n                const s = getSimpleString(v);\r\n                return s === 'true' || s === 'false' ? s === 'true' : !!s;\r\n            }\r\n        }\r\n    ], { context: 'text_component' }), {\r\n        default: () => ({\r\n            text: \"\"\r\n        })\r\n    }));\r\n    const CommonFields = {\r\n        color: core_1.Opt(StringNode()) /* TODO */,\r\n        font: core_1.Opt(StringNode()),\r\n        bold: core_1.Opt(core_1.BooleanNode()),\r\n        italic: core_1.Opt(core_1.BooleanNode()),\r\n        underlined: core_1.Opt(core_1.BooleanNode()),\r\n        strikethrough: core_1.Opt(core_1.BooleanNode()),\r\n        obfuscated: core_1.Opt(core_1.BooleanNode()),\r\n        insertion: core_1.Opt(StringNode()),\r\n        clickEvent: core_1.Opt(core_1.ObjectNode({\r\n            action: StringNode({ enum: ['open_url', 'open_file', 'run_command', 'suggest_command', 'change_page', 'copy_to_clipboard'] }),\r\n            [core_1.Switch]: [{ push: 'action' }],\r\n            [core_1.Case]: {\r\n                'change_page': {\r\n                    value: StringNode()\r\n                },\r\n                'copy_to_clipboard': {\r\n                    value: StringNode()\r\n                },\r\n                'open_file': {\r\n                    value: StringNode()\r\n                },\r\n                'open_url': {\r\n                    value: StringNode()\r\n                },\r\n                'run_command': {\r\n                    value: StringNode({ validator: 'command', params: { leadingSlash: true, allowPartial: true } })\r\n                },\r\n                'suggest_command': {\r\n                    value: StringNode({ validator: 'command', params: { leadingSlash: true, allowPartial: true } })\r\n                }\r\n            }\r\n        })),\r\n        hoverEvent: core_1.Opt(core_1.ObjectNode({\r\n            action: StringNode({ enum: ['show_text', 'show_item', 'show_entity'] }),\r\n            [core_1.Switch]: [{ push: 'action' }],\r\n            [core_1.Case]: {\r\n                'show_text': {\r\n                    value: core_1.Opt(Reference('text_component')),\r\n                    contents: core_1.Opt(Reference('text_component'))\r\n                },\r\n                'show_item': {\r\n                    value: core_1.Opt(StringNode({ validator: 'nbt', params: { module: 'util::InventoryItem' } })),\r\n                    contents: core_1.Opt(core_1.ObjectNode({\r\n                        id: StringNode({ validator: 'resource', params: { pool: 'item' } }),\r\n                        count: core_1.Opt(core_1.NumberNode({ integer: true })),\r\n                        tag: core_1.Opt(StringNode({ validator: 'nbt', params: { registry: { category: 'minecraft:item', id: ['pop', { push: 'id' }] } } }))\r\n                    }))\r\n                },\r\n                'show_entity': {\r\n                    value: core_1.Opt(core_1.ObjectNode({\r\n                        name: core_1.Opt(StringNode()),\r\n                        type: core_1.Opt(StringNode()),\r\n                        id: core_1.Opt(StringNode())\r\n                    })),\r\n                    contents: core_1.Opt(core_1.Mod(core_1.ObjectNode({\r\n                        name: core_1.Opt(Reference('text_component')),\r\n                        type: StringNode({ validator: 'resource', params: { pool: 'entity_type' } }),\r\n                        id: StringNode({ validator: 'uuid' })\r\n                    }), {\r\n                        default: () => ({\r\n                            type: 'minecraft:pig',\r\n                            id: '00000001-0001-0001-0001-000000000001'\r\n                        })\r\n                    }))\r\n                }\r\n            }\r\n        })),\r\n        extra: core_1.Opt(Reference('text_component_list'))\r\n    };\r\n    schemas.register('text_component_object', core_1.Mod(core_1.ChoiceNode([\r\n        {\r\n            type: 'text',\r\n            match: v => typeof v === 'object',\r\n            change: v => ({ text: '' }),\r\n            priority: -1,\r\n            node: core_1.ObjectNode({\r\n                text: StringNode(),\r\n                ...CommonFields\r\n            })\r\n        },\r\n        {\r\n            type: 'translation',\r\n            match: v => (v === null || v === void 0 ? void 0 : v.translate) !== undefined,\r\n            change: v => ({ translate: '' }),\r\n            node: core_1.ObjectNode({\r\n                translate: StringNode(),\r\n                with: core_1.Opt(Reference('text_component_list')),\r\n                ...CommonFields\r\n            })\r\n        },\r\n        {\r\n            type: 'score',\r\n            match: v => (v === null || v === void 0 ? void 0 : v.score) !== undefined,\r\n            change: v => ({ score: {} }),\r\n            node: core_1.ObjectNode({\r\n                score: core_1.ObjectNode({\r\n                    name: StringNode({ validator: 'entity', params: { amount: 'single', type: 'entities', isScoreHolder: true } }),\r\n                    objective: StringNode({ validator: 'objective' }),\r\n                    value: core_1.Opt(StringNode())\r\n                }),\r\n                ...CommonFields\r\n            })\r\n        },\r\n        {\r\n            type: 'selector',\r\n            match: v => (v === null || v === void 0 ? void 0 : v.selector) !== undefined,\r\n            change: v => ({ selector: '' }),\r\n            node: core_1.ObjectNode({\r\n                selector: StringNode({ validator: 'entity', params: { amount: 'multiple', type: 'entities' } }),\r\n                ...CommonFields\r\n            })\r\n        },\r\n        {\r\n            type: 'keybind',\r\n            match: v => (v === null || v === void 0 ? void 0 : v.keybind) !== undefined,\r\n            change: v => ({ keybind: '' }),\r\n            node: core_1.ObjectNode({\r\n                keybind: StringNode({ enum: 'keybind', additional: true }),\r\n                ...CommonFields\r\n            })\r\n        },\r\n        {\r\n            type: 'nbt',\r\n            match: v => (v === null || v === void 0 ? void 0 : v.nbt) !== undefined,\r\n            change: v => ({ nbt: '' }),\r\n            node: core_1.ObjectNode({\r\n                nbt: StringNode({ validator: 'nbt_path' }),\r\n                block: core_1.Opt(StringNode({ validator: 'vector', params: { dimension: 3, isInteger: true } })),\r\n                entity: core_1.Opt(StringNode({ validator: 'entity', params: { amount: 'multiple', type: 'entities' } })),\r\n                storage: core_1.Opt(StringNode({ validator: 'resource', params: { pool: '$storage' } })),\r\n                interpret: core_1.Opt(core_1.BooleanNode()),\r\n                ...CommonFields\r\n            })\r\n        }\r\n    ], { context: 'text_component_object', choiceContext: 'text_component.object' }), {\r\n        default: () => ({\r\n            text: \"\"\r\n        })\r\n    }));\r\n    schemas.register('text_component_list', core_1.Mod(core_1.ListNode(Reference('text_component')), {\r\n        default: () => [{\r\n                text: \"\"\r\n            }]\r\n    }));\r\n}\r\nexports.initTextComponentSchemas = initTextComponentSchemas;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.initBiomeSchemas = void 0;\r\nconst core_1 = require(\"@mcschema/core\");\r\nfunction initBiomeSchemas(schemas, collections) {\r\n    const StringNode = core_1.StringNode.bind(undefined, collections);\r\n    schemas.register('biome', core_1.Mod(core_1.ObjectNode({\r\n        surface_builder: StringNode({ validator: 'resource', params: { pool: '$worldgen/configured_surface_builder' } }),\r\n        depth: core_1.NumberNode(),\r\n        scale: core_1.NumberNode(),\r\n        temperature: core_1.NumberNode(),\r\n        downfall: core_1.NumberNode(),\r\n        precipitation: StringNode({ enum: ['none', 'rain', 'snow'] }),\r\n        temperature_modifier: core_1.Opt(StringNode({ enum: ['none', 'frozen'] })),\r\n        category: StringNode({ enum: 'biome_category' }),\r\n        player_spawn_friendly: core_1.Opt(core_1.BooleanNode()),\r\n        creature_spawn_probability: core_1.Opt(core_1.NumberNode({ min: 0, max: 1 })),\r\n        effects: core_1.ObjectNode({\r\n            sky_color: core_1.NumberNode({ color: true }),\r\n            fog_color: core_1.NumberNode({ color: true }),\r\n            water_color: core_1.NumberNode({ color: true }),\r\n            water_fog_color: core_1.NumberNode({ color: true }),\r\n            grass_color: core_1.Opt(core_1.NumberNode({ color: true })),\r\n            foliage_color: core_1.Opt(core_1.NumberNode({ color: true })),\r\n            grass_color_modifier: core_1.Opt(StringNode({ enum: ['none', 'dark_forest', 'swamp'] })),\r\n            ambient_sound: core_1.Opt(StringNode()),\r\n            mood_sound: core_1.Opt(core_1.ObjectNode({\r\n                sound: StringNode(),\r\n                tick_delay: core_1.NumberNode({ integer: true }),\r\n                block_search_extent: core_1.NumberNode({ integer: true }),\r\n                offset: core_1.NumberNode()\r\n            })),\r\n            additions_sound: core_1.Opt(core_1.ObjectNode({\r\n                sound: StringNode(),\r\n                tick_chance: core_1.NumberNode({ min: 0, max: 1 })\r\n            })),\r\n            music: core_1.Opt(core_1.ObjectNode({\r\n                sound: StringNode(),\r\n                min_delay: core_1.NumberNode({ integer: true, min: 0 }),\r\n                max_delay: core_1.NumberNode({ integer: true, min: 0 }),\r\n                replace_current_music: core_1.BooleanNode()\r\n            })),\r\n            particle: core_1.Opt(core_1.ObjectNode({\r\n                options: core_1.ObjectNode({\r\n                    type: StringNode()\r\n                }),\r\n                probability: core_1.NumberNode({ min: 0, max: 1 })\r\n            }))\r\n        }),\r\n        starts: core_1.ListNode(StringNode({ validator: 'resource', params: { pool: '$worldgen/configured_structure_feature' } })),\r\n        spawners: core_1.MapNode(StringNode({ enum: [\r\n                'water_ambient',\r\n                'ambient',\r\n                'misc',\r\n                'water_creature',\r\n                'creature',\r\n                'monster'\r\n            ] }), core_1.Mod(core_1.ListNode(core_1.ObjectNode({\r\n            type: StringNode({ validator: 'resource', params: { pool: 'entity_type' } }),\r\n            weight: core_1.NumberNode({ integer: true }),\r\n            minCount: core_1.NumberNode({ integer: true }),\r\n            maxCount: core_1.NumberNode({ integer: true })\r\n        })), {\r\n            category: () => 'pool',\r\n            default: () => [{\r\n                    type: 'minecraft:bat',\r\n                    weight: 1\r\n                }]\r\n        })),\r\n        spawn_costs: core_1.MapNode(StringNode({ validator: 'resource', params: { pool: 'entity_type' } }), core_1.Mod(core_1.ObjectNode({\r\n            energy_budget: core_1.NumberNode(),\r\n            charge: core_1.NumberNode()\r\n        }, { category: 'function' }), {\r\n            default: () => ({\r\n                energy_budget: 0.12,\r\n                charge: 1.0\r\n            })\r\n        })),\r\n        carvers: core_1.MapNode(StringNode({ enum: ['air', 'liquid'] }), core_1.Mod(core_1.ListNode(StringNode({ validator: 'resource', params: { pool: '$worldgen/configured_carver' } })), {\r\n            default: () => ['minecraft:cave']\r\n        })),\r\n        features: core_1.ListNode(core_1.Mod(core_1.ListNode(StringNode({ validator: 'resource', params: { pool: '$worldgen/configured_feature' } })), { category: () => 'predicate' }), { maxLength: 10 })\r\n    }, { context: 'biome' }), {\r\n        default: () => ({\r\n            surface_builder: 'minecraft:grass',\r\n            depth: 0.125,\r\n            scale: 0.05,\r\n            temperature: 0.8,\r\n            downfall: 0.4,\r\n            precipitation: 'rain',\r\n            category: 'plains',\r\n            effects: {\r\n                sky_color: 7907327,\r\n                fog_color: 12638463,\r\n                water_color: 4159204,\r\n                water_fog_color: 329011\r\n            }\r\n        })\r\n    }));\r\n}\r\nexports.initBiomeSchemas = initBiomeSchemas;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.initCarverSchemas = void 0;\r\nconst core_1 = require(\"@mcschema/core\");\r\nfunction initCarverSchemas(schemas, collections) {\r\n    const StringNode = core_1.StringNode.bind(undefined, collections);\r\n    schemas.register('configured_carver', core_1.Mod(core_1.ObjectNode({\r\n        type: StringNode({ validator: 'resource', params: { pool: 'worldgen/carver' } }),\r\n        config: core_1.ObjectNode({\r\n            probability: core_1.NumberNode({ min: 0, max: 1 })\r\n        })\r\n    }, { context: 'carver' }), {\r\n        default: () => ({\r\n            type: 'minecraft:cave',\r\n            config: {\r\n                probability: 0.1\r\n            }\r\n        })\r\n    }));\r\n}\r\nexports.initCarverSchemas = initCarverSchemas;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.initDecoratorSchemas = void 0;\r\nconst core_1 = require(\"@mcschema/core\");\r\nconst Common_1 = require(\"../Common\");\r\nfunction initDecoratorSchemas(schemas, collections) {\r\n    const Reference = core_1.Reference.bind(undefined, schemas);\r\n    const StringNode = core_1.StringNode.bind(undefined, collections);\r\n    const RangeConfig = {\r\n        maximum: core_1.NumberNode({ integer: true }),\r\n        bottom_offset: core_1.NumberNode({ integer: true }),\r\n        top_offset: core_1.NumberNode({ integer: true })\r\n    };\r\n    const ChanceConfig = {\r\n        chance: core_1.NumberNode({ integer: true, min: 0 })\r\n    };\r\n    const CountConfig = {\r\n        count: Common_1.UniformInt({ min: -10, max: 128, maxSpread: 128 })\r\n    };\r\n    schemas.register('configured_decorator', core_1.ObjectNode({\r\n        type: StringNode({ validator: 'resource', params: { pool: 'worldgen/decorator' } }),\r\n        config: core_1.ObjectNode({\r\n            [core_1.Switch]: ['pop', { push: 'type' }],\r\n            [core_1.Case]: {\r\n                'minecraft:carving_mask': {\r\n                    step: StringNode({ enum: 'generation_step' }),\r\n                    probability: core_1.NumberNode({ min: 0, max: 1 })\r\n                },\r\n                'minecraft:chance': ChanceConfig,\r\n                'minecraft:count': CountConfig,\r\n                'minecraft:count_extra': {\r\n                    count: core_1.NumberNode({ integer: true, min: 0 }),\r\n                    extra_count: core_1.NumberNode({ integer: true, min: 0 }),\r\n                    extra_chance: core_1.NumberNode({ min: 0, max: 1 })\r\n                },\r\n                'minecraft:count_multilayer': CountConfig,\r\n                'minecraft:count_noise': {\r\n                    noise_level: core_1.NumberNode(),\r\n                    below_noise: core_1.NumberNode({ integer: true }),\r\n                    above_noise: core_1.NumberNode({ integer: true })\r\n                },\r\n                'minecraft:count_noise_biased': {\r\n                    noise_to_count_ratio: core_1.NumberNode({ integer: true }),\r\n                    noise_factor: core_1.NumberNode(),\r\n                    noise_offset: core_1.Opt(core_1.NumberNode())\r\n                },\r\n                'minecraft:decorated': {\r\n                    outer: Reference('configured_decorator'),\r\n                    inner: Reference('configured_decorator')\r\n                },\r\n                'minecraft:depth_average': {\r\n                    baseline: core_1.NumberNode({ integer: true }),\r\n                    spread: core_1.NumberNode({ integer: true })\r\n                },\r\n                'minecraft:fire': CountConfig,\r\n                'minecraft:glowstone': CountConfig,\r\n                'minecraft:lava_lake': ChanceConfig,\r\n                'minecraft:range': RangeConfig,\r\n                'minecraft:range_biased': RangeConfig,\r\n                'minecraft:range_very_biased': RangeConfig,\r\n                'minecraft:water_lake': ChanceConfig\r\n            }\r\n        }, { context: 'decorator', category: 'predicate' })\r\n    }, { context: 'decorator', category: 'predicate' }));\r\n}\r\nexports.initDecoratorSchemas = initDecoratorSchemas;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.initProcessorListSchemas = void 0;\r\nconst core_1 = require(\"@mcschema/core\");\r\nfunction initProcessorListSchemas(schemas, collections) {\r\n    const Reference = core_1.Reference.bind(undefined, schemas);\r\n    const StringNode = core_1.StringNode.bind(undefined, collections);\r\n    schemas.register('processor_list', core_1.Mod(core_1.ObjectNode({\r\n        processors: core_1.ListNode(Reference('processor'))\r\n    }, { context: 'processor_list' }), {\r\n        default: () => ({\r\n            processors: [{\r\n                    processor_type: 'minecraft:rule',\r\n                    rules: [{\r\n                            location_predicate: {\r\n                                predicate_type: 'minecraft:always_true'\r\n                            },\r\n                            input_predicate: {\r\n                                predicate_type: 'minecraft:always_true'\r\n                            }\r\n                        }]\r\n                }]\r\n        })\r\n    }));\r\n    schemas.register('processor', core_1.Mod(core_1.ObjectNode({\r\n        processor_type: StringNode({ validator: 'resource', params: { pool: 'worldgen/structure_processor' } }),\r\n        [core_1.Switch]: [{ push: 'processor_type' }],\r\n        [core_1.Case]: {\r\n            'minecraft:block_age': {\r\n                mossiness: core_1.NumberNode()\r\n            },\r\n            'minecraft:block_ignore': {\r\n                blocks: core_1.ListNode(Reference('block_state'))\r\n            },\r\n            'minecraft:block_rot': {\r\n                integrity: core_1.NumberNode({ min: 0, max: 1 })\r\n            },\r\n            'minecraft:gravity': {\r\n                heightmap: StringNode({ enum: 'heightmap_type' }),\r\n                offset: core_1.NumberNode({ integer: true })\r\n            },\r\n            'minecraft:rule': {\r\n                rules: core_1.ListNode(Reference('processor_rule'))\r\n            }\r\n        }\r\n    }, { category: 'function', context: 'processor' }), {\r\n        default: () => ({\r\n            processor_type: 'minecraft:rule',\r\n            rules: [{\r\n                    location_predicate: {\r\n                        predicate_type: 'minecraft:always_true'\r\n                    },\r\n                    input_predicate: {\r\n                        predicate_type: 'minecraft:always_true'\r\n                    }\r\n                }]\r\n        })\r\n    }));\r\n    schemas.register('processor_rule', core_1.Mod(core_1.ObjectNode({\r\n        position_predicate: core_1.Opt(Reference('pos_rule_test')),\r\n        location_predicate: Reference('rule_test'),\r\n        input_predicate: Reference('rule_test'),\r\n        output_state: Reference('block_state'),\r\n        output_nbt: core_1.Opt(StringNode({ validator: 'nbt', params: { registry: { category: 'minecraft:block' } } }))\r\n    }, { category: 'predicate', context: 'processor_rule' }), {\r\n        default: () => ({\r\n            location_predicate: {\r\n                predicate_type: 'minecraft:always_true'\r\n            },\r\n            input_predicate: {\r\n                predicate_type: 'minecraft:always_true'\r\n            }\r\n        })\r\n    }));\r\n    const posTestFields = {\r\n        min_dist: core_1.NumberNode({ min: 0, max: 255, integer: true }),\r\n        max_dist: core_1.NumberNode({ min: 0, max: 255, integer: true }),\r\n        min_chance: core_1.NumberNode({ min: 0, max: 1 }),\r\n        max_chance: core_1.NumberNode({ min: 0, max: 1 })\r\n    };\r\n    schemas.register('pos_rule_test', core_1.ObjectNode({\r\n        predicate_type: StringNode({ validator: 'resource', params: { pool: 'pos_rule_test' } }),\r\n        [core_1.Switch]: [{ push: 'predicate_type' }],\r\n        [core_1.Case]: {\r\n            'minecraft:axis_aligned_linear_pos': {\r\n                axis: StringNode({ enum: ['x', 'y', 'z'] }),\r\n                ...posTestFields\r\n            },\r\n            'minecraft:linear_pos': posTestFields\r\n        }\r\n    }, { context: 'pos_rule_test', disableSwitchContext: true }));\r\n    schemas.register('rule_test', core_1.ObjectNode({\r\n        predicate_type: StringNode({ validator: 'resource', params: { pool: 'rule_test' } }),\r\n        [core_1.Switch]: [{ push: 'predicate_type' }],\r\n        [core_1.Case]: {\r\n            'minecraft:block_match': {\r\n                block: StringNode({ validator: 'resource', params: { pool: 'block' } })\r\n            },\r\n            'minecraft:blockstate_match': {\r\n                block_state: Reference('block_state')\r\n            },\r\n            'minecraft:random_block_match': {\r\n                block: StringNode({ validator: 'resource', params: { pool: 'block' } }),\r\n                probability: core_1.NumberNode({ min: 0, max: 1 })\r\n            },\r\n            'minecraft:random_blockstate_match': {\r\n                block_state: Reference('block_state'),\r\n                probability: core_1.NumberNode({ min: 0, max: 1 })\r\n            },\r\n            'minecraft:tag_match': {\r\n                tag: StringNode({ validator: 'resource', params: { pool: '$tag/block' } })\r\n            }\r\n        }\r\n    }, { context: 'rule_test', disableSwitchContext: true }));\r\n}\r\nexports.initProcessorListSchemas = initProcessorListSchemas;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.initFeatureSchemas = void 0;\r\nconst core_1 = require(\"@mcschema/core\");\r\nconst Common_1 = require(\"../Common\");\r\nrequire(\"./Decorator\");\r\nrequire(\"./ProcessorList\");\r\nfunction initFeatureSchemas(schemas, collections) {\r\n    const Reference = core_1.Reference.bind(undefined, schemas);\r\n    const StringNode = core_1.StringNode.bind(undefined, collections);\r\n    const RandomPatchConfig = {\r\n        can_replace: core_1.BooleanNode(),\r\n        project: core_1.BooleanNode(),\r\n        need_water: core_1.BooleanNode(),\r\n        xspread: core_1.NumberNode({ integer: true }),\r\n        yspread: core_1.NumberNode({ integer: true }),\r\n        zspread: core_1.NumberNode({ integer: true }),\r\n        tries: core_1.NumberNode({ integer: true }),\r\n        state_provider: Reference('block_state_provider'),\r\n        block_placer: Reference('block_placer'),\r\n        whitelist: core_1.ListNode(Reference('block_state')),\r\n        blacklist: core_1.ListNode(Reference('block_state'))\r\n    };\r\n    const DiskConfig = {\r\n        state: Reference('block_state'),\r\n        radius: Common_1.UniformInt({ min: 0, max: 4, maxSpread: 4 }),\r\n        half_height: core_1.NumberNode({ integer: true, min: 0, max: 4 }),\r\n        targets: core_1.ListNode(Reference('block_state'))\r\n    };\r\n    const HugeMushroomConfig = {\r\n        cap_provider: Reference('block_state_provider'),\r\n        stem_provider: Reference('block_state_provider'),\r\n        foliage_radius: core_1.Opt(core_1.NumberNode({ integer: true }))\r\n    };\r\n    const OreConfig = {\r\n        state: Reference('block_state'),\r\n        size: core_1.NumberNode({ integer: true, min: 0, max: 64 }),\r\n        target: Reference('rule_test')\r\n    };\r\n    const CountConfig = {\r\n        count: Common_1.UniformInt({ min: -10, max: 128, maxSpread: 128 })\r\n    };\r\n    const Feature = core_1.ChoiceNode([\r\n        {\r\n            type: 'string',\r\n            node: StringNode({ validator: 'resource', params: { pool: '$worldgen/configured_feature' } })\r\n        },\r\n        {\r\n            type: 'object',\r\n            node: Reference('configured_feature')\r\n        }\r\n    ], { choiceContext: 'feature' });\r\n    schemas.register('configured_feature', core_1.Mod(core_1.ObjectNode({\r\n        type: StringNode({ validator: 'resource', params: { pool: 'worldgen/feature' } }),\r\n        config: core_1.ObjectNode({\r\n            [core_1.Switch]: ['pop', { push: 'type' }],\r\n            [core_1.Case]: {\r\n                'minecraft:bamboo': {\r\n                    probability: core_1.NumberNode({ min: 0, max: 1 })\r\n                },\r\n                'minecraft:basalt_columns': {\r\n                    reach: Common_1.UniformInt({ min: 0, max: 2, maxSpread: 1 }),\r\n                    height: Common_1.UniformInt({ min: 1, max: 5, maxSpread: 5 })\r\n                },\r\n                'minecraft:block_pile': {\r\n                    state_provider: Reference('block_state_provider')\r\n                },\r\n                'minecraft:decorated': {\r\n                    decorator: Reference('configured_decorator'),\r\n                    feature: Feature\r\n                },\r\n                'minecraft:delta_feature': {\r\n                    contents: Reference('block_state'),\r\n                    rim: Reference('block_state'),\r\n                    size: Common_1.UniformInt({ min: 0, max: 8, maxSpread: 8 }),\r\n                    rim_size: Common_1.UniformInt({ min: 0, max: 8, maxSpread: 8 })\r\n                },\r\n                'minecraft:disk': DiskConfig,\r\n                'minecraft:emerald_ore': {\r\n                    state: Reference('block_state'),\r\n                    target: Reference('block_state')\r\n                },\r\n                'minecraft:end_gateway': {\r\n                    exact: core_1.BooleanNode(),\r\n                    exit: core_1.Opt(Reference('block_pos'))\r\n                },\r\n                'minecraft:end_spike': {\r\n                    crystal_invulnerable: core_1.Opt(core_1.BooleanNode()),\r\n                    crystal_beam_target: core_1.Opt(Reference('block_pos')),\r\n                    spikes: core_1.ListNode(core_1.ObjectNode({\r\n                        centerX: core_1.Opt(core_1.NumberNode({ integer: true })),\r\n                        centerZ: core_1.Opt(core_1.NumberNode({ integer: true })),\r\n                        radius: core_1.Opt(core_1.NumberNode({ integer: true })),\r\n                        height: core_1.Opt(core_1.NumberNode({ integer: true })),\r\n                        guarded: core_1.Opt(core_1.BooleanNode())\r\n                    }))\r\n                },\r\n                'minecraft:fill_layer': {\r\n                    state: Reference('block_state'),\r\n                    height: core_1.NumberNode({ integer: true, min: 0, max: 255 })\r\n                },\r\n                'minecraft:flower': RandomPatchConfig,\r\n                'minecraft:forest_rock': {\r\n                    state: Reference('block_state')\r\n                },\r\n                'minecraft:huge_brown_mushroom': HugeMushroomConfig,\r\n                'minecraft:huge_fungus': {\r\n                    hat_state: Reference('block_state'),\r\n                    decor_state: Reference('block_state'),\r\n                    stem_state: Reference('block_state'),\r\n                    valid_base_block: Reference('block_state'),\r\n                    planted: core_1.Opt(core_1.BooleanNode())\r\n                },\r\n                'minecraft:huge_red_mushroom': HugeMushroomConfig,\r\n                'minecraft:ice_patch': DiskConfig,\r\n                'minecraft:iceberg': {\r\n                    state: Reference('block_state')\r\n                },\r\n                'minecraft:lake': {\r\n                    state: Reference('block_state')\r\n                },\r\n                'minecraft:nether_forest_vegetation': {\r\n                    state_provider: Reference('block_state_provider')\r\n                },\r\n                'minecraft:netherrack_replace_blobs': {\r\n                    state: Reference('block_state'),\r\n                    target: Reference('block_state'),\r\n                    radius: Common_1.UniformInt()\r\n                },\r\n                'minecraft:no_bonemeal_flower': RandomPatchConfig,\r\n                'minecraft:no_surface_ore': OreConfig,\r\n                'minecraft:ore': OreConfig,\r\n                'minecraft:random_patch': RandomPatchConfig,\r\n                'minecraft:random_boolean_selector': {\r\n                    feature_false: Feature,\r\n                    feature_true: Feature\r\n                },\r\n                'minecraft:random_selector': {\r\n                    features: core_1.ListNode(core_1.ObjectNode({\r\n                        chance: core_1.NumberNode({ min: 0, max: 1 }),\r\n                        feature: Feature\r\n                    })),\r\n                    default: Feature\r\n                },\r\n                'minecraft:sea_pickle': CountConfig,\r\n                'minecraft:seagrass': {\r\n                    probability: core_1.NumberNode({ min: 0, max: 1 })\r\n                },\r\n                'minecraft:simple_block': {\r\n                    to_place: Reference('block_state'),\r\n                    place_on: core_1.ListNode(Reference('block_state')),\r\n                    place_in: core_1.ListNode(Reference('block_state')),\r\n                    place_under: core_1.ListNode(Reference('block_state'))\r\n                },\r\n                'minecraft:simple_random_selector': {\r\n                    features: core_1.ListNode(Feature)\r\n                },\r\n                'minecraft:spring_feature': {\r\n                    state: Reference('fluid_state'),\r\n                    rock_count: core_1.NumberNode({ integer: true }),\r\n                    hole_count: core_1.NumberNode({ integer: true }),\r\n                    requires_block_below: core_1.BooleanNode(),\r\n                    valid_blocks: core_1.ListNode(StringNode({ validator: 'resource', params: { pool: 'block' } }))\r\n                },\r\n                'minecraft:tree': {\r\n                    max_water_depth: core_1.NumberNode({ integer: true }),\r\n                    ignore_vines: core_1.BooleanNode(),\r\n                    heightmap: StringNode({ enum: 'heightmap_type' }),\r\n                    minimum_size: Reference('feature_size'),\r\n                    trunk_provider: Reference('block_state_provider'),\r\n                    leaves_provider: Reference('block_state_provider'),\r\n                    trunk_placer: core_1.ObjectNode({\r\n                        type: StringNode({ validator: 'resource', params: { pool: 'worldgen/trunk_placer_type' } }),\r\n                        base_height: core_1.NumberNode({ integer: true, min: 0, max: 32 }),\r\n                        height_rand_a: core_1.NumberNode({ integer: true, min: 0, max: 24 }),\r\n                        height_rand_b: core_1.NumberNode({ integer: true, min: 0, max: 24 })\r\n                    }, { context: 'trunk_placer' }),\r\n                    foliage_placer: core_1.ObjectNode({\r\n                        type: StringNode({ validator: 'resource', params: { pool: 'worldgen/foliage_placer_type' } }),\r\n                        radius: Common_1.UniformInt({ min: 0, max: 8, maxSpread: 8 }),\r\n                        offset: Common_1.UniformInt({ min: 0, max: 8, maxSpread: 8 }),\r\n                        [core_1.Switch]: [{ push: 'type' }],\r\n                        [core_1.Case]: {\r\n                            'minecraft:blob_foliage_placer': {\r\n                                height: core_1.NumberNode({ integer: true, min: 0, max: 16 })\r\n                            },\r\n                            'minecraft:bush_foliage_placer': {\r\n                                height: core_1.NumberNode({ integer: true, min: 0, max: 16 })\r\n                            },\r\n                            'minecraft:fancy_foliage_placer': {\r\n                                height: core_1.NumberNode({ integer: true, min: 0, max: 16 })\r\n                            },\r\n                            'minecraft:jungle_foliage_placer': {\r\n                                height: core_1.NumberNode({ integer: true, min: 0, max: 16 })\r\n                            },\r\n                            'minecraft:mega_pine_foliage_placer': {\r\n                                crown_height: Common_1.UniformInt({ min: 0, max: 16, maxSpread: 8 })\r\n                            },\r\n                            'minecraft:pine_foliage_placer': {\r\n                                height: Common_1.UniformInt({ min: 0, max: 16, maxSpread: 8 })\r\n                            },\r\n                            'minecraft:spruce_foliage_placer': {\r\n                                trunk_height: Common_1.UniformInt({ min: 0, max: 16, maxSpread: 8 })\r\n                            }\r\n                        }\r\n                    }, { context: 'foliage_placer', disableSwitchContext: true }),\r\n                    decorators: core_1.ListNode(core_1.ObjectNode({\r\n                        type: StringNode({ validator: 'resource', params: { pool: 'worldgen/tree_decorator_type' } }),\r\n                        [core_1.Switch]: [{ push: 'type' }],\r\n                        [core_1.Case]: {\r\n                            'minecraft:alter_ground': {\r\n                                provider: Reference('block_state_provider')\r\n                            },\r\n                            'minecraft:beehive': {\r\n                                probability: core_1.NumberNode({ min: 0, max: 1 })\r\n                            },\r\n                            'minecraft:cocoa': {\r\n                                probability: core_1.NumberNode({ min: 0, max: 1 })\r\n                            }\r\n                        }\r\n                    }, { context: 'tree_decorator' }))\r\n                }\r\n            }\r\n        }, { context: 'feature' })\r\n    }, { context: 'feature' }), {\r\n        default: () => ({\r\n            type: 'minecraft:decorated',\r\n            config: {\r\n                decorator: {\r\n                    type: 'minecraft:count',\r\n                    config: {\r\n                        count: 4\r\n                    }\r\n                },\r\n                feature: {\r\n                    type: 'minecraft:tree',\r\n                    config: {\r\n                        max_water_depth: 0,\r\n                        ignore_vines: true,\r\n                        minimum_size: {},\r\n                        trunk_placer: {\r\n                            base_height: 5,\r\n                            height_rand_a: 2,\r\n                            height_rand_b: 0\r\n                        },\r\n                        foliage_placer: {\r\n                            radius: 2,\r\n                            offset: 0,\r\n                            height: 3\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        })\r\n    }));\r\n    schemas.register('feature_size', core_1.Mod(core_1.ObjectNode({\r\n        type: StringNode({ validator: 'resource', params: { pool: 'worldgen/feature_size_type' } }),\r\n        min_clipped_height: core_1.Opt(core_1.NumberNode({ min: 0, max: 80 })),\r\n        [core_1.Switch]: [{ push: 'type' }],\r\n        [core_1.Case]: {\r\n            'minecraft:two_layers_feature_size': {\r\n                limit: core_1.Opt(core_1.NumberNode({ integer: true, min: 0, max: 81 })),\r\n                lower_size: core_1.Opt(core_1.NumberNode({ integer: true, min: 0, max: 16 })),\r\n                upper_size: core_1.Opt(core_1.NumberNode({ integer: true, min: 0, max: 16 }))\r\n            },\r\n            'minecraft:three_layers_feature_size': {\r\n                limit: core_1.Opt(core_1.NumberNode({ integer: true, min: 0, max: 80 })),\r\n                upper_limit: core_1.Opt(core_1.NumberNode({ integer: true, min: 0, max: 80 })),\r\n                lower_size: core_1.Opt(core_1.NumberNode({ integer: true, min: 0, max: 16 })),\r\n                middle_size: core_1.Opt(core_1.NumberNode({ integer: true, min: 0, max: 16 })),\r\n                upper_size: core_1.Opt(core_1.NumberNode({ integer: true, min: 0, max: 16 }))\r\n            }\r\n        }\r\n    }, { disableSwitchContext: true }), {\r\n        default: () => ({\r\n            type: 'minecraft:two_layers_feature_size'\r\n        })\r\n    }));\r\n    schemas.register('block_state_provider', core_1.Mod(core_1.ObjectNode({\r\n        type: StringNode({ validator: 'resource', params: { pool: 'worldgen/block_state_provider_type' } }),\r\n        [core_1.Switch]: [{ push: 'type' }],\r\n        [core_1.Case]: {\r\n            'minecraft:rotated_block_provider': {\r\n                state: Reference('block_state')\r\n            },\r\n            'minecraft:simple_state_provider': {\r\n                state: Reference('block_state')\r\n            },\r\n            'minecraft:weighted_state_provider': {\r\n                entries: core_1.ListNode(core_1.Mod(core_1.ObjectNode({\r\n                    weight: core_1.NumberNode({ integer: true, min: 1 }),\r\n                    data: Reference('block_state')\r\n                }), {\r\n                    default: () => ({\r\n                        data: {}\r\n                    })\r\n                }))\r\n            }\r\n        }\r\n    }, { context: 'block_state_provider' }), {\r\n        default: () => ({\r\n            type: 'minecraft:simple_state_provider'\r\n        })\r\n    }));\r\n    schemas.register('block_placer', core_1.Mod(core_1.ObjectNode({\r\n        type: StringNode({ validator: 'resource', params: { pool: 'worldgen/block_placer_type' } }),\r\n        [core_1.Switch]: [{ push: 'type' }],\r\n        [core_1.Case]: {\r\n            'minecraft:column_placer': {\r\n                min_size: core_1.NumberNode({ integer: true }),\r\n                extra_size: core_1.NumberNode({ integer: true })\r\n            }\r\n        }\r\n    }, { context: 'block_placer' }), {\r\n        default: () => ({\r\n            type: 'minecraft:simple_block_placer'\r\n        })\r\n    }));\r\n}\r\nexports.initFeatureSchemas = initFeatureSchemas;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.initNoiseSettingsSchemas = void 0;\r\nconst core_1 = require(\"@mcschema/core\");\r\nconst Common_1 = require(\"../Common\");\r\nfunction initNoiseSettingsSchemas(schemas, collections) {\r\n    const Reference = core_1.Reference.bind(undefined, schemas);\r\n    const StringNode = core_1.StringNode.bind(undefined, collections);\r\n    schemas.register('noise_settings', core_1.Mod(core_1.ObjectNode({\r\n        name: core_1.Mod(StringNode({ validator: 'resource', params: { pool: '$worldgen/noise_settings', isDefinition: true } }), {\r\n            enabled: (path) => path.getArray().length > 0\r\n        }),\r\n        bedrock_roof_position: core_1.NumberNode({ integer: true }),\r\n        bedrock_floor_position: core_1.NumberNode({ integer: true }),\r\n        sea_level: core_1.NumberNode({ integer: true }),\r\n        disable_mob_generation: core_1.BooleanNode(),\r\n        default_block: Reference('block_state'),\r\n        default_fluid: Reference('block_state'),\r\n        noise: core_1.ObjectNode({\r\n            height: core_1.NumberNode({ integer: true }),\r\n            density_factor: core_1.NumberNode(),\r\n            density_offset: core_1.NumberNode(),\r\n            size_horizontal: core_1.NumberNode({ integer: true }),\r\n            size_vertical: core_1.NumberNode({ integer: true }),\r\n            simplex_surface_noise: core_1.BooleanNode(),\r\n            random_density_offset: core_1.Opt(core_1.BooleanNode()),\r\n            island_noise_override: core_1.Opt(core_1.BooleanNode()),\r\n            amplified: core_1.Opt(core_1.BooleanNode()),\r\n            sampling: core_1.ObjectNode({\r\n                xz_scale: core_1.NumberNode(),\r\n                y_scale: core_1.NumberNode(),\r\n                xz_factor: core_1.NumberNode(),\r\n                y_factor: core_1.NumberNode()\r\n            }),\r\n            bottom_slide: core_1.ObjectNode({\r\n                target: core_1.NumberNode({ integer: true }),\r\n                size: core_1.NumberNode({ integer: true }),\r\n                offset: core_1.NumberNode({ integer: true })\r\n            }),\r\n            top_slide: core_1.ObjectNode({\r\n                target: core_1.NumberNode({ integer: true }),\r\n                size: core_1.NumberNode({ integer: true }),\r\n                offset: core_1.NumberNode({ integer: true })\r\n            })\r\n        }),\r\n        structures: Reference('generator_structures')\r\n    }, { context: 'noise_settings' }), {\r\n        default: () => Common_1.DefaultNoiseSettings\r\n    }));\r\n    schemas.register('generator_structures', core_1.ObjectNode({\r\n        stronghold: core_1.Opt(core_1.ObjectNode({\r\n            distance: core_1.NumberNode({ integer: true, min: 0, max: 1023 }),\r\n            spread: core_1.NumberNode({ integer: true, min: 0, max: 1023 }),\r\n            count: core_1.NumberNode({ integer: true, min: 1, max: 4095 })\r\n        })),\r\n        structures: core_1.MapNode(StringNode({ validator: 'resource', params: { pool: 'worldgen/structure_feature' } }), core_1.Mod(core_1.ObjectNode({\r\n            spacing: core_1.NumberNode({ integer: true, min: 0, max: 4096 }),\r\n            separation: core_1.Mod(core_1.NumberNode({ integer: true, min: 0, max: 4096 }), (node) => ({\r\n                validate: (path, value, errors, options) => {\r\n                    if (path.pop().push('spacing').get() <= value) {\r\n                        errors.add(path, 'error.separation_smaller_spacing');\r\n                    }\r\n                    return node.validate(path, value, errors, options);\r\n                }\r\n            })),\r\n            salt: core_1.NumberNode({ integer: true, min: 0 })\r\n        }, { context: 'generator_structure' }), {\r\n            default: () => ({\r\n                spacing: 10,\r\n                separation: 5,\r\n                salt: 0\r\n            })\r\n        }))\r\n    }));\r\n    schemas.register('generator_layer', core_1.Mod(core_1.ObjectNode({\r\n        block: StringNode({ validator: 'resource', params: { pool: 'block' } }),\r\n        height: core_1.NumberNode({ integer: true, min: 1 })\r\n    }), {\r\n        default: () => ({\r\n            block: 'minecraft:stone',\r\n            height: 1\r\n        })\r\n    }));\r\n}\r\nexports.initNoiseSettingsSchemas = initNoiseSettingsSchemas;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.initStructureFeatureSchemas = void 0;\r\nconst core_1 = require(\"@mcschema/core\");\r\nfunction initStructureFeatureSchemas(schemas, collections) {\r\n    const StringNode = core_1.StringNode.bind(undefined, collections);\r\n    const templatePoolConfig = {\r\n        start_pool: StringNode({ validator: 'resource', params: { pool: '$worldgen/template_pool' } }),\r\n        size: core_1.NumberNode({ integer: true })\r\n    };\r\n    schemas.register('configured_structure_feature', core_1.Mod(core_1.ObjectNode({\r\n        type: StringNode({ validator: 'resource', params: { pool: 'worldgen/structure_feature' } }),\r\n        config: core_1.ObjectNode({\r\n            [core_1.Switch]: ['pop', { push: 'type' }],\r\n            [core_1.Case]: {\r\n                'minecraft:bastion_remnant': templatePoolConfig,\r\n                'minecraft:buried_treasure': {\r\n                    probability: core_1.NumberNode({ min: 0, max: 1 })\r\n                },\r\n                'minecraft:mineshaft': {\r\n                    type: StringNode({ enum: ['normal', 'mesa'] }),\r\n                    probability: core_1.NumberNode({ min: 0, max: 1 })\r\n                },\r\n                'minecraft:ocean_ruin': {\r\n                    biome_temp: StringNode({ enum: ['cold', 'warm'] }),\r\n                    large_probability: core_1.NumberNode({ min: 0, max: 1 }),\r\n                    cluster_probability: core_1.NumberNode({ min: 0, max: 1 })\r\n                },\r\n                'minecraft:pillager_outpost': templatePoolConfig,\r\n                'minecraft:ruined_portal': {\r\n                    portal_type: StringNode({ enum: ['standard', 'desert', 'jungle', 'mountain', 'nether', 'ocean', 'swamp'] })\r\n                },\r\n                'minecraft:shipwreck': {\r\n                    is_beached: core_1.Opt(core_1.BooleanNode())\r\n                },\r\n                'minecraft:village': templatePoolConfig\r\n            }\r\n        }, { context: 'structure_feature', disableSwitchContext: true })\r\n    }, { context: 'structure_feature' }), {\r\n        default: () => ({\r\n            type: 'minecraft:bastion_remnant',\r\n            config: {\r\n                start_pool: 'minecraft:bastion/starts',\r\n                size: 6\r\n            }\r\n        })\r\n    }));\r\n}\r\nexports.initStructureFeatureSchemas = initStructureFeatureSchemas;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.initSurfaceBuilderSchemas = void 0;\r\nconst core_1 = require(\"@mcschema/core\");\r\nfunction initSurfaceBuilderSchemas(schemas, collections) {\r\n    const StringNode = core_1.StringNode.bind(undefined, collections);\r\n    const Reference = core_1.Reference.bind(undefined, schemas);\r\n    schemas.register('configured_surface_builder', core_1.Mod(core_1.ObjectNode({\r\n        type: StringNode({ validator: 'resource', params: { pool: 'worldgen/surface_builder' } }),\r\n        config: core_1.ObjectNode({\r\n            top_material: Reference('block_state'),\r\n            under_material: Reference('block_state'),\r\n            underwater_material: Reference('block_state'),\r\n        }, { context: 'surface_builder' })\r\n    }, { context: 'surface_builder' }), {\r\n        default: () => ({\r\n            type: 'minecraft:default',\r\n            config: {\r\n                top_material: {\r\n                    Name: 'minecraft:grass_block',\r\n                    Properties: {\r\n                        snowy: 'false'\r\n                    }\r\n                },\r\n                under_material: {\r\n                    Name: 'minecraft:dirt'\r\n                },\r\n                underwater_material: {\r\n                    Name: 'minecraft:gravel'\r\n                }\r\n            }\r\n        })\r\n    }));\r\n}\r\nexports.initSurfaceBuilderSchemas = initSurfaceBuilderSchemas;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.initTemplatePoolSchemas = void 0;\r\nconst core_1 = require(\"@mcschema/core\");\r\nrequire(\"./ProcessorList\");\r\nfunction initTemplatePoolSchemas(schemas, collections) {\r\n    const Reference = core_1.Reference.bind(undefined, schemas);\r\n    const StringNode = core_1.StringNode.bind(undefined, collections);\r\n    const Processors = core_1.ChoiceNode([\r\n        {\r\n            type: 'string',\r\n            node: StringNode({ validator: 'resource', params: { pool: '$worldgen/processor_list' } }),\r\n            change: v => undefined\r\n        },\r\n        {\r\n            type: 'object',\r\n            node: Reference('processor_list'),\r\n            change: v => ({\r\n                processors: [{\r\n                        \"processor_type\": \"minecraft:nop\"\r\n                    }]\r\n            })\r\n        }\r\n    ]);\r\n    schemas.register('template_pool', core_1.Mod(core_1.ObjectNode({\r\n        name: StringNode(),\r\n        fallback: StringNode(),\r\n        elements: core_1.ListNode(Reference('template_weighted_element'))\r\n    }, { context: 'template_pool' }), {\r\n        default: () => ({\r\n            fallback: 'minecraft:empty',\r\n            elements: [\r\n                {\r\n                    weight: 1,\r\n                    element: {\r\n                        element_type: 'minecraft:single_pool_element',\r\n                        projection: 'rigid',\r\n                        processors: 'minecraft:empty'\r\n                    }\r\n                }\r\n            ]\r\n        })\r\n    }));\r\n    schemas.register('template_weighted_element', core_1.Mod(core_1.ObjectNode({\r\n        weight: core_1.NumberNode({ integer: true, min: 1 }),\r\n        element: Reference('template_element')\r\n    }, { category: 'pool' }), {\r\n        default: () => ({\r\n            weight: 1,\r\n            element: {\r\n                element_type: 'minecraft:single_pool_element',\r\n                projection: 'rigid',\r\n                processors: 'minecraft:empty'\r\n            }\r\n        })\r\n    }));\r\n    schemas.register('template_element', core_1.Mod(core_1.ObjectNode({\r\n        element_type: StringNode({ validator: 'resource', params: { pool: 'worldgen/structure_pool_element' } }),\r\n        projection: StringNode({ enum: ['rigid', 'terrain_matching'] }),\r\n        [core_1.Switch]: [{ push: 'element_type' }],\r\n        [core_1.Case]: {\r\n            'minecraft:feature_pool_element': {\r\n                feature: StringNode({ validator: 'resource', params: { pool: '$worldgen/configured_feature' } })\r\n            },\r\n            'minecraft:legacy_single_pool_element': {\r\n                location: StringNode({ validator: 'resource', params: { pool: '$structure' } }),\r\n                processors: Processors\r\n            },\r\n            'minecraft:list_pool_element': {\r\n                elements: core_1.ListNode(Reference('template_element'))\r\n            },\r\n            'minecraft:single_pool_element': {\r\n                location: StringNode({ validator: 'resource', params: { pool: '$structure' } }),\r\n                processors: Processors\r\n            }\r\n        }\r\n    }, { context: 'template_element', disableSwitchContext: true }), {\r\n        default: () => ({\r\n            element_type: 'minecraft:single_pool_element',\r\n            projection: 'rigid',\r\n            processors: 'minecraft:empty'\r\n        })\r\n    }));\r\n}\r\nexports.initTemplatePoolSchemas = initTemplatePoolSchemas;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.initWorldgenSchemas = void 0;\r\nconst Biome_1 = require(\"./Biome\");\r\nconst Carver_1 = require(\"./Carver\");\r\nconst Decorator_1 = require(\"./Decorator\");\r\nconst Feature_1 = require(\"./Feature\");\r\nconst NoiseSettings_1 = require(\"./NoiseSettings\");\r\nconst ProcessorList_1 = require(\"./ProcessorList\");\r\nconst StructureFeature_1 = require(\"./StructureFeature\");\r\nconst SurfaceBuilder_1 = require(\"./SurfaceBuilder\");\r\nconst TemplatePool_1 = require(\"./TemplatePool\");\r\nfunction initWorldgenSchemas(schemas, collections) {\r\n    Biome_1.initBiomeSchemas(schemas, collections);\r\n    Carver_1.initCarverSchemas(schemas, collections);\r\n    Decorator_1.initDecoratorSchemas(schemas, collections);\r\n    Feature_1.initFeatureSchemas(schemas, collections);\r\n    NoiseSettings_1.initNoiseSettingsSchemas(schemas, collections);\r\n    ProcessorList_1.initProcessorListSchemas(schemas, collections);\r\n    StructureFeature_1.initStructureFeatureSchemas(schemas, collections);\r\n    SurfaceBuilder_1.initSurfaceBuilderSchemas(schemas, collections);\r\n    TemplatePool_1.initTemplatePoolSchemas(schemas, collections);\r\n}\r\nexports.initWorldgenSchemas = initWorldgenSchemas;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.initWorldSettingsSchemas = void 0;\r\nconst core_1 = require(\"@mcschema/core\");\r\nfunction initWorldSettingsSchemas(schemas, collections) {\r\n    const Reference = core_1.Reference.bind(undefined, schemas);\r\n    const StringNode = core_1.StringNode.bind(undefined, collections);\r\n    schemas.register('world_settings', core_1.Mod(core_1.ObjectNode({\r\n        generate_features: core_1.BooleanNode(),\r\n        bonus_chest: core_1.BooleanNode(),\r\n        seed: core_1.NumberNode({ integer: true }),\r\n        dimensions: core_1.MapNode(StringNode({ validator: 'resource', params: { pool: '$dimension' } }), Reference('dimension'))\r\n    }, { context: 'world_settings' }), {\r\n        default: () => {\r\n            const seed = Math.floor(Math.random() * (4294967296)) - 2147483648;\r\n            return {\r\n                generate_features: true,\r\n                bonus_chest: false,\r\n                seed,\r\n                dimensions: {\r\n                    'minecraft:overworld': {\r\n                        type: 'minecraft:overworld',\r\n                        generator: {\r\n                            type: 'minecraft:noise',\r\n                            seed,\r\n                            biome_source: {\r\n                                type: 'minecraft:vanilla_layered',\r\n                                seed\r\n                            },\r\n                            settings: 'minecraft:overworld',\r\n                        }\r\n                    },\r\n                    'minecraft:the_nether': {\r\n                        type: 'minecraft:the_nether',\r\n                        generator: {\r\n                            type: 'minecraft:noise',\r\n                            seed,\r\n                            biome_source: {\r\n                                type: 'minecraft:multi_noise',\r\n                                seed,\r\n                                humidity_noise: {\r\n                                    firstOctave: -7,\r\n                                    amplitudes: [1.0, 1.0]\r\n                                },\r\n                                altitude_noise: {\r\n                                    firstOctave: -7,\r\n                                    amplitudes: [1.0, 1.0]\r\n                                },\r\n                                weirdness_noise: {\r\n                                    firstOctave: -7,\r\n                                    amplitudes: [1.0, 1.0]\r\n                                },\r\n                                temperature_noise: {\r\n                                    firstOctave: -7,\r\n                                    amplitudes: [1.0, 1.0]\r\n                                },\r\n                                biomes: [\r\n                                    {\r\n                                        parameters: { altitude: 0.0, weirdness: 0.0, offset: 0.0, temperature: 0.0, humidity: 0.0 },\r\n                                        biome: 'minecraft:nether_wastes'\r\n                                    },\r\n                                    {\r\n                                        parameters: { altitude: 0.0, weirdness: 0.0, offset: 0.0, temperature: 0.0, humidity: -0.5 },\r\n                                        biome: 'minecraft:soul_sand_valley'\r\n                                    },\r\n                                    {\r\n                                        parameters: { altitude: 0.0, weirdness: 0.0, offset: 0.0, temperature: 0.4, humidity: 0.0 },\r\n                                        biome: 'minecraft:crimson_forest'\r\n                                    },\r\n                                    {\r\n                                        parameters: { altitude: 0.0, weirdness: 0.0, offset: 0.375, temperature: 0.0, humidity: 0.5 },\r\n                                        biome: 'minecraft:warped_forest'\r\n                                    },\r\n                                    {\r\n                                        parameters: { altitude: 0.0, weirdness: 0.0, offset: 0.175, temperature: -0.5, humidity: 0.0 },\r\n                                        biome: 'minecraft:basalt_deltas'\r\n                                    }\r\n                                ]\r\n                            },\r\n                            settings: 'minecraft:nether'\r\n                        }\r\n                    },\r\n                    'minecraft:the_end': {\r\n                        type: \"minecraft:the_end\",\r\n                        generator: {\r\n                            type: \"minecraft:noise\",\r\n                            seed,\r\n                            biome_source: {\r\n                                type: \"minecraft:the_end\",\r\n                                seed\r\n                            },\r\n                            settings: \"minecraft:end\"\r\n                        }\r\n                    }\r\n                }\r\n            };\r\n        }\r\n    }));\r\n}\r\nexports.initWorldSettingsSchemas = initWorldSettingsSchemas;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.initSchemas = void 0;\r\nconst Advancement_1 = require(\"./Advancement\");\r\nconst Common_1 = require(\"./Common\");\r\nconst Condition_1 = require(\"./Condition\");\r\nconst Dimension_1 = require(\"./Dimension\");\r\nconst DimensionType_1 = require(\"./DimensionType\");\r\nconst LootTable_1 = require(\"./LootTable\");\r\nconst PackMcmeta_1 = require(\"./PackMcmeta\");\r\nconst Predicates_1 = require(\"./Predicates\");\r\nconst Recipe_1 = require(\"./Recipe\");\r\nconst Tags_1 = require(\"./Tags\");\r\nconst TextComponent_1 = require(\"./TextComponent\");\r\nconst worldgen_1 = require(\"./worldgen\");\r\nconst WorldSettings_1 = require(\"./WorldSettings\");\r\nfunction initSchemas(schemas, collections) {\r\n    // `Common.ts` is the only file that has exports. It should be initialized first. \r\n    Common_1.initCommonSchemas(schemas, collections);\r\n    Advancement_1.initAdvancementSchemas(schemas, collections);\r\n    Condition_1.initConditionSchemas(schemas, collections);\r\n    DimensionType_1.initDimensionTypeSchemas(schemas, collections);\r\n    Dimension_1.initDimensionSchemas(schemas, collections);\r\n    LootTable_1.initLootTableSchemas(schemas, collections);\r\n    PackMcmeta_1.initPackMcmetaSchemas(schemas, collections);\r\n    Predicates_1.initPredicatesSchemas(schemas, collections);\r\n    Recipe_1.initRecipeSchemas(schemas, collections);\r\n    Tags_1.initTagsSchemas(schemas, collections);\r\n    TextComponent_1.initTextComponentSchemas(schemas, collections);\r\n    worldgen_1.initWorldgenSchemas(schemas, collections);\r\n    WorldSettings_1.initWorldSettingsSchemas(schemas, collections);\r\n}\r\nexports.initSchemas = initSchemas;\r\n","\"use strict\";\r\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}));\r\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n});\r\nvar __importStar = (this && this.__importStar) || function (mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.getSchemas = exports.getCollections = void 0;\r\nconst core_1 = require(\"@mcschema/core\");\r\nconst Collections_1 = require(\"./Collections\");\r\nconst schemas_1 = require(\"./schemas\");\r\nexports.lootContext = __importStar(require(\"./LootContext\"));\r\nfunction getCollections() {\r\n    const collections = new core_1.CollectionRegistry();\r\n    Collections_1.initCollections(collections);\r\n    return collections;\r\n}\r\nexports.getCollections = getCollections;\r\n/**\r\n * @param collections The CollectionRegistry for this version. Note that apart from\r\n * the built-in collections, the client of this module is responsible for futhermore\r\n * adding the vanilla registries to it: the collection IDs shouldn't contain the\r\n * namespace (`minecraft:`) part, while the values within the collections should.\r\n *\r\n * @example\r\n * for (const key in VANILLA_REGISTRIES>) {\r\n *   collections.register(\r\n *     key.replace(/^minecraft:/, ''),\r\n *     Object.keys(VANILLA_REGISTRIES[key].entries)\r\n *   )\r\n * }\r\n */\r\nfunction getSchemas(collections) {\r\n    const schemas = new core_1.SchemaRegistry();\r\n    schemas_1.initSchemas(schemas, collections);\r\n    return schemas;\r\n}\r\nexports.getSchemas = getSchemas;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.initCollections = void 0;\r\nfunction initCollections(collections) {\r\n    collections.register('advancement_trigger', [\r\n        'minecraft:bee_nest_destroyed',\r\n        'minecraft:bred_animals',\r\n        'minecraft:brewed_potion',\r\n        'minecraft:changed_dimension',\r\n        'minecraft:channeled_lightning',\r\n        'minecraft:construct_beacon',\r\n        'minecraft:consume_item',\r\n        'minecraft:cured_zombie_villager',\r\n        'minecraft:effects_changed',\r\n        'minecraft:enchanted_item',\r\n        'minecraft:enter_block',\r\n        'minecraft:entity_hurt_player',\r\n        'minecraft:entity_killed_player',\r\n        'minecraft:filled_bucket',\r\n        'minecraft:fishing_rod_hooked',\r\n        'minecraft:hero_of_the_village',\r\n        'minecraft:impossible',\r\n        'minecraft:inventory_changed',\r\n        'minecraft:item_durability_changed',\r\n        'minecraft:item_used_on_block',\r\n        'minecraft:killed_by_crossbow',\r\n        'minecraft:levitation',\r\n        'minecraft:lightning_strike',\r\n        'minecraft:location',\r\n        'minecraft:nether_travel',\r\n        'minecraft:placed_block',\r\n        'minecraft:player_generates_container_loot',\r\n        'minecraft:player_hurt_entity',\r\n        'minecraft:player_interacted_with_entity',\r\n        'minecraft:player_killed_entity',\r\n        'minecraft:recipe_unlocked',\r\n        'minecraft:shot_crossbow',\r\n        'minecraft:slept_in_bed',\r\n        'minecraft:slide_down_block',\r\n        'minecraft:started_riding',\r\n        'minecraft:summoned_entity',\r\n        'minecraft:tame_animal',\r\n        'minecraft:target_hit',\r\n        'minecraft:tick',\r\n        'minecraft:thrown_item_picked_up_by_entity',\r\n        'minecraft:used_ender_eye',\r\n        'minecraft:used_totem',\r\n        'minecraft:using_item',\r\n        'minecraft:villager_trade',\r\n        'minecraft:voluntary_exile'\r\n    ]);\r\n    collections.register('dimension', [\r\n        'minecraft:overworld',\r\n        'minecraft:the_nether',\r\n        'minecraft:the_end'\r\n    ]);\r\n    collections.register('dimension_type', [\r\n        'minecraft:overworld',\r\n        'minecraft:the_nether',\r\n        'minecraft:the_end'\r\n    ]);\r\n    collections.register('keybind', [\r\n        'key.advancements',\r\n        'key.attack',\r\n        'key.back',\r\n        'key.chat',\r\n        'key.command',\r\n        'key.drop',\r\n        'key.forward',\r\n        'key.fullscreen',\r\n        'key.hotbar.1',\r\n        'key.hotbar.2',\r\n        'key.hotbar.3',\r\n        'key.hotbar.4',\r\n        'key.hotbar.5',\r\n        'key.hotbar.6',\r\n        'key.hotbar.7',\r\n        'key.hotbar.8',\r\n        'key.hotbar.9',\r\n        'key.inventory',\r\n        'key.jump',\r\n        'key.left',\r\n        'key.loadToolbarActivator',\r\n        'key.pickItem',\r\n        'key.playerlist',\r\n        'key.right',\r\n        'key.saveToolbarActivator',\r\n        'key.screenshot',\r\n        'key.smoothCamera',\r\n        'key.sneak',\r\n        'key.spectatorOutlines',\r\n        'key.sprint',\r\n        'key.swapOffhand',\r\n        'key.togglePerspective',\r\n        'key.use'\r\n    ]);\r\n    collections.register('slot', [\r\n        'mainhand',\r\n        'offhand',\r\n        'head',\r\n        'chest',\r\n        'legs',\r\n        'feet'\r\n    ]);\r\n    collections.register('gamemode', [\r\n        'survival',\r\n        'creative',\r\n        'adventure',\r\n        'spectator'\r\n    ]);\r\n    collections.register('worldgen/noise_settings', [\r\n        'minecraft:overworld',\r\n        'minecraft:nether',\r\n        'minecraft:end',\r\n        'minecraft:amplified',\r\n        'minecraft:caves',\r\n        'minecraft:floating_islands'\r\n    ]);\r\n    collections.register('entity_source', [\r\n        'this',\r\n        'killer',\r\n        'direct_killer',\r\n        'killer_player'\r\n    ]);\r\n    collections.register('copy_source', [\r\n        'block_entity',\r\n        'this',\r\n        'killer',\r\n        'killer_player'\r\n    ]);\r\n    collections.register('loot_table_apply_bonus_formula', [\r\n        'minecraft:uniform_bonus_count',\r\n        'minecraft:binomial_with_bonus_count',\r\n        'minecraft:ore_drops'\r\n    ]);\r\n    collections.register('map_decoration', [\r\n        'mansion',\r\n        'monument',\r\n        'player',\r\n        'frame',\r\n        'red_marker',\r\n        'blue_marker',\r\n        'target_x',\r\n        'target_point',\r\n        'player_off_map',\r\n        'player_off_limits',\r\n        'red_x',\r\n        'banner_white',\r\n        'banner_orange',\r\n        'banner_magenta',\r\n        'banner_light_blue',\r\n        'banner_yellow',\r\n        'banner_lime',\r\n        'banner_pink',\r\n        'banner_gray',\r\n        'banner_light_gray',\r\n        'banner_cyan',\r\n        'banner_purple',\r\n        'banner_blue',\r\n        'banner_brown',\r\n        'banner_green',\r\n        'banner_red',\r\n        'banner_black'\r\n    ]);\r\n    collections.register('map_feature', [\r\n        'bastion_remnant',\r\n        'buried_treasure',\r\n        'desert_pyramid',\r\n        'endcity',\r\n        'fortress',\r\n        'igloo',\r\n        'jungle_pyramid',\r\n        'mansion',\r\n        'mineshaft',\r\n        'monument',\r\n        'nether_fossil',\r\n        'ocean_ruin',\r\n        'pillager_outpost',\r\n        'ruined_portal',\r\n        'shipwreck',\r\n        'stronghold',\r\n        'swamp_hut',\r\n        'village'\r\n    ]);\r\n    collections.register('recipe_group', [\r\n        'bed',\r\n        'light_gray_dye',\r\n        'iron_ingot',\r\n        'wooden_stairs',\r\n        'black_dye',\r\n        'stained_terracotta',\r\n        'dyed_bed',\r\n        'magenta_dye',\r\n        'bark',\r\n        'rabbit_stew',\r\n        'light_blue_dye',\r\n        'wooden_fence_gate',\r\n        'planks',\r\n        'stained_glass',\r\n        'wooden_door',\r\n        'stained_glass_pane',\r\n        'wooden_fence',\r\n        'sticks',\r\n        'concrete_powder',\r\n        'wooden_pressure_plate',\r\n        'boat',\r\n        'brown_dye',\r\n        'yellow_dye',\r\n        'bonemeal',\r\n        'red_dye',\r\n        'wooden_trapdoor',\r\n        'wooden_button',\r\n        'gold_ingot',\r\n        'pink_dye',\r\n        'wooden_slab',\r\n        'orange_dye',\r\n        'carpet',\r\n        'sign',\r\n        'wool',\r\n        'sugar',\r\n        'blue_dye',\r\n        'white_dye',\r\n        'banner',\r\n        'netherite_ingot'\r\n    ]);\r\n    collections.register('worldgen/configured_feature', [\r\n        'minecraft:acacia',\r\n        'minecraft:bamboo_light',\r\n        'minecraft:bamboo_vegetation',\r\n        'minecraft:bamboo',\r\n        'minecraft:basalt_blobs',\r\n        'minecraft:basalt_pillar',\r\n        'minecraft:birch_bees_0002',\r\n        'minecraft:birch_bees_002',\r\n        'minecraft:birch_bees_005',\r\n        'minecraft:birch_other',\r\n        'minecraft:birch_tall',\r\n        'minecraft:birch',\r\n        'minecraft:blackstone_blobs',\r\n        'minecraft:blue_ice',\r\n        'minecraft:bonus_chest',\r\n        'minecraft:brown_mushroom_giant',\r\n        'minecraft:brown_mushroom_nether',\r\n        'minecraft:brown_mushroom_normal',\r\n        'minecraft:brown_mushroom_swamp',\r\n        'minecraft:brown_mushroom_taiga',\r\n        'minecraft:chorus_plant',\r\n        'minecraft:crimson_forest_vegetation',\r\n        'minecraft:crimson_fungi_planted',\r\n        'minecraft:crimson_fungi',\r\n        'minecraft:dark_forest_vegetation_brown',\r\n        'minecraft:dark_forest_vegetation_red',\r\n        'minecraft:dark_oak',\r\n        'minecraft:delta',\r\n        'minecraft:desert_well',\r\n        'minecraft:disk_clay',\r\n        'minecraft:disk_gravel',\r\n        'minecraft:disk_sand',\r\n        'minecraft:end_gateway_delayed',\r\n        'minecraft:end_gateway',\r\n        'minecraft:end_island_decorated',\r\n        'minecraft:end_island',\r\n        'minecraft:end_spike',\r\n        'minecraft:fancy_oak_bees_0002',\r\n        'minecraft:fancy_oak_bees_002',\r\n        'minecraft:fancy_oak_bees_005',\r\n        'minecraft:fancy_oak',\r\n        'minecraft:flower_default',\r\n        'minecraft:flower_forest',\r\n        'minecraft:flower_plain_decorated',\r\n        'minecraft:flower_plain',\r\n        'minecraft:flower_swamp',\r\n        'minecraft:flower_warm',\r\n        'minecraft:forest_flower_trees',\r\n        'minecraft:forest_flower_vegetation_common',\r\n        'minecraft:forest_flower_vegetation',\r\n        'minecraft:forest_rock',\r\n        'minecraft:fossil',\r\n        'minecraft:freeze_top_layer',\r\n        'minecraft:glowstone_extra',\r\n        'minecraft:glowstone',\r\n        'minecraft:huge_brown_mushroom',\r\n        'minecraft:huge_red_mushroom',\r\n        'minecraft:ice_patch',\r\n        'minecraft:ice_spike',\r\n        'minecraft:iceberg_blue',\r\n        'minecraft:iceberg_packed',\r\n        'minecraft:jungle_bush',\r\n        'minecraft:jungle_tree_no_vine',\r\n        'minecraft:jungle_tree',\r\n        'minecraft:kelp_cold',\r\n        'minecraft:kelp_warm',\r\n        'minecraft:lake_lava',\r\n        'minecraft:lake_water',\r\n        'minecraft:large_basalt_columns',\r\n        'minecraft:mega_jungle_tree',\r\n        'minecraft:mega_pine',\r\n        'minecraft:mega_spruce',\r\n        'minecraft:monster_room',\r\n        'minecraft:mushroom_field_vegetation',\r\n        'minecraft:nether_sprouts',\r\n        'minecraft:oak_badlands',\r\n        'minecraft:oak_bees_0002',\r\n        'minecraft:oak_bees_002',\r\n        'minecraft:oak_bees_005',\r\n        'minecraft:oak',\r\n        'minecraft:ore_andesite',\r\n        'minecraft:ore_blackstone',\r\n        'minecraft:ore_coal',\r\n        'minecraft:ore_debris_large',\r\n        'minecraft:ore_debris_small',\r\n        'minecraft:ore_diamond',\r\n        'minecraft:ore_diorite',\r\n        'minecraft:ore_dirt',\r\n        'minecraft:ore_emerald',\r\n        'minecraft:ore_gold_deltas',\r\n        'minecraft:ore_gold_extra',\r\n        'minecraft:ore_gold_nether',\r\n        'minecraft:ore_gold',\r\n        'minecraft:ore_granite',\r\n        'minecraft:ore_gravel_nether',\r\n        'minecraft:ore_gravel',\r\n        'minecraft:ore_infested',\r\n        'minecraft:ore_iron',\r\n        'minecraft:ore_lapis',\r\n        'minecraft:ore_magma',\r\n        'minecraft:ore_quartz_deltas',\r\n        'minecraft:ore_quartz_nether',\r\n        'minecraft:ore_redstone',\r\n        'minecraft:ore_soul_sand',\r\n        'minecraft:patch_berry_bush',\r\n        'minecraft:patch_berry_decorated',\r\n        'minecraft:patch_berry_sparse',\r\n        'minecraft:patch_brown_mushroom',\r\n        'minecraft:patch_cactus_decorated',\r\n        'minecraft:patch_cactus_desert',\r\n        'minecraft:patch_cactus',\r\n        'minecraft:patch_crimson_roots',\r\n        'minecraft:patch_dead_bush_2',\r\n        'minecraft:patch_dead_bush_badlands',\r\n        'minecraft:patch_dead_bush',\r\n        'minecraft:patch_fire',\r\n        'minecraft:patch_grass_badlands',\r\n        'minecraft:patch_grass_forest',\r\n        'minecraft:patch_grass_jungle',\r\n        'minecraft:patch_grass_normal',\r\n        'minecraft:patch_grass_plain',\r\n        'minecraft:patch_grass_savanna',\r\n        'minecraft:patch_grass_taiga_2',\r\n        'minecraft:patch_grass_taiga',\r\n        'minecraft:patch_large_fern',\r\n        'minecraft:patch_melon',\r\n        'minecraft:patch_pumpkin',\r\n        'minecraft:patch_red_mushroom',\r\n        'minecraft:patch_soul_fire',\r\n        'minecraft:patch_sugar_cane_badlands',\r\n        'minecraft:patch_sugar_cane_desert',\r\n        'minecraft:patch_sugar_cane_swamp',\r\n        'minecraft:patch_sugar_cane',\r\n        'minecraft:patch_sunflower',\r\n        'minecraft:patch_taiga_grass',\r\n        'minecraft:patch_tall_grass_2',\r\n        'minecraft:patch_tall_grass',\r\n        'minecraft:patch_waterlilly',\r\n        'minecraft:pile_hay',\r\n        'minecraft:pile_ice',\r\n        'minecraft:pile_melon',\r\n        'minecraft:pile_pumpkin',\r\n        'minecraft:pile_snow',\r\n        'minecraft:pine',\r\n        'minecraft:plain_vegetation',\r\n        'minecraft:red_mushroom_giant',\r\n        'minecraft:red_mushroom_nether',\r\n        'minecraft:red_mushroom_normal',\r\n        'minecraft:red_mushroom_swamp',\r\n        'minecraft:red_mushroom_taiga',\r\n        'minecraft:sea_pickle',\r\n        'minecraft:seagrass_cold',\r\n        'minecraft:seagrass_deep_cold',\r\n        'minecraft:seagrass_deep_warm',\r\n        'minecraft:seagrass_deep',\r\n        'minecraft:seagrass_normal',\r\n        'minecraft:seagrass_river',\r\n        'minecraft:seagrass_simple',\r\n        'minecraft:seagrass_swamp',\r\n        'minecraft:seagrass_warm',\r\n        'minecraft:small_basalt_columns',\r\n        'minecraft:spring_closed_double',\r\n        'minecraft:spring_closed',\r\n        'minecraft:spring_delta',\r\n        'minecraft:spring_lava_double',\r\n        'minecraft:spring_lava',\r\n        'minecraft:spring_open',\r\n        'minecraft:spring_water',\r\n        'minecraft:spruce_snowy',\r\n        'minecraft:spruce',\r\n        'minecraft:super_birch_bees_0002',\r\n        'minecraft:swamp_tree',\r\n        'minecraft:taiga_vegetation',\r\n        'minecraft:trees_birch',\r\n        'minecraft:trees_giant_spruce',\r\n        'minecraft:trees_giant',\r\n        'minecraft:trees_jungle_edge',\r\n        'minecraft:trees_jungle',\r\n        'minecraft:trees_mountain_edge',\r\n        'minecraft:trees_mountain',\r\n        'minecraft:trees_savanna',\r\n        'minecraft:trees_shattered_savanna',\r\n        'minecraft:trees_water',\r\n        'minecraft:twisting_vines',\r\n        'minecraft:vines',\r\n        'minecraft:void_start_platform',\r\n        'minecraft:warm_ocean_vegetation',\r\n        'minecraft:warped_forest_vegetation',\r\n        'minecraft:warped_fungi_planted',\r\n        'minecraft:warped_fungi',\r\n        'minecraft:weeping_vines'\r\n    ]);\r\n    collections.register('worldgen/configured_structure_feature', [\r\n        'minecraft:bastion_remnant',\r\n        'minecraft:buried_treasure',\r\n        'minecraft:desert_pyramid',\r\n        'minecraft:end_city',\r\n        'minecraft:fortress',\r\n        'minecraft:igloo',\r\n        'minecraft:jungle_pyramid',\r\n        'minecraft:mansion',\r\n        'minecraft:mineshaft_mesa',\r\n        'minecraft:mineshaft',\r\n        'minecraft:monument',\r\n        'minecraft:nether_fossil',\r\n        'minecraft:ocean_ruin_cold',\r\n        'minecraft:ocean_ruin_warm',\r\n        'minecraft:pillager_outpost',\r\n        'minecraft:ruined_portal_desert',\r\n        'minecraft:ruined_portal_jungle',\r\n        'minecraft:ruined_portal_mountain',\r\n        'minecraft:ruined_portal_nether',\r\n        'minecraft:ruined_portal_ocean',\r\n        'minecraft:ruined_portal_swamp',\r\n        'minecraft:ruined_portal',\r\n        'minecraft:shipwreck_beached',\r\n        'minecraft:shipwreck',\r\n        'minecraft:stronghold',\r\n        'minecraft:swamp_hut',\r\n        'minecraft:village_desert',\r\n        'minecraft:village_plains',\r\n        'minecraft:village_savanna',\r\n        'minecraft:village_snowy',\r\n        'minecraft:village_taiga'\r\n    ]);\r\n    collections.register('worldgen/configured_surface_builder', [\r\n        'minecraft:badlands',\r\n        'minecraft:basalt_deltas',\r\n        'minecraft:crimson_forest',\r\n        'minecraft:desert',\r\n        'minecraft:end',\r\n        'minecraft:eroded_badlands',\r\n        'minecraft:frozen_ocean',\r\n        'minecraft:full_sand',\r\n        'minecraft:giant_tree_taiga',\r\n        'minecraft:grass',\r\n        'minecraft:gravelly_mountain',\r\n        'minecraft:ice_spikes',\r\n        'minecraft:mountain',\r\n        'minecraft:mycelium',\r\n        'minecraft:nether',\r\n        'minecraft:nope',\r\n        'minecraft:ocean_sand',\r\n        'minecraft:shattered_savanna',\r\n        'minecraft:soul_sand_valley',\r\n        'minecraft:stone',\r\n        'minecraft:swamp',\r\n        'minecraft:warped_forest',\r\n        'minecraft:wooded_badlands'\r\n    ]);\r\n    collections.register('biome_category', [\r\n        'beach',\r\n        'desert',\r\n        'extreme_hills',\r\n        'forest',\r\n        'icy',\r\n        'jungle',\r\n        'mesa',\r\n        'mushroom',\r\n        'nether',\r\n        'none',\r\n        'ocean',\r\n        'plains',\r\n        'river',\r\n        'savanna',\r\n        'swamp',\r\n        'taiga',\r\n        'the_end'\r\n    ]);\r\n    collections.register('heightmap_type', [\r\n        'MOTION_BLOCKING',\r\n        'MOTION_BLOCKING_NO_LEAVES',\r\n        'OCEAN_FLOOR',\r\n        'OCEAN_FLOOR_WG',\r\n        'WORLD_SURFACE',\r\n        'WORLD_SURFACE_WG'\r\n    ]);\r\n    collections.register('generation_step', [\r\n        'air',\r\n        'liquid'\r\n    ]);\r\n    collections.register('loot_context_type', [\r\n        'minecraft:empty',\r\n        'minecraft:chest',\r\n        'minecraft:command',\r\n        'minecraft:selector',\r\n        'minecraft:fishing',\r\n        'minecraft:entity',\r\n        'minecraft:gift',\r\n        'minecraft:barter',\r\n        'minecraft:advancement_reward',\r\n        'minecraft:advancement_entity',\r\n        'minecraft:generic',\r\n        'minecraft:block'\r\n    ]);\r\n    collections.register('banner_pattern', [\r\n        'base',\r\n        'square_bottom_left',\r\n        'square_bottom_right',\r\n        'square_top_left',\r\n        'square_top_right',\r\n        'stripe_bottom',\r\n        'stripe_top',\r\n        'stripe_left',\r\n        'stripe_right',\r\n        'stripe_center',\r\n        'stripe_middle',\r\n        'stripe_downright',\r\n        'stripe_downleft',\r\n        'small_stripes',\r\n        'cross',\r\n        'straight_cross',\r\n        'triangle_bottom',\r\n        'triangle_top',\r\n        'triangles_bottom',\r\n        'triangles_top',\r\n        'diagonal_left',\r\n        'diagonal_up_right',\r\n        'diagonal_up_left',\r\n        'diagonal_right',\r\n        'circle',\r\n        'rhombus',\r\n        'half_vertical',\r\n        'half_horizontal',\r\n        'half_vertical_right',\r\n        'half_horizontal_bottom',\r\n        'border',\r\n        'curly_border',\r\n        'gradient',\r\n        'gradient_up',\r\n        'bricks',\r\n        'globe',\r\n        'creeper',\r\n        'skull',\r\n        'flower',\r\n        'mojang',\r\n        'piglin'\r\n    ]);\r\n    collections.register('dye_color', [\r\n        'white',\r\n        'orange',\r\n        'magenta',\r\n        'light_blue',\r\n        'yellow',\r\n        'lime',\r\n        'pink',\r\n        'gray',\r\n        'light_gray',\r\n        'cyan',\r\n        'purple',\r\n        'blue',\r\n        'brown',\r\n        'green',\r\n        'red',\r\n        'black'\r\n    ]);\r\n}\r\nexports.initCollections = initCollections;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.initAdvancementSchemas = void 0;\r\nconst core_1 = require(\"@mcschema/core\");\r\nfunction initAdvancementSchemas(schemas, collections) {\r\n    const Reference = core_1.Reference.bind(undefined, schemas);\r\n    const StringNode = core_1.StringNode.bind(undefined, collections);\r\n    const EntityPredicate = core_1.ChoiceNode([\r\n        {\r\n            type: 'object',\r\n            node: core_1.Opt(Reference('entity_predicate')),\r\n            change: v => { var _a, _b; return (_b = (_a = v[0]) === null || _a === void 0 ? void 0 : _a.predicate) !== null && _b !== void 0 ? _b : ({}); }\r\n        },\r\n        {\r\n            type: 'list',\r\n            node: core_1.ListNode(Reference('condition')),\r\n            change: v => [{\r\n                    condition: 'minecraft:entity_properties',\r\n                    predicate: v\r\n                }]\r\n        }\r\n    ], { context: 'conditions' });\r\n    schemas.register('advancement', core_1.Mod(core_1.ObjectNode({\r\n        display: core_1.Opt(core_1.Mod(core_1.ObjectNode({\r\n            icon: core_1.ObjectNode({\r\n                item: StringNode({ validator: 'resource', params: { pool: 'item' } }),\r\n                nbt: core_1.Opt(StringNode({ validator: 'nbt', params: { registry: { category: 'minecraft:item', id: ['pop', { push: 'item' }] } } }))\r\n            }),\r\n            title: Reference('text_component'),\r\n            description: Reference('text_component'),\r\n            background: core_1.Opt(StringNode()),\r\n            frame: core_1.Opt(StringNode({ enum: ['task', 'challenge', 'goal'] })),\r\n            show_toast: core_1.Opt(core_1.BooleanNode()),\r\n            announce_to_chat: core_1.Opt(core_1.BooleanNode()),\r\n            hidden: core_1.Opt(core_1.BooleanNode())\r\n        }), {\r\n            default: () => ({\r\n                icon: {\r\n                    item: 'minecraft:stone'\r\n                },\r\n                title: '',\r\n                description: ''\r\n            })\r\n        })),\r\n        parent: core_1.Opt(StringNode({ validator: 'resource', params: { pool: '$advancement' } })),\r\n        criteria: core_1.MapNode(StringNode(), Reference('advancement_criteria')),\r\n        requirements: core_1.Opt(core_1.ListNode(core_1.ListNode(StringNode() // TODO: add validation\r\n        ))),\r\n        rewards: core_1.Opt(core_1.ObjectNode({\r\n            function: core_1.Opt(StringNode({ validator: 'resource', params: { pool: '$function' } })),\r\n            loot: core_1.Opt(core_1.ListNode(StringNode({ validator: 'resource', params: { pool: '$loot_table' } }))),\r\n            recipes: core_1.Opt(core_1.ListNode(StringNode({ validator: 'resource', params: { pool: '$recipe' } }))),\r\n            experience: core_1.Opt(core_1.NumberNode({ integer: true }))\r\n        })),\r\n    }, { context: 'advancement' }), {\r\n        default: () => ({\r\n            criteria: {\r\n                requirement: {\r\n                    trigger: 'minecraft:location'\r\n                }\r\n            }\r\n        })\r\n    }));\r\n    schemas.register('advancement_criteria', core_1.ObjectNode({\r\n        trigger: StringNode({ validator: 'resource', params: { pool: collections.get('advancement_trigger') } }),\r\n        conditions: core_1.Opt(core_1.ObjectNode({\r\n            player: core_1.Mod(EntityPredicate, {\r\n                enabled: path => path.pop().push('trigger').get() !== 'minecraft:impossible'\r\n            }),\r\n            [core_1.Switch]: ['pop', { push: 'trigger' }],\r\n            [core_1.Case]: {\r\n                'minecraft:bee_nest_destroyed': {\r\n                    block: core_1.Opt(StringNode({ validator: 'resource', params: { pool: 'block' } })),\r\n                    num_bees_inside: core_1.Opt(core_1.NumberNode({ integer: true })),\r\n                    item: core_1.Opt(Reference('item_predicate'))\r\n                },\r\n                'minecraft:bred_animals': {\r\n                    parent: EntityPredicate,\r\n                    partner: EntityPredicate,\r\n                    child: EntityPredicate\r\n                },\r\n                'minecraft:brewed_potion': {\r\n                    potion: core_1.Opt(StringNode({ validator: 'resource', params: { pool: 'potion' } }))\r\n                },\r\n                'minecraft:changed_dimension': {\r\n                    from: core_1.Opt(StringNode({ validator: 'resource', params: { pool: '$dimension' } })),\r\n                    to: core_1.Opt(StringNode({ validator: 'resource', params: { pool: '$dimension' } }))\r\n                },\r\n                'minecraft:channeled_lightning': {\r\n                    victims: core_1.Opt(core_1.ListNode(EntityPredicate))\r\n                },\r\n                'minecraft:construct_beacon': {\r\n                    level: Reference('int_bounds')\r\n                },\r\n                'minecraft:consume_item': {\r\n                    item: core_1.Opt(Reference('item_predicate'))\r\n                },\r\n                'minecraft:cured_zombie_villager': {\r\n                    villager: EntityPredicate,\r\n                    zombie: EntityPredicate\r\n                },\r\n                'minecraft:effects_changed': {\r\n                    effects: core_1.Opt(core_1.MapNode(StringNode({ validator: 'resource', params: { pool: 'mob_effect' } }), core_1.ObjectNode({\r\n                        amplifier: Reference('int_bounds'),\r\n                        duration: Reference('int_bounds')\r\n                    }))),\r\n                    source: core_1.Opt(EntityPredicate)\r\n                },\r\n                'minecraft:enter_block': {\r\n                    block: core_1.Opt(StringNode({ validator: 'resource', params: { pool: 'block' } })),\r\n                    state: core_1.Opt(core_1.MapNode(StringNode(), StringNode(), { validation: { validator: 'block_state_map', params: { id: ['pop', { push: 'block' }] } } }))\r\n                },\r\n                'minecraft:enchanted_item': {\r\n                    levels: Reference('int_bounds'),\r\n                    item: core_1.Opt(Reference('item_predicate'))\r\n                },\r\n                'minecraft:entity_hurt_player': {\r\n                    damage: core_1.Opt(Reference('damage_predicate'))\r\n                },\r\n                'minecraft:entity_killed_player': {\r\n                    entity: EntityPredicate,\r\n                    killing_blow: core_1.Opt(Reference('damage_source_predicate'))\r\n                },\r\n                'minecraft:filled_bucket': {\r\n                    item: core_1.Opt(Reference('item_predicate'))\r\n                },\r\n                'minecraft:fishing_rod_hooked': {\r\n                    entity: EntityPredicate,\r\n                    item: core_1.Opt(Reference('item_predicate'))\r\n                },\r\n                'minecraft:hero_of_the_village': {\r\n                    location: core_1.Opt(Reference('location_predicate'))\r\n                },\r\n                'minecraft:inventory_changed': {\r\n                    slots: core_1.Opt(core_1.ObjectNode({\r\n                        empty: Reference('int_bounds'),\r\n                        occupied: Reference('int_bounds'),\r\n                        full: Reference('int_bounds')\r\n                    })),\r\n                    items: core_1.Opt(core_1.ListNode(Reference('item_predicate')))\r\n                },\r\n                'minecraft:item_durability_changed': {\r\n                    delta: Reference('int_bounds'),\r\n                    durability: Reference('int_bounds'),\r\n                    item: core_1.Opt(Reference('item_predicate'))\r\n                },\r\n                'minecraft:item_used_on_block': {\r\n                    item: core_1.Opt(Reference('item_predicate')),\r\n                    location: core_1.Opt(Reference('location_predicate'))\r\n                },\r\n                'minecraft:killed_by_crossbow': {\r\n                    unique_entity_types: Reference('int_bounds'),\r\n                    victims: core_1.Opt(core_1.ListNode(EntityPredicate))\r\n                },\r\n                'minecraft:levitation': {\r\n                    distance: Reference('distance_predicate'),\r\n                    duration: Reference('int_bounds')\r\n                },\r\n                'minecraft:lightning_strike': {\r\n                    lightning: EntityPredicate,\r\n                    bystander: EntityPredicate,\r\n                },\r\n                'minecraft:location': {\r\n                    location: core_1.Opt(Reference('location_predicate'))\r\n                },\r\n                'minecraft:nether_travel': {\r\n                    distance: Reference('distance_predicate'),\r\n                    entered: core_1.Opt(Reference('location_predicate')),\r\n                    exited: core_1.Opt(Reference('location_predicate'))\r\n                },\r\n                'minecraft:placed_block': {\r\n                    block: core_1.Opt(StringNode({ validator: 'resource', params: { pool: 'block' } })),\r\n                    state: core_1.Opt(core_1.MapNode(StringNode(), StringNode(), { validation: { validator: 'block_state_map', params: { id: ['pop', { push: 'block' }] } } })),\r\n                    item: core_1.Opt(Reference('item_predicate')),\r\n                    location: core_1.Opt(Reference('location_predicate'))\r\n                },\r\n                'minecraft:player_generates_container_loot': {\r\n                    loot_table: StringNode({ validator: 'resource', params: { pool: '$loot_table' } })\r\n                },\r\n                'minecraft:player_hurt_entity': {\r\n                    damage: core_1.Opt(Reference('damage_predicate')),\r\n                    entity: EntityPredicate\r\n                },\r\n                'minecraft:player_interacted_with_entity': {\r\n                    item: core_1.Opt(Reference('item_predicate')),\r\n                    entity: EntityPredicate\r\n                },\r\n                'minecraft:player_killed_entity': {\r\n                    entity: EntityPredicate,\r\n                    killing_blow: core_1.Opt(Reference('damage_source_predicate'))\r\n                },\r\n                'minecraft:recipe_unlocked': {\r\n                    recipe: StringNode({ validator: 'resource', params: { pool: '$recipe' } })\r\n                },\r\n                'minecraft:slept_in_bed': {\r\n                    location: core_1.Opt(Reference('location_predicate'))\r\n                },\r\n                'minecraft:slide_down_block': {\r\n                    block: core_1.Opt(StringNode({ validator: 'resource', params: { pool: 'block' } }))\r\n                },\r\n                'minecraft:shot_crossbow': {\r\n                    item: core_1.Opt(Reference('item_predicate'))\r\n                },\r\n                'minecraft:summoned_entity': {\r\n                    entity: EntityPredicate\r\n                },\r\n                'minecraft:tame_animal': {\r\n                    entity: EntityPredicate\r\n                },\r\n                'minecraft:target_hit': {\r\n                    projectile: EntityPredicate,\r\n                    shooter: EntityPredicate,\r\n                    signal_strength: Reference('int_bounds')\r\n                },\r\n                'minecraft:thrown_item_picked_up_by_entity': {\r\n                    entity: core_1.Opt(Reference('entity_predicate')),\r\n                    item: core_1.Opt(Reference('item_predicate'))\r\n                },\r\n                'minecraft:used_ender_eye': {\r\n                    distance: Reference('float_bounds')\r\n                },\r\n                'minecraft:used_totem': {\r\n                    item: core_1.Opt(Reference('item_predicate'))\r\n                },\r\n                'minecraft:using_item': {\r\n                    item: core_1.Opt(Reference('item_predicate'))\r\n                },\r\n                'minecraft:villager_trade': {\r\n                    villager: core_1.Opt(Reference('entity_predicate')),\r\n                    item: core_1.Opt(Reference('item_predicate'))\r\n                },\r\n                'minecraft:voluntary_exile': {\r\n                    location: Reference('location_predicate')\r\n                }\r\n            }\r\n        }, { context: 'criterion' }))\r\n    }, { category: 'predicate', context: 'criterion' }));\r\n}\r\nexports.initAdvancementSchemas = initAdvancementSchemas;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.initCommonSchemas = exports.IntProvider = exports.FloatProvider = exports.NoiseSettingsPresets = exports.DefaultNoiseSettings = exports.DimensionTypePresets = exports.DefaultDimensionType = exports.FunctionCases = exports.ConditionCases = void 0;\r\nconst core_1 = require(\"@mcschema/core\");\r\nexports.DefaultDimensionType = {\r\n    ultrawarm: false,\r\n    natural: true,\r\n    piglin_safe: false,\r\n    respawn_anchor_works: false,\r\n    bed_works: true,\r\n    has_raids: true,\r\n    has_skylight: true,\r\n    has_ceiling: false,\r\n    coordinate_scale: 1,\r\n    ambient_light: 0,\r\n    logical_height: 256,\r\n    infiniburn: 'minecraft:infiniburn_overworld',\r\n    min_y: 0,\r\n    height: 256,\r\n};\r\nexports.DefaultNoiseSettings = {\r\n    name: 'minecraft:overworld',\r\n    bedrock_roof_position: -10,\r\n    bedrock_floor_position: 0,\r\n    sea_level: 63,\r\n    disable_mob_generation: false,\r\n    noise_caves_enabled: true,\r\n    aquifers_enabled: true,\r\n    deepslate_enabled: true,\r\n    noise: {\r\n        min_y: 0,\r\n        height: 256,\r\n        density_factor: 1,\r\n        density_offset: -0.46875,\r\n        simplex_surface_noise: true,\r\n        random_density_offset: true,\r\n        size_horizontal: 1,\r\n        size_vertical: 2,\r\n        sampling: {\r\n            xz_scale: 1,\r\n            y_scale: 1,\r\n            xz_factor: 80,\r\n            y_factor: 160\r\n        },\r\n        top_slide: {\r\n            target: -10,\r\n            size: 3,\r\n            offset: 0\r\n        },\r\n        bottom_slide: {\r\n            target: -30,\r\n            size: 0,\r\n            offset: 0\r\n        }\r\n    },\r\n    default_block: {\r\n        Name: \"minecraft:stone\"\r\n    },\r\n    default_fluid: {\r\n        Name: \"minecraft:water\",\r\n        Properties: {\r\n            level: \"0\"\r\n        }\r\n    }\r\n};\r\nfunction initCommonSchemas(schemas, collections) {\r\n    const StringNode = core_1.StringNode.bind(undefined, collections);\r\n    const Reference = core_1.Reference.bind(undefined, schemas);\r\n    schemas.register('block_state', core_1.Mod(core_1.ObjectNode({\r\n        Name: StringNode({ validator: 'resource', params: { pool: 'block' } }),\r\n        Properties: core_1.Opt(core_1.MapNode(StringNode(), StringNode(), { validation: { validator: 'block_state_map', params: { id: ['pop', { push: 'Name' }] } } }))\r\n    }, { context: 'block_state' }), {\r\n        default: () => ({\r\n            Name: 'minecraft:stone'\r\n        })\r\n    }));\r\n    schemas.register('fluid_state', core_1.Mod(core_1.ObjectNode({\r\n        Name: StringNode({ validator: 'resource', params: { pool: 'fluid' } }),\r\n        Properties: core_1.Opt(core_1.MapNode(StringNode(), StringNode()))\r\n    }, { context: 'fluid_state' }), {\r\n        default: () => ({\r\n            Name: 'minecraft:water',\r\n            Properties: {\r\n                'level': '0'\r\n            }\r\n        })\r\n    }));\r\n    schemas.register('block_pos', core_1.Mod(core_1.ListNode(core_1.NumberNode({ integer: true }), { minLength: 3, maxLength: 3 }), {\r\n        default: () => [0, 0, 0]\r\n    }));\r\n    const Bounds = (integer) => core_1.Opt(core_1.ChoiceNode([\r\n        {\r\n            type: 'number',\r\n            node: core_1.NumberNode({ integer }),\r\n            change: (v) => { var _a, _b; return v === undefined ? 0 : (_b = (_a = v.min) !== null && _a !== void 0 ? _a : v.max) !== null && _b !== void 0 ? _b : 0; }\r\n        },\r\n        {\r\n            type: 'object',\r\n            node: core_1.ObjectNode({\r\n                min: core_1.Opt(core_1.NumberNode({ integer })),\r\n                max: core_1.Opt(core_1.NumberNode({ integer }))\r\n            }, { context: 'range' }),\r\n            change: (v) => ({\r\n                min: v !== null && v !== void 0 ? v : 0,\r\n                max: v !== null && v !== void 0 ? v : 0\r\n            })\r\n        }\r\n    ]));\r\n    schemas.register('int_bounds', Bounds(true));\r\n    schemas.register('float_bounds', Bounds());\r\n    schemas.register('int_range', core_1.ChoiceNode([\r\n        {\r\n            type: 'object',\r\n            node: core_1.ObjectNode({\r\n                min: core_1.Opt(Reference('number_provider')),\r\n                max: core_1.Opt(Reference('number_provider'))\r\n            })\r\n        },\r\n        {\r\n            type: 'number',\r\n            node: core_1.NumberNode({ integer: true })\r\n        }\r\n    ], { context: 'range' }));\r\n    const ObjectWithType = (pool, directType, directPath, directDefault, objectDefault, context, cases) => {\r\n        let defaultCase = {};\r\n        if (objectDefault) {\r\n            Object.keys(cases[objectDefault]).forEach(k => {\r\n                defaultCase[k] = core_1.Mod(cases[objectDefault][k], {\r\n                    enabled: path => path.push('type').get() === undefined\r\n                });\r\n            });\r\n        }\r\n        const provider = core_1.ObjectNode({\r\n            type: core_1.Mod(core_1.Opt(StringNode({ validator: 'resource', params: { pool } })), {\r\n                hidden: () => true\r\n            }),\r\n            [core_1.Switch]: [{ push: 'type' }],\r\n            [core_1.Case]: cases,\r\n            ...defaultCase\r\n        }, { context, disableSwitchContext: true });\r\n        const choices = [{\r\n                type: directType,\r\n                node: cases[directDefault][directPath]\r\n            }];\r\n        if (objectDefault) {\r\n            choices.push({\r\n                type: 'object',\r\n                priority: -1,\r\n                node: provider\r\n            });\r\n        }\r\n        Object.keys(cases).forEach(k => {\r\n            choices.push({\r\n                type: k,\r\n                match: (v) => {\r\n                    var _a;\r\n                    const type = 'minecraft:' + ((_a = v === null || v === void 0 ? void 0 : v.type) === null || _a === void 0 ? void 0 : _a.replace(/^minecraft:/, ''));\r\n                    if (type === k)\r\n                        return true;\r\n                    const keys = v ? Object.keys(v) : [];\r\n                    return typeof v === 'object' && ((keys === null || keys === void 0 ? void 0 : keys.length) === 0 || ((keys === null || keys === void 0 ? void 0 : keys.length) === 1 && (keys === null || keys === void 0 ? void 0 : keys[0]) === 'type'));\r\n                },\r\n                node: provider,\r\n                change: (v) => ({ type: k })\r\n            });\r\n        });\r\n        return core_1.ChoiceNode(choices, { context, choiceContext: `${context}.type` });\r\n    };\r\n    schemas.register('number_provider', ObjectWithType('loot_number_provider_type', 'number', 'value', 'minecraft:constant', 'minecraft:uniform', 'number_provider', {\r\n        'minecraft:constant': {\r\n            value: core_1.NumberNode()\r\n        },\r\n        'minecraft:uniform': {\r\n            min: Reference('number_provider'),\r\n            max: Reference('number_provider')\r\n        },\r\n        'minecraft:binomial': {\r\n            n: Reference('number_provider'),\r\n            p: Reference('number_provider')\r\n        },\r\n        'minecraft:score': {\r\n            target: Reference('scoreboard_name_provider'),\r\n            score: StringNode({ validator: 'objective' }),\r\n            scale: core_1.Opt(core_1.NumberNode())\r\n        }\r\n    }));\r\n    schemas.register('scoreboard_name_provider', ObjectWithType('loot_score_provider_type', 'string', 'target', 'minecraft:context', null, 'score_provider', {\r\n        'minecraft:fixed': {\r\n            name: StringNode({ validator: 'entity', params: { amount: 'multiple', type: 'entities', isScoreHolder: true } }) // FIXME: doesn't support selectors\r\n        },\r\n        'minecraft:context': {\r\n            target: core_1.Mod(StringNode({ enum: 'entity_source' }), { default: () => 'this' })\r\n        }\r\n    }));\r\n    schemas.register('nbt_provider', ObjectWithType('loot_nbt_provider_type', 'string', 'target', 'minecraft:context', null, 'nbt_provider', {\r\n        'minecraft:storage': {\r\n            source: StringNode({ validator: 'resource', params: { pool: '$storage' } })\r\n        },\r\n        'minecraft:context': {\r\n            target: core_1.Mod(StringNode({ enum: 'copy_source' }), { default: () => 'this' })\r\n        }\r\n    }));\r\n    exports.FloatProvider = (config) => ObjectWithType('float_provider_type', 'number', 'value', 'minecraft:constant', null, 'float_provider', {\r\n        'minecraft:constant': {\r\n            value: core_1.NumberNode(config)\r\n        },\r\n        'minecraft:uniform': {\r\n            value: core_1.ObjectNode({\r\n                min_inclusive: core_1.NumberNode(config),\r\n                max_exclusive: core_1.NumberNode(config)\r\n            })\r\n        },\r\n        'minecraft:clamped_normal': {\r\n            value: core_1.ObjectNode({\r\n                min: core_1.NumberNode(),\r\n                max: core_1.NumberNode(),\r\n                mean: core_1.NumberNode(),\r\n                deviation: core_1.NumberNode()\r\n            })\r\n        },\r\n        'minecraft:trapezoid': {\r\n            value: core_1.ObjectNode({\r\n                min: core_1.NumberNode(),\r\n                max: core_1.NumberNode(),\r\n                plateau: core_1.NumberNode()\r\n            })\r\n        }\r\n    });\r\n    schemas.register('float_provider', exports.FloatProvider());\r\n    exports.IntProvider = (config) => ObjectWithType('int_provider_type', 'number', 'value', 'minecraft:constant', null, 'int_provider', {\r\n        'minecraft:constant': {\r\n            value: core_1.NumberNode({ integer: true, ...config })\r\n        },\r\n        'minecraft:uniform': {\r\n            value: core_1.ObjectNode({\r\n                min_inclusive: core_1.NumberNode({ integer: true, ...config }),\r\n                max_inclusive: core_1.NumberNode({ integer: true, ...config })\r\n            })\r\n        },\r\n        'minecraft:biased_to_bottom': {\r\n            value: core_1.ObjectNode({\r\n                min_inclusive: core_1.NumberNode({ integer: true, ...config }),\r\n                max_inclusive: core_1.NumberNode({ integer: true, ...config })\r\n            })\r\n        },\r\n        'minecraft:clamped': {\r\n            value: core_1.ObjectNode({\r\n                min_inclusive: core_1.NumberNode({ integer: true, ...config }),\r\n                max_inclusive: core_1.NumberNode({ integer: true, ...config }),\r\n                source: Reference('int_provider')\r\n            })\r\n        }\r\n    });\r\n    schemas.register('int_provider', exports.IntProvider());\r\n    schemas.register('vertical_anchor', core_1.ChoiceNode(['absolute', 'above_bottom', 'below_top'].map(t => ({\r\n        type: t,\r\n        match: v => (v === null || v === void 0 ? void 0 : v[t]) !== undefined,\r\n        change: v => { var _a, _b, _c; return ({ [t]: (_c = (_b = (_a = v.absolute) !== null && _a !== void 0 ? _a : v.above_bottom) !== null && _b !== void 0 ? _b : v.below_top) !== null && _c !== void 0 ? _c : 0 }); },\r\n        node: core_1.ObjectNode({\r\n            [t]: core_1.NumberNode({ integer: true, min: -2048, max: 2047 })\r\n        })\r\n    })), { context: 'vertical_anchor' }));\r\n    schemas.register('height_provider', ObjectWithType('height_provider_type', 'number', 'value', 'minecraft:constant', null, 'height_provider', {\r\n        'minecraft:constant': {\r\n            value: Reference('vertical_anchor')\r\n        },\r\n        'minecraft:uniform': {\r\n            min_inclusive: Reference('vertical_anchor'),\r\n            max_inclusive: Reference('vertical_anchor')\r\n        },\r\n        'minecraft:biased_to_bottom': {\r\n            min_inclusive: Reference('vertical_anchor'),\r\n            max_inclusive: Reference('vertical_anchor'),\r\n            inner: core_1.Opt(core_1.NumberNode({ integer: true, min: 1 }))\r\n        },\r\n        'minecraft:very_biased_to_bottom': {\r\n            min_inclusive: Reference('vertical_anchor'),\r\n            max_inclusive: Reference('vertical_anchor'),\r\n            inner: core_1.Opt(core_1.NumberNode({ integer: true, min: 1 }))\r\n        },\r\n        'minecraft:trapezoid': {\r\n            min_inclusive: Reference('vertical_anchor'),\r\n            max_inclusive: Reference('vertical_anchor'),\r\n            plateau: core_1.Opt(core_1.NumberNode({ integer: true }))\r\n        }\r\n    }));\r\n    exports.ConditionCases = (entitySourceNode = StringNode({ enum: 'entity_source' })) => ({\r\n        'minecraft:alternative': {\r\n            terms: core_1.ListNode(Reference('condition'))\r\n        },\r\n        'minecraft:block_state_property': {\r\n            block: StringNode({ validator: 'resource', params: { pool: 'block' } }),\r\n            properties: core_1.MapNode(StringNode(), StringNode(), { validation: { validator: 'block_state_map', params: { id: ['pop', { push: 'block' }] } } })\r\n        },\r\n        'minecraft:damage_source_properties': {\r\n            predicate: Reference('damage_source_predicate')\r\n        },\r\n        'minecraft:entity_properties': {\r\n            entity: entitySourceNode,\r\n            predicate: Reference('entity_predicate')\r\n        },\r\n        'minecraft:entity_scores': {\r\n            entity: entitySourceNode,\r\n            scores: core_1.MapNode(StringNode({ validator: 'objective' }), Reference('int_range'))\r\n        },\r\n        'minecraft:inverted': {\r\n            term: Reference('condition')\r\n        },\r\n        'minecraft:killed_by_player': {\r\n            inverse: core_1.Opt(core_1.BooleanNode())\r\n        },\r\n        'minecraft:location_check': {\r\n            offsetX: core_1.Opt(core_1.NumberNode({ integer: true })),\r\n            offsetY: core_1.Opt(core_1.NumberNode({ integer: true })),\r\n            offsetZ: core_1.Opt(core_1.NumberNode({ integer: true })),\r\n            predicate: Reference('location_predicate')\r\n        },\r\n        'minecraft:match_tool': {\r\n            predicate: Reference('item_predicate')\r\n        },\r\n        'minecraft:random_chance': {\r\n            chance: core_1.NumberNode({ min: 0, max: 1 })\r\n        },\r\n        'minecraft:random_chance_with_looting': {\r\n            chance: core_1.NumberNode({ min: 0, max: 1 }),\r\n            looting_multiplier: core_1.NumberNode()\r\n        },\r\n        'minecraft:reference': {\r\n            name: StringNode({ validator: 'resource', params: { pool: '$predicate' } })\r\n        },\r\n        'minecraft:table_bonus': {\r\n            enchantment: StringNode({ validator: 'resource', params: { pool: 'enchantment' } }),\r\n            chances: core_1.ListNode(core_1.NumberNode({ min: 0, max: 1 }))\r\n        },\r\n        'minecraft:time_check': {\r\n            value: Reference('int_range'),\r\n            period: core_1.Opt(core_1.NumberNode({ integer: true }))\r\n        },\r\n        'minecraft:value_check': {\r\n            value: Reference('number_provider'),\r\n            range: Reference('int_range')\r\n        },\r\n        'minecraft:weather_check': {\r\n            raining: core_1.Opt(core_1.BooleanNode()),\r\n            thundering: core_1.Opt(core_1.BooleanNode())\r\n        }\r\n    });\r\n    exports.FunctionCases = (conditions, copySourceNode = StringNode({ enum: 'copy_source' }), entitySourceNode = StringNode({ enum: 'entity_source' })) => {\r\n        const cases = {\r\n            'minecraft:apply_bonus': {\r\n                enchantment: StringNode({ validator: 'resource', params: { pool: 'enchantment' } }),\r\n                formula: StringNode({ validator: 'resource', params: { pool: collections.get('loot_table_apply_bonus_formula') } }),\r\n                parameters: core_1.Mod(core_1.ObjectNode({\r\n                    bonusMultiplier: core_1.Mod(core_1.NumberNode(), {\r\n                        enabled: path => path.pop().push('formula').get() === 'minecraft:uniform_bonus_count'\r\n                    }),\r\n                    extra: core_1.Mod(core_1.NumberNode(), {\r\n                        enabled: path => path.pop().push('formula').get() === 'minecraft:binomial_with_bonus_count'\r\n                    }),\r\n                    probability: core_1.Mod(core_1.NumberNode(), {\r\n                        enabled: path => path.pop().push('formula').get() === 'minecraft:binomial_with_bonus_count'\r\n                    })\r\n                }), {\r\n                    enabled: path => path.push('formula').get() !== 'minecraft:ore_drops'\r\n                })\r\n            },\r\n            'minecraft:copy_name': {\r\n                source: copySourceNode\r\n            },\r\n            'minecraft:copy_nbt': {\r\n                source: Reference('nbt_provider'),\r\n                ops: core_1.ListNode(core_1.ObjectNode({\r\n                    source: StringNode({ validator: 'nbt_path', params: { category: { getter: 'copy_source', path: ['pop', 'pop', 'pop', { push: 'source' }] } } }),\r\n                    target: StringNode({ validator: 'nbt_path', params: { category: 'minecraft:item' } }),\r\n                    op: StringNode({ enum: ['replace', 'append', 'merge'] })\r\n                }, { context: 'nbt_operation' }))\r\n            },\r\n            'minecraft:copy_state': {\r\n                block: StringNode({ validator: 'resource', params: { pool: 'block' } }),\r\n                properties: core_1.ListNode(StringNode({ validator: 'block_state_key', params: { id: ['pop', 'pop', { push: 'block' }] } }))\r\n            },\r\n            'minecraft:enchant_randomly': {\r\n                enchantments: core_1.Opt(core_1.ListNode(StringNode({ validator: 'resource', params: { pool: 'enchantment' } })))\r\n            },\r\n            'minecraft:enchant_with_levels': {\r\n                levels: Reference('number_provider'),\r\n                treasure: core_1.Opt(core_1.BooleanNode())\r\n            },\r\n            'minecraft:exploration_map': {\r\n                destination: core_1.Opt(StringNode({ enum: 'map_feature' })),\r\n                decoration: core_1.Opt(StringNode({ enum: 'map_decoration' })),\r\n                zoom: core_1.Opt(core_1.NumberNode({ integer: true })),\r\n                search_radius: core_1.Opt(core_1.NumberNode({ integer: true })),\r\n                skip_existing_chunks: core_1.Opt(core_1.BooleanNode())\r\n            },\r\n            'minecraft:fill_player_head': {\r\n                entity: entitySourceNode\r\n            },\r\n            'minecraft:limit_count': {\r\n                limit: Reference('int_range')\r\n            },\r\n            'minecraft:looting_enchant': {\r\n                count: Reference('number_provider'),\r\n                limit: core_1.Opt(core_1.NumberNode({ integer: true }))\r\n            },\r\n            'minecraft:set_attributes': {\r\n                modifiers: core_1.ListNode(Reference('attribute_modifier'))\r\n            },\r\n            'minecraft:set_banner_pattern': {\r\n                patterns: core_1.ListNode(core_1.ObjectNode({\r\n                    pattern: StringNode({ enum: 'banner_pattern' }),\r\n                    color: StringNode({ enum: 'dye_color' })\r\n                })),\r\n                append: core_1.Opt(core_1.BooleanNode())\r\n            },\r\n            'minecraft:set_contents': {\r\n                entries: core_1.ListNode(Reference('loot_entry'))\r\n            },\r\n            'minecraft:set_count': {\r\n                count: Reference('number_provider'),\r\n                add: core_1.Opt(core_1.BooleanNode())\r\n            },\r\n            'minecraft:set_damage': {\r\n                damage: Reference('number_provider'),\r\n                add: core_1.Opt(core_1.BooleanNode())\r\n            },\r\n            'minecraft:set_enchantments': {\r\n                enchantments: core_1.MapNode(StringNode({ validator: 'resource', params: { pool: 'enchantment' } }), Reference('number_provider')),\r\n                add: core_1.Opt(core_1.BooleanNode())\r\n            },\r\n            'minecraft:set_loot_table': {\r\n                name: StringNode({ validator: 'resource', params: { pool: '$loot_table' } }),\r\n                seed: core_1.Opt(core_1.NumberNode({ integer: true }))\r\n            },\r\n            'minecraft:set_lore': {\r\n                entity: core_1.Opt(entitySourceNode),\r\n                lore: core_1.ListNode(Reference('text_component')),\r\n                replace: core_1.Opt(core_1.BooleanNode())\r\n            },\r\n            'minecraft:set_name': {\r\n                entity: core_1.Opt(entitySourceNode),\r\n                name: core_1.Opt(Reference('text_component'))\r\n            },\r\n            'minecraft:set_nbt': {\r\n                tag: StringNode({ validator: 'nbt', params: { registry: { category: 'minecraft:item' } } })\r\n            },\r\n            'minecraft:set_stew_effect': {\r\n                effects: core_1.Opt(core_1.ListNode(core_1.ObjectNode({\r\n                    type: StringNode({ validator: 'resource', params: { pool: 'mob_effect' } }),\r\n                    duration: Reference('number_provider')\r\n                })))\r\n            }\r\n        };\r\n        const res = {};\r\n        collections.get('loot_function_type').forEach(f => {\r\n            res[f] = { ...cases[f], ...conditions };\r\n        });\r\n        return res;\r\n    };\r\n    exports.DimensionTypePresets = (node) => core_1.ObjectOrPreset(StringNode({ validator: 'resource', params: { pool: '$dimension_type' } }), node, {\r\n        'minecraft:overworld': exports.DefaultDimensionType,\r\n        'minecraft:the_nether': {\r\n            name: 'minecraft:the_nether',\r\n            ultrawarm: true,\r\n            natural: false,\r\n            shrunk: true,\r\n            piglin_safe: true,\r\n            respawn_anchor_works: true,\r\n            bed_works: false,\r\n            has_raids: false,\r\n            has_skylight: false,\r\n            has_ceiling: true,\r\n            ambient_light: 0.1,\r\n            fixed_time: 18000,\r\n            logical_height: 128,\r\n            effects: 'minecraft:the_nether',\r\n            infiniburn: 'minecraft:infiniburn_nether',\r\n            min_y: 0,\r\n            height: 256,\r\n        },\r\n        'minecraft:the_end': {\r\n            name: 'minecraft:the_end',\r\n            ultrawarm: false,\r\n            natural: false,\r\n            shrunk: false,\r\n            piglin_safe: false,\r\n            respawn_anchor_works: false,\r\n            bed_works: false,\r\n            has_raids: true,\r\n            has_skylight: false,\r\n            has_ceiling: false,\r\n            ambient_light: 0,\r\n            fixed_time: 6000,\r\n            logical_height: 256,\r\n            effects: 'minecraft:the_end',\r\n            infiniburn: 'minecraft:infiniburn_end',\r\n            min_y: 0,\r\n            height: 256,\r\n        }\r\n    });\r\n    exports.NoiseSettingsPresets = (node) => core_1.ObjectOrPreset(StringNode({ validator: 'resource', params: { pool: '$worldgen/noise_settings' } }), node, {\r\n        'minecraft:overworld': exports.DefaultNoiseSettings,\r\n        'minecraft:nether': {\r\n            name: 'minecraft:nether',\r\n            bedrock_roof_position: 0,\r\n            bedrock_floor_position: 0,\r\n            sea_level: 32,\r\n            disable_mob_generation: true,\r\n            noise_caves_enabled: false,\r\n            aquifers_enabled: false,\r\n            deepslate_enabled: false,\r\n            noise: {\r\n                min_y: 0,\r\n                height: 128,\r\n                density_factor: 0,\r\n                density_offset: 0.019921875,\r\n                simplex_surface_noise: false,\r\n                random_density_offset: false,\r\n                size_horizontal: 1,\r\n                size_vertical: 2,\r\n                sampling: {\r\n                    xz_scale: 1,\r\n                    y_scale: 3,\r\n                    xz_factor: 80,\r\n                    y_factor: 60\r\n                },\r\n                top_slide: {\r\n                    target: 120,\r\n                    size: 3,\r\n                    offset: 0\r\n                },\r\n                bottom_slide: {\r\n                    target: 320,\r\n                    size: 4,\r\n                    offset: -1\r\n                }\r\n            },\r\n            default_block: {\r\n                Name: \"minecraft:netherrack\"\r\n            },\r\n            default_fluid: {\r\n                Name: \"minecraft:lava\",\r\n                Properties: {\r\n                    level: \"0\"\r\n                }\r\n            }\r\n        },\r\n        'minecraft:end': {\r\n            name: 'minecraft:end',\r\n            bedrock_roof_position: -10,\r\n            bedrock_floor_position: -10,\r\n            sea_level: 0,\r\n            disable_mob_generation: true,\r\n            noise_caves_enabled: false,\r\n            aquifers_enabled: false,\r\n            deepslate_enabled: false,\r\n            noise: {\r\n                min_y: 0,\r\n                height: 128,\r\n                density_factor: 0,\r\n                density_offset: 0,\r\n                simplex_surface_noise: true,\r\n                random_density_offset: false,\r\n                island_noise_override: true,\r\n                size_horizontal: 2,\r\n                size_vertical: 1,\r\n                sampling: {\r\n                    xz_scale: 2,\r\n                    y_scale: 1,\r\n                    xz_factor: 80,\r\n                    y_factor: 160\r\n                },\r\n                top_slide: {\r\n                    target: -3000,\r\n                    size: 64,\r\n                    offset: -46\r\n                },\r\n                bottom_slide: {\r\n                    target: -30,\r\n                    size: 7,\r\n                    offset: 1\r\n                }\r\n            },\r\n            default_block: {\r\n                Name: \"minecraft:end_stone\"\r\n            },\r\n            default_fluid: {\r\n                Name: \"minecraft:air\"\r\n            }\r\n        },\r\n        'minecraft:amplified': {\r\n            name: 'minecraft:amplified',\r\n            bedrock_roof_position: -10,\r\n            bedrock_floor_position: 0,\r\n            sea_level: 63,\r\n            disable_mob_generation: false,\r\n            noise_caves_enabled: true,\r\n            aquifers_enabled: true,\r\n            deepslate_enabled: true,\r\n            noise: {\r\n                min_y: 0,\r\n                height: 256,\r\n                density_factor: 1,\r\n                density_offset: -0.46875,\r\n                simplex_surface_noise: true,\r\n                random_density_offset: true,\r\n                amplified: true,\r\n                size_horizontal: 1,\r\n                size_vertical: 2,\r\n                sampling: {\r\n                    xz_scale: 1,\r\n                    y_scale: 1,\r\n                    xz_factor: 80,\r\n                    y_factor: 160\r\n                },\r\n                top_slide: {\r\n                    target: -10,\r\n                    size: 3,\r\n                    offset: 0\r\n                },\r\n                bottom_slide: {\r\n                    target: -30,\r\n                    size: 0,\r\n                    offset: 0\r\n                }\r\n            },\r\n            default_block: {\r\n                Name: \"minecraft:stone\"\r\n            },\r\n            default_fluid: {\r\n                Name: \"minecraft:water\",\r\n                Properties: {\r\n                    level: \"0\"\r\n                }\r\n            }\r\n        },\r\n        'minecraft:caves': {\r\n            name: 'minecraft:caves',\r\n            bedrock_roof_position: 0,\r\n            bedrock_floor_position: 0,\r\n            sea_level: 32,\r\n            disable_mob_generation: true,\r\n            noise_caves_enabled: false,\r\n            aquifers_enabled: false,\r\n            deepslate_enabled: false,\r\n            noise: {\r\n                min_y: 0,\r\n                height: 128,\r\n                density_factor: 0,\r\n                density_offset: 0.019921875,\r\n                simplex_surface_noise: false,\r\n                random_density_offset: false,\r\n                size_horizontal: 1,\r\n                size_vertical: 2,\r\n                sampling: {\r\n                    xz_scale: 1,\r\n                    y_scale: 3,\r\n                    xz_factor: 80,\r\n                    y_factor: 60\r\n                },\r\n                top_slide: {\r\n                    target: 120,\r\n                    size: 3,\r\n                    offset: 0\r\n                },\r\n                bottom_slide: {\r\n                    target: 320,\r\n                    size: 4,\r\n                    offset: -1\r\n                }\r\n            },\r\n            default_block: {\r\n                Name: \"minecraft:stone\"\r\n            },\r\n            default_fluid: {\r\n                Name: \"minecraft:water\",\r\n                Properties: {\r\n                    level: \"0\"\r\n                }\r\n            }\r\n        },\r\n        'minecraft:floating_islands': {\r\n            name: 'minecraft:floating_islands',\r\n            bedrock_roof_position: -10,\r\n            bedrock_floor_position: -10,\r\n            sea_level: 0,\r\n            disable_mob_generation: true,\r\n            noise_caves_enabled: false,\r\n            aquifers_enabled: false,\r\n            deepslate_enabled: false,\r\n            noise: {\r\n                min_y: 0,\r\n                height: 128,\r\n                density_factor: 0,\r\n                density_offset: 0,\r\n                simplex_surface_noise: true,\r\n                random_density_offset: false,\r\n                island_noise_override: true,\r\n                size_horizontal: 2,\r\n                size_vertical: 1,\r\n                sampling: {\r\n                    xz_scale: 2,\r\n                    y_scale: 1,\r\n                    xz_factor: 80,\r\n                    y_factor: 160\r\n                },\r\n                top_slide: {\r\n                    target: -3000,\r\n                    size: 64,\r\n                    offset: -46\r\n                },\r\n                bottom_slide: {\r\n                    target: -30,\r\n                    size: 7,\r\n                    offset: 1\r\n                }\r\n            },\r\n            default_block: {\r\n                Name: \"minecraft:stone\"\r\n            },\r\n            default_fluid: {\r\n                Name: \"minecraft:water\",\r\n                Properties: {\r\n                    level: \"0\"\r\n                }\r\n            }\r\n        }\r\n    });\r\n}\r\nexports.initCommonSchemas = initCommonSchemas;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.initConditionSchemas = void 0;\r\nconst core_1 = require(\"@mcschema/core\");\r\nconst Common_1 = require(\"./Common\");\r\nfunction initConditionSchemas(schemas, collections) {\r\n    const Reference = core_1.Reference.bind(undefined, schemas);\r\n    const StringNode = core_1.StringNode.bind(undefined, collections);\r\n    schemas.register('predicate', core_1.ObjectOrList(Reference('condition'), { choiceContext: 'condition' }));\r\n    schemas.register('condition', core_1.Mod(core_1.ObjectNode({\r\n        condition: StringNode({ validator: 'resource', params: { pool: 'loot_condition_type' } }),\r\n        [core_1.Switch]: [{ push: 'condition' }],\r\n        [core_1.Case]: Common_1.ConditionCases()\r\n    }, { category: 'predicate', context: 'condition' }), {\r\n        default: () => ({\r\n            condition: 'minecraft:entity_properties',\r\n            entity: 'this'\r\n        })\r\n    }));\r\n}\r\nexports.initConditionSchemas = initConditionSchemas;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.initDimensionSchemas = void 0;\r\nconst core_1 = require(\"@mcschema/core\");\r\nconst Common_1 = require(\"./Common\");\r\nfunction initDimensionSchemas(schemas, collections) {\r\n    const Reference = core_1.Reference.bind(undefined, schemas);\r\n    const StringNode = core_1.StringNode.bind(undefined, collections);\r\n    const NoPreset = (node) => core_1.Mod(node, {\r\n        enabled: path => path.push('preset').get() === undefined\r\n    });\r\n    schemas.register('dimension', core_1.Mod(core_1.ObjectNode({\r\n        type: Common_1.DimensionTypePresets(Reference('dimension_type')),\r\n        generator: core_1.ObjectNode({\r\n            type: StringNode({ validator: 'resource', params: { pool: 'worldgen/chunk_generator' } }),\r\n            [core_1.Switch]: [{ push: 'type' }],\r\n            [core_1.Case]: {\r\n                'minecraft:noise': {\r\n                    seed: core_1.NumberNode({ integer: true }),\r\n                    settings: Common_1.NoiseSettingsPresets(Reference('noise_settings')),\r\n                    biome_source: core_1.ObjectNode({\r\n                        type: StringNode({ validator: 'resource', params: { pool: 'worldgen/biome_source' } }),\r\n                        [core_1.Switch]: [{ push: 'type' }],\r\n                        [core_1.Case]: {\r\n                            'minecraft:fixed': {\r\n                                biome: StringNode({ validator: 'resource', params: { pool: '$worldgen/biome' } })\r\n                            },\r\n                            'minecraft:multi_noise': {\r\n                                seed: core_1.NumberNode({ integer: true }),\r\n                                preset: core_1.Opt(StringNode({ enum: ['nether'] })),\r\n                                altitude_noise: NoPreset(Reference('generator_biome_noise')),\r\n                                temperature_noise: NoPreset(Reference('generator_biome_noise')),\r\n                                humidity_noise: NoPreset(Reference('generator_biome_noise')),\r\n                                weirdness_noise: NoPreset(Reference('generator_biome_noise')),\r\n                                biomes: NoPreset(core_1.Mod(core_1.ListNode(Reference('generator_biome')), {\r\n                                    default: () => [{\r\n                                            biome: 'minecraft:plains'\r\n                                        }]\r\n                                }))\r\n                            },\r\n                            'minecraft:checkerboard': {\r\n                                scale: core_1.Opt(core_1.NumberNode({ integer: true, min: 0, max: 62 })),\r\n                                biomes: core_1.ListNode(StringNode({ validator: 'resource', params: { pool: '$worldgen/biome' } }))\r\n                            },\r\n                            'minecraft:the_end': {\r\n                                seed: core_1.NumberNode({ integer: true })\r\n                            },\r\n                            'minecraft:vanilla_layered': {\r\n                                seed: core_1.NumberNode({ integer: true }),\r\n                                large_biomes: core_1.Opt(core_1.BooleanNode()),\r\n                                legacy_biome_init_layer: core_1.Opt(core_1.BooleanNode())\r\n                            }\r\n                        }\r\n                    }, { category: 'predicate', disableSwitchContext: true })\r\n                },\r\n                'minecraft:flat': {\r\n                    settings: core_1.ObjectNode({\r\n                        biome: core_1.Opt(StringNode({ validator: 'resource', params: { pool: '$worldgen/biome' } })),\r\n                        lakes: core_1.Opt(core_1.BooleanNode()),\r\n                        features: core_1.Opt(core_1.BooleanNode()),\r\n                        layers: core_1.ListNode(Reference('generator_layer')),\r\n                        structures: Reference('generator_structures')\r\n                    })\r\n                }\r\n            }\r\n        }, { disableSwitchContext: true })\r\n    }, { category: 'pool', context: 'dimension' }), {\r\n        default: () => {\r\n            const seed = Math.floor(Math.random() * (4294967296)) - 2147483648;\r\n            return {\r\n                type: 'minecraft:overworld',\r\n                generator: {\r\n                    type: 'minecraft:noise',\r\n                    seed,\r\n                    biome_source: {\r\n                        type: 'minecraft:fixed',\r\n                        seed,\r\n                        biome: 'minecraft:plains'\r\n                    },\r\n                    settings: 'minecraft:overworld'\r\n                }\r\n            };\r\n        }\r\n    }));\r\n    schemas.register('generator_biome', core_1.Mod(core_1.ObjectNode({\r\n        biome: StringNode({ validator: 'resource', params: { pool: '$worldgen/biome' } }),\r\n        parameters: core_1.ObjectNode({\r\n            altitude: core_1.NumberNode(),\r\n            temperature: core_1.NumberNode(),\r\n            humidity: core_1.NumberNode(),\r\n            weirdness: core_1.NumberNode(),\r\n            offset: core_1.NumberNode()\r\n        })\r\n    }, { context: 'generator_biome' }), {\r\n        default: () => ({\r\n            biome: 'minecraft:plains',\r\n            parameters: {\r\n                altitude: 0,\r\n                temperature: 0,\r\n                humidity: 0,\r\n                weirdness: 0,\r\n                offset: 0\r\n            }\r\n        })\r\n    }));\r\n    schemas.register('generator_biome_noise', core_1.Mod(core_1.ObjectNode({\r\n        firstOctave: core_1.NumberNode({ integer: true }),\r\n        amplitudes: core_1.ListNode(core_1.NumberNode())\r\n    }, { context: 'generator_biome_noise' }), {\r\n        default: () => ({\r\n            firstOctave: -7,\r\n            amplitudes: [1, 1]\r\n        })\r\n    }));\r\n}\r\nexports.initDimensionSchemas = initDimensionSchemas;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.initDimensionTypeSchemas = void 0;\r\nconst core_1 = require(\"@mcschema/core\");\r\nconst Common_1 = require(\"./Common\");\r\nfunction initDimensionTypeSchemas(schemas, collections) {\r\n    const StringNode = core_1.StringNode.bind(undefined, collections);\r\n    schemas.register('dimension_type', core_1.Mod(core_1.ObjectNode({\r\n        name: core_1.Mod(StringNode({ validator: 'resource', params: { pool: '$dimension_type', isDefinition: true } }), {\r\n            enabled: (path) => path.getArray().length > 0\r\n        }),\r\n        ultrawarm: core_1.BooleanNode(),\r\n        natural: core_1.BooleanNode(),\r\n        piglin_safe: core_1.BooleanNode(),\r\n        respawn_anchor_works: core_1.BooleanNode(),\r\n        bed_works: core_1.BooleanNode(),\r\n        has_raids: core_1.BooleanNode(),\r\n        has_skylight: core_1.BooleanNode(),\r\n        has_ceiling: core_1.BooleanNode(),\r\n        coordinate_scale: core_1.NumberNode({ min: 0.00001, max: 30000000 }),\r\n        ambient_light: core_1.NumberNode(),\r\n        fixed_time: core_1.Opt(core_1.NumberNode({ integer: true })),\r\n        logical_height: core_1.NumberNode({ integer: true, min: 0, max: 4096 }),\r\n        effects: core_1.Opt(StringNode({ enum: ['minecraft:overworld', 'minecraft:the_nether', 'minecraft:the_end'] })),\r\n        infiniburn: StringNode({ validator: 'resource', params: { pool: '$tag/block' } }),\r\n        min_y: core_1.NumberNode({ integer: true, min: -2048, max: 2047 }),\r\n        height: core_1.NumberNode({ integer: true, min: 0, max: 4096 })\r\n    }, { context: 'dimension_type' }), node => ({\r\n        default: () => Common_1.DefaultDimensionType,\r\n        validate: (path, value, errors, options) => {\r\n            value = node.validate(path, value, errors, options);\r\n            if ((value === null || value === void 0 ? void 0 : value.min_y) + (value === null || value === void 0 ? void 0 : value.height) > 2047) {\r\n                errors.add(path.push('height'), 'error.min_y_plus_height', 2047);\r\n            }\r\n            if ((value === null || value === void 0 ? void 0 : value.logical_height) > (value === null || value === void 0 ? void 0 : value.height)) {\r\n                errors.add(path.push('logical_height'), 'error.logical_height');\r\n            }\r\n            if ((value === null || value === void 0 ? void 0 : value.height) % 16 !== 0) {\r\n                errors.add(path.push('height'), 'error.height_multiple', 16);\r\n            }\r\n            if ((value === null || value === void 0 ? void 0 : value.min_y) % 16 !== 0) {\r\n                errors.add(path.push('min_y'), 'error.min_y_multiple', 16);\r\n            }\r\n            return value;\r\n        }\r\n    })));\r\n}\r\nexports.initDimensionTypeSchemas = initDimensionTypeSchemas;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.initItemModifierSchemas = void 0;\r\nconst core_1 = require(\"@mcschema/core\");\r\nconst Common_1 = require(\"./Common\");\r\nfunction initItemModifierSchemas(schemas, collections) {\r\n    const Reference = core_1.Reference.bind(undefined, schemas);\r\n    const StringNode = core_1.StringNode.bind(undefined, collections);\r\n    schemas.register('item_modifier', core_1.ObjectOrList(Reference('function'), { choiceContext: 'function' }));\r\n    const conditions = {\r\n        conditions: core_1.Opt(core_1.ListNode(Reference('condition')))\r\n    };\r\n    schemas.register('function', core_1.Mod(core_1.ObjectNode({\r\n        function: StringNode({ validator: 'resource', params: { pool: 'loot_function_type' } }),\r\n        [core_1.Switch]: [{ push: 'function' }],\r\n        [core_1.Case]: Common_1.FunctionCases(conditions)\r\n    }, { category: 'function', context: 'function' }), {\r\n        default: () => [{\r\n                function: 'minecraft:set_count',\r\n                count: 1\r\n            }]\r\n    }));\r\n}\r\nexports.initItemModifierSchemas = initItemModifierSchemas;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.LootFunctions = exports.LootConditions = exports.LootCopySources = exports.LootEntitySources = exports.LootTableTypes = void 0;\r\nexports.LootTableTypes = new Map([\r\n    ['minecraft:advancement_entity', { requires: [7 /* Origin */, 8 /* ThisEntity */], allows: [] }],\r\n    ['minecraft:advancement_reward', { requires: [7 /* Origin */, 8 /* ThisEntity */], allows: [] }],\r\n    ['minecraft:barter', { requires: [8 /* ThisEntity */], allows: [] }],\r\n    ['minecraft:block', { requires: [1 /* BlockState */, 7 /* Origin */, 9 /* Tool */], allows: [0 /* BlockEntity */, 4 /* ExplosionRadius */, 8 /* ThisEntity */] }],\r\n    ['minecraft:chest', { requires: [7 /* Origin */], allows: [8 /* ThisEntity */] }],\r\n    ['minecraft:command', { requires: [7 /* Origin */], allows: [8 /* ThisEntity */] }],\r\n    ['minecraft:empty', { requires: [], allows: [] }],\r\n    ['minecraft:entity', { requires: [2 /* DamageSource */, 7 /* Origin */, 8 /* ThisEntity */], allows: [3 /* DirectKillerEntity */, 5 /* KillerEntity */, 6 /* LastDamagePlayer */] }],\r\n    ['minecraft:fishing', { requires: [7 /* Origin */, 9 /* Tool */], allows: [8 /* ThisEntity */] }],\r\n    ['minecraft:generic', { requires: [2 /* DamageSource */, 0 /* BlockEntity */, 1 /* BlockState */, 3 /* DirectKillerEntity */, 4 /* ExplosionRadius */, 5 /* KillerEntity */, 6 /* LastDamagePlayer */, 7 /* Origin */, 8 /* ThisEntity */, 9 /* Tool */], allows: [] }],\r\n    ['minecraft:gift', { requires: [7 /* Origin */, 8 /* ThisEntity */], allows: [] }],\r\n    ['minecraft:selector', { requires: [7 /* Origin */], allows: [8 /* ThisEntity */] }]\r\n]);\r\n/**\r\n * A map from loot entity sources to an array of their required context.\r\n */\r\nexports.LootEntitySources = new Map([\r\n    ['direct_killer', [3 /* DirectKillerEntity */]],\r\n    ['killer', [5 /* KillerEntity */]],\r\n    ['killer_player', [5 /* KillerEntity */]],\r\n    ['this', [8 /* ThisEntity */]]\r\n]);\r\n/**\r\n * A map from loot copy sources to an array of their required context.\r\n */\r\nexports.LootCopySources = new Map([\r\n    ['block_entity', [0 /* BlockEntity */]],\r\n    ['killer', [5 /* KillerEntity */]],\r\n    ['killer_player', [5 /* KillerEntity */]],\r\n    ['this', [8 /* ThisEntity */]]\r\n]);\r\n/**\r\n * A map from loot condition IDs to an array of their required context.\r\n */\r\nexports.LootConditions = new Map([\r\n    ['minecraft:alternative', []],\r\n    ['minecraft:block_state_property', [1 /* BlockState */]],\r\n    ['minecraft:damage_source_properties', [2 /* DamageSource */]],\r\n    ['minecraft:entity_properties', [7 /* Origin */]],\r\n    ['minecraft:entity_scores', []],\r\n    ['minecraft:inverted', []],\r\n    ['minecraft:killed_by_player', [6 /* LastDamagePlayer */]],\r\n    ['minecraft:location_check', []],\r\n    ['minecraft:match_tool', [9 /* Tool */]],\r\n    ['minecraft:random_chance', []],\r\n    ['minecraft:random_chance_with_looting', [5 /* KillerEntity */]],\r\n    ['minecraft:reference', []],\r\n    ['minecraft:survives_explosion', [4 /* ExplosionRadius */]],\r\n    ['minecraft:table_bonus', [9 /* Tool */]],\r\n    ['minecraft:time_check', []],\r\n    ['minecraft:weather_check', []]\r\n]);\r\n/**\r\n * A map from loot function IDs to an array of their required context.\r\n */\r\nexports.LootFunctions = new Map([\r\n    ['minecraft:apply_bonus', [9 /* Tool */]],\r\n    ['minecraft:copy_name', []],\r\n    ['minecraft:copy_nbt', []],\r\n    ['minecraft:copy_state', [1 /* BlockState */]],\r\n    ['minecraft:enchant_randomly', []],\r\n    ['minecraft:enchant_with_levels', []],\r\n    ['minecraft:exploration_map', [7 /* Origin */]],\r\n    ['minecraft:explosion_decay', []],\r\n    ['minecraft:fill_player_head', []],\r\n    ['minecraft:furnace_smelt', []],\r\n    ['minecraft:limit_count', []],\r\n    ['minecraft:looting_enchant', [5 /* KillerEntity */]],\r\n    ['minecraft:set_attributes', []],\r\n    ['minecraft:set_banner_pattern', []],\r\n    ['minecraft:set_contents', []],\r\n    ['minecraft:set_count', []],\r\n    ['minecraft:set_damage', []],\r\n    ['minecraft:set_loot_table', []],\r\n    ['minecraft:set_lore', []],\r\n    ['minecraft:set_name', []],\r\n    ['minecraft:set_nbt', []],\r\n    ['minecraft:set_stew_effect', []]\r\n]);\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.initLootTableSchemas = void 0;\r\nconst core_1 = require(\"@mcschema/core\");\r\nconst LootContext_1 = require(\"../LootContext\");\r\nconst Common_1 = require(\"./Common\");\r\nfunction initLootTableSchemas(schemas, collections) {\r\n    const Reference = core_1.Reference.bind(undefined, schemas);\r\n    const StringNode = core_1.StringNode.bind(undefined, collections);\r\n    const conditions = {\r\n        conditions: core_1.Opt(core_1.ListNode(Reference('loot_condition')))\r\n    };\r\n    const functionsAndConditions = {\r\n        functions: core_1.Opt(core_1.ListNode(Reference('loot_function'))),\r\n        ...conditions\r\n    };\r\n    function compileSwitchNode(contextMap, collectionID, getNode) {\r\n        const cases = [];\r\n        const getAvailableOptions = (providedContext) => collections\r\n            .get(collectionID)\r\n            .filter(t => {\r\n            var _a;\r\n            const requiredContext = (_a = contextMap.get(t)) !== null && _a !== void 0 ? _a : [];\r\n            return requiredContext.every(c => providedContext.includes(c));\r\n        });\r\n        for (const [tableType, { allows, requires }] of LootContext_1.LootTableTypes) {\r\n            const providedContext = [...allows, ...requires];\r\n            cases.push({\r\n                match: path => path.getModel().get(new core_1.Path(['type'])) === tableType,\r\n                node: getNode(getAvailableOptions(providedContext))\r\n            });\r\n        }\r\n        cases.push({ match: _ => true, node: getNode(collectionID) });\r\n        return core_1.SwitchNode(cases);\r\n    }\r\n    const conditionIDSwtichNode = compileSwitchNode(LootContext_1.LootConditions, 'loot_condition_type', type => StringNode({ validator: 'resource', params: { pool: type instanceof Array ? type : `loot_condition_type` } }));\r\n    const functionIDSwtichNode = compileSwitchNode(LootContext_1.LootFunctions, 'loot_function_type', type => StringNode({ validator: 'resource', params: { pool: type instanceof Array ? type : `loot_function_type` } }));\r\n    const entitySourceSwtichNode = compileSwitchNode(LootContext_1.LootEntitySources, 'entity_source', type => StringNode({ enum: type }));\r\n    const copySourceSwtichNode = compileSwitchNode(LootContext_1.LootCopySources, 'copy_source', type => StringNode({ enum: type }));\r\n    schemas.register('loot_table', core_1.Mod(core_1.ObjectNode({\r\n        type: core_1.Opt(StringNode({ validator: \"resource\", params: { pool: collections.get('loot_context_type') } })),\r\n        pools: core_1.Opt(core_1.ListNode(core_1.Mod(core_1.ObjectNode({\r\n            rolls: Reference('number_provider'),\r\n            bonus_rolls: core_1.Opt(Reference('number_provider')),\r\n            entries: core_1.ListNode(Reference('loot_entry')),\r\n            ...functionsAndConditions\r\n        }, { category: 'pool', context: 'loot_pool' }), {\r\n            default: () => ({\r\n                rolls: 1,\r\n                entries: [{\r\n                        type: 'minecraft:item',\r\n                        name: 'minecraft:stone'\r\n                    }]\r\n            })\r\n        }))),\r\n        functions: core_1.Opt(core_1.ListNode(Reference('loot_function')))\r\n    }, { context: 'loot_table' }), {\r\n        default: () => ({\r\n            pools: [{\r\n                    rolls: 1,\r\n                    entries: [{\r\n                            type: 'minecraft:item',\r\n                            name: 'minecraft:stone'\r\n                        }]\r\n                }]\r\n        })\r\n    }));\r\n    const weightMod = {\r\n        enabled: path => {\r\n            var _a;\r\n            return ((_a = path.pop().get()) === null || _a === void 0 ? void 0 : _a.length) > 1\r\n                && !['minecraft:alternatives', 'minecraft:group', 'minecraft:sequence'].includes(path.push('type').get());\r\n        }\r\n    };\r\n    schemas.register('loot_entry', core_1.Mod(core_1.ObjectNode({\r\n        type: StringNode({ validator: 'resource', params: { pool: 'loot_pool_entry_type' } }),\r\n        weight: core_1.Opt(core_1.Mod(core_1.NumberNode({ integer: true, min: 1 }), weightMod)),\r\n        quality: core_1.Opt(core_1.Mod(core_1.NumberNode({ integer: true }), weightMod)),\r\n        [core_1.Switch]: [{ push: 'type' }],\r\n        [core_1.Case]: {\r\n            'minecraft:alternatives': {\r\n                children: core_1.ListNode(Reference('loot_entry')),\r\n                ...functionsAndConditions\r\n            },\r\n            'minecraft:dynamic': {\r\n                name: StringNode(),\r\n                ...functionsAndConditions\r\n            },\r\n            'minecraft:group': {\r\n                children: core_1.ListNode(Reference('loot_entry')),\r\n                ...functionsAndConditions\r\n            },\r\n            'minecraft:item': {\r\n                name: StringNode({ validator: 'resource', params: { pool: 'item' } }),\r\n                ...functionsAndConditions\r\n            },\r\n            'minecraft:loot_table': {\r\n                name: StringNode({ validator: 'resource', params: { pool: '$loot_table' } }),\r\n                ...functionsAndConditions\r\n            },\r\n            'minecraft:sequence': {\r\n                children: core_1.ListNode(Reference('loot_entry')),\r\n                ...functionsAndConditions\r\n            },\r\n            'minecraft:tag': {\r\n                name: StringNode({ validator: 'resource', params: { pool: '$tag/item' } }),\r\n                expand: core_1.Opt(core_1.BooleanNode()),\r\n                ...functionsAndConditions\r\n            }\r\n        }\r\n    }, { context: 'loot_entry' }), {\r\n        default: () => ({\r\n            type: 'minecraft:item',\r\n            name: 'minecraft:stone'\r\n        })\r\n    }));\r\n    schemas.register('loot_function', core_1.Mod(core_1.ObjectNode({\r\n        function: functionIDSwtichNode,\r\n        [core_1.Switch]: [{ push: 'function' }],\r\n        [core_1.Case]: Common_1.FunctionCases(conditions, copySourceSwtichNode, entitySourceSwtichNode)\r\n    }, { category: 'function', context: 'function' }), {\r\n        default: () => ({\r\n            function: 'minecraft:set_count',\r\n            count: 1\r\n        })\r\n    }));\r\n    schemas.register('loot_condition', core_1.Mod(core_1.ObjectNode({\r\n        condition: conditionIDSwtichNode,\r\n        [core_1.Switch]: [{ push: 'condition' }],\r\n        [core_1.Case]: Common_1.ConditionCases(entitySourceSwtichNode)\r\n    }, { category: 'predicate', context: 'condition' }), {\r\n        default: () => ({\r\n            condition: 'minecraft:random_chance',\r\n            chance: 0.5\r\n        })\r\n    }));\r\n    schemas.register('attribute_modifier', core_1.Mod(core_1.ObjectNode({\r\n        attribute: StringNode({ validator: 'resource', params: { pool: 'attribute' } }),\r\n        name: StringNode(),\r\n        amount: Reference('number_provider'),\r\n        operation: StringNode({ enum: ['addition', 'multiply_base', 'multiply_total'] }),\r\n        slot: core_1.StringOrList(StringNode({ enum: 'slot' }))\r\n    }, { context: 'attribute_modifier' }), {\r\n        default: () => ({\r\n            attribute: 'minecraft:generic.max_health',\r\n            name: '',\r\n            amount: 1,\r\n            operation: 'addition',\r\n            slot: 'mainhand'\r\n        })\r\n    }));\r\n}\r\nexports.initLootTableSchemas = initLootTableSchemas;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.initPackMcmetaSchemas = void 0;\r\nconst core_1 = require(\"@mcschema/core\");\r\nconst CURRENT_PACK_FORMAT = 7;\r\nfunction initPackMcmetaSchemas(schemas, _) {\r\n    const getSimpleString = (jsonText) => { var _a, _b; return jsonText instanceof Array ? getSimpleString(jsonText[0]) : (_b = (_a = jsonText === null || jsonText === void 0 ? void 0 : jsonText.text) !== null && _a !== void 0 ? _a : jsonText === null || jsonText === void 0 ? void 0 : jsonText.toString()) !== null && _b !== void 0 ? _b : ''; };\r\n    schemas.register('pack_mcmeta', core_1.Mod(core_1.ObjectNode({\r\n        pack: core_1.Mod(core_1.ObjectNode({\r\n            pack_format: core_1.Mod(core_1.NumberNode({ integer: true, min: CURRENT_PACK_FORMAT, max: CURRENT_PACK_FORMAT }), {\r\n                default: () => CURRENT_PACK_FORMAT,\r\n                canUpdate: (_p, v) => v !== CURRENT_PACK_FORMAT,\r\n                update: () => [{ name: 'pack_format', params: [CURRENT_PACK_FORMAT], newValue: CURRENT_PACK_FORMAT }]\r\n            }),\r\n            description: core_1.Reference(schemas, 'text_component')\r\n        }), {\r\n            default: () => ({\r\n                pack_format: CURRENT_PACK_FORMAT,\r\n                description: ''\r\n            })\r\n        })\r\n    }), {\r\n        default: () => ({\r\n            pack: {\r\n                pack_format: CURRENT_PACK_FORMAT,\r\n                description: ''\r\n            }\r\n        })\r\n    }));\r\n}\r\nexports.initPackMcmetaSchemas = initPackMcmetaSchemas;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.initPredicatesSchemas = void 0;\r\nconst core_1 = require(\"@mcschema/core\");\r\nfunction initPredicatesSchemas(schemas, collections) {\r\n    const Reference = core_1.Reference.bind(undefined, schemas);\r\n    const StringNode = core_1.StringNode.bind(undefined, collections);\r\n    const StateChoice = core_1.ChoiceNode([\r\n        {\r\n            type: 'string',\r\n            node: StringNode(),\r\n            change: v => (typeof v === 'boolean' || typeof v === 'number') ? v.toString() : ''\r\n        },\r\n        {\r\n            type: 'number',\r\n            node: core_1.NumberNode(),\r\n            change: v => (typeof v === 'string') ? parseInt(v) : 0\r\n        },\r\n        {\r\n            type: 'object',\r\n            node: core_1.ObjectNode({\r\n                min: core_1.Opt(core_1.NumberNode({ integer: true })),\r\n                max: core_1.Opt(core_1.NumberNode({ integer: true }))\r\n            }),\r\n            change: v => (typeof v === 'number') ? ({ min: v, max: v }) : ({})\r\n        },\r\n        {\r\n            type: 'boolean',\r\n            node: core_1.BooleanNode(),\r\n            change: v => v === 'true' || v === 1\r\n        }\r\n    ]);\r\n    schemas.register('item_predicate', core_1.ObjectNode({\r\n        items: core_1.Opt(core_1.ListNode(StringNode({ validator: 'resource', params: { pool: 'item' } }))),\r\n        tag: core_1.Opt(StringNode({ validator: 'resource', params: { pool: '$tag/item' } })),\r\n        count: Reference('int_bounds'),\r\n        durability: Reference('int_bounds'),\r\n        potion: core_1.Opt(StringNode({ validator: 'resource', params: { pool: 'potion' } })),\r\n        nbt: core_1.Opt(StringNode({ validator: 'nbt', params: { registry: { category: 'minecraft:item', id: ['pop', { push: 'item' }] } } })),\r\n        enchantments: core_1.Opt(core_1.ListNode(Reference('enchantment_predicate')))\r\n    }, { context: 'item' }));\r\n    schemas.register('enchantment_predicate', core_1.ObjectNode({\r\n        enchantment: core_1.Opt(StringNode({ validator: 'resource', params: { pool: 'enchantment' } })),\r\n        levels: Reference('int_bounds')\r\n    }, { context: 'enchantment' }));\r\n    schemas.register('block_predicate', core_1.ObjectNode({\r\n        blocks: core_1.Opt(core_1.ListNode(StringNode({ validator: 'resource', params: { pool: 'block' } }))),\r\n        tag: core_1.Opt(StringNode({ validator: 'resource', params: { pool: '$tag/block' } })),\r\n        nbt: core_1.Opt(StringNode({ validator: 'nbt', params: { registry: { category: 'minecraft:block', id: ['pop', { push: 'block' }] } } })),\r\n        state: core_1.Opt(core_1.MapNode(StringNode(), StateChoice, { validation: { validator: 'block_state_map', params: { id: ['pop', { push: 'block' }] } } }))\r\n    }, { context: 'block' }));\r\n    schemas.register('fluid_predicate', core_1.ObjectNode({\r\n        fluid: core_1.Opt(StringNode({ validator: 'resource', params: { pool: 'fluid' } })),\r\n        tag: core_1.Opt(StringNode({ validator: 'resource', params: { pool: '$tag/fluid' } })),\r\n        state: core_1.Opt(core_1.MapNode(StringNode(), StateChoice))\r\n    }, { context: 'fluid' }));\r\n    schemas.register('location_predicate', core_1.ObjectNode({\r\n        position: core_1.Opt(core_1.ObjectNode({\r\n            x: Reference('float_bounds'),\r\n            y: Reference('float_bounds'),\r\n            z: Reference('float_bounds')\r\n        })),\r\n        biome: core_1.Opt(StringNode({ validator: 'resource', params: { pool: '$worldgen/biome' } })),\r\n        feature: core_1.Opt(StringNode({ enum: collections.get('worldgen/structure_feature').map(v => v.slice(10)) })),\r\n        dimension: core_1.Opt(StringNode({ validator: 'resource', params: { pool: '$dimension' } })),\r\n        light: core_1.Opt(core_1.ObjectNode({\r\n            light: Reference('int_bounds')\r\n        })),\r\n        smokey: core_1.Opt(core_1.BooleanNode()),\r\n        block: core_1.Opt(Reference('block_predicate')),\r\n        fluid: core_1.Opt(Reference('fluid_predicate'))\r\n    }, { context: 'location' }));\r\n    schemas.register('statistic_predicate', core_1.ObjectNode({\r\n        type: StringNode({ validator: 'resource', params: { pool: 'stat_type' } }),\r\n        stat: StringNode(),\r\n        value: Reference('int_bounds'),\r\n        [core_1.Switch]: [{ push: 'type' }],\r\n        [core_1.Case]: {\r\n            'minecraft:mined': {\r\n                stat: StringNode({ validator: 'resource', params: { pool: 'block' } })\r\n            },\r\n            'minecraft:crafted': {\r\n                stat: StringNode({ validator: 'resource', params: { pool: 'item' } })\r\n            },\r\n            'minecraft:used': {\r\n                stat: StringNode({ validator: 'resource', params: { pool: 'item' } })\r\n            },\r\n            'minecraft:broken': {\r\n                stat: StringNode({ validator: 'resource', params: { pool: 'item' } })\r\n            },\r\n            'minecraft:picked_up': {\r\n                stat: StringNode({ validator: 'resource', params: { pool: 'item' } })\r\n            },\r\n            'minecraft:dropped': {\r\n                stat: StringNode({ validator: 'resource', params: { pool: 'item' } })\r\n            },\r\n            'minecraft:killed': {\r\n                stat: StringNode({ validator: 'resource', params: { pool: 'entity_type' } })\r\n            },\r\n            'minecraft:killed_by': {\r\n                stat: StringNode({ validator: 'resource', params: { pool: 'entity_type' } })\r\n            },\r\n            'minecraft:custom': {\r\n                stat: StringNode({ validator: 'resource', params: { pool: 'custom_stat' } })\r\n            }\r\n        }\r\n    }));\r\n    schemas.register('player_predicate', core_1.ObjectNode({\r\n        gamemode: core_1.Opt(StringNode({ enum: 'gamemode' })),\r\n        level: Reference('int_bounds'),\r\n        advancements: core_1.Opt(core_1.MapNode(StringNode({ validator: 'resource', params: { pool: '$advancement' } }), core_1.ChoiceNode([\r\n            { type: 'boolean', node: core_1.BooleanNode(), change: _ => true },\r\n            {\r\n                type: 'object', node: core_1.MapNode(StringNode(), core_1.BooleanNode())\r\n            }\r\n        ]))),\r\n        recipes: core_1.Opt(core_1.MapNode(StringNode({ validator: 'resource', params: { pool: '$recipe' } }), core_1.BooleanNode())),\r\n        stats: core_1.Opt(core_1.ListNode(Reference('statistic_predicate'))),\r\n        looking_at: core_1.Opt(Reference('entity_predicate'))\r\n    }, { context: 'player' }));\r\n    schemas.register('status_effect_predicate', core_1.ObjectNode({\r\n        amplifier: Reference('int_bounds'),\r\n        duration: Reference('int_bounds'),\r\n        ambient: core_1.Opt(core_1.BooleanNode()),\r\n        visible: core_1.Opt(core_1.BooleanNode())\r\n    }, { context: 'status_effect' }));\r\n    schemas.register('distance_predicate', core_1.ObjectNode({\r\n        x: Reference('float_bounds'),\r\n        y: Reference('float_bounds'),\r\n        z: Reference('float_bounds'),\r\n        absolute: Reference('float_bounds'),\r\n        horizontal: Reference('float_bounds')\r\n    }, { context: 'distance' }));\r\n    schemas.register('entity_predicate', core_1.ObjectNode({\r\n        type: core_1.Opt(StringNode({ validator: 'resource', params: { pool: 'entity_type', allowTag: true } })),\r\n        nbt: core_1.Opt(StringNode({ validator: 'nbt', params: { registry: { category: 'minecraft:entity', id: ['pop', { push: 'type' }] } } })),\r\n        team: core_1.Opt(StringNode({ validator: 'team' })),\r\n        location: core_1.Opt(Reference('location_predicate')),\r\n        stepping_on: core_1.Opt(Reference('location_predicate')),\r\n        distance: core_1.Opt(Reference('distance_predicate')),\r\n        flags: core_1.Opt(core_1.ObjectNode({\r\n            is_on_fire: core_1.Opt(core_1.BooleanNode()),\r\n            is_sneaking: core_1.Opt(core_1.BooleanNode()),\r\n            is_sprinting: core_1.Opt(core_1.BooleanNode()),\r\n            is_swimming: core_1.Opt(core_1.BooleanNode()),\r\n            is_baby: core_1.Opt(core_1.BooleanNode())\r\n        })),\r\n        equipment: core_1.Opt(core_1.MapNode(StringNode({ enum: 'slot' }), Reference('item_predicate'))),\r\n        player: core_1.Opt(Reference('player_predicate')),\r\n        vehicle: core_1.Opt(Reference('entity_predicate')),\r\n        passenger: core_1.Opt(Reference('entity_predicate')),\r\n        targeted_entity: core_1.Opt(Reference('entity_predicate')),\r\n        lightning_bolt: core_1.Opt(core_1.ObjectNode({\r\n            blocks_set_on_fire: core_1.Opt(Reference('int_bounds')),\r\n            entity_struck: core_1.Opt(Reference('entity_predicate'))\r\n        })),\r\n        fishing_hook: core_1.Opt(core_1.ObjectNode({\r\n            in_open_water: core_1.Opt(core_1.BooleanNode())\r\n        })),\r\n        effects: core_1.Opt(core_1.MapNode(StringNode({ validator: 'resource', params: { pool: 'mob_effect' } }), Reference('status_effect_predicate')))\r\n    }, { context: 'entity' }));\r\n    schemas.register('damage_source_predicate', core_1.ObjectNode({\r\n        is_explosion: core_1.Opt(core_1.BooleanNode()),\r\n        is_fire: core_1.Opt(core_1.BooleanNode()),\r\n        is_magic: core_1.Opt(core_1.BooleanNode()),\r\n        is_projectile: core_1.Opt(core_1.BooleanNode()),\r\n        is_lightning: core_1.Opt(core_1.BooleanNode()),\r\n        bypasses_armor: core_1.Opt(core_1.BooleanNode()),\r\n        bypasses_invulnerability: core_1.Opt(core_1.BooleanNode()),\r\n        bypasses_magic: core_1.Opt(core_1.BooleanNode()),\r\n        source_entity: core_1.Opt(Reference('entity_predicate')),\r\n        direct_entity: core_1.Opt(Reference('entity_predicate'))\r\n    }, { context: 'damage_source' }));\r\n    schemas.register('damage_predicate', core_1.ObjectNode({\r\n        dealt: Reference('float_bounds'),\r\n        taken: Reference('float_bounds'),\r\n        blocked: core_1.Opt(core_1.BooleanNode()),\r\n        source_entity: core_1.Opt(Reference('entity_predicate')),\r\n        type: core_1.Opt(Reference('damage_source_predicate'))\r\n    }, { context: 'damage' }));\r\n}\r\nexports.initPredicatesSchemas = initPredicatesSchemas;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.initRecipeSchemas = void 0;\r\nconst core_1 = require(\"@mcschema/core\");\r\nfunction initRecipeSchemas(schemas, collections) {\r\n    const Reference = core_1.Reference.bind(undefined, schemas);\r\n    const StringNode = core_1.StringNode.bind(undefined, collections);\r\n    schemas.register('recipe', core_1.Mod(core_1.ObjectNode({\r\n        type: StringNode({ validator: 'resource', params: { pool: 'recipe_serializer' } }),\r\n        [core_1.Switch]: [{ push: 'type' }],\r\n        [core_1.Case]: {\r\n            'minecraft:crafting_shaped': {\r\n                group: core_1.Opt(StringNode({ enum: 'recipe_group', additional: true })),\r\n                pattern: core_1.ListNode(StringNode()),\r\n                key: core_1.MapNode(StringNode(), // TODO: add validation\r\n                Reference('recipe_ingredient')),\r\n                result: Reference('recipe_result')\r\n            },\r\n            'minecraft:crafting_shapeless': {\r\n                group: core_1.Opt(StringNode()),\r\n                ingredients: core_1.ListNode(Reference('recipe_ingredient')),\r\n                result: Reference('recipe_result')\r\n            },\r\n            'minecraft:smelting': {\r\n                group: core_1.Opt(StringNode()),\r\n                ingredient: Reference('recipe_ingredient'),\r\n                result: StringNode({ validator: 'resource', params: { pool: 'item' } }),\r\n                experience: core_1.Opt(core_1.NumberNode()),\r\n                cookingtime: core_1.Opt(core_1.Mod(core_1.NumberNode({ integer: true }), { default: () => 200 }))\r\n            },\r\n            'minecraft:blasting': {\r\n                group: core_1.Opt(StringNode()),\r\n                ingredient: Reference('recipe_ingredient'),\r\n                result: StringNode({ validator: 'resource', params: { pool: 'item' } }),\r\n                experience: core_1.Opt(core_1.NumberNode()),\r\n                cookingtime: core_1.Opt(core_1.Mod(core_1.NumberNode({ integer: true }), { default: () => 100 }))\r\n            },\r\n            'minecraft:smoking': {\r\n                group: core_1.Opt(StringNode()),\r\n                ingredient: Reference('recipe_ingredient'),\r\n                result: StringNode({ validator: 'resource', params: { pool: 'item' } }),\r\n                experience: core_1.Opt(core_1.NumberNode()),\r\n                cookingtime: core_1.Opt(core_1.Mod(core_1.NumberNode({ integer: true }), { default: () => 100 }))\r\n            },\r\n            'minecraft:campfire_cooking': {\r\n                group: core_1.Opt(StringNode()),\r\n                ingredient: Reference('recipe_ingredient'),\r\n                result: StringNode({ validator: 'resource', params: { pool: 'item' } }),\r\n                experience: core_1.Opt(core_1.NumberNode()),\r\n                cookingtime: core_1.Opt(core_1.Mod(core_1.NumberNode({ integer: true }), { default: () => 100 }))\r\n            },\r\n            'minecraft:stonecutting': {\r\n                group: core_1.Opt(StringNode()),\r\n                ingredient: Reference('recipe_ingredient'),\r\n                result: StringNode({ validator: 'resource', params: { pool: 'item' } }),\r\n                count: core_1.NumberNode({ integer: true })\r\n            },\r\n            'minecraft:smithing': {\r\n                group: core_1.Opt(StringNode()),\r\n                base: Reference('recipe_ingredient_object'),\r\n                addition: Reference('recipe_ingredient_object'),\r\n                result: Reference('recipe_result')\r\n            }\r\n        }\r\n    }, { context: 'recipe' }), {\r\n        default: () => ({\r\n            type: 'minecraft:crafting_shaped'\r\n        })\r\n    }));\r\n    schemas.register('recipe_ingredient', core_1.Mod(core_1.ChoiceNode([\r\n        {\r\n            type: 'object',\r\n            node: Reference('recipe_ingredient_object'),\r\n            change: v => v[0]\r\n        },\r\n        {\r\n            type: 'list',\r\n            node: core_1.ListNode(Reference('recipe_ingredient_object')),\r\n            change: v => [v]\r\n        }\r\n    ]), {\r\n        default: () => ({\r\n            item: 'minecraft:stone'\r\n        })\r\n    }));\r\n    schemas.register('recipe_ingredient_object', core_1.Mod(core_1.ObjectNode({\r\n        item: core_1.Opt(StringNode({ validator: 'resource', params: { pool: 'item' } })),\r\n        tag: core_1.Opt(StringNode({ validator: 'resource', params: { pool: '$tag/item' } }))\r\n    }), {\r\n        default: () => ({\r\n            item: 'minecraft:stone'\r\n        })\r\n    }));\r\n    schemas.register('recipe_result', core_1.Mod(core_1.ObjectNode({\r\n        item: StringNode({ validator: 'resource', params: { pool: 'item' } }),\r\n        count: core_1.Opt(core_1.Mod(core_1.NumberNode({ integer: true }), { default: () => 1 }))\r\n    }), {\r\n        default: () => ({\r\n            item: 'minecraft:stone'\r\n        })\r\n    }));\r\n}\r\nexports.initRecipeSchemas = initRecipeSchemas;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.initTagsSchemas = void 0;\r\nconst core_1 = require(\"@mcschema/core\");\r\nfunction initTagsSchemas(schemas, collections) {\r\n    const StringNode = core_1.StringNode.bind(undefined, collections);\r\n    const TagBase = (type) => core_1.Mod(core_1.ObjectNode({\r\n        replace: core_1.Opt(core_1.BooleanNode()),\r\n        values: core_1.ListNode(core_1.ChoiceNode([\r\n            {\r\n                type: 'string',\r\n                node: StringNode({ validator: 'resource', params: { pool: type, allowTag: true } }),\r\n                change: v => v.id\r\n            },\r\n            {\r\n                type: 'object',\r\n                node: core_1.ObjectNode({\r\n                    id: StringNode({ validator: 'resource', params: { pool: type, allowTag: true, allowUnknown: true } }),\r\n                    required: core_1.BooleanNode()\r\n                }),\r\n                change: v => ({ id: v })\r\n            }\r\n        ])),\r\n    }, { context: 'tag' }), {\r\n        default: () => ({\r\n            values: []\r\n        })\r\n    });\r\n    schemas.register('block_tag', TagBase('block'));\r\n    schemas.register('entity_type_tag', TagBase('entity_type'));\r\n    schemas.register('fluid_tag', TagBase('fluid'));\r\n    schemas.register('function_tag', TagBase('$function'));\r\n    schemas.register('game_event_tag', TagBase('game_event'));\r\n    schemas.register('item_tag', TagBase('item'));\r\n}\r\nexports.initTagsSchemas = initTagsSchemas;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.initTextComponentSchemas = void 0;\r\nconst core_1 = require(\"@mcschema/core\");\r\nfunction initTextComponentSchemas(schemas, collections) {\r\n    const Reference = core_1.Reference.bind(undefined, schemas);\r\n    const StringNode = core_1.StringNode.bind(undefined, collections);\r\n    const getSimpleString = (v) => { var _a; return v instanceof Array ? getSimpleString(v[0]) : (_a = v === null || v === void 0 ? void 0 : v.text) !== null && _a !== void 0 ? _a : (typeof v === 'object' ? '' : v === null || v === void 0 ? void 0 : v.toString()); };\r\n    schemas.register('text_component', core_1.Mod(core_1.ChoiceNode([\r\n        {\r\n            type: 'object',\r\n            node: Reference('text_component_object'),\r\n            change: v => v instanceof Array ? (typeof v[0] === 'object' ? v[0] : { text: getSimpleString(v[0]) }) : typeof v === 'object' ? v : { text: getSimpleString(v) }\r\n        },\r\n        {\r\n            type: 'list',\r\n            node: Reference('text_component_list'),\r\n            change: v => [v]\r\n        },\r\n        {\r\n            type: 'string',\r\n            priority: 1,\r\n            node: StringNode(),\r\n            change: getSimpleString\r\n        },\r\n        {\r\n            type: 'number',\r\n            node: core_1.NumberNode(),\r\n            change: v => {\r\n                const n = parseFloat(getSimpleString(v));\r\n                return isFinite(n) ? n : (!!v ? 1 : 0);\r\n            }\r\n        },\r\n        {\r\n            type: 'boolean',\r\n            node: core_1.BooleanNode(),\r\n            change: v => {\r\n                const s = getSimpleString(v);\r\n                return s === 'true' || s === 'false' ? s === 'true' : !!s;\r\n            }\r\n        }\r\n    ], { context: 'text_component' }), {\r\n        default: () => ({\r\n            text: \"\"\r\n        })\r\n    }));\r\n    const CommonFields = {\r\n        color: core_1.Opt(StringNode()) /* TODO */,\r\n        font: core_1.Opt(StringNode()),\r\n        bold: core_1.Opt(core_1.BooleanNode()),\r\n        italic: core_1.Opt(core_1.BooleanNode()),\r\n        underlined: core_1.Opt(core_1.BooleanNode()),\r\n        strikethrough: core_1.Opt(core_1.BooleanNode()),\r\n        obfuscated: core_1.Opt(core_1.BooleanNode()),\r\n        insertion: core_1.Opt(StringNode()),\r\n        clickEvent: core_1.Opt(core_1.ObjectNode({\r\n            action: StringNode({ enum: ['open_url', 'open_file', 'run_command', 'suggest_command', 'change_page', 'copy_to_clipboard'] }),\r\n            [core_1.Switch]: [{ push: 'action' }],\r\n            [core_1.Case]: {\r\n                'change_page': {\r\n                    value: StringNode()\r\n                },\r\n                'copy_to_clipboard': {\r\n                    value: StringNode()\r\n                },\r\n                'open_file': {\r\n                    value: StringNode()\r\n                },\r\n                'open_url': {\r\n                    value: StringNode()\r\n                },\r\n                'run_command': {\r\n                    value: StringNode({ validator: 'command', params: { leadingSlash: true, allowPartial: true } })\r\n                },\r\n                'suggest_command': {\r\n                    value: StringNode({ validator: 'command', params: { leadingSlash: true, allowPartial: true } })\r\n                }\r\n            }\r\n        })),\r\n        hoverEvent: core_1.Opt(core_1.ObjectNode({\r\n            action: StringNode({ enum: ['show_text', 'show_item', 'show_entity'] }),\r\n            [core_1.Switch]: [{ push: 'action' }],\r\n            [core_1.Case]: {\r\n                'show_text': {\r\n                    value: core_1.Opt(Reference('text_component')),\r\n                    contents: core_1.Opt(Reference('text_component'))\r\n                },\r\n                'show_item': {\r\n                    value: core_1.Opt(StringNode({ validator: 'nbt', params: { module: 'util::InventoryItem' } })),\r\n                    contents: core_1.Opt(core_1.ObjectNode({\r\n                        id: StringNode({ validator: 'resource', params: { pool: 'item' } }),\r\n                        count: core_1.Opt(core_1.NumberNode({ integer: true })),\r\n                        tag: core_1.Opt(StringNode({ validator: 'nbt', params: { registry: { category: 'minecraft:item', id: ['pop', { push: 'id' }] } } }))\r\n                    }))\r\n                },\r\n                'show_entity': {\r\n                    value: core_1.Opt(core_1.ObjectNode({\r\n                        name: core_1.Opt(StringNode()),\r\n                        type: core_1.Opt(StringNode()),\r\n                        id: core_1.Opt(StringNode())\r\n                    })),\r\n                    contents: core_1.Opt(core_1.Mod(core_1.ObjectNode({\r\n                        name: core_1.Opt(Reference('text_component')),\r\n                        type: StringNode({ validator: 'resource', params: { pool: 'entity_type' } }),\r\n                        id: StringNode({ validator: 'uuid' })\r\n                    }), {\r\n                        default: () => ({\r\n                            type: 'minecraft:pig',\r\n                            id: '00000001-0001-0001-0001-000000000001'\r\n                        })\r\n                    }))\r\n                }\r\n            }\r\n        })),\r\n        extra: core_1.Opt(Reference('text_component_list'))\r\n    };\r\n    schemas.register('text_component_object', core_1.Mod(core_1.ChoiceNode([\r\n        {\r\n            type: 'text',\r\n            match: v => typeof v === 'object',\r\n            change: v => ({ text: '' }),\r\n            priority: -1,\r\n            node: core_1.ObjectNode({\r\n                text: StringNode(),\r\n                ...CommonFields\r\n            })\r\n        },\r\n        {\r\n            type: 'translation',\r\n            match: v => (v === null || v === void 0 ? void 0 : v.translate) !== undefined,\r\n            change: v => ({ translate: '' }),\r\n            node: core_1.ObjectNode({\r\n                translate: StringNode(),\r\n                with: core_1.Opt(Reference('text_component_list')),\r\n                ...CommonFields\r\n            })\r\n        },\r\n        {\r\n            type: 'score',\r\n            match: v => (v === null || v === void 0 ? void 0 : v.score) !== undefined,\r\n            change: v => ({ score: {} }),\r\n            node: core_1.ObjectNode({\r\n                score: core_1.ObjectNode({\r\n                    name: StringNode({ validator: 'entity', params: { amount: 'single', type: 'entities', isScoreHolder: true } }),\r\n                    objective: StringNode({ validator: 'objective' }),\r\n                    value: core_1.Opt(StringNode())\r\n                }),\r\n                ...CommonFields\r\n            })\r\n        },\r\n        {\r\n            type: 'selector',\r\n            match: v => (v === null || v === void 0 ? void 0 : v.selector) !== undefined,\r\n            change: v => ({ selector: '' }),\r\n            node: core_1.ObjectNode({\r\n                selector: StringNode({ validator: 'entity', params: { amount: 'multiple', type: 'entities' } }),\r\n                separator: core_1.Opt(Reference('text_component')),\r\n                ...CommonFields\r\n            })\r\n        },\r\n        {\r\n            type: 'keybind',\r\n            match: v => (v === null || v === void 0 ? void 0 : v.keybind) !== undefined,\r\n            change: v => ({ keybind: '' }),\r\n            node: core_1.ObjectNode({\r\n                keybind: StringNode({ enum: 'keybind', additional: true }),\r\n                ...CommonFields\r\n            })\r\n        },\r\n        {\r\n            type: 'nbt',\r\n            match: v => (v === null || v === void 0 ? void 0 : v.nbt) !== undefined,\r\n            change: v => ({ nbt: '' }),\r\n            node: core_1.ObjectNode({\r\n                nbt: StringNode({ validator: 'nbt_path' }),\r\n                block: core_1.Opt(StringNode({ validator: 'vector', params: { dimension: 3, isInteger: true } })),\r\n                entity: core_1.Opt(StringNode({ validator: 'entity', params: { amount: 'multiple', type: 'entities' } })),\r\n                storage: core_1.Opt(StringNode({ validator: 'resource', params: { pool: '$storage' } })),\r\n                interpret: core_1.Opt(core_1.BooleanNode()),\r\n                separator: core_1.Opt(Reference('text_component')),\r\n                ...CommonFields\r\n            })\r\n        }\r\n    ], { context: 'text_component_object', choiceContext: 'text_component.object' }), {\r\n        default: () => ({\r\n            text: \"\"\r\n        })\r\n    }));\r\n    schemas.register('text_component_list', core_1.Mod(core_1.ListNode(Reference('text_component')), {\r\n        default: () => [{\r\n                text: \"\"\r\n            }]\r\n    }));\r\n}\r\nexports.initTextComponentSchemas = initTextComponentSchemas;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.initBiomeSchemas = void 0;\r\nconst core_1 = require(\"@mcschema/core\");\r\nfunction initBiomeSchemas(schemas, collections) {\r\n    const StringNode = core_1.StringNode.bind(undefined, collections);\r\n    schemas.register('biome', core_1.Mod(core_1.ObjectNode({\r\n        surface_builder: StringNode({ validator: 'resource', params: { pool: '$worldgen/configured_surface_builder' } }),\r\n        depth: core_1.NumberNode(),\r\n        scale: core_1.NumberNode(),\r\n        temperature: core_1.NumberNode(),\r\n        downfall: core_1.NumberNode(),\r\n        precipitation: StringNode({ enum: ['none', 'rain', 'snow'] }),\r\n        temperature_modifier: core_1.Opt(StringNode({ enum: ['none', 'frozen'] })),\r\n        category: StringNode({ enum: 'biome_category' }),\r\n        player_spawn_friendly: core_1.Opt(core_1.BooleanNode()),\r\n        creature_spawn_probability: core_1.Opt(core_1.NumberNode({ min: 0, max: 1 })),\r\n        effects: core_1.ObjectNode({\r\n            sky_color: core_1.NumberNode({ color: true }),\r\n            fog_color: core_1.NumberNode({ color: true }),\r\n            water_color: core_1.NumberNode({ color: true }),\r\n            water_fog_color: core_1.NumberNode({ color: true }),\r\n            grass_color: core_1.Opt(core_1.NumberNode({ color: true })),\r\n            foliage_color: core_1.Opt(core_1.NumberNode({ color: true })),\r\n            grass_color_modifier: core_1.Opt(StringNode({ enum: ['none', 'dark_forest', 'swamp'] })),\r\n            ambient_sound: core_1.Opt(StringNode()),\r\n            mood_sound: core_1.Opt(core_1.ObjectNode({\r\n                sound: StringNode(),\r\n                tick_delay: core_1.NumberNode({ integer: true }),\r\n                block_search_extent: core_1.NumberNode({ integer: true }),\r\n                offset: core_1.NumberNode()\r\n            })),\r\n            additions_sound: core_1.Opt(core_1.ObjectNode({\r\n                sound: StringNode(),\r\n                tick_chance: core_1.NumberNode({ min: 0, max: 1 })\r\n            })),\r\n            music: core_1.Opt(core_1.ObjectNode({\r\n                sound: StringNode(),\r\n                min_delay: core_1.NumberNode({ integer: true, min: 0 }),\r\n                max_delay: core_1.NumberNode({ integer: true, min: 0 }),\r\n                replace_current_music: core_1.BooleanNode()\r\n            })),\r\n            particle: core_1.Opt(core_1.ObjectNode({\r\n                options: core_1.ObjectNode({\r\n                    type: StringNode()\r\n                }),\r\n                probability: core_1.NumberNode({ min: 0, max: 1 })\r\n            }))\r\n        }),\r\n        starts: core_1.ListNode(StringNode({ validator: 'resource', params: { pool: '$worldgen/configured_structure_feature' } })),\r\n        spawners: core_1.MapNode(StringNode({ enum: [\r\n                'monster',\r\n                'creature',\r\n                'ambient',\r\n                'underground_water_creature',\r\n                'water_creature',\r\n                'water_ambient',\r\n                'misc'\r\n            ] }), core_1.Mod(core_1.ListNode(core_1.ObjectNode({\r\n            type: StringNode({ validator: 'resource', params: { pool: 'entity_type' } }),\r\n            weight: core_1.NumberNode({ integer: true }),\r\n            minCount: core_1.NumberNode({ integer: true }),\r\n            maxCount: core_1.NumberNode({ integer: true })\r\n        })), {\r\n            category: () => 'pool',\r\n            default: () => [{\r\n                    type: 'minecraft:bat',\r\n                    weight: 1\r\n                }]\r\n        })),\r\n        spawn_costs: core_1.MapNode(StringNode({ validator: 'resource', params: { pool: 'entity_type' } }), core_1.Mod(core_1.ObjectNode({\r\n            energy_budget: core_1.NumberNode(),\r\n            charge: core_1.NumberNode()\r\n        }, { category: 'function' }), {\r\n            default: () => ({\r\n                energy_budget: 0.12,\r\n                charge: 1.0\r\n            })\r\n        })),\r\n        carvers: core_1.MapNode(StringNode({ enum: ['air', 'liquid'] }), core_1.Mod(core_1.ListNode(StringNode({ validator: 'resource', params: { pool: '$worldgen/configured_carver' } })), {\r\n            default: () => ['minecraft:cave']\r\n        })),\r\n        features: core_1.ListNode(core_1.Mod(core_1.ListNode(StringNode({ validator: 'resource', params: { pool: '$worldgen/configured_feature' } })), { category: () => 'predicate' }), { maxLength: 10 })\r\n    }, { context: 'biome' }), {\r\n        default: () => ({\r\n            surface_builder: 'minecraft:grass',\r\n            depth: 0.125,\r\n            scale: 0.05,\r\n            temperature: 0.8,\r\n            downfall: 0.4,\r\n            precipitation: 'rain',\r\n            category: 'plains',\r\n            effects: {\r\n                sky_color: 7907327,\r\n                fog_color: 12638463,\r\n                water_color: 4159204,\r\n                water_fog_color: 329011\r\n            }\r\n        })\r\n    }));\r\n}\r\nexports.initBiomeSchemas = initBiomeSchemas;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.initCarverSchemas = void 0;\r\nconst core_1 = require(\"@mcschema/core\");\r\nconst Common_1 = require(\"../Common\");\r\nfunction initCarverSchemas(schemas, collections) {\r\n    const Reference = core_1.Reference.bind(undefined, schemas);\r\n    const StringNode = core_1.StringNode.bind(undefined, collections);\r\n    const CanyonConfig = {\r\n        vertical_rotation: Common_1.FloatProvider(),\r\n        shape: core_1.ObjectNode({\r\n            distance_factor: Common_1.FloatProvider(),\r\n            thickness: Common_1.FloatProvider(),\r\n            width_smoothness: core_1.NumberNode({ integer: true, min: 0 }),\r\n            horizontal_radius_factor: Common_1.FloatProvider(),\r\n            vertical_radius_default_factor: core_1.NumberNode(),\r\n            vertical_radius_center_factor: core_1.NumberNode()\r\n        })\r\n    };\r\n    const CaveConfig = {\r\n        horizontal_radius_multiplier: Common_1.FloatProvider(),\r\n        vertical_radius_multiplier: Common_1.FloatProvider(),\r\n        floor_level: Common_1.FloatProvider({ min: -1, max: 1 }),\r\n    };\r\n    schemas.register('configured_carver', core_1.Mod(core_1.ObjectNode({\r\n        type: StringNode({ validator: 'resource', params: { pool: 'worldgen/carver' } }),\r\n        config: core_1.ObjectNode({\r\n            probability: core_1.NumberNode({ min: 0, max: 1 }),\r\n            y: Reference('height_provider'),\r\n            yScale: Common_1.FloatProvider(),\r\n            lava_level: Reference('vertical_anchor'),\r\n            aquifers_enabled: core_1.BooleanNode(),\r\n            debug_settings: core_1.Opt(core_1.ObjectNode({\r\n                debug_mode: core_1.Opt(core_1.BooleanNode()),\r\n                air_state: core_1.Opt(Reference('block_state')),\r\n                water_state: core_1.Opt(Reference('block_state')),\r\n                lava_state: core_1.Opt(Reference('block_state')),\r\n                barrier_state: core_1.Opt(Reference('block_state'))\r\n            })),\r\n            [core_1.Switch]: ['pop', { push: 'type' }],\r\n            [core_1.Case]: {\r\n                'minecraft:canyon': CanyonConfig,\r\n                'minecraft:cave': CaveConfig,\r\n                'minecraft:nether_cave': CaveConfig\r\n            },\r\n        })\r\n    }, { context: 'carver' }), {\r\n        default: () => ({\r\n            type: 'minecraft:cave',\r\n            config: {\r\n                probability: 0.1\r\n            }\r\n        })\r\n    }));\r\n}\r\nexports.initCarverSchemas = initCarverSchemas;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.initDecoratorSchemas = void 0;\r\nconst core_1 = require(\"@mcschema/core\");\r\nconst Common_1 = require(\"../Common\");\r\nfunction initDecoratorSchemas(schemas, collections) {\r\n    const Reference = core_1.Reference.bind(undefined, schemas);\r\n    const StringNode = core_1.StringNode.bind(undefined, collections);\r\n    const CountConfig = {\r\n        count: Common_1.IntProvider({ min: 0, max: 256 })\r\n    };\r\n    schemas.register('configured_decorator', core_1.ObjectNode({\r\n        type: StringNode({ validator: 'resource', params: { pool: 'worldgen/decorator' } }),\r\n        config: core_1.ObjectNode({\r\n            [core_1.Switch]: ['pop', { push: 'type' }],\r\n            [core_1.Case]: {\r\n                'minecraft:carving_mask': {\r\n                    step: StringNode({ enum: 'generation_step' })\r\n                },\r\n                'minecraft:cave_surface': {\r\n                    surface: StringNode({ enum: ['floor', 'ceiling'] }),\r\n                    floor_to_ceiling_search_range: core_1.NumberNode({ integer: true })\r\n                },\r\n                'minecraft:chance': {\r\n                    chance: core_1.NumberNode({ integer: true, min: 0 })\r\n                },\r\n                'minecraft:count': CountConfig,\r\n                'minecraft:count_extra': {\r\n                    count: core_1.NumberNode({ integer: true, min: 0 }),\r\n                    extra_count: core_1.NumberNode({ integer: true, min: 0 }),\r\n                    extra_chance: core_1.NumberNode({ min: 0, max: 1 })\r\n                },\r\n                'minecraft:count_multilayer': CountConfig,\r\n                'minecraft:count_noise': {\r\n                    noise_level: core_1.NumberNode(),\r\n                    below_noise: core_1.NumberNode({ integer: true }),\r\n                    above_noise: core_1.NumberNode({ integer: true })\r\n                },\r\n                'minecraft:count_noise_biased': {\r\n                    noise_to_count_ratio: core_1.NumberNode({ integer: true }),\r\n                    noise_factor: core_1.NumberNode(),\r\n                    noise_offset: core_1.Opt(core_1.NumberNode())\r\n                },\r\n                'minecraft:decorated': {\r\n                    outer: Reference('configured_decorator'),\r\n                    inner: Reference('configured_decorator')\r\n                },\r\n                'minecraft:heightmap': {\r\n                    heightmap: StringNode({ enum: 'heightmap_type' })\r\n                },\r\n                'minecraft:heightmap_spread_double': {\r\n                    heightmap: StringNode({ enum: 'heightmap_type' })\r\n                },\r\n                'minecraft:lava_lake': {\r\n                    chance: core_1.NumberNode({ integer: true, min: 0 })\r\n                },\r\n                'minecraft:range': {\r\n                    height: Reference('height_provider')\r\n                },\r\n                'minecraft:water_depth_threshold': {\r\n                    max_water_depth: core_1.NumberNode({ integer: true })\r\n                }\r\n            }\r\n        }, { context: 'decorator', category: 'predicate' })\r\n    }, { context: 'decorator', category: 'predicate' }));\r\n}\r\nexports.initDecoratorSchemas = initDecoratorSchemas;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.initProcessorListSchemas = exports.Processors = void 0;\r\nconst core_1 = require(\"@mcschema/core\");\r\nfunction initProcessorListSchemas(schemas, collections) {\r\n    const Reference = core_1.Reference.bind(undefined, schemas);\r\n    const StringNode = core_1.StringNode.bind(undefined, collections);\r\n    exports.Processors = core_1.ChoiceNode([\r\n        {\r\n            type: 'string',\r\n            node: StringNode({ validator: 'resource', params: { pool: '$worldgen/processor_list' } }),\r\n            change: v => undefined\r\n        },\r\n        {\r\n            type: 'object',\r\n            node: Reference('processor_list'),\r\n            change: v => ({\r\n                processors: [{\r\n                        \"processor_type\": \"minecraft:nop\"\r\n                    }]\r\n            })\r\n        }\r\n    ]);\r\n    schemas.register('processor_list', core_1.Mod(core_1.ObjectNode({\r\n        processors: core_1.ListNode(Reference('processor'))\r\n    }, { context: 'processor_list' }), {\r\n        default: () => ({\r\n            processors: [{\r\n                    processor_type: 'minecraft:rule',\r\n                    rules: [{\r\n                            location_predicate: {\r\n                                predicate_type: 'minecraft:always_true'\r\n                            },\r\n                            input_predicate: {\r\n                                predicate_type: 'minecraft:always_true'\r\n                            }\r\n                        }]\r\n                }]\r\n        })\r\n    }));\r\n    schemas.register('processor', core_1.Mod(core_1.ObjectNode({\r\n        processor_type: StringNode({ validator: 'resource', params: { pool: 'worldgen/structure_processor' } }),\r\n        [core_1.Switch]: [{ push: 'processor_type' }],\r\n        [core_1.Case]: {\r\n            'minecraft:block_age': {\r\n                mossiness: core_1.NumberNode()\r\n            },\r\n            'minecraft:block_ignore': {\r\n                blocks: core_1.ListNode(Reference('block_state'))\r\n            },\r\n            'minecraft:block_rot': {\r\n                integrity: core_1.NumberNode({ min: 0, max: 1 })\r\n            },\r\n            'minecraft:gravity': {\r\n                heightmap: StringNode({ enum: 'heightmap_type' }),\r\n                offset: core_1.NumberNode({ integer: true })\r\n            },\r\n            'minecraft:protected_blocks': {\r\n                value: StringNode({ validator: 'resource', params: { pool: '$tag/block' } })\r\n            },\r\n            'minecraft:rule': {\r\n                rules: core_1.ListNode(Reference('processor_rule'))\r\n            }\r\n        }\r\n    }, { category: 'function', context: 'processor' }), {\r\n        default: () => ({\r\n            processor_type: 'minecraft:rule',\r\n            rules: [{\r\n                    location_predicate: {\r\n                        predicate_type: 'minecraft:always_true'\r\n                    },\r\n                    input_predicate: {\r\n                        predicate_type: 'minecraft:always_true'\r\n                    }\r\n                }]\r\n        })\r\n    }));\r\n    schemas.register('processor_rule', core_1.Mod(core_1.ObjectNode({\r\n        position_predicate: core_1.Opt(Reference('pos_rule_test')),\r\n        location_predicate: Reference('rule_test'),\r\n        input_predicate: Reference('rule_test'),\r\n        output_state: Reference('block_state'),\r\n        output_nbt: core_1.Opt(StringNode({ validator: 'nbt', params: { registry: { category: 'minecraft:block' } } }))\r\n    }, { category: 'predicate', context: 'processor_rule' }), {\r\n        default: () => ({\r\n            location_predicate: {\r\n                predicate_type: 'minecraft:always_true'\r\n            },\r\n            input_predicate: {\r\n                predicate_type: 'minecraft:always_true'\r\n            }\r\n        })\r\n    }));\r\n    const posTestFields = {\r\n        min_dist: core_1.Opt(core_1.NumberNode({ min: 0, max: 255, integer: true })),\r\n        max_dist: core_1.Opt(core_1.NumberNode({ min: 0, max: 255, integer: true })),\r\n        min_chance: core_1.Opt(core_1.NumberNode({ min: 0, max: 1 })),\r\n        max_chance: core_1.Opt(core_1.NumberNode({ min: 0, max: 1 }))\r\n    };\r\n    schemas.register('pos_rule_test', core_1.ObjectNode({\r\n        predicate_type: StringNode({ validator: 'resource', params: { pool: 'pos_rule_test' } }),\r\n        [core_1.Switch]: [{ push: 'predicate_type' }],\r\n        [core_1.Case]: {\r\n            'minecraft:axis_aligned_linear_pos': {\r\n                axis: StringNode({ enum: ['x', 'y', 'z'] }),\r\n                ...posTestFields\r\n            },\r\n            'minecraft:linear_pos': posTestFields\r\n        }\r\n    }, { context: 'pos_rule_test', disableSwitchContext: true }));\r\n    schemas.register('rule_test', core_1.ObjectNode({\r\n        predicate_type: StringNode({ validator: 'resource', params: { pool: 'rule_test' } }),\r\n        [core_1.Switch]: [{ push: 'predicate_type' }],\r\n        [core_1.Case]: {\r\n            'minecraft:block_match': {\r\n                block: StringNode({ validator: 'resource', params: { pool: 'block' } })\r\n            },\r\n            'minecraft:blockstate_match': {\r\n                block_state: Reference('block_state')\r\n            },\r\n            'minecraft:random_block_match': {\r\n                block: StringNode({ validator: 'resource', params: { pool: 'block' } }),\r\n                probability: core_1.NumberNode({ min: 0, max: 1 })\r\n            },\r\n            'minecraft:random_blockstate_match': {\r\n                block_state: Reference('block_state'),\r\n                probability: core_1.NumberNode({ min: 0, max: 1 })\r\n            },\r\n            'minecraft:tag_match': {\r\n                tag: StringNode({ validator: 'resource', params: { pool: '$tag/block' } })\r\n            }\r\n        }\r\n    }, { context: 'rule_test', disableSwitchContext: true }));\r\n}\r\nexports.initProcessorListSchemas = initProcessorListSchemas;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.initFeatureSchemas = void 0;\r\nconst core_1 = require(\"@mcschema/core\");\r\nconst Common_1 = require(\"../Common\");\r\nrequire(\"./Decorator\");\r\nrequire(\"./ProcessorList\");\r\nconst ProcessorList_1 = require(\"./ProcessorList\");\r\nfunction initFeatureSchemas(schemas, collections) {\r\n    const Reference = core_1.Reference.bind(undefined, schemas);\r\n    const StringNode = core_1.StringNode.bind(undefined, collections);\r\n    const RandomPatchConfig = {\r\n        can_replace: core_1.Opt(core_1.BooleanNode()),\r\n        project: core_1.Opt(core_1.BooleanNode()),\r\n        need_water: core_1.Opt(core_1.BooleanNode()),\r\n        xspread: core_1.Opt(core_1.NumberNode({ integer: true, min: 0 })),\r\n        yspread: core_1.Opt(core_1.NumberNode({ integer: true, min: 0 })),\r\n        zspread: core_1.Opt(core_1.NumberNode({ integer: true, min: 0 })),\r\n        tries: core_1.Opt(core_1.NumberNode({ integer: true, min: 1 })),\r\n        state_provider: Reference('block_state_provider'),\r\n        block_placer: Reference('block_placer'),\r\n        whitelist: core_1.ListNode(Reference('block_state')),\r\n        blacklist: core_1.ListNode(Reference('block_state'))\r\n    };\r\n    const DiskConfig = {\r\n        state: Reference('block_state'),\r\n        radius: Common_1.IntProvider({ min: 0, max: 8 }),\r\n        half_height: core_1.NumberNode({ integer: true, min: 0, max: 4 }),\r\n        targets: core_1.ListNode(Reference('block_state'))\r\n    };\r\n    const HugeMushroomConfig = {\r\n        cap_provider: Reference('block_state_provider'),\r\n        stem_provider: Reference('block_state_provider'),\r\n        foliage_radius: core_1.Opt(core_1.NumberNode({ integer: true }))\r\n    };\r\n    const TargetBlockState = core_1.ObjectNode({\r\n        target: Reference('rule_test'),\r\n        state: Reference('block_state')\r\n    });\r\n    const OreConfig = {\r\n        size: core_1.NumberNode({ integer: true, min: 0, max: 64 }),\r\n        discard_chance_on_air_exposure: core_1.NumberNode({ min: 0, max: 1 }),\r\n        targets: core_1.ListNode(TargetBlockState)\r\n    };\r\n    const Feature = core_1.ChoiceNode([\r\n        {\r\n            type: 'string',\r\n            node: StringNode({ validator: 'resource', params: { pool: '$worldgen/configured_feature' } })\r\n        },\r\n        {\r\n            type: 'object',\r\n            node: Reference('configured_feature')\r\n        }\r\n    ], { choiceContext: 'feature' });\r\n    const VegetationPatchConfig = {\r\n        surface: StringNode({ enum: ['floor', 'ceiling'] }),\r\n        depth: Common_1.IntProvider({ min: 1, max: 128 }),\r\n        vertical_range: core_1.NumberNode({ integer: true, min: 1, max: 256 }),\r\n        extra_bottom_block_chance: core_1.NumberNode({ min: 0, max: 1 }),\r\n        extra_edge_column_chance: core_1.NumberNode({ min: 0, max: 1 }),\r\n        vegetation_chance: core_1.NumberNode({ min: 0, max: 1 }),\r\n        xz_radius: Common_1.IntProvider(),\r\n        replaceable: StringNode({ validator: 'resource', params: { pool: '$tag/block' } }),\r\n        ground_state: Reference('block_state_provider'),\r\n        vegetation_feature: Feature\r\n    };\r\n    schemas.register('configured_feature', core_1.Mod(core_1.ObjectNode({\r\n        type: StringNode({ validator: 'resource', params: { pool: 'worldgen/feature' } }),\r\n        config: core_1.ObjectNode({\r\n            [core_1.Switch]: ['pop', { push: 'type' }],\r\n            [core_1.Case]: {\r\n                'minecraft:bamboo': {\r\n                    probability: core_1.NumberNode({ min: 0, max: 1 })\r\n                },\r\n                'minecraft:basalt_columns': {\r\n                    reach: Common_1.IntProvider({ min: 0, max: 3 }),\r\n                    height: Common_1.IntProvider({ min: 1, max: 10 })\r\n                },\r\n                'minecraft:block_pile': {\r\n                    state_provider: Reference('block_state_provider')\r\n                },\r\n                'minecraft:decorated': {\r\n                    decorator: Reference('configured_decorator'),\r\n                    feature: Feature\r\n                },\r\n                'minecraft:decorated_flower': {\r\n                    decorator: Reference('configured_decorator'),\r\n                    feature: Feature\r\n                },\r\n                'minecraft:delta_feature': {\r\n                    contents: Reference('block_state'),\r\n                    rim: Reference('block_state'),\r\n                    size: Common_1.IntProvider({ min: 0, max: 16 }),\r\n                    rim_size: Common_1.IntProvider({ min: 0, max: 16 })\r\n                },\r\n                'minecraft:disk': DiskConfig,\r\n                'minecraft:dripstone_cluster': {\r\n                    floor_to_ceiling_search_range: core_1.NumberNode({ integer: true, min: 1, max: 512 }),\r\n                    height: Common_1.IntProvider({ min: 0, max: 128 }),\r\n                    radius: Common_1.IntProvider({ min: 0, max: 128 }),\r\n                    max_stalagmite_stalactite_height_diff: core_1.NumberNode({ integer: true, min: 0, max: 64 }),\r\n                    height_deviation: core_1.NumberNode({ integer: true, min: 1, max: 64 }),\r\n                    dripstone_block_layer_thickness: Common_1.IntProvider({ min: 0, max: 128 }),\r\n                    density: Common_1.FloatProvider({ min: 0, max: 2 }),\r\n                    wetness: Common_1.FloatProvider({ min: 0, max: 2 }),\r\n                    chance_of_dripstone_column_at_max_distance_from_center: core_1.NumberNode({ min: 0, max: 1 }),\r\n                    max_distance_from_edge_affecting_chance_of_dripstone_column: core_1.NumberNode({ integer: true, min: 1, max: 64 }),\r\n                    max_distance_from_center_affecting_height_bias: core_1.NumberNode({ integer: true, min: 1, max: 64 })\r\n                },\r\n                'minecraft:end_gateway': {\r\n                    exact: core_1.BooleanNode(),\r\n                    exit: core_1.Opt(Reference('block_pos'))\r\n                },\r\n                'minecraft:end_spike': {\r\n                    crystal_invulnerable: core_1.Opt(core_1.BooleanNode()),\r\n                    crystal_beam_target: core_1.Opt(Reference('block_pos')),\r\n                    spikes: core_1.ListNode(core_1.ObjectNode({\r\n                        centerX: core_1.Opt(core_1.NumberNode({ integer: true })),\r\n                        centerZ: core_1.Opt(core_1.NumberNode({ integer: true })),\r\n                        radius: core_1.Opt(core_1.NumberNode({ integer: true })),\r\n                        height: core_1.Opt(core_1.NumberNode({ integer: true })),\r\n                        guarded: core_1.Opt(core_1.BooleanNode())\r\n                    }))\r\n                },\r\n                'minecraft:fill_layer': {\r\n                    state: Reference('block_state'),\r\n                    height: core_1.NumberNode({ integer: true, min: 0, max: 255 })\r\n                },\r\n                'minecraft:flower': RandomPatchConfig,\r\n                'minecraft:forest_rock': {\r\n                    state: Reference('block_state')\r\n                },\r\n                'minecraft:fossil': {\r\n                    max_empty_corners_allowed: core_1.NumberNode({ integer: true, min: 0, max: 7 }),\r\n                    fossil_structures: core_1.ListNode(StringNode({ validator: 'resource', params: { pool: '$structure' } })),\r\n                    overlay_structures: core_1.ListNode(StringNode({ validator: 'resource', params: { pool: '$structure' } })),\r\n                    fossil_processors: ProcessorList_1.Processors,\r\n                    overlay_processors: ProcessorList_1.Processors,\r\n                },\r\n                'minecraft:geode': {\r\n                    blocks: core_1.ObjectNode({\r\n                        filling_provider: Reference('block_state_provider'),\r\n                        inner_layer_provider: Reference('block_state_provider'),\r\n                        alternate_inner_layer_provider: Reference('block_state_provider'),\r\n                        middle_layer_provider: Reference('block_state_provider'),\r\n                        outer_layer_provider: Reference('block_state_provider'),\r\n                        inner_placements: core_1.ListNode(Reference('block_state')),\r\n                        cannot_replace: StringNode({ validator: 'resource', params: { pool: '$tag/block' } }),\r\n                        invalid_blocks: StringNode({ validator: 'resource', params: { pool: '$tag/block' } })\r\n                    }),\r\n                    layers: core_1.ObjectNode({\r\n                        filling: core_1.Opt(core_1.NumberNode({ min: 0.01, max: 50 })),\r\n                        inner_layer: core_1.Opt(core_1.NumberNode({ min: 0.01, max: 50 })),\r\n                        middle_layer: core_1.Opt(core_1.NumberNode({ min: 0.01, max: 50 })),\r\n                        outer_layer: core_1.Opt(core_1.NumberNode({ min: 0.01, max: 50 })),\r\n                    }),\r\n                    crack: core_1.ObjectNode({\r\n                        generate_crack_chance: core_1.Opt(core_1.NumberNode({ min: 0, max: 1 })),\r\n                        base_crack_size: core_1.Opt(core_1.NumberNode({ min: 0, max: 5 })),\r\n                        crack_point_offset: core_1.Opt(core_1.NumberNode({ min: 0, max: 10, integer: true })),\r\n                    }),\r\n                    noise_multiplier: core_1.Opt(core_1.NumberNode({ min: 0, max: 1 })),\r\n                    use_potential_placements_chance: core_1.Opt(core_1.NumberNode({ min: 0, max: 1 })),\r\n                    use_alternate_layer0_chance: core_1.Opt(core_1.NumberNode({ min: 0, max: 1 })),\r\n                    placements_require_layer0_alternate: core_1.Opt(core_1.BooleanNode()),\r\n                    outer_wall_distance: core_1.Opt(Common_1.IntProvider({ min: 1, max: 20 })),\r\n                    distribution_points: core_1.Opt(Common_1.IntProvider({ min: 1, max: 20 })),\r\n                    point_offset: core_1.Opt(Common_1.IntProvider({ min: 0, max: 10 })),\r\n                    min_gen_offset: core_1.Opt(core_1.NumberNode({ integer: true })),\r\n                    max_gen_offset: core_1.Opt(core_1.NumberNode({ integer: true })),\r\n                    invalid_blocks_threshold: core_1.NumberNode({ integer: true })\r\n                },\r\n                'minecraft:glow_lichen': {\r\n                    search_range: core_1.Opt(core_1.NumberNode({ min: 1, max: 64, integer: true })),\r\n                    chance_of_spreading: core_1.Opt(core_1.NumberNode({ min: 0, max: 1 })),\r\n                    can_place_on_floor: core_1.Opt(core_1.BooleanNode()),\r\n                    can_place_on_ceiling: core_1.Opt(core_1.BooleanNode()),\r\n                    can_place_on_wall: core_1.Opt(core_1.BooleanNode()),\r\n                    can_be_placed_on: core_1.ListNode(Reference('block_state'))\r\n                },\r\n                'minecraft:growing_plant': {\r\n                    direction: StringNode({ enum: ['up', 'down', 'north', 'east', 'south', 'west'] }),\r\n                    allow_water: core_1.BooleanNode(),\r\n                    height_distribution: core_1.ListNode(core_1.ObjectNode({\r\n                        weight: core_1.NumberNode({ integer: true }),\r\n                        data: Common_1.IntProvider()\r\n                    })),\r\n                    body_provider: Reference('block_state_provider'),\r\n                    head_provider: Reference('block_state_provider')\r\n                },\r\n                'minecraft:huge_brown_mushroom': HugeMushroomConfig,\r\n                'minecraft:huge_fungus': {\r\n                    hat_state: Reference('block_state'),\r\n                    decor_state: Reference('block_state'),\r\n                    stem_state: Reference('block_state'),\r\n                    valid_base_block: Reference('block_state'),\r\n                    planted: core_1.Opt(core_1.BooleanNode())\r\n                },\r\n                'minecraft:huge_red_mushroom': HugeMushroomConfig,\r\n                'minecraft:ice_patch': DiskConfig,\r\n                'minecraft:iceberg': {\r\n                    state: Reference('block_state')\r\n                },\r\n                'minecraft:lake': {\r\n                    state: Reference('block_state')\r\n                },\r\n                'minecraft:large_dripstone': {\r\n                    floor_to_ceiling_search_range: core_1.Opt(core_1.NumberNode({ integer: true, min: 1, max: 512 })),\r\n                    column_radius: Common_1.IntProvider({ min: 0, max: 60 }),\r\n                    height_scale: Common_1.FloatProvider({ min: 0, max: 20 }),\r\n                    max_column_radius_to_cave_height_ratio: core_1.NumberNode({ min: 0, max: 1 }),\r\n                    stalactite_bluntness: Common_1.FloatProvider({ min: 0.1, max: 10 }),\r\n                    stalagmite_bluntness: Common_1.FloatProvider({ min: 0.1, max: 10 }),\r\n                    wind_speed: Common_1.FloatProvider({ min: 0, max: 2 }),\r\n                    min_radius_for_wind: core_1.NumberNode({ integer: true, min: 0, max: 100 }),\r\n                    min_bluntness_for_wind: core_1.NumberNode({ min: 0, max: 5 })\r\n                },\r\n                'minecraft:nether_forest_vegetation': {\r\n                    state_provider: Reference('block_state_provider')\r\n                },\r\n                'minecraft:netherrack_replace_blobs': {\r\n                    state: Reference('block_state'),\r\n                    target: Reference('block_state'),\r\n                    radius: Common_1.IntProvider({ min: 0, max: 12 })\r\n                },\r\n                'minecraft:no_bonemeal_flower': RandomPatchConfig,\r\n                'minecraft:ore': OreConfig,\r\n                'minecraft:random_patch': RandomPatchConfig,\r\n                'minecraft:random_boolean_selector': {\r\n                    feature_false: Feature,\r\n                    feature_true: Feature\r\n                },\r\n                'minecraft:random_selector': {\r\n                    features: core_1.ListNode(core_1.ObjectNode({\r\n                        chance: core_1.NumberNode({ min: 0, max: 1 }),\r\n                        feature: Feature\r\n                    })),\r\n                    default: Feature\r\n                },\r\n                'minecraft:replace_single_block': {\r\n                    targets: core_1.ListNode(TargetBlockState)\r\n                },\r\n                'minecraft:root_system': {\r\n                    required_vertical_space_for_tree: core_1.NumberNode({ integer: true, min: 1, max: 64 }),\r\n                    root_radius: core_1.NumberNode({ integer: true, min: 1, max: 64 }),\r\n                    root_placement_attempts: core_1.NumberNode({ integer: true, min: 1, max: 256 }),\r\n                    root_column_max_height: core_1.NumberNode({ integer: true, min: 1, max: 4096 }),\r\n                    hanging_root_radius: core_1.NumberNode({ integer: true, min: 1, max: 64 }),\r\n                    hanging_roots_vertical_span: core_1.NumberNode({ integer: true, min: 0, max: 16 }),\r\n                    hanging_root_placement_attempts: core_1.NumberNode({ integer: true, min: 0, max: 256 }),\r\n                    allowed_vertical_water_for_tree: core_1.NumberNode({ integer: true, min: 1, max: 64 }),\r\n                    root_replaceable: StringNode({ validator: 'resource', params: { pool: '$tag/block' } }),\r\n                    root_state_provider: Reference('block_state_provider'),\r\n                    hanging_root_state_provider: Reference('block_state_provider'),\r\n                    feature: Feature\r\n                },\r\n                'minecraft:scattered_ore': OreConfig,\r\n                'minecraft:sea_pickle': {\r\n                    count: Common_1.IntProvider({ min: 0, max: 256 })\r\n                },\r\n                'minecraft:seagrass': {\r\n                    probability: core_1.NumberNode({ min: 0, max: 1 })\r\n                },\r\n                'minecraft:simple_block': {\r\n                    to_place: Reference('block_state_provider'),\r\n                    place_on: core_1.ListNode(Reference('block_state')),\r\n                    place_in: core_1.ListNode(Reference('block_state')),\r\n                    place_under: core_1.ListNode(Reference('block_state'))\r\n                },\r\n                'minecraft:simple_random_selector': {\r\n                    features: core_1.ListNode(Feature)\r\n                },\r\n                'minecraft:small_dripstone': {\r\n                    max_placements: core_1.Opt(core_1.NumberNode({ integer: true, min: 0, max: 100 })),\r\n                    empty_space_search_radius: core_1.Opt(core_1.NumberNode({ integer: true, min: 0, max: 20 })),\r\n                    max_offset_from_origin: core_1.Opt(core_1.NumberNode({ integer: true, min: 0, max: 20 })),\r\n                    chance_of_taller_dripstone: core_1.Opt(core_1.NumberNode({ min: 0, max: 1 }))\r\n                },\r\n                'minecraft:spring_feature': {\r\n                    state: Reference('fluid_state'),\r\n                    rock_count: core_1.NumberNode({ integer: true }),\r\n                    hole_count: core_1.NumberNode({ integer: true }),\r\n                    requires_block_below: core_1.BooleanNode(),\r\n                    valid_blocks: core_1.ListNode(StringNode({ validator: 'resource', params: { pool: 'block' } }))\r\n                },\r\n                'minecraft:tree': {\r\n                    ignore_vines: core_1.Opt(core_1.BooleanNode()),\r\n                    force_dirt: core_1.Opt(core_1.BooleanNode()),\r\n                    minimum_size: Reference('feature_size'),\r\n                    dirt_provider: Reference('block_state_provider'),\r\n                    sapling_provider: Reference('block_state_provider'),\r\n                    trunk_provider: Reference('block_state_provider'),\r\n                    foliage_provider: Reference('block_state_provider'),\r\n                    trunk_placer: core_1.ObjectNode({\r\n                        type: StringNode({ validator: 'resource', params: { pool: 'worldgen/trunk_placer_type' } }),\r\n                        base_height: core_1.NumberNode({ integer: true, min: 0, max: 32 }),\r\n                        height_rand_a: core_1.NumberNode({ integer: true, min: 0, max: 24 }),\r\n                        height_rand_b: core_1.NumberNode({ integer: true, min: 0, max: 24 }),\r\n                        [core_1.Switch]: [{ push: 'type' }],\r\n                        [core_1.Case]: {\r\n                            'minecraft:bending_trunk_placer': {\r\n                                bend_length: Common_1.IntProvider({ min: 1, max: 64 }),\r\n                                min_height_for_leaves: core_1.Opt(core_1.NumberNode({ integer: true, min: 1 }))\r\n                            }\r\n                        }\r\n                    }, { context: 'trunk_placer' }),\r\n                    foliage_placer: core_1.ObjectNode({\r\n                        type: StringNode({ validator: 'resource', params: { pool: 'worldgen/foliage_placer_type' } }),\r\n                        radius: Common_1.IntProvider({ min: 0, max: 16 }),\r\n                        offset: Common_1.IntProvider({ min: 0, max: 16 }),\r\n                        [core_1.Switch]: [{ push: 'type' }],\r\n                        [core_1.Case]: {\r\n                            'minecraft:blob_foliage_placer': {\r\n                                height: core_1.NumberNode({ integer: true, min: 0, max: 16 })\r\n                            },\r\n                            'minecraft:bush_foliage_placer': {\r\n                                height: core_1.NumberNode({ integer: true, min: 0, max: 16 })\r\n                            },\r\n                            'minecraft:fancy_foliage_placer': {\r\n                                height: core_1.NumberNode({ integer: true, min: 0, max: 16 })\r\n                            },\r\n                            'minecraft:jungle_foliage_placer': {\r\n                                height: core_1.NumberNode({ integer: true, min: 0, max: 16 })\r\n                            },\r\n                            'minecraft:mega_pine_foliage_placer': {\r\n                                crown_height: Common_1.IntProvider({ min: 0, max: 24 })\r\n                            },\r\n                            'minecraft:pine_foliage_placer': {\r\n                                height: Common_1.IntProvider({ min: 0, max: 24 })\r\n                            },\r\n                            'minecraft:random_spread_foliage_placer': {\r\n                                foliage_height: Common_1.IntProvider({ min: 1, max: 512 }),\r\n                                leaf_placement_attempts: core_1.NumberNode({ integer: true, min: 0, max: 256 })\r\n                            },\r\n                            'minecraft:spruce_foliage_placer': {\r\n                                trunk_height: Common_1.IntProvider({ min: 0, max: 24 })\r\n                            }\r\n                        }\r\n                    }, { context: 'foliage_placer', disableSwitchContext: true }),\r\n                    decorators: core_1.ListNode(core_1.ObjectNode({\r\n                        type: StringNode({ validator: 'resource', params: { pool: 'worldgen/tree_decorator_type' } }),\r\n                        [core_1.Switch]: [{ push: 'type' }],\r\n                        [core_1.Case]: {\r\n                            'minecraft:alter_ground': {\r\n                                provider: Reference('block_state_provider')\r\n                            },\r\n                            'minecraft:beehive': {\r\n                                probability: core_1.NumberNode({ min: 0, max: 1 })\r\n                            },\r\n                            'minecraft:cocoa': {\r\n                                probability: core_1.NumberNode({ min: 0, max: 1 })\r\n                            }\r\n                        }\r\n                    }, { context: 'tree_decorator' }))\r\n                },\r\n                'minecraft:underwater_magma': {\r\n                    floor_search_range: core_1.NumberNode({ integer: true, min: 0, max: 512 }),\r\n                    placement_radius_around_floor: core_1.NumberNode({ integer: true, min: 0, max: 64 }),\r\n                    placement_probability_per_valid_position: core_1.NumberNode({ min: 0, max: 1 })\r\n                },\r\n                'minecraft:vegetation_patch': VegetationPatchConfig,\r\n                'minecraft:waterlogged_vegetation_patch': VegetationPatchConfig\r\n            }\r\n        }, { context: 'feature' })\r\n    }, { context: 'feature' }), {\r\n        default: () => ({\r\n            type: 'minecraft:decorated',\r\n            config: {\r\n                decorator: {\r\n                    type: 'minecraft:count',\r\n                    config: {\r\n                        count: 4\r\n                    }\r\n                },\r\n                feature: {\r\n                    type: 'minecraft:tree',\r\n                    config: {\r\n                        max_water_depth: 0,\r\n                        ignore_vines: true,\r\n                        minimum_size: {},\r\n                        trunk_placer: {\r\n                            base_height: 5,\r\n                            height_rand_a: 2,\r\n                            height_rand_b: 0\r\n                        },\r\n                        foliage_placer: {\r\n                            radius: 2,\r\n                            offset: 0,\r\n                            height: 3\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        })\r\n    }));\r\n    schemas.register('feature_size', core_1.Mod(core_1.ObjectNode({\r\n        type: StringNode({ validator: 'resource', params: { pool: 'worldgen/feature_size_type' } }),\r\n        min_clipped_height: core_1.Opt(core_1.NumberNode({ min: 0, max: 80 })),\r\n        [core_1.Switch]: [{ push: 'type' }],\r\n        [core_1.Case]: {\r\n            'minecraft:two_layers_feature_size': {\r\n                limit: core_1.Opt(core_1.NumberNode({ integer: true, min: 0, max: 81 })),\r\n                lower_size: core_1.Opt(core_1.NumberNode({ integer: true, min: 0, max: 16 })),\r\n                upper_size: core_1.Opt(core_1.NumberNode({ integer: true, min: 0, max: 16 }))\r\n            },\r\n            'minecraft:three_layers_feature_size': {\r\n                limit: core_1.Opt(core_1.NumberNode({ integer: true, min: 0, max: 80 })),\r\n                upper_limit: core_1.Opt(core_1.NumberNode({ integer: true, min: 0, max: 80 })),\r\n                lower_size: core_1.Opt(core_1.NumberNode({ integer: true, min: 0, max: 16 })),\r\n                middle_size: core_1.Opt(core_1.NumberNode({ integer: true, min: 0, max: 16 })),\r\n                upper_size: core_1.Opt(core_1.NumberNode({ integer: true, min: 0, max: 16 }))\r\n            }\r\n        }\r\n    }, { disableSwitchContext: true }), {\r\n        default: () => ({\r\n            type: 'minecraft:two_layers_feature_size'\r\n        })\r\n    }));\r\n    schemas.register('block_state_provider', core_1.Mod(core_1.ObjectNode({\r\n        type: StringNode({ validator: 'resource', params: { pool: 'worldgen/block_state_provider_type' } }),\r\n        [core_1.Switch]: [{ push: 'type' }],\r\n        [core_1.Case]: {\r\n            'minecraft:randomized_int_state_provider': {\r\n                property: StringNode(),\r\n                values: Common_1.IntProvider(),\r\n                source: Reference('block_state_provider')\r\n            },\r\n            'minecraft:rotated_block_provider': {\r\n                state: Reference('block_state')\r\n            },\r\n            'minecraft:simple_state_provider': {\r\n                state: Reference('block_state')\r\n            },\r\n            'minecraft:weighted_state_provider': {\r\n                entries: core_1.ListNode(core_1.Mod(core_1.ObjectNode({\r\n                    weight: core_1.NumberNode({ integer: true, min: 1 }),\r\n                    data: Reference('block_state')\r\n                }), {\r\n                    default: () => ({\r\n                        data: {}\r\n                    })\r\n                }))\r\n            }\r\n        }\r\n    }, { context: 'block_state_provider' }), {\r\n        default: () => ({\r\n            type: 'minecraft:simple_state_provider'\r\n        })\r\n    }));\r\n    schemas.register('block_placer', core_1.Mod(core_1.ObjectNode({\r\n        type: StringNode({ validator: 'resource', params: { pool: 'worldgen/block_placer_type' } }),\r\n        [core_1.Switch]: [{ push: 'type' }],\r\n        [core_1.Case]: {\r\n            'minecraft:column_placer': {\r\n                size: Common_1.IntProvider({ min: 0 })\r\n            }\r\n        }\r\n    }, { context: 'block_placer' }), {\r\n        default: () => ({\r\n            type: 'minecraft:simple_block_placer'\r\n        })\r\n    }));\r\n}\r\nexports.initFeatureSchemas = initFeatureSchemas;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.initNoiseSettingsSchemas = void 0;\r\nconst core_1 = require(\"@mcschema/core\");\r\nconst Common_1 = require(\"../Common\");\r\nfunction initNoiseSettingsSchemas(schemas, collections) {\r\n    const Reference = core_1.Reference.bind(undefined, schemas);\r\n    const StringNode = core_1.StringNode.bind(undefined, collections);\r\n    schemas.register('noise_settings', core_1.Mod(core_1.ObjectNode({\r\n        name: core_1.Mod(StringNode({ validator: 'resource', params: { pool: '$worldgen/noise_settings', isDefinition: true } }), {\r\n            enabled: (path) => path.getArray().length > 0\r\n        }),\r\n        bedrock_roof_position: core_1.NumberNode({ integer: true }),\r\n        bedrock_floor_position: core_1.NumberNode({ integer: true }),\r\n        sea_level: core_1.NumberNode({ integer: true }),\r\n        min_surface_level: core_1.NumberNode({ integer: true }),\r\n        disable_mob_generation: core_1.BooleanNode(),\r\n        noise_caves_enabled: core_1.BooleanNode(),\r\n        noodle_caves_enabled: core_1.BooleanNode(),\r\n        aquifers_enabled: core_1.BooleanNode(),\r\n        deepslate_enabled: core_1.BooleanNode(),\r\n        ore_veins_enabled: core_1.BooleanNode(),\r\n        default_block: Reference('block_state'),\r\n        default_fluid: Reference('block_state'),\r\n        noise: core_1.ObjectNode({\r\n            min_y: core_1.NumberNode({ integer: true, min: -2048, max: 2047 }),\r\n            height: core_1.NumberNode({ integer: true, min: 0, max: 4096 }),\r\n            density_factor: core_1.NumberNode(),\r\n            density_offset: core_1.NumberNode(),\r\n            size_horizontal: core_1.NumberNode({ integer: true }),\r\n            size_vertical: core_1.NumberNode({ integer: true }),\r\n            simplex_surface_noise: core_1.BooleanNode(),\r\n            random_density_offset: core_1.Opt(core_1.BooleanNode()),\r\n            island_noise_override: core_1.Opt(core_1.BooleanNode()),\r\n            amplified: core_1.Opt(core_1.BooleanNode()),\r\n            sampling: core_1.ObjectNode({\r\n                xz_scale: core_1.NumberNode(),\r\n                y_scale: core_1.NumberNode(),\r\n                xz_factor: core_1.NumberNode(),\r\n                y_factor: core_1.NumberNode()\r\n            }),\r\n            bottom_slide: core_1.ObjectNode({\r\n                target: core_1.NumberNode({ integer: true }),\r\n                size: core_1.NumberNode({ integer: true, min: 0 }),\r\n                offset: core_1.NumberNode({ integer: true })\r\n            }),\r\n            top_slide: core_1.ObjectNode({\r\n                target: core_1.NumberNode({ integer: true }),\r\n                size: core_1.NumberNode({ integer: true, min: 0 }),\r\n                offset: core_1.NumberNode({ integer: true })\r\n            })\r\n        }),\r\n        structures: Reference('generator_structures')\r\n    }, { context: 'noise_settings' }), node => ({\r\n        default: () => Common_1.DefaultNoiseSettings,\r\n        validate: (path, value, errors, options) => {\r\n            var _a, _b, _c, _d;\r\n            value = node.validate(path, value, errors, options);\r\n            if (((_a = value === null || value === void 0 ? void 0 : value.noise) === null || _a === void 0 ? void 0 : _a.min_y) + ((_b = value === null || value === void 0 ? void 0 : value.noise) === null || _b === void 0 ? void 0 : _b.height) > 2047) {\r\n                errors.add(path.push('noise').push('height'), 'error.min_y_plus_height', 2047);\r\n            }\r\n            if (((_c = value === null || value === void 0 ? void 0 : value.noise) === null || _c === void 0 ? void 0 : _c.height) % 16 !== 0) {\r\n                errors.add(path.push('noise').push('height'), 'error.height_multiple', 16);\r\n            }\r\n            if (((_d = value === null || value === void 0 ? void 0 : value.noise) === null || _d === void 0 ? void 0 : _d.min_y) % 16 !== 0) {\r\n                errors.add(path.push('noise').push('min_y'), 'error.min_y_multiple', 16);\r\n            }\r\n            return value;\r\n        }\r\n    })));\r\n    schemas.register('generator_structures', core_1.ObjectNode({\r\n        stronghold: core_1.Opt(core_1.ObjectNode({\r\n            distance: core_1.NumberNode({ integer: true, min: 0, max: 1023 }),\r\n            spread: core_1.NumberNode({ integer: true, min: 0, max: 1023 }),\r\n            count: core_1.NumberNode({ integer: true, min: 1, max: 4095 })\r\n        })),\r\n        structures: core_1.MapNode(StringNode({ validator: 'resource', params: { pool: 'worldgen/structure_feature' } }), core_1.Mod(core_1.ObjectNode({\r\n            spacing: core_1.NumberNode({ integer: true, min: 0, max: 4096 }),\r\n            separation: core_1.Mod(core_1.NumberNode({ integer: true, min: 0, max: 4096 }), (node) => ({\r\n                validate: (path, value, errors, options) => {\r\n                    if (path.pop().push('spacing').get() <= value) {\r\n                        errors.add(path, 'error.separation_smaller_spacing');\r\n                    }\r\n                    return node.validate(path, value, errors, options);\r\n                }\r\n            })),\r\n            salt: core_1.NumberNode({ integer: true, min: 0 })\r\n        }, { context: 'generator_structure' }), {\r\n            default: () => ({\r\n                spacing: 10,\r\n                separation: 5,\r\n                salt: 0\r\n            })\r\n        }))\r\n    }));\r\n    schemas.register('generator_layer', core_1.Mod(core_1.ObjectNode({\r\n        block: StringNode({ validator: 'resource', params: { pool: 'block' } }),\r\n        height: core_1.NumberNode({ integer: true, min: 1 })\r\n    }), {\r\n        default: () => ({\r\n            block: 'minecraft:stone',\r\n            height: 1\r\n        })\r\n    }));\r\n}\r\nexports.initNoiseSettingsSchemas = initNoiseSettingsSchemas;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.initStructureFeatureSchemas = void 0;\r\nconst core_1 = require(\"@mcschema/core\");\r\nfunction initStructureFeatureSchemas(schemas, collections) {\r\n    const StringNode = core_1.StringNode.bind(undefined, collections);\r\n    const Reference = core_1.Reference.bind(undefined, schemas);\r\n    const templatePoolConfig = {\r\n        start_pool: StringNode({ validator: 'resource', params: { pool: '$worldgen/template_pool' } }),\r\n        size: core_1.NumberNode({ integer: true })\r\n    };\r\n    schemas.register('configured_structure_feature', core_1.Mod(core_1.ObjectNode({\r\n        type: StringNode({ validator: 'resource', params: { pool: 'worldgen/structure_feature' } }),\r\n        config: core_1.ObjectNode({\r\n            [core_1.Switch]: ['pop', { push: 'type' }],\r\n            [core_1.Case]: {\r\n                'minecraft:bastion_remnant': templatePoolConfig,\r\n                'minecraft:buried_treasure': {\r\n                    probability: core_1.NumberNode({ min: 0, max: 1 })\r\n                },\r\n                'minecraft:mineshaft': {\r\n                    type: StringNode({ enum: ['normal', 'mesa'] }),\r\n                    probability: core_1.NumberNode({ min: 0, max: 1 })\r\n                },\r\n                'minecraft:nether_fossil': {\r\n                    height: Reference('height_provider')\r\n                },\r\n                'minecraft:ocean_ruin': {\r\n                    biome_temp: StringNode({ enum: ['cold', 'warm'] }),\r\n                    large_probability: core_1.NumberNode({ min: 0, max: 1 }),\r\n                    cluster_probability: core_1.NumberNode({ min: 0, max: 1 })\r\n                },\r\n                'minecraft:pillager_outpost': templatePoolConfig,\r\n                'minecraft:ruined_portal': {\r\n                    portal_type: StringNode({ enum: ['standard', 'desert', 'jungle', 'mountain', 'nether', 'ocean', 'swamp'] })\r\n                },\r\n                'minecraft:shipwreck': {\r\n                    is_beached: core_1.Opt(core_1.BooleanNode())\r\n                },\r\n                'minecraft:village': templatePoolConfig\r\n            }\r\n        }, { context: 'structure_feature', disableSwitchContext: true })\r\n    }, { context: 'structure_feature' }), {\r\n        default: () => ({\r\n            type: 'minecraft:bastion_remnant',\r\n            config: {\r\n                start_pool: 'minecraft:bastion/starts',\r\n                size: 6\r\n            }\r\n        })\r\n    }));\r\n}\r\nexports.initStructureFeatureSchemas = initStructureFeatureSchemas;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.initSurfaceBuilderSchemas = void 0;\r\nconst core_1 = require(\"@mcschema/core\");\r\nfunction initSurfaceBuilderSchemas(schemas, collections) {\r\n    const StringNode = core_1.StringNode.bind(undefined, collections);\r\n    const Reference = core_1.Reference.bind(undefined, schemas);\r\n    schemas.register('configured_surface_builder', core_1.Mod(core_1.ObjectNode({\r\n        type: StringNode({ validator: 'resource', params: { pool: 'worldgen/surface_builder' } }),\r\n        config: core_1.ObjectNode({\r\n            top_material: Reference('block_state'),\r\n            under_material: Reference('block_state'),\r\n            underwater_material: Reference('block_state'),\r\n        }, { context: 'surface_builder' })\r\n    }, { context: 'surface_builder' }), {\r\n        default: () => ({\r\n            type: 'minecraft:default',\r\n            config: {\r\n                top_material: {\r\n                    Name: 'minecraft:grass_block',\r\n                    Properties: {\r\n                        snowy: 'false'\r\n                    }\r\n                },\r\n                under_material: {\r\n                    Name: 'minecraft:dirt'\r\n                },\r\n                underwater_material: {\r\n                    Name: 'minecraft:gravel'\r\n                }\r\n            }\r\n        })\r\n    }));\r\n}\r\nexports.initSurfaceBuilderSchemas = initSurfaceBuilderSchemas;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.initTemplatePoolSchemas = void 0;\r\nconst core_1 = require(\"@mcschema/core\");\r\nrequire(\"./ProcessorList\");\r\nconst ProcessorList_1 = require(\"./ProcessorList\");\r\nfunction initTemplatePoolSchemas(schemas, collections) {\r\n    const Reference = core_1.Reference.bind(undefined, schemas);\r\n    const StringNode = core_1.StringNode.bind(undefined, collections);\r\n    schemas.register('template_pool', core_1.Mod(core_1.ObjectNode({\r\n        name: StringNode(),\r\n        fallback: StringNode(),\r\n        elements: core_1.ListNode(Reference('template_weighted_element'))\r\n    }, { context: 'template_pool' }), {\r\n        default: () => ({\r\n            fallback: 'minecraft:empty',\r\n            elements: [\r\n                {\r\n                    weight: 1,\r\n                    element: {\r\n                        element_type: 'minecraft:single_pool_element',\r\n                        projection: 'rigid',\r\n                        processors: 'minecraft:empty'\r\n                    }\r\n                }\r\n            ]\r\n        })\r\n    }));\r\n    schemas.register('template_weighted_element', core_1.Mod(core_1.ObjectNode({\r\n        weight: core_1.NumberNode({ integer: true, min: 1 }),\r\n        element: Reference('template_element')\r\n    }, { category: 'pool' }), {\r\n        default: () => ({\r\n            weight: 1,\r\n            element: {\r\n                element_type: 'minecraft:single_pool_element',\r\n                projection: 'rigid',\r\n                processors: 'minecraft:empty'\r\n            }\r\n        })\r\n    }));\r\n    schemas.register('template_element', core_1.Mod(core_1.ObjectNode({\r\n        element_type: StringNode({ validator: 'resource', params: { pool: 'worldgen/structure_pool_element' } }),\r\n        projection: StringNode({ enum: ['rigid', 'terrain_matching'] }),\r\n        [core_1.Switch]: [{ push: 'element_type' }],\r\n        [core_1.Case]: {\r\n            'minecraft:feature_pool_element': {\r\n                feature: StringNode({ validator: 'resource', params: { pool: '$worldgen/configured_feature' } })\r\n            },\r\n            'minecraft:legacy_single_pool_element': {\r\n                location: StringNode({ validator: 'resource', params: { pool: '$structure' } }),\r\n                processors: ProcessorList_1.Processors\r\n            },\r\n            'minecraft:list_pool_element': {\r\n                elements: core_1.ListNode(Reference('template_element'))\r\n            },\r\n            'minecraft:single_pool_element': {\r\n                location: StringNode({ validator: 'resource', params: { pool: '$structure' } }),\r\n                processors: ProcessorList_1.Processors\r\n            }\r\n        }\r\n    }, { context: 'template_element', disableSwitchContext: true }), {\r\n        default: () => ({\r\n            element_type: 'minecraft:single_pool_element',\r\n            projection: 'rigid',\r\n            processors: 'minecraft:empty'\r\n        })\r\n    }));\r\n}\r\nexports.initTemplatePoolSchemas = initTemplatePoolSchemas;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.initWorldgenSchemas = void 0;\r\nconst Biome_1 = require(\"./Biome\");\r\nconst Carver_1 = require(\"./Carver\");\r\nconst Decorator_1 = require(\"./Decorator\");\r\nconst Feature_1 = require(\"./Feature\");\r\nconst NoiseSettings_1 = require(\"./NoiseSettings\");\r\nconst ProcessorList_1 = require(\"./ProcessorList\");\r\nconst StructureFeature_1 = require(\"./StructureFeature\");\r\nconst SurfaceBuilder_1 = require(\"./SurfaceBuilder\");\r\nconst TemplatePool_1 = require(\"./TemplatePool\");\r\nfunction initWorldgenSchemas(schemas, collections) {\r\n    // `ProcessorList.ts` has exports. It should be initialized first. \r\n    ProcessorList_1.initProcessorListSchemas(schemas, collections);\r\n    Biome_1.initBiomeSchemas(schemas, collections);\r\n    Carver_1.initCarverSchemas(schemas, collections);\r\n    Decorator_1.initDecoratorSchemas(schemas, collections);\r\n    Feature_1.initFeatureSchemas(schemas, collections);\r\n    NoiseSettings_1.initNoiseSettingsSchemas(schemas, collections);\r\n    StructureFeature_1.initStructureFeatureSchemas(schemas, collections);\r\n    SurfaceBuilder_1.initSurfaceBuilderSchemas(schemas, collections);\r\n    TemplatePool_1.initTemplatePoolSchemas(schemas, collections);\r\n}\r\nexports.initWorldgenSchemas = initWorldgenSchemas;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.initWorldSettingsSchemas = void 0;\r\nconst core_1 = require(\"@mcschema/core\");\r\nfunction initWorldSettingsSchemas(schemas, collections) {\r\n    const Reference = core_1.Reference.bind(undefined, schemas);\r\n    const StringNode = core_1.StringNode.bind(undefined, collections);\r\n    schemas.register('world_settings', core_1.Mod(core_1.ObjectNode({\r\n        generate_features: core_1.BooleanNode(),\r\n        bonus_chest: core_1.BooleanNode(),\r\n        seed: core_1.NumberNode({ integer: true }),\r\n        dimensions: core_1.MapNode(StringNode({ validator: 'resource', params: { pool: '$dimension' } }), Reference('dimension'))\r\n    }, { context: 'world_settings' }), {\r\n        default: () => {\r\n            const seed = Math.floor(Math.random() * (4294967296)) - 2147483648;\r\n            return {\r\n                generate_features: true,\r\n                bonus_chest: false,\r\n                seed,\r\n                dimensions: {\r\n                    'minecraft:overworld': {\r\n                        type: 'minecraft:overworld',\r\n                        generator: {\r\n                            type: 'minecraft:noise',\r\n                            seed,\r\n                            biome_source: {\r\n                                type: 'minecraft:vanilla_layered',\r\n                                seed\r\n                            },\r\n                            settings: 'minecraft:overworld',\r\n                        }\r\n                    },\r\n                    'minecraft:the_nether': {\r\n                        type: 'minecraft:the_nether',\r\n                        generator: {\r\n                            type: 'minecraft:noise',\r\n                            seed,\r\n                            biome_source: {\r\n                                type: 'minecraft:multi_noise',\r\n                                seed,\r\n                                humidity_noise: {\r\n                                    firstOctave: -7,\r\n                                    amplitudes: [1.0, 1.0]\r\n                                },\r\n                                altitude_noise: {\r\n                                    firstOctave: -7,\r\n                                    amplitudes: [1.0, 1.0]\r\n                                },\r\n                                weirdness_noise: {\r\n                                    firstOctave: -7,\r\n                                    amplitudes: [1.0, 1.0]\r\n                                },\r\n                                temperature_noise: {\r\n                                    firstOctave: -7,\r\n                                    amplitudes: [1.0, 1.0]\r\n                                },\r\n                                biomes: [\r\n                                    {\r\n                                        parameters: { altitude: 0.0, weirdness: 0.0, offset: 0.0, temperature: 0.0, humidity: 0.0 },\r\n                                        biome: 'minecraft:nether_wastes'\r\n                                    },\r\n                                    {\r\n                                        parameters: { altitude: 0.0, weirdness: 0.0, offset: 0.0, temperature: 0.0, humidity: -0.5 },\r\n                                        biome: 'minecraft:soul_sand_valley'\r\n                                    },\r\n                                    {\r\n                                        parameters: { altitude: 0.0, weirdness: 0.0, offset: 0.0, temperature: 0.4, humidity: 0.0 },\r\n                                        biome: 'minecraft:crimson_forest'\r\n                                    },\r\n                                    {\r\n                                        parameters: { altitude: 0.0, weirdness: 0.0, offset: 0.375, temperature: 0.0, humidity: 0.5 },\r\n                                        biome: 'minecraft:warped_forest'\r\n                                    },\r\n                                    {\r\n                                        parameters: { altitude: 0.0, weirdness: 0.0, offset: 0.175, temperature: -0.5, humidity: 0.0 },\r\n                                        biome: 'minecraft:basalt_deltas'\r\n                                    }\r\n                                ]\r\n                            },\r\n                            settings: 'minecraft:nether'\r\n                        }\r\n                    },\r\n                    'minecraft:the_end': {\r\n                        type: \"minecraft:the_end\",\r\n                        generator: {\r\n                            type: \"minecraft:noise\",\r\n                            seed,\r\n                            biome_source: {\r\n                                type: \"minecraft:the_end\",\r\n                                seed\r\n                            },\r\n                            settings: \"minecraft:end\"\r\n                        }\r\n                    }\r\n                }\r\n            };\r\n        }\r\n    }));\r\n}\r\nexports.initWorldSettingsSchemas = initWorldSettingsSchemas;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.initSchemas = void 0;\r\nconst Advancement_1 = require(\"./Advancement\");\r\nconst Common_1 = require(\"./Common\");\r\nconst Condition_1 = require(\"./Condition\");\r\nconst Dimension_1 = require(\"./Dimension\");\r\nconst DimensionType_1 = require(\"./DimensionType\");\r\nconst ItemModifier_1 = require(\"./ItemModifier\");\r\nconst LootTable_1 = require(\"./LootTable\");\r\nconst PackMcmeta_1 = require(\"./PackMcmeta\");\r\nconst Predicates_1 = require(\"./Predicates\");\r\nconst Recipe_1 = require(\"./Recipe\");\r\nconst Tags_1 = require(\"./Tags\");\r\nconst TextComponent_1 = require(\"./TextComponent\");\r\nconst worldgen_1 = require(\"./worldgen\");\r\nconst WorldSettings_1 = require(\"./WorldSettings\");\r\nfunction initSchemas(schemas, collections) {\r\n    // `Common.ts` is the only file that has exports. It should be initialized first. \r\n    Common_1.initCommonSchemas(schemas, collections);\r\n    Advancement_1.initAdvancementSchemas(schemas, collections);\r\n    Condition_1.initConditionSchemas(schemas, collections);\r\n    DimensionType_1.initDimensionTypeSchemas(schemas, collections);\r\n    Dimension_1.initDimensionSchemas(schemas, collections);\r\n    ItemModifier_1.initItemModifierSchemas(schemas, collections);\r\n    LootTable_1.initLootTableSchemas(schemas, collections);\r\n    PackMcmeta_1.initPackMcmetaSchemas(schemas, collections);\r\n    Predicates_1.initPredicatesSchemas(schemas, collections);\r\n    Recipe_1.initRecipeSchemas(schemas, collections);\r\n    Tags_1.initTagsSchemas(schemas, collections);\r\n    TextComponent_1.initTextComponentSchemas(schemas, collections);\r\n    worldgen_1.initWorldgenSchemas(schemas, collections);\r\n    WorldSettings_1.initWorldSettingsSchemas(schemas, collections);\r\n}\r\nexports.initSchemas = initSchemas;\r\n","\"use strict\";\r\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}));\r\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n});\r\nvar __importStar = (this && this.__importStar) || function (mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.getSchemas = exports.getCollections = void 0;\r\nconst core_1 = require(\"@mcschema/core\");\r\nconst Collections_1 = require(\"./Collections\");\r\nconst schemas_1 = require(\"./schemas\");\r\nexports.lootContext = __importStar(require(\"./LootContext\"));\r\nfunction getCollections() {\r\n    const collections = new core_1.CollectionRegistry();\r\n    Collections_1.initCollections(collections);\r\n    return collections;\r\n}\r\nexports.getCollections = getCollections;\r\n/**\r\n * @param collections The CollectionRegistry for this version. Note that apart from\r\n * the built-in collections, the client of this module is responsible for futhermore\r\n * adding the vanilla registries to it: the collection IDs shouldn't contain the\r\n * namespace (`minecraft:`) part, while the values within the collections should.\r\n *\r\n * @example\r\n * for (const key in VANILLA_REGISTRIES>) {\r\n *   collections.register(\r\n *     key.replace(/^minecraft:/, ''),\r\n *     Object.keys(VANILLA_REGISTRIES[key].entries)\r\n *   )\r\n * }\r\n */\r\nfunction getSchemas(collections) {\r\n    const schemas = new core_1.SchemaRegistry();\r\n    schemas_1.initSchemas(schemas, collections);\r\n    return schemas;\r\n}\r\nexports.getSchemas = getSchemas;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.initCollections = void 0;\r\nfunction initCollections(collections) {\r\n    collections.register('advancement_trigger', [\r\n        'minecraft:bee_nest_destroyed',\r\n        'minecraft:bred_animals',\r\n        'minecraft:brewed_potion',\r\n        'minecraft:changed_dimension',\r\n        'minecraft:channeled_lightning',\r\n        'minecraft:construct_beacon',\r\n        'minecraft:consume_item',\r\n        'minecraft:cured_zombie_villager',\r\n        'minecraft:effects_changed',\r\n        'minecraft:enchanted_item',\r\n        'minecraft:enter_block',\r\n        'minecraft:entity_hurt_player',\r\n        'minecraft:entity_killed_player',\r\n        'minecraft:filled_bucket',\r\n        'minecraft:fishing_rod_hooked',\r\n        'minecraft:hero_of_the_village',\r\n        'minecraft:impossible',\r\n        'minecraft:inventory_changed',\r\n        'minecraft:item_durability_changed',\r\n        'minecraft:item_used_on_block',\r\n        'minecraft:killed_by_crossbow',\r\n        'minecraft:levitation',\r\n        'minecraft:lightning_strike',\r\n        'minecraft:location',\r\n        'minecraft:nether_travel',\r\n        'minecraft:placed_block',\r\n        'minecraft:player_generates_container_loot',\r\n        'minecraft:player_hurt_entity',\r\n        'minecraft:player_interacted_with_entity',\r\n        'minecraft:player_killed_entity',\r\n        'minecraft:recipe_unlocked',\r\n        'minecraft:shot_crossbow',\r\n        'minecraft:slept_in_bed',\r\n        'minecraft:slide_down_block',\r\n        'minecraft:started_riding',\r\n        'minecraft:summoned_entity',\r\n        'minecraft:tame_animal',\r\n        'minecraft:target_hit',\r\n        'minecraft:tick',\r\n        'minecraft:thrown_item_picked_up_by_entity',\r\n        'minecraft:used_ender_eye',\r\n        'minecraft:used_totem',\r\n        'minecraft:using_item',\r\n        'minecraft:villager_trade',\r\n        'minecraft:voluntary_exile'\r\n    ]);\r\n    collections.register('keybind', [\r\n        'key.advancements',\r\n        'key.attack',\r\n        'key.back',\r\n        'key.chat',\r\n        'key.command',\r\n        'key.drop',\r\n        'key.forward',\r\n        'key.fullscreen',\r\n        'key.hotbar.1',\r\n        'key.hotbar.2',\r\n        'key.hotbar.3',\r\n        'key.hotbar.4',\r\n        'key.hotbar.5',\r\n        'key.hotbar.6',\r\n        'key.hotbar.7',\r\n        'key.hotbar.8',\r\n        'key.hotbar.9',\r\n        'key.inventory',\r\n        'key.jump',\r\n        'key.left',\r\n        'key.loadToolbarActivator',\r\n        'key.pickItem',\r\n        'key.playerlist',\r\n        'key.right',\r\n        'key.saveToolbarActivator',\r\n        'key.screenshot',\r\n        'key.smoothCamera',\r\n        'key.sneak',\r\n        'key.spectatorOutlines',\r\n        'key.sprint',\r\n        'key.swapOffhand',\r\n        'key.togglePerspective',\r\n        'key.use'\r\n    ]);\r\n    collections.register('slot', [\r\n        'mainhand',\r\n        'offhand',\r\n        'head',\r\n        'chest',\r\n        'legs',\r\n        'feet'\r\n    ]);\r\n    collections.register('gamemode', [\r\n        'survival',\r\n        'creative',\r\n        'adventure',\r\n        'spectator'\r\n    ]);\r\n    collections.register('entity_source', [\r\n        'this',\r\n        'killer',\r\n        'direct_killer',\r\n        'killer_player'\r\n    ]);\r\n    collections.register('copy_source', [\r\n        'block_entity',\r\n        'this',\r\n        'killer',\r\n        'killer_player'\r\n    ]);\r\n    collections.register('loot_table_apply_bonus_formula', [\r\n        'minecraft:uniform_bonus_count',\r\n        'minecraft:binomial_with_bonus_count',\r\n        'minecraft:ore_drops'\r\n    ]);\r\n    collections.register('map_decoration', [\r\n        'mansion',\r\n        'monument',\r\n        'player',\r\n        'frame',\r\n        'red_marker',\r\n        'blue_marker',\r\n        'target_x',\r\n        'target_point',\r\n        'player_off_map',\r\n        'player_off_limits',\r\n        'red_x',\r\n        'banner_white',\r\n        'banner_orange',\r\n        'banner_magenta',\r\n        'banner_light_blue',\r\n        'banner_yellow',\r\n        'banner_lime',\r\n        'banner_pink',\r\n        'banner_gray',\r\n        'banner_light_gray',\r\n        'banner_cyan',\r\n        'banner_purple',\r\n        'banner_blue',\r\n        'banner_brown',\r\n        'banner_green',\r\n        'banner_red',\r\n        'banner_black'\r\n    ]);\r\n    collections.register('map_feature', [\r\n        'bastion_remnant',\r\n        'buried_treasure',\r\n        'desert_pyramid',\r\n        'endcity',\r\n        'fortress',\r\n        'igloo',\r\n        'jungle_pyramid',\r\n        'mansion',\r\n        'mineshaft',\r\n        'monument',\r\n        'nether_fossil',\r\n        'ocean_ruin',\r\n        'pillager_outpost',\r\n        'ruined_portal',\r\n        'shipwreck',\r\n        'stronghold',\r\n        'swamp_hut',\r\n        'village'\r\n    ]);\r\n    collections.register('recipe_group', [\r\n        'bed',\r\n        'light_gray_dye',\r\n        'iron_ingot',\r\n        'wooden_stairs',\r\n        'black_dye',\r\n        'stained_terracotta',\r\n        'dyed_bed',\r\n        'magenta_dye',\r\n        'bark',\r\n        'rabbit_stew',\r\n        'light_blue_dye',\r\n        'wooden_fence_gate',\r\n        'planks',\r\n        'stained_glass',\r\n        'wooden_door',\r\n        'stained_glass_pane',\r\n        'wooden_fence',\r\n        'sticks',\r\n        'concrete_powder',\r\n        'wooden_pressure_plate',\r\n        'boat',\r\n        'brown_dye',\r\n        'yellow_dye',\r\n        'bonemeal',\r\n        'red_dye',\r\n        'wooden_trapdoor',\r\n        'wooden_button',\r\n        'gold_ingot',\r\n        'pink_dye',\r\n        'wooden_slab',\r\n        'orange_dye',\r\n        'carpet',\r\n        'sign',\r\n        'wool',\r\n        'sugar',\r\n        'blue_dye',\r\n        'white_dye',\r\n        'banner',\r\n        'netherite_ingot'\r\n    ]);\r\n    collections.register('biome_category', [\r\n        'beach',\r\n        'desert',\r\n        'extreme_hills',\r\n        'forest',\r\n        'icy',\r\n        'jungle',\r\n        'mesa',\r\n        'mountain',\r\n        'mushroom',\r\n        'nether',\r\n        'none',\r\n        'ocean',\r\n        'plains',\r\n        'river',\r\n        'savanna',\r\n        'swamp',\r\n        'taiga',\r\n        'the_end',\r\n        'underground'\r\n    ]);\r\n    collections.register('heightmap_type', [\r\n        'MOTION_BLOCKING',\r\n        'MOTION_BLOCKING_NO_LEAVES',\r\n        'OCEAN_FLOOR',\r\n        'OCEAN_FLOOR_WG',\r\n        'WORLD_SURFACE',\r\n        'WORLD_SURFACE_WG'\r\n    ]);\r\n    collections.register('generation_step', [\r\n        'air',\r\n        'liquid'\r\n    ]);\r\n    collections.register('loot_context_type', [\r\n        'minecraft:empty',\r\n        'minecraft:chest',\r\n        'minecraft:command',\r\n        'minecraft:selector',\r\n        'minecraft:fishing',\r\n        'minecraft:entity',\r\n        'minecraft:gift',\r\n        'minecraft:barter',\r\n        'minecraft:advancement_reward',\r\n        'minecraft:advancement_entity',\r\n        'minecraft:generic',\r\n        'minecraft:block'\r\n    ]);\r\n    collections.register('banner_pattern', [\r\n        'base',\r\n        'square_bottom_left',\r\n        'square_bottom_right',\r\n        'square_top_left',\r\n        'square_top_right',\r\n        'stripe_bottom',\r\n        'stripe_top',\r\n        'stripe_left',\r\n        'stripe_right',\r\n        'stripe_center',\r\n        'stripe_middle',\r\n        'stripe_downright',\r\n        'stripe_downleft',\r\n        'small_stripes',\r\n        'cross',\r\n        'straight_cross',\r\n        'triangle_bottom',\r\n        'triangle_top',\r\n        'triangles_bottom',\r\n        'triangles_top',\r\n        'diagonal_left',\r\n        'diagonal_up_right',\r\n        'diagonal_up_left',\r\n        'diagonal_right',\r\n        'circle',\r\n        'rhombus',\r\n        'half_vertical',\r\n        'half_horizontal',\r\n        'half_vertical_right',\r\n        'half_horizontal_bottom',\r\n        'border',\r\n        'curly_border',\r\n        'gradient',\r\n        'gradient_up',\r\n        'bricks',\r\n        'globe',\r\n        'creeper',\r\n        'skull',\r\n        'flower',\r\n        'mojang',\r\n        'piglin'\r\n    ]);\r\n    collections.register('dye_color', [\r\n        'white',\r\n        'orange',\r\n        'magenta',\r\n        'light_blue',\r\n        'yellow',\r\n        'lime',\r\n        'pink',\r\n        'gray',\r\n        'light_gray',\r\n        'cyan',\r\n        'purple',\r\n        'blue',\r\n        'brown',\r\n        'green',\r\n        'red',\r\n        'black'\r\n    ]);\r\n}\r\nexports.initCollections = initCollections;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.initAdvancementSchemas = void 0;\r\nconst core_1 = require(\"@mcschema/core\");\r\nfunction initAdvancementSchemas(schemas, collections) {\r\n    const Reference = core_1.Reference.bind(undefined, schemas);\r\n    const StringNode = core_1.StringNode.bind(undefined, collections);\r\n    const EntityPredicate = core_1.ChoiceNode([\r\n        {\r\n            type: 'object',\r\n            node: core_1.Opt(Reference('entity_predicate')),\r\n            change: v => { var _a, _b; return (_b = (_a = v[0]) === null || _a === void 0 ? void 0 : _a.predicate) !== null && _b !== void 0 ? _b : ({}); }\r\n        },\r\n        {\r\n            type: 'list',\r\n            node: core_1.ListNode(Reference('condition')),\r\n            change: v => [{\r\n                    condition: 'minecraft:entity_properties',\r\n                    predicate: v\r\n                }]\r\n        }\r\n    ], { context: 'conditions' });\r\n    schemas.register('advancement', core_1.Mod(core_1.ObjectNode({\r\n        display: core_1.Opt(core_1.Mod(core_1.ObjectNode({\r\n            icon: core_1.ObjectNode({\r\n                item: StringNode({ validator: 'resource', params: { pool: 'item' } }),\r\n                nbt: core_1.Opt(StringNode({ validator: 'nbt', params: { registry: { category: 'minecraft:item', id: ['pop', { push: 'item' }] } } }))\r\n            }),\r\n            title: Reference('text_component'),\r\n            description: Reference('text_component'),\r\n            background: core_1.Opt(StringNode()),\r\n            frame: core_1.Opt(StringNode({ enum: ['task', 'challenge', 'goal'] })),\r\n            show_toast: core_1.Opt(core_1.BooleanNode()),\r\n            announce_to_chat: core_1.Opt(core_1.BooleanNode()),\r\n            hidden: core_1.Opt(core_1.BooleanNode())\r\n        }), {\r\n            default: () => ({\r\n                icon: {\r\n                    item: 'minecraft:stone'\r\n                },\r\n                title: '',\r\n                description: ''\r\n            })\r\n        })),\r\n        parent: core_1.Opt(StringNode({ validator: 'resource', params: { pool: '$advancement' } })),\r\n        criteria: core_1.MapNode(StringNode(), Reference('advancement_criteria')),\r\n        requirements: core_1.Opt(core_1.ListNode(core_1.ListNode(StringNode() // TODO: add validation\r\n        ))),\r\n        rewards: core_1.Opt(core_1.ObjectNode({\r\n            function: core_1.Opt(StringNode({ validator: 'resource', params: { pool: '$function' } })),\r\n            loot: core_1.Opt(core_1.ListNode(StringNode({ validator: 'resource', params: { pool: '$loot_table' } }))),\r\n            recipes: core_1.Opt(core_1.ListNode(StringNode({ validator: 'resource', params: { pool: '$recipe' } }))),\r\n            experience: core_1.Opt(core_1.NumberNode({ integer: true }))\r\n        })),\r\n    }, { context: 'advancement' }), {\r\n        default: () => ({\r\n            criteria: {\r\n                requirement: {\r\n                    trigger: 'minecraft:location'\r\n                }\r\n            }\r\n        })\r\n    }));\r\n    schemas.register('advancement_criteria', core_1.ObjectNode({\r\n        trigger: StringNode({ validator: 'resource', params: { pool: collections.get('advancement_trigger') } }),\r\n        conditions: core_1.Opt(core_1.ObjectNode({\r\n            player: core_1.Mod(EntityPredicate, {\r\n                enabled: path => path.pop().push('trigger').get() !== 'minecraft:impossible'\r\n            }),\r\n            [core_1.Switch]: ['pop', { push: 'trigger' }],\r\n            [core_1.Case]: {\r\n                'minecraft:bee_nest_destroyed': {\r\n                    block: core_1.Opt(StringNode({ validator: 'resource', params: { pool: 'block' } })),\r\n                    num_bees_inside: core_1.Opt(core_1.NumberNode({ integer: true })),\r\n                    item: core_1.Opt(Reference('item_predicate'))\r\n                },\r\n                'minecraft:bred_animals': {\r\n                    parent: EntityPredicate,\r\n                    partner: EntityPredicate,\r\n                    child: EntityPredicate\r\n                },\r\n                'minecraft:brewed_potion': {\r\n                    potion: core_1.Opt(StringNode({ validator: 'resource', params: { pool: 'potion' } }))\r\n                },\r\n                'minecraft:changed_dimension': {\r\n                    from: core_1.Opt(StringNode({ validator: 'resource', params: { pool: '$dimension' } })),\r\n                    to: core_1.Opt(StringNode({ validator: 'resource', params: { pool: '$dimension' } }))\r\n                },\r\n                'minecraft:channeled_lightning': {\r\n                    victims: core_1.Opt(core_1.ListNode(EntityPredicate))\r\n                },\r\n                'minecraft:construct_beacon': {\r\n                    level: Reference('int_bounds')\r\n                },\r\n                'minecraft:consume_item': {\r\n                    item: core_1.Opt(Reference('item_predicate'))\r\n                },\r\n                'minecraft:cured_zombie_villager': {\r\n                    villager: EntityPredicate,\r\n                    zombie: EntityPredicate\r\n                },\r\n                'minecraft:effects_changed': {\r\n                    effects: core_1.Opt(core_1.MapNode(StringNode({ validator: 'resource', params: { pool: 'mob_effect' } }), core_1.ObjectNode({\r\n                        amplifier: Reference('int_bounds'),\r\n                        duration: Reference('int_bounds')\r\n                    }))),\r\n                    source: core_1.Opt(EntityPredicate)\r\n                },\r\n                'minecraft:enter_block': {\r\n                    block: core_1.Opt(StringNode({ validator: 'resource', params: { pool: 'block' } })),\r\n                    state: core_1.Opt(core_1.MapNode(StringNode(), StringNode(), { validation: { validator: 'block_state_map', params: { id: ['pop', { push: 'block' }] } } }))\r\n                },\r\n                'minecraft:enchanted_item': {\r\n                    levels: Reference('int_bounds'),\r\n                    item: core_1.Opt(Reference('item_predicate'))\r\n                },\r\n                'minecraft:entity_hurt_player': {\r\n                    damage: core_1.Opt(Reference('damage_predicate'))\r\n                },\r\n                'minecraft:entity_killed_player': {\r\n                    entity: EntityPredicate,\r\n                    killing_blow: core_1.Opt(Reference('damage_source_predicate'))\r\n                },\r\n                'minecraft:filled_bucket': {\r\n                    item: core_1.Opt(Reference('item_predicate'))\r\n                },\r\n                'minecraft:fishing_rod_hooked': {\r\n                    entity: EntityPredicate,\r\n                    item: core_1.Opt(Reference('item_predicate'))\r\n                },\r\n                'minecraft:hero_of_the_village': {\r\n                    location: core_1.Opt(Reference('location_predicate'))\r\n                },\r\n                'minecraft:inventory_changed': {\r\n                    slots: core_1.Opt(core_1.ObjectNode({\r\n                        empty: Reference('int_bounds'),\r\n                        occupied: Reference('int_bounds'),\r\n                        full: Reference('int_bounds')\r\n                    })),\r\n                    items: core_1.Opt(core_1.ListNode(Reference('item_predicate')))\r\n                },\r\n                'minecraft:item_durability_changed': {\r\n                    delta: Reference('int_bounds'),\r\n                    durability: Reference('int_bounds'),\r\n                    item: core_1.Opt(Reference('item_predicate'))\r\n                },\r\n                'minecraft:item_used_on_block': {\r\n                    item: core_1.Opt(Reference('item_predicate')),\r\n                    location: core_1.Opt(Reference('location_predicate'))\r\n                },\r\n                'minecraft:killed_by_crossbow': {\r\n                    unique_entity_types: Reference('int_bounds'),\r\n                    victims: core_1.Opt(core_1.ListNode(EntityPredicate))\r\n                },\r\n                'minecraft:levitation': {\r\n                    distance: Reference('distance_predicate'),\r\n                    duration: Reference('int_bounds')\r\n                },\r\n                'minecraft:lightning_strike': {\r\n                    lightning: EntityPredicate,\r\n                    bystander: EntityPredicate,\r\n                },\r\n                'minecraft:location': {\r\n                    location: core_1.Opt(Reference('location_predicate'))\r\n                },\r\n                'minecraft:nether_travel': {\r\n                    distance: Reference('distance_predicate'),\r\n                    entered: core_1.Opt(Reference('location_predicate')),\r\n                    exited: core_1.Opt(Reference('location_predicate'))\r\n                },\r\n                'minecraft:placed_block': {\r\n                    block: core_1.Opt(StringNode({ validator: 'resource', params: { pool: 'block' } })),\r\n                    state: core_1.Opt(core_1.MapNode(StringNode(), StringNode(), { validation: { validator: 'block_state_map', params: { id: ['pop', { push: 'block' }] } } })),\r\n                    item: core_1.Opt(Reference('item_predicate')),\r\n                    location: core_1.Opt(Reference('location_predicate'))\r\n                },\r\n                'minecraft:player_generates_container_loot': {\r\n                    loot_table: StringNode({ validator: 'resource', params: { pool: '$loot_table' } })\r\n                },\r\n                'minecraft:player_hurt_entity': {\r\n                    damage: core_1.Opt(Reference('damage_predicate')),\r\n                    entity: EntityPredicate\r\n                },\r\n                'minecraft:player_interacted_with_entity': {\r\n                    item: core_1.Opt(Reference('item_predicate')),\r\n                    entity: EntityPredicate\r\n                },\r\n                'minecraft:player_killed_entity': {\r\n                    entity: EntityPredicate,\r\n                    killing_blow: core_1.Opt(Reference('damage_source_predicate'))\r\n                },\r\n                'minecraft:recipe_unlocked': {\r\n                    recipe: StringNode({ validator: 'resource', params: { pool: '$recipe' } })\r\n                },\r\n                'minecraft:slept_in_bed': {\r\n                    location: core_1.Opt(Reference('location_predicate'))\r\n                },\r\n                'minecraft:slide_down_block': {\r\n                    block: core_1.Opt(StringNode({ validator: 'resource', params: { pool: 'block' } }))\r\n                },\r\n                'minecraft:shot_crossbow': {\r\n                    item: core_1.Opt(Reference('item_predicate'))\r\n                },\r\n                'minecraft:summoned_entity': {\r\n                    entity: EntityPredicate\r\n                },\r\n                'minecraft:tame_animal': {\r\n                    entity: EntityPredicate\r\n                },\r\n                'minecraft:target_hit': {\r\n                    projectile: EntityPredicate,\r\n                    shooter: EntityPredicate,\r\n                    signal_strength: Reference('int_bounds')\r\n                },\r\n                'minecraft:thrown_item_picked_up_by_entity': {\r\n                    entity: core_1.Opt(Reference('entity_predicate')),\r\n                    item: core_1.Opt(Reference('item_predicate'))\r\n                },\r\n                'minecraft:used_ender_eye': {\r\n                    distance: Reference('float_bounds')\r\n                },\r\n                'minecraft:used_totem': {\r\n                    item: core_1.Opt(Reference('item_predicate'))\r\n                },\r\n                'minecraft:using_item': {\r\n                    item: core_1.Opt(Reference('item_predicate'))\r\n                },\r\n                'minecraft:villager_trade': {\r\n                    villager: core_1.Opt(Reference('entity_predicate')),\r\n                    item: core_1.Opt(Reference('item_predicate'))\r\n                },\r\n                'minecraft:voluntary_exile': {\r\n                    location: Reference('location_predicate')\r\n                }\r\n            }\r\n        }, { context: 'criterion' }))\r\n    }, { category: 'predicate', context: 'criterion' }));\r\n}\r\nexports.initAdvancementSchemas = initAdvancementSchemas;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.initCommonSchemas = exports.InclusiveRange = exports.IntProvider = exports.FloatProvider = exports.NoiseSettingsPresets = exports.DefaultNoiseSettings = exports.DimensionTypePresets = exports.DefaultDimensionType = exports.FunctionCases = exports.ConditionCases = void 0;\r\nconst core_1 = require(\"@mcschema/core\");\r\nexports.DefaultDimensionType = {\r\n    ultrawarm: false,\r\n    natural: true,\r\n    piglin_safe: false,\r\n    respawn_anchor_works: false,\r\n    bed_works: true,\r\n    has_raids: true,\r\n    has_skylight: true,\r\n    has_ceiling: false,\r\n    coordinate_scale: 1,\r\n    ambient_light: 0,\r\n    logical_height: 256,\r\n    infiniburn: 'minecraft:infiniburn_overworld',\r\n    min_y: 0,\r\n    height: 256,\r\n};\r\nconst DefaultStructureSettings = {\r\n    'minecraft:igloo': {\r\n        spacing: 32,\r\n        separation: 8,\r\n        salt: 14357618\r\n    },\r\n    'minecraft:mansion': {\r\n        spacing: 80,\r\n        separation: 20,\r\n        salt: 10387319\r\n    },\r\n    'minecraft:jungle_pyramid': {\r\n        spacing: 32,\r\n        separation: 8,\r\n        salt: 14357619\r\n    },\r\n    'minecraft:nether_fossil': {\r\n        spacing: 2,\r\n        separation: 1,\r\n        salt: 14357921\r\n    },\r\n    'minecraft:stronghold': {\r\n        spacing: 1,\r\n        separation: 0,\r\n        salt: 0\r\n    },\r\n    'minecraft:shipwreck': {\r\n        spacing: 24,\r\n        separation: 4,\r\n        salt: 165745295\r\n    },\r\n    'minecraft:mineshaft': {\r\n        spacing: 1,\r\n        separation: 0,\r\n        salt: 0\r\n    },\r\n    'minecraft:desert_pyramid': {\r\n        spacing: 32,\r\n        separation: 8,\r\n        salt: 14357617\r\n    },\r\n    'minecraft:ruined_portal': {\r\n        spacing: 40,\r\n        separation: 15,\r\n        salt: 34222645\r\n    },\r\n    'minecraft:fortress': {\r\n        spacing: 27,\r\n        separation: 4,\r\n        salt: 30084232\r\n    },\r\n    'minecraft:pillager_outpost': {\r\n        spacing: 32,\r\n        separation: 8,\r\n        salt: 165745296\r\n    },\r\n    'minecraft:village': {\r\n        spacing: 32,\r\n        separation: 8,\r\n        salt: 10387312\r\n    },\r\n    'minecraft:endcity': {\r\n        spacing: 20,\r\n        separation: 11,\r\n        salt: 10387313\r\n    },\r\n    'minecraft:buried_treasure': {\r\n        spacing: 1,\r\n        separation: 0,\r\n        salt: 0\r\n    },\r\n    'minecraft:ocean_ruin': {\r\n        spacing: 20,\r\n        separation: 8,\r\n        salt: 14357621\r\n    },\r\n    'minecraft:bastion_remnant': {\r\n        spacing: 27,\r\n        separation: 4,\r\n        salt: 30084232\r\n    },\r\n    'minecraft:swamp_hut': {\r\n        spacing: 32,\r\n        separation: 8,\r\n        salt: 14357620\r\n    },\r\n    'minecraft:monument': {\r\n        spacing: 32,\r\n        separation: 5,\r\n        salt: 10387313\r\n    }\r\n};\r\nexports.DefaultNoiseSettings = {\r\n    bedrock_roof_position: -2147483648,\r\n    bedrock_floor_position: 0,\r\n    sea_level: 63,\r\n    noise_caves_enabled: true,\r\n    deepslate_enabled: true,\r\n    ore_veins_enabled: true,\r\n    noodle_caves_enabled: true,\r\n    disable_mob_generation: false,\r\n    aquifers_enabled: true,\r\n    default_block: {\r\n        Name: 'minecraft:stone'\r\n    },\r\n    default_fluid: {\r\n        Properties: {\r\n            level: '0'\r\n        },\r\n        Name: 'minecraft:water'\r\n    },\r\n    noise: {\r\n        min_y: -64,\r\n        height: 384,\r\n        size_horizontal: 1,\r\n        size_vertical: 2,\r\n        density_factor: 1,\r\n        density_offset: -0.51875,\r\n        random_density_offset: true,\r\n        simplex_surface_noise: true,\r\n        top_slide: {\r\n            target: -0.078125,\r\n            size: 2,\r\n            offset: 8\r\n        },\r\n        bottom_slide: {\r\n            target: 0.1171875,\r\n            size: 3,\r\n            offset: 0\r\n        },\r\n        sampling: {\r\n            xz_scale: 0.9999999814507745,\r\n            y_scale: 0.9999999814507745,\r\n            xz_factor: 80,\r\n            y_factor: 160\r\n        }\r\n    },\r\n    octaves: {\r\n        erosion: {\r\n            firstOctave: -9,\r\n            amplitudes: [1, 1, 0, 1, 1]\r\n        },\r\n        weirdness: {\r\n            firstOctave: -7,\r\n            amplitudes: [1, 2, 1, 0, 0, 0]\r\n        },\r\n        shift: {\r\n            firstOctave: -3,\r\n            amplitudes: [1, 1, 1, 0]\r\n        },\r\n        temperature: {\r\n            firstOctave: -9,\r\n            amplitudes: [1.5, 0, 1, 0, 0, 0]\r\n        },\r\n        humidity: {\r\n            firstOctave: -7,\r\n            amplitudes: [1, 1, 0, 0, 0, 0]\r\n        },\r\n        continentalness: {\r\n            firstOctave: -9,\r\n            amplitudes: [1, 1, 2, 2, 2, 1, 1, 1, 1]\r\n        }\r\n    },\r\n    structures: {\r\n        stronghold: {\r\n            distance: 32,\r\n            spread: 3,\r\n            count: 128\r\n        },\r\n        structures: DefaultStructureSettings,\r\n    }\r\n};\r\nfunction initCommonSchemas(schemas, collections) {\r\n    const StringNode = core_1.StringNode.bind(undefined, collections);\r\n    const Reference = core_1.Reference.bind(undefined, schemas);\r\n    schemas.register('block_state', core_1.Mod(core_1.ObjectNode({\r\n        Name: StringNode({ validator: 'resource', params: { pool: 'block' } }),\r\n        Properties: core_1.Opt(core_1.MapNode(StringNode(), StringNode(), { validation: { validator: 'block_state_map', params: { id: ['pop', { push: 'Name' }] } } }))\r\n    }, { context: 'block_state' }), {\r\n        default: () => ({\r\n            Name: 'minecraft:stone'\r\n        })\r\n    }));\r\n    schemas.register('fluid_state', core_1.Mod(core_1.ObjectNode({\r\n        Name: StringNode({ validator: 'resource', params: { pool: 'fluid' } }),\r\n        Properties: core_1.Opt(core_1.MapNode(StringNode(), StringNode()))\r\n    }, { context: 'fluid_state' }), {\r\n        default: () => ({\r\n            Name: 'minecraft:water',\r\n            Properties: {\r\n                'level': '0'\r\n            }\r\n        })\r\n    }));\r\n    schemas.register('block_pos', core_1.Mod(core_1.ListNode(core_1.NumberNode({ integer: true }), { minLength: 3, maxLength: 3 }), {\r\n        default: () => [0, 0, 0]\r\n    }));\r\n    const Bounds = (integer) => core_1.Opt(core_1.ChoiceNode([\r\n        {\r\n            type: 'number',\r\n            node: core_1.NumberNode({ integer }),\r\n            change: (v) => { var _a, _b; return v === undefined ? 0 : (_b = (_a = v.min) !== null && _a !== void 0 ? _a : v.max) !== null && _b !== void 0 ? _b : 0; }\r\n        },\r\n        {\r\n            type: 'object',\r\n            node: core_1.ObjectNode({\r\n                min: core_1.Opt(core_1.NumberNode({ integer })),\r\n                max: core_1.Opt(core_1.NumberNode({ integer }))\r\n            }, { context: 'range' }),\r\n            change: (v) => ({\r\n                min: v !== null && v !== void 0 ? v : 0,\r\n                max: v !== null && v !== void 0 ? v : 0\r\n            })\r\n        }\r\n    ]));\r\n    schemas.register('int_bounds', Bounds(true));\r\n    schemas.register('float_bounds', Bounds());\r\n    schemas.register('int_range', core_1.ChoiceNode([\r\n        {\r\n            type: 'object',\r\n            node: core_1.ObjectNode({\r\n                min: core_1.Opt(Reference('number_provider')),\r\n                max: core_1.Opt(Reference('number_provider'))\r\n            })\r\n        },\r\n        {\r\n            type: 'number',\r\n            node: core_1.NumberNode({ integer: true })\r\n        }\r\n    ], { context: 'range' }));\r\n    const ObjectWithType = (pool, directType, directPath, directDefault, objectDefault, context, cases) => {\r\n        let defaultCase = {};\r\n        if (objectDefault) {\r\n            Object.keys(cases[objectDefault]).forEach(k => {\r\n                defaultCase[k] = core_1.Mod(cases[objectDefault][k], {\r\n                    enabled: path => path.push('type').get() === undefined\r\n                });\r\n            });\r\n        }\r\n        const provider = core_1.ObjectNode({\r\n            type: core_1.Mod(core_1.Opt(StringNode({ validator: 'resource', params: { pool } })), {\r\n                hidden: () => true\r\n            }),\r\n            [core_1.Switch]: [{ push: 'type' }],\r\n            [core_1.Case]: cases,\r\n            ...defaultCase\r\n        }, { context, disableSwitchContext: true });\r\n        const choices = [{\r\n                type: directType,\r\n                node: cases[directDefault][directPath]\r\n            }];\r\n        if (objectDefault) {\r\n            choices.push({\r\n                type: 'object',\r\n                priority: -1,\r\n                node: provider\r\n            });\r\n        }\r\n        Object.keys(cases).forEach(k => {\r\n            choices.push({\r\n                type: k,\r\n                match: (v) => {\r\n                    var _a;\r\n                    const type = 'minecraft:' + ((_a = v === null || v === void 0 ? void 0 : v.type) === null || _a === void 0 ? void 0 : _a.replace(/^minecraft:/, ''));\r\n                    if (type === k)\r\n                        return true;\r\n                    const keys = v ? Object.keys(v) : [];\r\n                    return typeof v === 'object' && ((keys === null || keys === void 0 ? void 0 : keys.length) === 0 || ((keys === null || keys === void 0 ? void 0 : keys.length) === 1 && (keys === null || keys === void 0 ? void 0 : keys[0]) === 'type'));\r\n                },\r\n                node: provider,\r\n                change: (v) => ({ type: k })\r\n            });\r\n        });\r\n        return core_1.ChoiceNode(choices, { context, choiceContext: `${context}.type` });\r\n    };\r\n    schemas.register('number_provider', ObjectWithType('loot_number_provider_type', 'number', 'value', 'minecraft:constant', 'minecraft:uniform', 'number_provider', {\r\n        'minecraft:constant': {\r\n            value: core_1.NumberNode()\r\n        },\r\n        'minecraft:uniform': {\r\n            min: Reference('number_provider'),\r\n            max: Reference('number_provider')\r\n        },\r\n        'minecraft:binomial': {\r\n            n: Reference('number_provider'),\r\n            p: Reference('number_provider')\r\n        },\r\n        'minecraft:score': {\r\n            target: Reference('scoreboard_name_provider'),\r\n            score: StringNode({ validator: 'objective' }),\r\n            scale: core_1.Opt(core_1.NumberNode())\r\n        }\r\n    }));\r\n    schemas.register('scoreboard_name_provider', ObjectWithType('loot_score_provider_type', 'string', 'target', 'minecraft:context', null, 'score_provider', {\r\n        'minecraft:fixed': {\r\n            name: StringNode({ validator: 'entity', params: { amount: 'multiple', type: 'entities', isScoreHolder: true } }) // FIXME: doesn't support selectors\r\n        },\r\n        'minecraft:context': {\r\n            target: core_1.Mod(StringNode({ enum: 'entity_source' }), { default: () => 'this' })\r\n        }\r\n    }));\r\n    schemas.register('nbt_provider', ObjectWithType('loot_nbt_provider_type', 'string', 'target', 'minecraft:context', null, 'nbt_provider', {\r\n        'minecraft:storage': {\r\n            source: StringNode({ validator: 'resource', params: { pool: '$storage' } })\r\n        },\r\n        'minecraft:context': {\r\n            target: core_1.Mod(StringNode({ enum: 'copy_source' }), { default: () => 'this' })\r\n        }\r\n    }));\r\n    exports.FloatProvider = (config) => ObjectWithType('float_provider_type', 'number', 'value', 'minecraft:constant', null, 'float_provider', {\r\n        'minecraft:constant': {\r\n            value: core_1.NumberNode(config)\r\n        },\r\n        'minecraft:uniform': {\r\n            value: core_1.ObjectNode({\r\n                min_inclusive: core_1.NumberNode(config),\r\n                max_exclusive: core_1.NumberNode(config)\r\n            })\r\n        },\r\n        'minecraft:clamped_normal': {\r\n            value: core_1.ObjectNode({\r\n                min: core_1.NumberNode(),\r\n                max: core_1.NumberNode(),\r\n                mean: core_1.NumberNode(),\r\n                deviation: core_1.NumberNode()\r\n            })\r\n        },\r\n        'minecraft:trapezoid': {\r\n            value: core_1.ObjectNode({\r\n                min: core_1.NumberNode(),\r\n                max: core_1.NumberNode(),\r\n                plateau: core_1.NumberNode()\r\n            })\r\n        }\r\n    });\r\n    schemas.register('float_provider', exports.FloatProvider());\r\n    exports.IntProvider = (config) => ObjectWithType('int_provider_type', 'number', 'value', 'minecraft:constant', null, 'int_provider', {\r\n        'minecraft:constant': {\r\n            value: core_1.NumberNode({ integer: true, ...config })\r\n        },\r\n        'minecraft:uniform': {\r\n            value: core_1.ObjectNode({\r\n                min_inclusive: core_1.NumberNode({ integer: true, ...config }),\r\n                max_inclusive: core_1.NumberNode({ integer: true, ...config })\r\n            })\r\n        },\r\n        'minecraft:biased_to_bottom': {\r\n            value: core_1.ObjectNode({\r\n                min_inclusive: core_1.NumberNode({ integer: true, ...config }),\r\n                max_inclusive: core_1.NumberNode({ integer: true, ...config })\r\n            })\r\n        },\r\n        'minecraft:clamped': {\r\n            value: core_1.ObjectNode({\r\n                min_inclusive: core_1.NumberNode({ integer: true, ...config }),\r\n                max_inclusive: core_1.NumberNode({ integer: true, ...config }),\r\n                source: Reference('int_provider')\r\n            })\r\n        }\r\n    });\r\n    schemas.register('int_provider', exports.IntProvider());\r\n    schemas.register('vertical_anchor', core_1.ChoiceNode(['absolute', 'above_bottom', 'below_top'].map(t => ({\r\n        type: t,\r\n        match: v => (v === null || v === void 0 ? void 0 : v[t]) !== undefined,\r\n        change: v => { var _a, _b, _c; return ({ [t]: (_c = (_b = (_a = v.absolute) !== null && _a !== void 0 ? _a : v.above_bottom) !== null && _b !== void 0 ? _b : v.below_top) !== null && _c !== void 0 ? _c : 0 }); },\r\n        node: core_1.ObjectNode({\r\n            [t]: core_1.NumberNode({ integer: true, min: -2048, max: 2047 })\r\n        })\r\n    })), { context: 'vertical_anchor' }));\r\n    schemas.register('height_provider', ObjectWithType('height_provider_type', 'number', 'value', 'minecraft:constant', null, 'height_provider', {\r\n        'minecraft:constant': {\r\n            value: Reference('vertical_anchor')\r\n        },\r\n        'minecraft:uniform': {\r\n            min_inclusive: Reference('vertical_anchor'),\r\n            max_inclusive: Reference('vertical_anchor')\r\n        },\r\n        'minecraft:biased_to_bottom': {\r\n            min_inclusive: Reference('vertical_anchor'),\r\n            max_inclusive: Reference('vertical_anchor'),\r\n            inner: core_1.Opt(core_1.NumberNode({ integer: true, min: 1 }))\r\n        },\r\n        'minecraft:very_biased_to_bottom': {\r\n            min_inclusive: Reference('vertical_anchor'),\r\n            max_inclusive: Reference('vertical_anchor'),\r\n            inner: core_1.Opt(core_1.NumberNode({ integer: true, min: 1 }))\r\n        },\r\n        'minecraft:trapezoid': {\r\n            min_inclusive: Reference('vertical_anchor'),\r\n            max_inclusive: Reference('vertical_anchor'),\r\n            plateau: core_1.Opt(core_1.NumberNode({ integer: true }))\r\n        }\r\n    }));\r\n    exports.InclusiveRange = (config) => core_1.ObjectNode({\r\n        min_inclusive: core_1.NumberNode(config),\r\n        max_inclusive: core_1.NumberNode(config)\r\n    }, { context: 'range' });\r\n    schemas.register('noise_parameters', core_1.Mod(core_1.ObjectNode({\r\n        firstOctave: core_1.NumberNode({ integer: true }),\r\n        amplitudes: core_1.ListNode(core_1.NumberNode())\r\n    }, { context: 'noise_parameters' }), {\r\n        default: () => ({\r\n            firstOctave: -7,\r\n            amplitudes: [1, 1]\r\n        })\r\n    }));\r\n    exports.ConditionCases = (entitySourceNode = StringNode({ enum: 'entity_source' })) => ({\r\n        'minecraft:alternative': {\r\n            terms: core_1.ListNode(Reference('condition'))\r\n        },\r\n        'minecraft:block_state_property': {\r\n            block: StringNode({ validator: 'resource', params: { pool: 'block' } }),\r\n            properties: core_1.MapNode(StringNode(), StringNode(), { validation: { validator: 'block_state_map', params: { id: ['pop', { push: 'block' }] } } })\r\n        },\r\n        'minecraft:damage_source_properties': {\r\n            predicate: Reference('damage_source_predicate')\r\n        },\r\n        'minecraft:entity_properties': {\r\n            entity: entitySourceNode,\r\n            predicate: Reference('entity_predicate')\r\n        },\r\n        'minecraft:entity_scores': {\r\n            entity: entitySourceNode,\r\n            scores: core_1.MapNode(StringNode({ validator: 'objective' }), Reference('int_range'))\r\n        },\r\n        'minecraft:inverted': {\r\n            term: Reference('condition')\r\n        },\r\n        'minecraft:killed_by_player': {\r\n            inverse: core_1.Opt(core_1.BooleanNode())\r\n        },\r\n        'minecraft:location_check': {\r\n            offsetX: core_1.Opt(core_1.NumberNode({ integer: true })),\r\n            offsetY: core_1.Opt(core_1.NumberNode({ integer: true })),\r\n            offsetZ: core_1.Opt(core_1.NumberNode({ integer: true })),\r\n            predicate: Reference('location_predicate')\r\n        },\r\n        'minecraft:match_tool': {\r\n            predicate: Reference('item_predicate')\r\n        },\r\n        'minecraft:random_chance': {\r\n            chance: core_1.NumberNode({ min: 0, max: 1 })\r\n        },\r\n        'minecraft:random_chance_with_looting': {\r\n            chance: core_1.NumberNode({ min: 0, max: 1 }),\r\n            looting_multiplier: core_1.NumberNode()\r\n        },\r\n        'minecraft:reference': {\r\n            name: StringNode({ validator: 'resource', params: { pool: '$predicate' } })\r\n        },\r\n        'minecraft:table_bonus': {\r\n            enchantment: StringNode({ validator: 'resource', params: { pool: 'enchantment' } }),\r\n            chances: core_1.ListNode(core_1.NumberNode({ min: 0, max: 1 }))\r\n        },\r\n        'minecraft:time_check': {\r\n            value: Reference('int_range'),\r\n            period: core_1.Opt(core_1.NumberNode({ integer: true }))\r\n        },\r\n        'minecraft:value_check': {\r\n            value: Reference('number_provider'),\r\n            range: Reference('int_range')\r\n        },\r\n        'minecraft:weather_check': {\r\n            raining: core_1.Opt(core_1.BooleanNode()),\r\n            thundering: core_1.Opt(core_1.BooleanNode())\r\n        }\r\n    });\r\n    exports.FunctionCases = (conditions, copySourceNode = StringNode({ enum: 'copy_source' }), entitySourceNode = StringNode({ enum: 'entity_source' })) => {\r\n        const cases = {\r\n            'minecraft:apply_bonus': {\r\n                enchantment: StringNode({ validator: 'resource', params: { pool: 'enchantment' } }),\r\n                formula: StringNode({ validator: 'resource', params: { pool: collections.get('loot_table_apply_bonus_formula') } }),\r\n                parameters: core_1.Mod(core_1.ObjectNode({\r\n                    bonusMultiplier: core_1.Mod(core_1.NumberNode(), {\r\n                        enabled: path => path.pop().push('formula').get() === 'minecraft:uniform_bonus_count'\r\n                    }),\r\n                    extra: core_1.Mod(core_1.NumberNode(), {\r\n                        enabled: path => path.pop().push('formula').get() === 'minecraft:binomial_with_bonus_count'\r\n                    }),\r\n                    probability: core_1.Mod(core_1.NumberNode(), {\r\n                        enabled: path => path.pop().push('formula').get() === 'minecraft:binomial_with_bonus_count'\r\n                    })\r\n                }), {\r\n                    enabled: path => path.push('formula').get() !== 'minecraft:ore_drops'\r\n                })\r\n            },\r\n            'minecraft:copy_name': {\r\n                source: copySourceNode\r\n            },\r\n            'minecraft:copy_nbt': {\r\n                source: Reference('nbt_provider'),\r\n                ops: core_1.ListNode(core_1.ObjectNode({\r\n                    source: StringNode({ validator: 'nbt_path', params: { category: { getter: 'copy_source', path: ['pop', 'pop', 'pop', { push: 'source' }] } } }),\r\n                    target: StringNode({ validator: 'nbt_path', params: { category: 'minecraft:item' } }),\r\n                    op: StringNode({ enum: ['replace', 'append', 'merge'] })\r\n                }, { context: 'nbt_operation' }))\r\n            },\r\n            'minecraft:copy_state': {\r\n                block: StringNode({ validator: 'resource', params: { pool: 'block' } }),\r\n                properties: core_1.ListNode(StringNode({ validator: 'block_state_key', params: { id: ['pop', 'pop', { push: 'block' }] } }))\r\n            },\r\n            'minecraft:enchant_randomly': {\r\n                enchantments: core_1.Opt(core_1.ListNode(StringNode({ validator: 'resource', params: { pool: 'enchantment' } })))\r\n            },\r\n            'minecraft:enchant_with_levels': {\r\n                levels: Reference('number_provider'),\r\n                treasure: core_1.Opt(core_1.BooleanNode())\r\n            },\r\n            'minecraft:exploration_map': {\r\n                destination: core_1.Opt(StringNode({ enum: 'map_feature' })),\r\n                decoration: core_1.Opt(StringNode({ enum: 'map_decoration' })),\r\n                zoom: core_1.Opt(core_1.NumberNode({ integer: true })),\r\n                search_radius: core_1.Opt(core_1.NumberNode({ integer: true })),\r\n                skip_existing_chunks: core_1.Opt(core_1.BooleanNode())\r\n            },\r\n            'minecraft:fill_player_head': {\r\n                entity: entitySourceNode\r\n            },\r\n            'minecraft:limit_count': {\r\n                limit: Reference('int_range')\r\n            },\r\n            'minecraft:looting_enchant': {\r\n                count: Reference('number_provider'),\r\n                limit: core_1.Opt(core_1.NumberNode({ integer: true }))\r\n            },\r\n            'minecraft:set_attributes': {\r\n                modifiers: core_1.ListNode(Reference('attribute_modifier'))\r\n            },\r\n            'minecraft:set_banner_pattern': {\r\n                patterns: core_1.ListNode(core_1.ObjectNode({\r\n                    pattern: StringNode({ enum: 'banner_pattern' }),\r\n                    color: StringNode({ enum: 'dye_color' })\r\n                })),\r\n                append: core_1.Opt(core_1.BooleanNode())\r\n            },\r\n            'minecraft:set_contents': {\r\n                entries: core_1.ListNode(Reference('loot_entry'))\r\n            },\r\n            'minecraft:set_count': {\r\n                count: Reference('number_provider'),\r\n                add: core_1.Opt(core_1.BooleanNode())\r\n            },\r\n            'minecraft:set_damage': {\r\n                damage: Reference('number_provider'),\r\n                add: core_1.Opt(core_1.BooleanNode())\r\n            },\r\n            'minecraft:set_enchantments': {\r\n                enchantments: core_1.MapNode(StringNode({ validator: 'resource', params: { pool: 'enchantment' } }), Reference('number_provider')),\r\n                add: core_1.Opt(core_1.BooleanNode())\r\n            },\r\n            'minecraft:set_loot_table': {\r\n                name: StringNode({ validator: 'resource', params: { pool: '$loot_table' } }),\r\n                seed: core_1.Opt(core_1.NumberNode({ integer: true }))\r\n            },\r\n            'minecraft:set_lore': {\r\n                entity: core_1.Opt(entitySourceNode),\r\n                lore: core_1.ListNode(Reference('text_component')),\r\n                replace: core_1.Opt(core_1.BooleanNode())\r\n            },\r\n            'minecraft:set_name': {\r\n                entity: core_1.Opt(entitySourceNode),\r\n                name: core_1.Opt(Reference('text_component'))\r\n            },\r\n            'minecraft:set_nbt': {\r\n                tag: StringNode({ validator: 'nbt', params: { registry: { category: 'minecraft:item' } } })\r\n            },\r\n            'minecraft:set_stew_effect': {\r\n                effects: core_1.Opt(core_1.ListNode(core_1.ObjectNode({\r\n                    type: StringNode({ validator: 'resource', params: { pool: 'mob_effect' } }),\r\n                    duration: Reference('number_provider')\r\n                })))\r\n            }\r\n        };\r\n        const res = {};\r\n        collections.get('loot_function_type').forEach(f => {\r\n            res[f] = { ...cases[f], ...conditions };\r\n        });\r\n        return res;\r\n    };\r\n    exports.DimensionTypePresets = (node) => core_1.ObjectOrPreset(StringNode({ validator: 'resource', params: { pool: '$dimension_type' } }), node, {\r\n        'minecraft:overworld': exports.DefaultDimensionType,\r\n        'minecraft:the_nether': {\r\n            name: 'minecraft:the_nether',\r\n            ultrawarm: true,\r\n            natural: false,\r\n            shrunk: true,\r\n            piglin_safe: true,\r\n            respawn_anchor_works: true,\r\n            bed_works: false,\r\n            has_raids: false,\r\n            has_skylight: false,\r\n            has_ceiling: true,\r\n            ambient_light: 0.1,\r\n            fixed_time: 18000,\r\n            logical_height: 128,\r\n            effects: 'minecraft:the_nether',\r\n            infiniburn: 'minecraft:infiniburn_nether',\r\n            min_y: 0,\r\n            height: 256,\r\n        },\r\n        'minecraft:the_end': {\r\n            name: 'minecraft:the_end',\r\n            ultrawarm: false,\r\n            natural: false,\r\n            shrunk: false,\r\n            piglin_safe: false,\r\n            respawn_anchor_works: false,\r\n            bed_works: false,\r\n            has_raids: true,\r\n            has_skylight: false,\r\n            has_ceiling: false,\r\n            ambient_light: 0,\r\n            fixed_time: 6000,\r\n            logical_height: 256,\r\n            effects: 'minecraft:the_end',\r\n            infiniburn: 'minecraft:infiniburn_end',\r\n            min_y: 0,\r\n            height: 256,\r\n        }\r\n    });\r\n    exports.NoiseSettingsPresets = (node) => core_1.ObjectOrPreset(StringNode({ validator: 'resource', params: { pool: '$worldgen/noise_settings' } }), node, {\r\n        'minecraft:overworld': exports.DefaultNoiseSettings,\r\n        'minecraft:nether': {\r\n            bedrock_roof_position: 0,\r\n            bedrock_floor_position: 0,\r\n            sea_level: 32,\r\n            noise_caves_enabled: false,\r\n            deepslate_enabled: false,\r\n            ore_veins_enabled: false,\r\n            noodle_caves_enabled: false,\r\n            disable_mob_generation: false,\r\n            aquifers_enabled: false,\r\n            default_block: {\r\n                Name: 'minecraft:netherrack'\r\n            },\r\n            default_fluid: {\r\n                Properties: {\r\n                    level: '0'\r\n                },\r\n                Name: 'minecraft:lava'\r\n            },\r\n            noise: {\r\n                min_y: 0,\r\n                height: 128,\r\n                size_horizontal: 1,\r\n                size_vertical: 2,\r\n                density_factor: 0,\r\n                density_offset: -0.030078125,\r\n                simplex_surface_noise: false,\r\n                use_legacy_random: true,\r\n                top_slide: {\r\n                    target: 0.9375,\r\n                    size: 3,\r\n                    offset: 0\r\n                },\r\n                bottom_slide: {\r\n                    target: 2.5,\r\n                    size: 4,\r\n                    offset: -1\r\n                },\r\n                sampling: {\r\n                    xz_scale: 1.0,\r\n                    y_scale: 3.0,\r\n                    xz_factor: 80.0,\r\n                    y_factor: 60.0\r\n                }\r\n            },\r\n            octaves: {\r\n                erosion: {\r\n                    firstOctave: -7,\r\n                    amplitudes: [1, 1]\r\n                },\r\n                weirdness: {\r\n                    firstOctave: -7,\r\n                    amplitudes: [1, 1]\r\n                },\r\n                shift: {\r\n                    firstOctave: 0,\r\n                    amplitudes: [0]\r\n                },\r\n                temperature: {\r\n                    firstOctave: -7,\r\n                    amplitudes: [1, 1]\r\n                },\r\n                humidity: {\r\n                    firstOctave: -7,\r\n                    amplitudes: [1, 1]\r\n                },\r\n                continentalness: {\r\n                    firstOctave: -7,\r\n                    amplitudes: [1, 1]\r\n                }\r\n            },\r\n            structures: {\r\n                structures: DefaultStructureSettings,\r\n            }\r\n        },\r\n        'minecraft:end': {\r\n            bedrock_roof_position: -2147483648,\r\n            bedrock_floor_position: -2147483648,\r\n            sea_level: 0,\r\n            noise_caves_enabled: false,\r\n            deepslate_enabled: false,\r\n            ore_veins_enabled: false,\r\n            noodle_caves_enabled: false,\r\n            disable_mob_generation: false,\r\n            aquifers_enabled: false,\r\n            default_block: {\r\n                Name: 'minecraft:end_stone'\r\n            },\r\n            default_fluid: {\r\n                Name: 'minecraft:air'\r\n            },\r\n            noise: {\r\n                min_y: 0,\r\n                height: 128,\r\n                size_horizontal: 2,\r\n                size_vertical: 1,\r\n                density_factor: 0,\r\n                density_offset: 0,\r\n                island_noise_override: true,\r\n                simplex_surface_noise: true,\r\n                use_legacy_random: true,\r\n                top_slide: {\r\n                    target: -23.4375,\r\n                    size: 64,\r\n                    offset: -46\r\n                },\r\n                bottom_slide: {\r\n                    target: -0.234375,\r\n                    size: 7,\r\n                    offset: 1\r\n                },\r\n                sampling: {\r\n                    xz_scale: 2.0,\r\n                    y_scale: 1.0,\r\n                    xz_factor: 80.0,\r\n                    y_factor: 160.0\r\n                }\r\n            },\r\n            octaves: {\r\n                erosion: {\r\n                    firstOctave: 0,\r\n                    amplitudes: [0]\r\n                },\r\n                weirdness: {\r\n                    firstOctave: 0,\r\n                    amplitudes: [0]\r\n                },\r\n                shift: {\r\n                    firstOctave: 0,\r\n                    amplitudes: [0]\r\n                },\r\n                temperature: {\r\n                    firstOctave: 0,\r\n                    amplitudes: [0]\r\n                },\r\n                humidity: {\r\n                    firstOctave: 0,\r\n                    amplitudes: [0]\r\n                },\r\n                continentalness: {\r\n                    firstOctave: 0,\r\n                    amplitudes: [0]\r\n                }\r\n            },\r\n            structures: {\r\n                structures: DefaultStructureSettings\r\n            }\r\n        },\r\n        'minecraft:amplified': {\r\n            bedrock_roof_position: -2147483648,\r\n            bedrock_floor_position: 0,\r\n            sea_level: 63,\r\n            noise_caves_enabled: true,\r\n            deepslate_enabled: true,\r\n            ore_veins_enabled: true,\r\n            noodle_caves_enabled: true,\r\n            disable_mob_generation: false,\r\n            aquifers_enabled: true,\r\n            default_block: {\r\n                Name: 'minecraft:stone'\r\n            },\r\n            default_fluid: {\r\n                Properties: {\r\n                    level: '0'\r\n                },\r\n                Name: 'minecraft:water'\r\n            },\r\n            noise: {\r\n                min_y: -64,\r\n                height: 384,\r\n                size_horizontal: 1,\r\n                size_vertical: 2,\r\n                density_factor: 1,\r\n                density_offset: -0.51875,\r\n                random_density_offset: true,\r\n                simplex_surface_noise: true,\r\n                amplified: true,\r\n                top_slide: {\r\n                    target: -0.078125,\r\n                    size: 2,\r\n                    offset: 8\r\n                },\r\n                bottom_slide: {\r\n                    target: 0.1171875,\r\n                    size: 3,\r\n                    offset: 0\r\n                },\r\n                sampling: {\r\n                    xz_scale: 0.9999999814507745,\r\n                    y_scale: 0.9999999814507745,\r\n                    xz_factor: 80,\r\n                    y_factor: 160\r\n                }\r\n            },\r\n            octaves: {\r\n                erosion: {\r\n                    firstOctave: -9,\r\n                    amplitudes: [1, 1, 0, 1, 1]\r\n                },\r\n                weirdness: {\r\n                    firstOctave: -7,\r\n                    amplitudes: [1, 2, 1, 0, 0, 0]\r\n                },\r\n                shift: {\r\n                    firstOctave: -3,\r\n                    amplitudes: [1, 1, 1, 0]\r\n                },\r\n                temperature: {\r\n                    firstOctave: -9,\r\n                    amplitudes: [1.5, 0, 1, 0, 0, 0]\r\n                },\r\n                humidity: {\r\n                    firstOctave: -7,\r\n                    amplitudes: [1, 1, 0, 0, 0, 0]\r\n                },\r\n                continentalness: {\r\n                    firstOctave: -9,\r\n                    amplitudes: [1, 1, 2, 2, 2, 1, 1, 1, 1]\r\n                }\r\n            },\r\n            structures: {\r\n                stronghold: {\r\n                    distance: 32,\r\n                    spread: 3,\r\n                    count: 128\r\n                },\r\n                structures: DefaultStructureSettings,\r\n            },\r\n        },\r\n        'minecraft:caves': {\r\n            bedrock_roof_position: 0,\r\n            bedrock_floor_position: 0,\r\n            sea_level: 32,\r\n            noise_caves_enabled: false,\r\n            deepslate_enabled: false,\r\n            ore_veins_enabled: false,\r\n            noodle_caves_enabled: false,\r\n            disable_mob_generation: false,\r\n            aquifers_enabled: false,\r\n            default_block: {\r\n                Name: 'minecraft:stone'\r\n            },\r\n            default_fluid: {\r\n                Properties: {\r\n                    level: '0'\r\n                },\r\n                Name: 'minecraft:water'\r\n            },\r\n            noise: {\r\n                min_y: 0,\r\n                height: 128,\r\n                size_horizontal: 1,\r\n                size_vertical: 2,\r\n                density_factor: 0,\r\n                density_offset: -0.030078125,\r\n                simplex_surface_noise: false,\r\n                use_legacy_random: true,\r\n                top_slide: {\r\n                    target: 0.9375,\r\n                    size: 3,\r\n                    offset: 0\r\n                },\r\n                bottom_slide: {\r\n                    target: 2.5,\r\n                    size: 4,\r\n                    offset: -1\r\n                },\r\n                sampling: {\r\n                    xz_scale: 1.0,\r\n                    y_scale: 3.0,\r\n                    xz_factor: 80.0,\r\n                    y_factor: 60.0\r\n                }\r\n            },\r\n            octaves: {\r\n                erosion: {\r\n                    firstOctave: -7,\r\n                    amplitudes: [1, 1]\r\n                },\r\n                weirdness: {\r\n                    firstOctave: -7,\r\n                    amplitudes: [1, 1]\r\n                },\r\n                shift: {\r\n                    firstOctave: 0,\r\n                    amplitudes: [0]\r\n                },\r\n                temperature: {\r\n                    firstOctave: -7,\r\n                    amplitudes: [1, 1]\r\n                },\r\n                humidity: {\r\n                    firstOctave: -7,\r\n                    amplitudes: [1, 1]\r\n                },\r\n                continentalness: {\r\n                    firstOctave: -7,\r\n                    amplitudes: [1, 1]\r\n                }\r\n            },\r\n            structures: {\r\n                stronghold: {\r\n                    distance: 32,\r\n                    spread: 3,\r\n                    count: 128\r\n                },\r\n                structures: DefaultStructureSettings,\r\n            }\r\n        },\r\n        'minecraft:floating_islands': {\r\n            bedrock_roof_position: -2147483648,\r\n            bedrock_floor_position: -2147483648,\r\n            sea_level: 0,\r\n            noise_caves_enabled: false,\r\n            deepslate_enabled: false,\r\n            ore_veins_enabled: false,\r\n            noodle_caves_enabled: false,\r\n            disable_mob_generation: false,\r\n            aquifers_enabled: false,\r\n            default_block: {\r\n                Name: 'minecraft:stone'\r\n            },\r\n            default_fluid: {\r\n                Properties: {\r\n                    level: '0'\r\n                },\r\n                Name: 'minecraft:water'\r\n            },\r\n            noise: {\r\n                min_y: 0,\r\n                height: 128,\r\n                size_horizontal: 2,\r\n                size_vertical: 1,\r\n                density_factor: 0,\r\n                density_offset: 0,\r\n                island_noise_override: true,\r\n                simplex_surface_noise: true,\r\n                use_legacy_random: true,\r\n                top_slide: {\r\n                    target: -23.4375,\r\n                    size: 64,\r\n                    offset: -46\r\n                },\r\n                bottom_slide: {\r\n                    target: -0.234375,\r\n                    size: 7,\r\n                    offset: 1\r\n                },\r\n                sampling: {\r\n                    xz_scale: 2.0,\r\n                    y_scale: 1.0,\r\n                    xz_factor: 80.0,\r\n                    y_factor: 160.0\r\n                }\r\n            },\r\n            octaves: {\r\n                erosion: {\r\n                    firstOctave: 0,\r\n                    amplitudes: [0]\r\n                },\r\n                weirdness: {\r\n                    firstOctave: 0,\r\n                    amplitudes: [0]\r\n                },\r\n                shift: {\r\n                    firstOctave: 0,\r\n                    amplitudes: [0]\r\n                },\r\n                temperature: {\r\n                    firstOctave: 0,\r\n                    amplitudes: [0]\r\n                },\r\n                humidity: {\r\n                    firstOctave: 0,\r\n                    amplitudes: [0]\r\n                },\r\n                continentalness: {\r\n                    firstOctave: 0,\r\n                    amplitudes: [0]\r\n                }\r\n            },\r\n            structures: {\r\n                stronghold: {\r\n                    distance: 32,\r\n                    spread: 3,\r\n                    count: 128\r\n                },\r\n                structures: DefaultStructureSettings,\r\n            }\r\n        }\r\n    });\r\n}\r\nexports.initCommonSchemas = initCommonSchemas;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.initConditionSchemas = void 0;\r\nconst core_1 = require(\"@mcschema/core\");\r\nconst Common_1 = require(\"./Common\");\r\nfunction initConditionSchemas(schemas, collections) {\r\n    const Reference = core_1.Reference.bind(undefined, schemas);\r\n    const StringNode = core_1.StringNode.bind(undefined, collections);\r\n    schemas.register('predicate', core_1.ObjectOrList(Reference('condition'), { choiceContext: 'condition' }));\r\n    schemas.register('condition', core_1.Mod(core_1.ObjectNode({\r\n        condition: StringNode({ validator: 'resource', params: { pool: 'loot_condition_type' } }),\r\n        [core_1.Switch]: [{ push: 'condition' }],\r\n        [core_1.Case]: Common_1.ConditionCases()\r\n    }, { category: 'predicate', context: 'condition' }), {\r\n        default: () => ({\r\n            condition: 'minecraft:entity_properties',\r\n            entity: 'this'\r\n        })\r\n    }));\r\n}\r\nexports.initConditionSchemas = initConditionSchemas;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.initDimensionSchemas = void 0;\r\nconst core_1 = require(\"@mcschema/core\");\r\nconst Common_1 = require(\"./Common\");\r\nfunction initDimensionSchemas(schemas, collections) {\r\n    const Reference = core_1.Reference.bind(undefined, schemas);\r\n    const StringNode = core_1.StringNode.bind(undefined, collections);\r\n    schemas.register('dimension', core_1.Mod(core_1.ObjectNode({\r\n        type: Common_1.DimensionTypePresets(Reference('dimension_type')),\r\n        generator: core_1.ObjectNode({\r\n            type: StringNode({ validator: 'resource', params: { pool: 'worldgen/chunk_generator' } }),\r\n            [core_1.Switch]: [{ push: 'type' }],\r\n            [core_1.Case]: {\r\n                'minecraft:noise': {\r\n                    seed: core_1.NumberNode({ integer: true }),\r\n                    settings: Common_1.NoiseSettingsPresets(Reference('noise_settings')),\r\n                    biome_source: core_1.ObjectNode({\r\n                        type: StringNode({ validator: 'resource', params: { pool: 'worldgen/biome_source' } }),\r\n                        [core_1.Switch]: [{ push: 'type' }],\r\n                        [core_1.Case]: {\r\n                            'minecraft:fixed': {\r\n                                biome: StringNode({ validator: 'resource', params: { pool: '$worldgen/biome' } })\r\n                            },\r\n                            'minecraft:multi_noise': {\r\n                                preset: core_1.Opt(StringNode({ validator: 'resource', params: { pool: ['minecraft:overworld', 'minecraft:nether'] } })),\r\n                                biomes: core_1.Mod(core_1.ListNode(Reference('generator_biome')), {\r\n                                    enabled: path => path.push('preset').get() === undefined,\r\n                                    default: () => [{\r\n                                            biome: 'minecraft:plains'\r\n                                        }]\r\n                                })\r\n                            },\r\n                            'minecraft:checkerboard': {\r\n                                scale: core_1.Opt(core_1.NumberNode({ integer: true, min: 0, max: 62 })),\r\n                                biomes: core_1.ListNode(StringNode({ validator: 'resource', params: { pool: '$worldgen/biome' } }))\r\n                            },\r\n                            'minecraft:the_end': {\r\n                                seed: core_1.NumberNode({ integer: true })\r\n                            }\r\n                        }\r\n                    }, { category: 'predicate', disableSwitchContext: true })\r\n                },\r\n                'minecraft:flat': {\r\n                    settings: core_1.ObjectNode({\r\n                        biome: core_1.Opt(StringNode({ validator: 'resource', params: { pool: '$worldgen/biome' } })),\r\n                        lakes: core_1.Opt(core_1.BooleanNode()),\r\n                        features: core_1.Opt(core_1.BooleanNode()),\r\n                        layers: core_1.ListNode(Reference('generator_layer')),\r\n                        structures: Reference('generator_structures')\r\n                    })\r\n                }\r\n            }\r\n        }, { disableSwitchContext: true })\r\n    }, { category: 'pool', context: 'dimension' }), {\r\n        default: () => {\r\n            const seed = Math.floor(Math.random() * (4294967296)) - 2147483648;\r\n            return {\r\n                type: 'minecraft:overworld',\r\n                generator: {\r\n                    type: 'minecraft:noise',\r\n                    seed,\r\n                    biome_source: {\r\n                        type: 'minecraft:fixed',\r\n                        seed,\r\n                        biome: 'minecraft:plains'\r\n                    },\r\n                    settings: 'minecraft:overworld'\r\n                }\r\n            };\r\n        }\r\n    }));\r\n    const ClimateParameter = core_1.ChoiceNode([\r\n        {\r\n            type: 'number',\r\n            node: core_1.NumberNode({ min: -2, max: 2 }),\r\n            change: (v) => { var _a; return (_a = v[0]) !== null && _a !== void 0 ? _a : 0; }\r\n        },\r\n        {\r\n            type: 'list',\r\n            node: core_1.ListNode(core_1.NumberNode({ min: -2, max: 2 }), { minLength: 2, maxLength: 2 }),\r\n            change: (v) => [v !== null && v !== void 0 ? v : 0, v !== null && v !== void 0 ? v : 0]\r\n        }\r\n    ]);\r\n    schemas.register('generator_biome', core_1.Mod(core_1.ObjectNode({\r\n        biome: StringNode({ validator: 'resource', params: { pool: '$worldgen/biome' } }),\r\n        parameters: core_1.ObjectNode({\r\n            temperature: ClimateParameter,\r\n            humidity: ClimateParameter,\r\n            continentalness: ClimateParameter,\r\n            erosion: ClimateParameter,\r\n            weirdness: ClimateParameter,\r\n            depth: ClimateParameter,\r\n            offset: core_1.NumberNode({ min: 0, max: 1 })\r\n        })\r\n    }, { context: 'generator_biome' }), {\r\n        default: () => ({\r\n            biome: 'minecraft:plains',\r\n            parameters: {\r\n                altitude: 0,\r\n                temperature: 0,\r\n                humidity: 0,\r\n                weirdness: 0,\r\n                offset: 0\r\n            }\r\n        })\r\n    }));\r\n}\r\nexports.initDimensionSchemas = initDimensionSchemas;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.initDimensionTypeSchemas = void 0;\r\nconst core_1 = require(\"@mcschema/core\");\r\nconst Common_1 = require(\"./Common\");\r\nfunction initDimensionTypeSchemas(schemas, collections) {\r\n    const StringNode = core_1.StringNode.bind(undefined, collections);\r\n    schemas.register('dimension_type', core_1.Mod(core_1.ObjectNode({\r\n        ultrawarm: core_1.BooleanNode(),\r\n        natural: core_1.BooleanNode(),\r\n        piglin_safe: core_1.BooleanNode(),\r\n        respawn_anchor_works: core_1.BooleanNode(),\r\n        bed_works: core_1.BooleanNode(),\r\n        has_raids: core_1.BooleanNode(),\r\n        has_skylight: core_1.BooleanNode(),\r\n        has_ceiling: core_1.BooleanNode(),\r\n        coordinate_scale: core_1.NumberNode({ min: 0.00001, max: 30000000 }),\r\n        ambient_light: core_1.NumberNode(),\r\n        fixed_time: core_1.Opt(core_1.NumberNode({ integer: true })),\r\n        logical_height: core_1.NumberNode({ integer: true, min: 0, max: 4096 }),\r\n        effects: core_1.Opt(StringNode({ enum: ['minecraft:overworld', 'minecraft:the_nether', 'minecraft:the_end'] })),\r\n        infiniburn: StringNode({ validator: 'resource', params: { pool: '$tag/block' } }),\r\n        min_y: core_1.NumberNode({ integer: true, min: -2048, max: 2047 }),\r\n        height: core_1.NumberNode({ integer: true, min: 0, max: 4096 })\r\n    }, { context: 'dimension_type' }), node => ({\r\n        default: () => Common_1.DefaultDimensionType,\r\n        validate: (path, value, errors, options) => {\r\n            value = node.validate(path, value, errors, options);\r\n            if ((value === null || value === void 0 ? void 0 : value.min_y) + (value === null || value === void 0 ? void 0 : value.height) > 2047) {\r\n                errors.add(path.push('height'), 'error.min_y_plus_height', 2047);\r\n            }\r\n            if ((value === null || value === void 0 ? void 0 : value.logical_height) > (value === null || value === void 0 ? void 0 : value.height)) {\r\n                errors.add(path.push('logical_height'), 'error.logical_height');\r\n            }\r\n            if ((value === null || value === void 0 ? void 0 : value.height) % 16 !== 0) {\r\n                errors.add(path.push('height'), 'error.height_multiple', 16);\r\n            }\r\n            if ((value === null || value === void 0 ? void 0 : value.min_y) % 16 !== 0) {\r\n                errors.add(path.push('min_y'), 'error.min_y_multiple', 16);\r\n            }\r\n            return value;\r\n        }\r\n    })));\r\n}\r\nexports.initDimensionTypeSchemas = initDimensionTypeSchemas;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.initItemModifierSchemas = void 0;\r\nconst core_1 = require(\"@mcschema/core\");\r\nconst Common_1 = require(\"./Common\");\r\nfunction initItemModifierSchemas(schemas, collections) {\r\n    const Reference = core_1.Reference.bind(undefined, schemas);\r\n    const StringNode = core_1.StringNode.bind(undefined, collections);\r\n    schemas.register('item_modifier', core_1.ObjectOrList(Reference('function'), { choiceContext: 'function' }));\r\n    const conditions = {\r\n        conditions: core_1.Opt(core_1.ListNode(Reference('condition')))\r\n    };\r\n    schemas.register('function', core_1.Mod(core_1.ObjectNode({\r\n        function: StringNode({ validator: 'resource', params: { pool: 'loot_function_type' } }),\r\n        [core_1.Switch]: [{ push: 'function' }],\r\n        [core_1.Case]: Common_1.FunctionCases(conditions)\r\n    }, { category: 'function', context: 'function' }), {\r\n        default: () => [{\r\n                function: 'minecraft:set_count',\r\n                count: 1\r\n            }]\r\n    }));\r\n}\r\nexports.initItemModifierSchemas = initItemModifierSchemas;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.LootFunctions = exports.LootConditions = exports.LootCopySources = exports.LootEntitySources = exports.LootTableTypes = void 0;\r\nexports.LootTableTypes = new Map([\r\n    ['minecraft:advancement_entity', { requires: [7 /* Origin */, 8 /* ThisEntity */], allows: [] }],\r\n    ['minecraft:advancement_reward', { requires: [7 /* Origin */, 8 /* ThisEntity */], allows: [] }],\r\n    ['minecraft:barter', { requires: [8 /* ThisEntity */], allows: [] }],\r\n    ['minecraft:block', { requires: [1 /* BlockState */, 7 /* Origin */, 9 /* Tool */], allows: [0 /* BlockEntity */, 4 /* ExplosionRadius */, 8 /* ThisEntity */] }],\r\n    ['minecraft:chest', { requires: [7 /* Origin */], allows: [8 /* ThisEntity */] }],\r\n    ['minecraft:command', { requires: [7 /* Origin */], allows: [8 /* ThisEntity */] }],\r\n    ['minecraft:empty', { requires: [], allows: [] }],\r\n    ['minecraft:entity', { requires: [2 /* DamageSource */, 7 /* Origin */, 8 /* ThisEntity */], allows: [3 /* DirectKillerEntity */, 5 /* KillerEntity */, 6 /* LastDamagePlayer */] }],\r\n    ['minecraft:fishing', { requires: [7 /* Origin */, 9 /* Tool */], allows: [8 /* ThisEntity */] }],\r\n    ['minecraft:generic', { requires: [2 /* DamageSource */, 0 /* BlockEntity */, 1 /* BlockState */, 3 /* DirectKillerEntity */, 4 /* ExplosionRadius */, 5 /* KillerEntity */, 6 /* LastDamagePlayer */, 7 /* Origin */, 8 /* ThisEntity */, 9 /* Tool */], allows: [] }],\r\n    ['minecraft:gift', { requires: [7 /* Origin */, 8 /* ThisEntity */], allows: [] }],\r\n    ['minecraft:selector', { requires: [7 /* Origin */], allows: [8 /* ThisEntity */] }]\r\n]);\r\n/**\r\n * A map from loot entity sources to an array of their required context.\r\n */\r\nexports.LootEntitySources = new Map([\r\n    ['direct_killer', [3 /* DirectKillerEntity */]],\r\n    ['killer', [5 /* KillerEntity */]],\r\n    ['killer_player', [5 /* KillerEntity */]],\r\n    ['this', [8 /* ThisEntity */]]\r\n]);\r\n/**\r\n * A map from loot copy sources to an array of their required context.\r\n */\r\nexports.LootCopySources = new Map([\r\n    ['block_entity', [0 /* BlockEntity */]],\r\n    ['killer', [5 /* KillerEntity */]],\r\n    ['killer_player', [5 /* KillerEntity */]],\r\n    ['this', [8 /* ThisEntity */]]\r\n]);\r\n/**\r\n * A map from loot condition IDs to an array of their required context.\r\n */\r\nexports.LootConditions = new Map([\r\n    ['minecraft:alternative', []],\r\n    ['minecraft:block_state_property', [1 /* BlockState */]],\r\n    ['minecraft:damage_source_properties', [2 /* DamageSource */]],\r\n    ['minecraft:entity_properties', [7 /* Origin */]],\r\n    ['minecraft:entity_scores', []],\r\n    ['minecraft:inverted', []],\r\n    ['minecraft:killed_by_player', [6 /* LastDamagePlayer */]],\r\n    ['minecraft:location_check', []],\r\n    ['minecraft:match_tool', [9 /* Tool */]],\r\n    ['minecraft:random_chance', []],\r\n    ['minecraft:random_chance_with_looting', [5 /* KillerEntity */]],\r\n    ['minecraft:reference', []],\r\n    ['minecraft:survives_explosion', [4 /* ExplosionRadius */]],\r\n    ['minecraft:table_bonus', [9 /* Tool */]],\r\n    ['minecraft:time_check', []],\r\n    ['minecraft:weather_check', []]\r\n]);\r\n/**\r\n * A map from loot function IDs to an array of their required context.\r\n */\r\nexports.LootFunctions = new Map([\r\n    ['minecraft:apply_bonus', [9 /* Tool */]],\r\n    ['minecraft:copy_name', []],\r\n    ['minecraft:copy_nbt', []],\r\n    ['minecraft:copy_state', [1 /* BlockState */]],\r\n    ['minecraft:enchant_randomly', []],\r\n    ['minecraft:enchant_with_levels', []],\r\n    ['minecraft:exploration_map', [7 /* Origin */]],\r\n    ['minecraft:explosion_decay', []],\r\n    ['minecraft:fill_player_head', []],\r\n    ['minecraft:furnace_smelt', []],\r\n    ['minecraft:limit_count', []],\r\n    ['minecraft:looting_enchant', [5 /* KillerEntity */]],\r\n    ['minecraft:set_attributes', []],\r\n    ['minecraft:set_banner_pattern', []],\r\n    ['minecraft:set_contents', []],\r\n    ['minecraft:set_count', []],\r\n    ['minecraft:set_damage', []],\r\n    ['minecraft:set_loot_table', []],\r\n    ['minecraft:set_lore', []],\r\n    ['minecraft:set_name', []],\r\n    ['minecraft:set_nbt', []],\r\n    ['minecraft:set_stew_effect', []]\r\n]);\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.initLootTableSchemas = void 0;\r\nconst core_1 = require(\"@mcschema/core\");\r\nconst LootContext_1 = require(\"../LootContext\");\r\nconst Common_1 = require(\"./Common\");\r\nfunction initLootTableSchemas(schemas, collections) {\r\n    const Reference = core_1.Reference.bind(undefined, schemas);\r\n    const StringNode = core_1.StringNode.bind(undefined, collections);\r\n    const conditions = {\r\n        conditions: core_1.Opt(core_1.ListNode(Reference('loot_condition')))\r\n    };\r\n    const functionsAndConditions = {\r\n        functions: core_1.Opt(core_1.ListNode(Reference('loot_function'))),\r\n        ...conditions\r\n    };\r\n    function compileSwitchNode(contextMap, collectionID, getNode) {\r\n        const cases = [];\r\n        const getAvailableOptions = (providedContext) => collections\r\n            .get(collectionID)\r\n            .filter(t => {\r\n            var _a;\r\n            const requiredContext = (_a = contextMap.get(t)) !== null && _a !== void 0 ? _a : [];\r\n            return requiredContext.every(c => providedContext.includes(c));\r\n        });\r\n        for (const [tableType, { allows, requires }] of LootContext_1.LootTableTypes) {\r\n            const providedContext = [...allows, ...requires];\r\n            cases.push({\r\n                match: path => path.getModel().get(new core_1.Path(['type'])) === tableType,\r\n                node: getNode(getAvailableOptions(providedContext))\r\n            });\r\n        }\r\n        cases.push({ match: _ => true, node: getNode(collectionID) });\r\n        return core_1.SwitchNode(cases);\r\n    }\r\n    const conditionIDSwtichNode = compileSwitchNode(LootContext_1.LootConditions, 'loot_condition_type', type => StringNode({ validator: 'resource', params: { pool: type instanceof Array ? type : `loot_condition_type` } }));\r\n    const functionIDSwtichNode = compileSwitchNode(LootContext_1.LootFunctions, 'loot_function_type', type => StringNode({ validator: 'resource', params: { pool: type instanceof Array ? type : `loot_function_type` } }));\r\n    const entitySourceSwtichNode = compileSwitchNode(LootContext_1.LootEntitySources, 'entity_source', type => StringNode({ enum: type }));\r\n    const copySourceSwtichNode = compileSwitchNode(LootContext_1.LootCopySources, 'copy_source', type => StringNode({ enum: type }));\r\n    schemas.register('loot_table', core_1.Mod(core_1.ObjectNode({\r\n        type: core_1.Opt(StringNode({ validator: \"resource\", params: { pool: collections.get('loot_context_type') } })),\r\n        pools: core_1.Opt(core_1.ListNode(core_1.Mod(core_1.ObjectNode({\r\n            rolls: Reference('number_provider'),\r\n            bonus_rolls: core_1.Opt(Reference('number_provider')),\r\n            entries: core_1.ListNode(Reference('loot_entry')),\r\n            ...functionsAndConditions\r\n        }, { category: 'pool', context: 'loot_pool' }), {\r\n            default: () => ({\r\n                rolls: 1,\r\n                entries: [{\r\n                        type: 'minecraft:item',\r\n                        name: 'minecraft:stone'\r\n                    }]\r\n            })\r\n        }))),\r\n        functions: core_1.Opt(core_1.ListNode(Reference('loot_function')))\r\n    }, { context: 'loot_table' }), {\r\n        default: () => ({\r\n            pools: [{\r\n                    rolls: 1,\r\n                    entries: [{\r\n                            type: 'minecraft:item',\r\n                            name: 'minecraft:stone'\r\n                        }]\r\n                }]\r\n        })\r\n    }));\r\n    const weightMod = {\r\n        enabled: path => {\r\n            var _a;\r\n            return ((_a = path.pop().get()) === null || _a === void 0 ? void 0 : _a.length) > 1\r\n                && !['minecraft:alternatives', 'minecraft:group', 'minecraft:sequence'].includes(path.push('type').get());\r\n        }\r\n    };\r\n    schemas.register('loot_entry', core_1.Mod(core_1.ObjectNode({\r\n        type: StringNode({ validator: 'resource', params: { pool: 'loot_pool_entry_type' } }),\r\n        weight: core_1.Opt(core_1.Mod(core_1.NumberNode({ integer: true, min: 1 }), weightMod)),\r\n        quality: core_1.Opt(core_1.Mod(core_1.NumberNode({ integer: true }), weightMod)),\r\n        [core_1.Switch]: [{ push: 'type' }],\r\n        [core_1.Case]: {\r\n            'minecraft:alternatives': {\r\n                children: core_1.ListNode(Reference('loot_entry')),\r\n                ...functionsAndConditions\r\n            },\r\n            'minecraft:dynamic': {\r\n                name: StringNode(),\r\n                ...functionsAndConditions\r\n            },\r\n            'minecraft:group': {\r\n                children: core_1.ListNode(Reference('loot_entry')),\r\n                ...functionsAndConditions\r\n            },\r\n            'minecraft:item': {\r\n                name: StringNode({ validator: 'resource', params: { pool: 'item' } }),\r\n                ...functionsAndConditions\r\n            },\r\n            'minecraft:loot_table': {\r\n                name: StringNode({ validator: 'resource', params: { pool: '$loot_table' } }),\r\n                ...functionsAndConditions\r\n            },\r\n            'minecraft:sequence': {\r\n                children: core_1.ListNode(Reference('loot_entry')),\r\n                ...functionsAndConditions\r\n            },\r\n            'minecraft:tag': {\r\n                name: StringNode({ validator: 'resource', params: { pool: '$tag/item' } }),\r\n                expand: core_1.Opt(core_1.BooleanNode()),\r\n                ...functionsAndConditions\r\n            }\r\n        }\r\n    }, { context: 'loot_entry' }), {\r\n        default: () => ({\r\n            type: 'minecraft:item',\r\n            name: 'minecraft:stone'\r\n        })\r\n    }));\r\n    schemas.register('loot_function', core_1.Mod(core_1.ObjectNode({\r\n        function: functionIDSwtichNode,\r\n        [core_1.Switch]: [{ push: 'function' }],\r\n        [core_1.Case]: Common_1.FunctionCases(conditions, copySourceSwtichNode, entitySourceSwtichNode)\r\n    }, { category: 'function', context: 'function' }), {\r\n        default: () => ({\r\n            function: 'minecraft:set_count',\r\n            count: 1\r\n        })\r\n    }));\r\n    schemas.register('loot_condition', core_1.Mod(core_1.ObjectNode({\r\n        condition: conditionIDSwtichNode,\r\n        [core_1.Switch]: [{ push: 'condition' }],\r\n        [core_1.Case]: Common_1.ConditionCases(entitySourceSwtichNode)\r\n    }, { category: 'predicate', context: 'condition' }), {\r\n        default: () => ({\r\n            condition: 'minecraft:random_chance',\r\n            chance: 0.5\r\n        })\r\n    }));\r\n    schemas.register('attribute_modifier', core_1.Mod(core_1.ObjectNode({\r\n        attribute: StringNode({ validator: 'resource', params: { pool: 'attribute' } }),\r\n        name: StringNode(),\r\n        amount: Reference('number_provider'),\r\n        operation: StringNode({ enum: ['addition', 'multiply_base', 'multiply_total'] }),\r\n        slot: core_1.StringOrList(StringNode({ enum: 'slot' }))\r\n    }, { context: 'attribute_modifier' }), {\r\n        default: () => ({\r\n            attribute: 'minecraft:generic.max_health',\r\n            name: '',\r\n            amount: 1,\r\n            operation: 'addition',\r\n            slot: 'mainhand'\r\n        })\r\n    }));\r\n}\r\nexports.initLootTableSchemas = initLootTableSchemas;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.initPackMcmetaSchemas = void 0;\r\nconst core_1 = require(\"@mcschema/core\");\r\nconst CURRENT_PACK_FORMAT = 7;\r\nfunction initPackMcmetaSchemas(schemas, _) {\r\n    const getSimpleString = (jsonText) => { var _a, _b; return jsonText instanceof Array ? getSimpleString(jsonText[0]) : (_b = (_a = jsonText === null || jsonText === void 0 ? void 0 : jsonText.text) !== null && _a !== void 0 ? _a : jsonText === null || jsonText === void 0 ? void 0 : jsonText.toString()) !== null && _b !== void 0 ? _b : ''; };\r\n    schemas.register('pack_mcmeta', core_1.Mod(core_1.ObjectNode({\r\n        pack: core_1.Mod(core_1.ObjectNode({\r\n            pack_format: core_1.Mod(core_1.NumberNode({ integer: true, min: CURRENT_PACK_FORMAT, max: CURRENT_PACK_FORMAT }), {\r\n                default: () => CURRENT_PACK_FORMAT,\r\n                canUpdate: (_p, v) => v !== CURRENT_PACK_FORMAT,\r\n                update: () => [{ name: 'pack_format', params: [CURRENT_PACK_FORMAT], newValue: CURRENT_PACK_FORMAT }]\r\n            }),\r\n            description: core_1.Reference(schemas, 'text_component')\r\n        }), {\r\n            default: () => ({\r\n                pack_format: CURRENT_PACK_FORMAT,\r\n                description: ''\r\n            })\r\n        })\r\n    }), {\r\n        default: () => ({\r\n            pack: {\r\n                pack_format: CURRENT_PACK_FORMAT,\r\n                description: ''\r\n            }\r\n        })\r\n    }));\r\n}\r\nexports.initPackMcmetaSchemas = initPackMcmetaSchemas;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.initPredicatesSchemas = void 0;\r\nconst core_1 = require(\"@mcschema/core\");\r\nfunction initPredicatesSchemas(schemas, collections) {\r\n    const Reference = core_1.Reference.bind(undefined, schemas);\r\n    const StringNode = core_1.StringNode.bind(undefined, collections);\r\n    const StateChoice = core_1.ChoiceNode([\r\n        {\r\n            type: 'string',\r\n            node: StringNode(),\r\n            change: v => (typeof v === 'boolean' || typeof v === 'number') ? v.toString() : ''\r\n        },\r\n        {\r\n            type: 'number',\r\n            node: core_1.NumberNode(),\r\n            change: v => (typeof v === 'string') ? parseInt(v) : 0\r\n        },\r\n        {\r\n            type: 'object',\r\n            node: core_1.ObjectNode({\r\n                min: core_1.Opt(core_1.NumberNode({ integer: true })),\r\n                max: core_1.Opt(core_1.NumberNode({ integer: true }))\r\n            }),\r\n            change: v => (typeof v === 'number') ? ({ min: v, max: v }) : ({})\r\n        },\r\n        {\r\n            type: 'boolean',\r\n            node: core_1.BooleanNode(),\r\n            change: v => v === 'true' || v === 1\r\n        }\r\n    ]);\r\n    schemas.register('item_predicate', core_1.ObjectNode({\r\n        items: core_1.Opt(core_1.ListNode(StringNode({ validator: 'resource', params: { pool: 'item' } }))),\r\n        tag: core_1.Opt(StringNode({ validator: 'resource', params: { pool: '$tag/item' } })),\r\n        count: Reference('int_bounds'),\r\n        durability: Reference('int_bounds'),\r\n        potion: core_1.Opt(StringNode({ validator: 'resource', params: { pool: 'potion' } })),\r\n        nbt: core_1.Opt(StringNode({ validator: 'nbt', params: { registry: { category: 'minecraft:item', id: ['pop', { push: 'item' }] } } })),\r\n        enchantments: core_1.Opt(core_1.ListNode(Reference('enchantment_predicate')))\r\n    }, { context: 'item' }));\r\n    schemas.register('enchantment_predicate', core_1.ObjectNode({\r\n        enchantment: core_1.Opt(StringNode({ validator: 'resource', params: { pool: 'enchantment' } })),\r\n        levels: Reference('int_bounds')\r\n    }, { context: 'enchantment' }));\r\n    schemas.register('block_predicate', core_1.ObjectNode({\r\n        blocks: core_1.Opt(core_1.ListNode(StringNode({ validator: 'resource', params: { pool: 'block' } }))),\r\n        tag: core_1.Opt(StringNode({ validator: 'resource', params: { pool: '$tag/block' } })),\r\n        nbt: core_1.Opt(StringNode({ validator: 'nbt', params: { registry: { category: 'minecraft:block', id: ['pop', { push: 'block' }] } } })),\r\n        state: core_1.Opt(core_1.MapNode(StringNode(), StateChoice, { validation: { validator: 'block_state_map', params: { id: ['pop', { push: 'block' }] } } }))\r\n    }, { context: 'block' }));\r\n    schemas.register('fluid_predicate', core_1.ObjectNode({\r\n        fluid: core_1.Opt(StringNode({ validator: 'resource', params: { pool: 'fluid' } })),\r\n        tag: core_1.Opt(StringNode({ validator: 'resource', params: { pool: '$tag/fluid' } })),\r\n        state: core_1.Opt(core_1.MapNode(StringNode(), StateChoice))\r\n    }, { context: 'fluid' }));\r\n    schemas.register('location_predicate', core_1.ObjectNode({\r\n        position: core_1.Opt(core_1.ObjectNode({\r\n            x: Reference('float_bounds'),\r\n            y: Reference('float_bounds'),\r\n            z: Reference('float_bounds')\r\n        })),\r\n        biome: core_1.Opt(StringNode({ validator: 'resource', params: { pool: '$worldgen/biome' } })),\r\n        feature: core_1.Opt(StringNode({ enum: collections.get('worldgen/structure_feature').map(v => v.slice(10)) })),\r\n        dimension: core_1.Opt(StringNode({ validator: 'resource', params: { pool: '$dimension' } })),\r\n        light: core_1.Opt(core_1.ObjectNode({\r\n            light: Reference('int_bounds')\r\n        })),\r\n        smokey: core_1.Opt(core_1.BooleanNode()),\r\n        block: core_1.Opt(Reference('block_predicate')),\r\n        fluid: core_1.Opt(Reference('fluid_predicate'))\r\n    }, { context: 'location' }));\r\n    schemas.register('statistic_predicate', core_1.ObjectNode({\r\n        type: StringNode({ validator: 'resource', params: { pool: 'stat_type' } }),\r\n        stat: StringNode(),\r\n        value: Reference('int_bounds'),\r\n        [core_1.Switch]: [{ push: 'type' }],\r\n        [core_1.Case]: {\r\n            'minecraft:mined': {\r\n                stat: StringNode({ validator: 'resource', params: { pool: 'block' } })\r\n            },\r\n            'minecraft:crafted': {\r\n                stat: StringNode({ validator: 'resource', params: { pool: 'item' } })\r\n            },\r\n            'minecraft:used': {\r\n                stat: StringNode({ validator: 'resource', params: { pool: 'item' } })\r\n            },\r\n            'minecraft:broken': {\r\n                stat: StringNode({ validator: 'resource', params: { pool: 'item' } })\r\n            },\r\n            'minecraft:picked_up': {\r\n                stat: StringNode({ validator: 'resource', params: { pool: 'item' } })\r\n            },\r\n            'minecraft:dropped': {\r\n                stat: StringNode({ validator: 'resource', params: { pool: 'item' } })\r\n            },\r\n            'minecraft:killed': {\r\n                stat: StringNode({ validator: 'resource', params: { pool: 'entity_type' } })\r\n            },\r\n            'minecraft:killed_by': {\r\n                stat: StringNode({ validator: 'resource', params: { pool: 'entity_type' } })\r\n            },\r\n            'minecraft:custom': {\r\n                stat: StringNode({ validator: 'resource', params: { pool: 'custom_stat' } })\r\n            }\r\n        }\r\n    }));\r\n    schemas.register('player_predicate', core_1.ObjectNode({\r\n        gamemode: core_1.Opt(StringNode({ enum: 'gamemode' })),\r\n        level: Reference('int_bounds'),\r\n        advancements: core_1.Opt(core_1.MapNode(StringNode({ validator: 'resource', params: { pool: '$advancement' } }), core_1.ChoiceNode([\r\n            { type: 'boolean', node: core_1.BooleanNode(), change: _ => true },\r\n            {\r\n                type: 'object', node: core_1.MapNode(StringNode(), core_1.BooleanNode())\r\n            }\r\n        ]))),\r\n        recipes: core_1.Opt(core_1.MapNode(StringNode({ validator: 'resource', params: { pool: '$recipe' } }), core_1.BooleanNode())),\r\n        stats: core_1.Opt(core_1.ListNode(Reference('statistic_predicate'))),\r\n        looking_at: core_1.Opt(Reference('entity_predicate'))\r\n    }, { context: 'player' }));\r\n    schemas.register('status_effect_predicate', core_1.ObjectNode({\r\n        amplifier: Reference('int_bounds'),\r\n        duration: Reference('int_bounds'),\r\n        ambient: core_1.Opt(core_1.BooleanNode()),\r\n        visible: core_1.Opt(core_1.BooleanNode())\r\n    }, { context: 'status_effect' }));\r\n    schemas.register('distance_predicate', core_1.ObjectNode({\r\n        x: Reference('float_bounds'),\r\n        y: Reference('float_bounds'),\r\n        z: Reference('float_bounds'),\r\n        absolute: Reference('float_bounds'),\r\n        horizontal: Reference('float_bounds')\r\n    }, { context: 'distance' }));\r\n    schemas.register('entity_predicate', core_1.ObjectNode({\r\n        type: core_1.Opt(StringNode({ validator: 'resource', params: { pool: 'entity_type', allowTag: true } })),\r\n        nbt: core_1.Opt(StringNode({ validator: 'nbt', params: { registry: { category: 'minecraft:entity', id: ['pop', { push: 'type' }] } } })),\r\n        team: core_1.Opt(StringNode({ validator: 'team' })),\r\n        location: core_1.Opt(Reference('location_predicate')),\r\n        stepping_on: core_1.Opt(Reference('location_predicate')),\r\n        distance: core_1.Opt(Reference('distance_predicate')),\r\n        flags: core_1.Opt(core_1.ObjectNode({\r\n            is_on_fire: core_1.Opt(core_1.BooleanNode()),\r\n            is_sneaking: core_1.Opt(core_1.BooleanNode()),\r\n            is_sprinting: core_1.Opt(core_1.BooleanNode()),\r\n            is_swimming: core_1.Opt(core_1.BooleanNode()),\r\n            is_baby: core_1.Opt(core_1.BooleanNode())\r\n        })),\r\n        equipment: core_1.Opt(core_1.MapNode(StringNode({ enum: 'slot' }), Reference('item_predicate'))),\r\n        player: core_1.Opt(Reference('player_predicate')),\r\n        vehicle: core_1.Opt(Reference('entity_predicate')),\r\n        passenger: core_1.Opt(Reference('entity_predicate')),\r\n        targeted_entity: core_1.Opt(Reference('entity_predicate')),\r\n        lightning_bolt: core_1.Opt(core_1.ObjectNode({\r\n            blocks_set_on_fire: core_1.Opt(Reference('int_bounds')),\r\n            entity_struck: core_1.Opt(Reference('entity_predicate'))\r\n        })),\r\n        fishing_hook: core_1.Opt(core_1.ObjectNode({\r\n            in_open_water: core_1.Opt(core_1.BooleanNode())\r\n        })),\r\n        effects: core_1.Opt(core_1.MapNode(StringNode({ validator: 'resource', params: { pool: 'mob_effect' } }), Reference('status_effect_predicate')))\r\n    }, { context: 'entity' }));\r\n    schemas.register('damage_source_predicate', core_1.ObjectNode({\r\n        is_explosion: core_1.Opt(core_1.BooleanNode()),\r\n        is_fire: core_1.Opt(core_1.BooleanNode()),\r\n        is_magic: core_1.Opt(core_1.BooleanNode()),\r\n        is_projectile: core_1.Opt(core_1.BooleanNode()),\r\n        is_lightning: core_1.Opt(core_1.BooleanNode()),\r\n        bypasses_armor: core_1.Opt(core_1.BooleanNode()),\r\n        bypasses_invulnerability: core_1.Opt(core_1.BooleanNode()),\r\n        bypasses_magic: core_1.Opt(core_1.BooleanNode()),\r\n        source_entity: core_1.Opt(Reference('entity_predicate')),\r\n        direct_entity: core_1.Opt(Reference('entity_predicate'))\r\n    }, { context: 'damage_source' }));\r\n    schemas.register('damage_predicate', core_1.ObjectNode({\r\n        dealt: Reference('float_bounds'),\r\n        taken: Reference('float_bounds'),\r\n        blocked: core_1.Opt(core_1.BooleanNode()),\r\n        source_entity: core_1.Opt(Reference('entity_predicate')),\r\n        type: core_1.Opt(Reference('damage_source_predicate'))\r\n    }, { context: 'damage' }));\r\n}\r\nexports.initPredicatesSchemas = initPredicatesSchemas;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.initRecipeSchemas = void 0;\r\nconst core_1 = require(\"@mcschema/core\");\r\nfunction initRecipeSchemas(schemas, collections) {\r\n    const Reference = core_1.Reference.bind(undefined, schemas);\r\n    const StringNode = core_1.StringNode.bind(undefined, collections);\r\n    schemas.register('recipe', core_1.Mod(core_1.ObjectNode({\r\n        type: StringNode({ validator: 'resource', params: { pool: 'recipe_serializer' } }),\r\n        [core_1.Switch]: [{ push: 'type' }],\r\n        [core_1.Case]: {\r\n            'minecraft:crafting_shaped': {\r\n                group: core_1.Opt(StringNode({ enum: 'recipe_group', additional: true })),\r\n                pattern: core_1.ListNode(StringNode()),\r\n                key: core_1.MapNode(StringNode(), // TODO: add validation\r\n                Reference('recipe_ingredient')),\r\n                result: Reference('recipe_result')\r\n            },\r\n            'minecraft:crafting_shapeless': {\r\n                group: core_1.Opt(StringNode()),\r\n                ingredients: core_1.ListNode(Reference('recipe_ingredient')),\r\n                result: Reference('recipe_result')\r\n            },\r\n            'minecraft:smelting': {\r\n                group: core_1.Opt(StringNode()),\r\n                ingredient: Reference('recipe_ingredient'),\r\n                result: StringNode({ validator: 'resource', params: { pool: 'item' } }),\r\n                experience: core_1.Opt(core_1.NumberNode()),\r\n                cookingtime: core_1.Opt(core_1.Mod(core_1.NumberNode({ integer: true }), { default: () => 200 }))\r\n            },\r\n            'minecraft:blasting': {\r\n                group: core_1.Opt(StringNode()),\r\n                ingredient: Reference('recipe_ingredient'),\r\n                result: StringNode({ validator: 'resource', params: { pool: 'item' } }),\r\n                experience: core_1.Opt(core_1.NumberNode()),\r\n                cookingtime: core_1.Opt(core_1.Mod(core_1.NumberNode({ integer: true }), { default: () => 100 }))\r\n            },\r\n            'minecraft:smoking': {\r\n                group: core_1.Opt(StringNode()),\r\n                ingredient: Reference('recipe_ingredient'),\r\n                result: StringNode({ validator: 'resource', params: { pool: 'item' } }),\r\n                experience: core_1.Opt(core_1.NumberNode()),\r\n                cookingtime: core_1.Opt(core_1.Mod(core_1.NumberNode({ integer: true }), { default: () => 100 }))\r\n            },\r\n            'minecraft:campfire_cooking': {\r\n                group: core_1.Opt(StringNode()),\r\n                ingredient: Reference('recipe_ingredient'),\r\n                result: StringNode({ validator: 'resource', params: { pool: 'item' } }),\r\n                experience: core_1.Opt(core_1.NumberNode()),\r\n                cookingtime: core_1.Opt(core_1.Mod(core_1.NumberNode({ integer: true }), { default: () => 100 }))\r\n            },\r\n            'minecraft:stonecutting': {\r\n                group: core_1.Opt(StringNode()),\r\n                ingredient: Reference('recipe_ingredient'),\r\n                result: StringNode({ validator: 'resource', params: { pool: 'item' } }),\r\n                count: core_1.NumberNode({ integer: true })\r\n            },\r\n            'minecraft:smithing': {\r\n                group: core_1.Opt(StringNode()),\r\n                base: Reference('recipe_ingredient_object'),\r\n                addition: Reference('recipe_ingredient_object'),\r\n                result: Reference('recipe_result')\r\n            }\r\n        }\r\n    }, { context: 'recipe' }), {\r\n        default: () => ({\r\n            type: 'minecraft:crafting_shaped'\r\n        })\r\n    }));\r\n    schemas.register('recipe_ingredient', core_1.Mod(core_1.ChoiceNode([\r\n        {\r\n            type: 'object',\r\n            node: Reference('recipe_ingredient_object'),\r\n            change: v => v[0]\r\n        },\r\n        {\r\n            type: 'list',\r\n            node: core_1.ListNode(Reference('recipe_ingredient_object')),\r\n            change: v => [v]\r\n        }\r\n    ]), {\r\n        default: () => ({\r\n            item: 'minecraft:stone'\r\n        })\r\n    }));\r\n    schemas.register('recipe_ingredient_object', core_1.Mod(core_1.ObjectNode({\r\n        item: core_1.Opt(StringNode({ validator: 'resource', params: { pool: 'item' } })),\r\n        tag: core_1.Opt(StringNode({ validator: 'resource', params: { pool: '$tag/item' } }))\r\n    }), {\r\n        default: () => ({\r\n            item: 'minecraft:stone'\r\n        })\r\n    }));\r\n    schemas.register('recipe_result', core_1.Mod(core_1.ObjectNode({\r\n        item: StringNode({ validator: 'resource', params: { pool: 'item' } }),\r\n        count: core_1.Opt(core_1.Mod(core_1.NumberNode({ integer: true }), { default: () => 1 }))\r\n    }), {\r\n        default: () => ({\r\n            item: 'minecraft:stone'\r\n        })\r\n    }));\r\n}\r\nexports.initRecipeSchemas = initRecipeSchemas;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.initTagsSchemas = void 0;\r\nconst core_1 = require(\"@mcschema/core\");\r\nfunction initTagsSchemas(schemas, collections) {\r\n    const StringNode = core_1.StringNode.bind(undefined, collections);\r\n    const TagBase = (type) => core_1.Mod(core_1.ObjectNode({\r\n        replace: core_1.Opt(core_1.BooleanNode()),\r\n        values: core_1.ListNode(core_1.ChoiceNode([\r\n            {\r\n                type: 'string',\r\n                node: StringNode({ validator: 'resource', params: { pool: type, allowTag: true } }),\r\n                change: v => v.id\r\n            },\r\n            {\r\n                type: 'object',\r\n                node: core_1.ObjectNode({\r\n                    id: StringNode({ validator: 'resource', params: { pool: type, allowTag: true, allowUnknown: true } }),\r\n                    required: core_1.BooleanNode()\r\n                }),\r\n                change: v => ({ id: v })\r\n            }\r\n        ])),\r\n    }, { context: 'tag' }), {\r\n        default: () => ({\r\n            values: []\r\n        })\r\n    });\r\n    schemas.register('block_tag', TagBase('block'));\r\n    schemas.register('entity_type_tag', TagBase('entity_type'));\r\n    schemas.register('fluid_tag', TagBase('fluid'));\r\n    schemas.register('function_tag', TagBase('$function'));\r\n    schemas.register('game_event_tag', TagBase('game_event'));\r\n    schemas.register('item_tag', TagBase('item'));\r\n}\r\nexports.initTagsSchemas = initTagsSchemas;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.initTextComponentSchemas = void 0;\r\nconst core_1 = require(\"@mcschema/core\");\r\nfunction initTextComponentSchemas(schemas, collections) {\r\n    const Reference = core_1.Reference.bind(undefined, schemas);\r\n    const StringNode = core_1.StringNode.bind(undefined, collections);\r\n    const getSimpleString = (v) => { var _a; return v instanceof Array ? getSimpleString(v[0]) : (_a = v === null || v === void 0 ? void 0 : v.text) !== null && _a !== void 0 ? _a : (typeof v === 'object' ? '' : v === null || v === void 0 ? void 0 : v.toString()); };\r\n    schemas.register('text_component', core_1.Mod(core_1.ChoiceNode([\r\n        {\r\n            type: 'object',\r\n            node: Reference('text_component_object'),\r\n            change: v => v instanceof Array ? (typeof v[0] === 'object' ? v[0] : { text: getSimpleString(v[0]) }) : typeof v === 'object' ? v : { text: getSimpleString(v) }\r\n        },\r\n        {\r\n            type: 'list',\r\n            node: Reference('text_component_list'),\r\n            change: v => [v]\r\n        },\r\n        {\r\n            type: 'string',\r\n            priority: 1,\r\n            node: StringNode(),\r\n            change: getSimpleString\r\n        },\r\n        {\r\n            type: 'number',\r\n            node: core_1.NumberNode(),\r\n            change: v => {\r\n                const n = parseFloat(getSimpleString(v));\r\n                return isFinite(n) ? n : (!!v ? 1 : 0);\r\n            }\r\n        },\r\n        {\r\n            type: 'boolean',\r\n            node: core_1.BooleanNode(),\r\n            change: v => {\r\n                const s = getSimpleString(v);\r\n                return s === 'true' || s === 'false' ? s === 'true' : !!s;\r\n            }\r\n        }\r\n    ], { context: 'text_component' }), {\r\n        default: () => ({\r\n            text: \"\"\r\n        })\r\n    }));\r\n    const CommonFields = {\r\n        color: core_1.Opt(StringNode()) /* TODO */,\r\n        font: core_1.Opt(StringNode()),\r\n        bold: core_1.Opt(core_1.BooleanNode()),\r\n        italic: core_1.Opt(core_1.BooleanNode()),\r\n        underlined: core_1.Opt(core_1.BooleanNode()),\r\n        strikethrough: core_1.Opt(core_1.BooleanNode()),\r\n        obfuscated: core_1.Opt(core_1.BooleanNode()),\r\n        insertion: core_1.Opt(StringNode()),\r\n        clickEvent: core_1.Opt(core_1.ObjectNode({\r\n            action: StringNode({ enum: ['open_url', 'open_file', 'run_command', 'suggest_command', 'change_page', 'copy_to_clipboard'] }),\r\n            [core_1.Switch]: [{ push: 'action' }],\r\n            [core_1.Case]: {\r\n                'change_page': {\r\n                    value: StringNode()\r\n                },\r\n                'copy_to_clipboard': {\r\n                    value: StringNode()\r\n                },\r\n                'open_file': {\r\n                    value: StringNode()\r\n                },\r\n                'open_url': {\r\n                    value: StringNode()\r\n                },\r\n                'run_command': {\r\n                    value: StringNode({ validator: 'command', params: { leadingSlash: true, allowPartial: true } })\r\n                },\r\n                'suggest_command': {\r\n                    value: StringNode({ validator: 'command', params: { leadingSlash: true, allowPartial: true } })\r\n                }\r\n            }\r\n        })),\r\n        hoverEvent: core_1.Opt(core_1.ObjectNode({\r\n            action: StringNode({ enum: ['show_text', 'show_item', 'show_entity'] }),\r\n            [core_1.Switch]: [{ push: 'action' }],\r\n            [core_1.Case]: {\r\n                'show_text': {\r\n                    value: core_1.Opt(Reference('text_component')),\r\n                    contents: core_1.Opt(Reference('text_component'))\r\n                },\r\n                'show_item': {\r\n                    value: core_1.Opt(StringNode({ validator: 'nbt', params: { module: 'util::InventoryItem' } })),\r\n                    contents: core_1.Opt(core_1.ObjectNode({\r\n                        id: StringNode({ validator: 'resource', params: { pool: 'item' } }),\r\n                        count: core_1.Opt(core_1.NumberNode({ integer: true })),\r\n                        tag: core_1.Opt(StringNode({ validator: 'nbt', params: { registry: { category: 'minecraft:item', id: ['pop', { push: 'id' }] } } }))\r\n                    }))\r\n                },\r\n                'show_entity': {\r\n                    value: core_1.Opt(core_1.ObjectNode({\r\n                        name: core_1.Opt(StringNode()),\r\n                        type: core_1.Opt(StringNode()),\r\n                        id: core_1.Opt(StringNode())\r\n                    })),\r\n                    contents: core_1.Opt(core_1.Mod(core_1.ObjectNode({\r\n                        name: core_1.Opt(Reference('text_component')),\r\n                        type: StringNode({ validator: 'resource', params: { pool: 'entity_type' } }),\r\n                        id: StringNode({ validator: 'uuid' })\r\n                    }), {\r\n                        default: () => ({\r\n                            type: 'minecraft:pig',\r\n                            id: '00000001-0001-0001-0001-000000000001'\r\n                        })\r\n                    }))\r\n                }\r\n            }\r\n        })),\r\n        extra: core_1.Opt(Reference('text_component_list'))\r\n    };\r\n    schemas.register('text_component_object', core_1.Mod(core_1.ChoiceNode([\r\n        {\r\n            type: 'text',\r\n            match: v => typeof v === 'object',\r\n            change: v => ({ text: '' }),\r\n            priority: -1,\r\n            node: core_1.ObjectNode({\r\n                text: StringNode(),\r\n                ...CommonFields\r\n            })\r\n        },\r\n        {\r\n            type: 'translation',\r\n            match: v => (v === null || v === void 0 ? void 0 : v.translate) !== undefined,\r\n            change: v => ({ translate: '' }),\r\n            node: core_1.ObjectNode({\r\n                translate: StringNode(),\r\n                with: core_1.Opt(Reference('text_component_list')),\r\n                ...CommonFields\r\n            })\r\n        },\r\n        {\r\n            type: 'score',\r\n            match: v => (v === null || v === void 0 ? void 0 : v.score) !== undefined,\r\n            change: v => ({ score: {} }),\r\n            node: core_1.ObjectNode({\r\n                score: core_1.ObjectNode({\r\n                    name: StringNode({ validator: 'entity', params: { amount: 'single', type: 'entities', isScoreHolder: true } }),\r\n                    objective: StringNode({ validator: 'objective' }),\r\n                    value: core_1.Opt(StringNode())\r\n                }),\r\n                ...CommonFields\r\n            })\r\n        },\r\n        {\r\n            type: 'selector',\r\n            match: v => (v === null || v === void 0 ? void 0 : v.selector) !== undefined,\r\n            change: v => ({ selector: '' }),\r\n            node: core_1.ObjectNode({\r\n                selector: StringNode({ validator: 'entity', params: { amount: 'multiple', type: 'entities' } }),\r\n                separator: core_1.Opt(Reference('text_component')),\r\n                ...CommonFields\r\n            })\r\n        },\r\n        {\r\n            type: 'keybind',\r\n            match: v => (v === null || v === void 0 ? void 0 : v.keybind) !== undefined,\r\n            change: v => ({ keybind: '' }),\r\n            node: core_1.ObjectNode({\r\n                keybind: StringNode({ enum: 'keybind', additional: true }),\r\n                ...CommonFields\r\n            })\r\n        },\r\n        {\r\n            type: 'nbt',\r\n            match: v => (v === null || v === void 0 ? void 0 : v.nbt) !== undefined,\r\n            change: v => ({ nbt: '' }),\r\n            node: core_1.ObjectNode({\r\n                nbt: StringNode({ validator: 'nbt_path' }),\r\n                block: core_1.Opt(StringNode({ validator: 'vector', params: { dimension: 3, isInteger: true } })),\r\n                entity: core_1.Opt(StringNode({ validator: 'entity', params: { amount: 'multiple', type: 'entities' } })),\r\n                storage: core_1.Opt(StringNode({ validator: 'resource', params: { pool: '$storage' } })),\r\n                interpret: core_1.Opt(core_1.BooleanNode()),\r\n                separator: core_1.Opt(Reference('text_component')),\r\n                ...CommonFields\r\n            })\r\n        }\r\n    ], { context: 'text_component_object', choiceContext: 'text_component.object' }), {\r\n        default: () => ({\r\n            text: \"\"\r\n        })\r\n    }));\r\n    schemas.register('text_component_list', core_1.Mod(core_1.ListNode(Reference('text_component')), {\r\n        default: () => [{\r\n                text: \"\"\r\n            }]\r\n    }));\r\n}\r\nexports.initTextComponentSchemas = initTextComponentSchemas;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.initBiomeSchemas = void 0;\r\nconst core_1 = require(\"@mcschema/core\");\r\nfunction initBiomeSchemas(schemas, collections) {\r\n    const StringNode = core_1.StringNode.bind(undefined, collections);\r\n    schemas.register('biome', core_1.Mod(core_1.ObjectNode({\r\n        surface_builder: StringNode({ validator: 'resource', params: { pool: '$worldgen/configured_surface_builder' } }),\r\n        temperature: core_1.NumberNode(),\r\n        downfall: core_1.NumberNode(),\r\n        precipitation: StringNode({ enum: ['none', 'rain', 'snow'] }),\r\n        temperature_modifier: core_1.Opt(StringNode({ enum: ['none', 'frozen'] })),\r\n        category: StringNode({ enum: 'biome_category' }),\r\n        player_spawn_friendly: core_1.Opt(core_1.BooleanNode()),\r\n        creature_spawn_probability: core_1.Opt(core_1.NumberNode({ min: 0, max: 1 })),\r\n        effects: core_1.ObjectNode({\r\n            sky_color: core_1.NumberNode({ color: true }),\r\n            fog_color: core_1.NumberNode({ color: true }),\r\n            water_color: core_1.NumberNode({ color: true }),\r\n            water_fog_color: core_1.NumberNode({ color: true }),\r\n            grass_color: core_1.Opt(core_1.NumberNode({ color: true })),\r\n            foliage_color: core_1.Opt(core_1.NumberNode({ color: true })),\r\n            grass_color_modifier: core_1.Opt(StringNode({ enum: ['none', 'dark_forest', 'swamp'] })),\r\n            ambient_sound: core_1.Opt(StringNode()),\r\n            mood_sound: core_1.Opt(core_1.ObjectNode({\r\n                sound: StringNode(),\r\n                tick_delay: core_1.NumberNode({ integer: true }),\r\n                block_search_extent: core_1.NumberNode({ integer: true }),\r\n                offset: core_1.NumberNode()\r\n            })),\r\n            additions_sound: core_1.Opt(core_1.ObjectNode({\r\n                sound: StringNode(),\r\n                tick_chance: core_1.NumberNode({ min: 0, max: 1 })\r\n            })),\r\n            music: core_1.Opt(core_1.ObjectNode({\r\n                sound: StringNode(),\r\n                min_delay: core_1.NumberNode({ integer: true, min: 0 }),\r\n                max_delay: core_1.NumberNode({ integer: true, min: 0 }),\r\n                replace_current_music: core_1.BooleanNode()\r\n            })),\r\n            particle: core_1.Opt(core_1.ObjectNode({\r\n                options: core_1.ObjectNode({\r\n                    type: StringNode()\r\n                }),\r\n                probability: core_1.NumberNode({ min: 0, max: 1 })\r\n            }))\r\n        }),\r\n        spawners: core_1.MapNode(StringNode({ enum: [\r\n                'monster',\r\n                'creature',\r\n                'ambient',\r\n                'axolotls',\r\n                'underground_water_creature',\r\n                'water_creature',\r\n                'water_ambient',\r\n                'misc'\r\n            ] }), core_1.Mod(core_1.ListNode(core_1.ObjectNode({\r\n            type: StringNode({ validator: 'resource', params: { pool: 'entity_type' } }),\r\n            weight: core_1.NumberNode({ integer: true }),\r\n            minCount: core_1.NumberNode({ integer: true }),\r\n            maxCount: core_1.NumberNode({ integer: true })\r\n        })), {\r\n            category: () => 'pool',\r\n            default: () => [{\r\n                    type: 'minecraft:bat',\r\n                    weight: 1\r\n                }]\r\n        })),\r\n        spawn_costs: core_1.MapNode(StringNode({ validator: 'resource', params: { pool: 'entity_type' } }), core_1.Mod(core_1.ObjectNode({\r\n            energy_budget: core_1.NumberNode(),\r\n            charge: core_1.NumberNode()\r\n        }, { category: 'function' }), {\r\n            default: () => ({\r\n                energy_budget: 0.12,\r\n                charge: 1.0\r\n            })\r\n        })),\r\n        carvers: core_1.MapNode(StringNode({ enum: ['air', 'liquid'] }), core_1.Mod(core_1.ListNode(StringNode({ validator: 'resource', params: { pool: '$worldgen/configured_carver' } })), {\r\n            default: () => ['minecraft:cave']\r\n        })),\r\n        features: core_1.ListNode(core_1.Mod(core_1.ListNode(StringNode({ validator: 'resource', params: { pool: '$worldgen/configured_feature' } })), { category: () => 'predicate' }), { maxLength: 10 })\r\n    }, { context: 'biome' }), {\r\n        default: () => ({\r\n            surface_builder: 'minecraft:grass',\r\n            temperature: 0.8,\r\n            downfall: 0.4,\r\n            precipitation: 'rain',\r\n            category: 'plains',\r\n            effects: {\r\n                sky_color: 7907327,\r\n                fog_color: 12638463,\r\n                water_color: 4159204,\r\n                water_fog_color: 329011\r\n            }\r\n        })\r\n    }));\r\n}\r\nexports.initBiomeSchemas = initBiomeSchemas;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.initCarverSchemas = void 0;\r\nconst core_1 = require(\"@mcschema/core\");\r\nconst Common_1 = require(\"../Common\");\r\nfunction initCarverSchemas(schemas, collections) {\r\n    const Reference = core_1.Reference.bind(undefined, schemas);\r\n    const StringNode = core_1.StringNode.bind(undefined, collections);\r\n    const CanyonConfig = {\r\n        vertical_rotation: Common_1.FloatProvider(),\r\n        shape: core_1.ObjectNode({\r\n            distance_factor: Common_1.FloatProvider(),\r\n            thickness: Common_1.FloatProvider(),\r\n            width_smoothness: core_1.NumberNode({ integer: true, min: 0 }),\r\n            horizontal_radius_factor: Common_1.FloatProvider(),\r\n            vertical_radius_default_factor: core_1.NumberNode(),\r\n            vertical_radius_center_factor: core_1.NumberNode()\r\n        })\r\n    };\r\n    const CaveConfig = {\r\n        horizontal_radius_multiplier: Common_1.FloatProvider(),\r\n        vertical_radius_multiplier: Common_1.FloatProvider(),\r\n        floor_level: Common_1.FloatProvider({ min: -1, max: 1 }),\r\n    };\r\n    schemas.register('configured_carver', core_1.Mod(core_1.ObjectNode({\r\n        type: StringNode({ validator: 'resource', params: { pool: 'worldgen/carver' } }),\r\n        config: core_1.ObjectNode({\r\n            probability: core_1.NumberNode({ min: 0, max: 1 }),\r\n            y: Reference('height_provider'),\r\n            yScale: Common_1.FloatProvider(),\r\n            lava_level: Reference('vertical_anchor'),\r\n            debug_settings: core_1.Opt(core_1.ObjectNode({\r\n                debug_mode: core_1.Opt(core_1.BooleanNode()),\r\n                air_state: core_1.Opt(Reference('block_state')),\r\n                water_state: core_1.Opt(Reference('block_state')),\r\n                lava_state: core_1.Opt(Reference('block_state')),\r\n                barrier_state: core_1.Opt(Reference('block_state'))\r\n            })),\r\n            [core_1.Switch]: ['pop', { push: 'type' }],\r\n            [core_1.Case]: {\r\n                'minecraft:canyon': CanyonConfig,\r\n                'minecraft:cave': CaveConfig,\r\n                'minecraft:nether_cave': CaveConfig\r\n            },\r\n        })\r\n    }, { context: 'carver' }), {\r\n        default: () => ({\r\n            type: 'minecraft:cave',\r\n            config: {\r\n                probability: 0.1\r\n            }\r\n        })\r\n    }));\r\n}\r\nexports.initCarverSchemas = initCarverSchemas;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.initDecoratorSchemas = void 0;\r\nconst core_1 = require(\"@mcschema/core\");\r\nconst Common_1 = require(\"../Common\");\r\nfunction initDecoratorSchemas(schemas, collections) {\r\n    const Reference = core_1.Reference.bind(undefined, schemas);\r\n    const StringNode = core_1.StringNode.bind(undefined, collections);\r\n    const CountConfig = {\r\n        count: Common_1.IntProvider({ min: 0, max: 256 })\r\n    };\r\n    schemas.register('configured_decorator', core_1.ObjectNode({\r\n        type: StringNode({ validator: 'resource', params: { pool: 'worldgen/decorator' } }),\r\n        config: core_1.ObjectNode({\r\n            [core_1.Switch]: ['pop', { push: 'type' }],\r\n            [core_1.Case]: {\r\n                'minecraft:block_filter': {\r\n                    offset: Reference('block_pos'),\r\n                    allowed: core_1.Opt(core_1.ListNode(StringNode({ validator: 'resource', params: { pool: 'block' } }))),\r\n                    disallowed: core_1.Opt(core_1.ListNode(StringNode({ validator: 'resource', params: { pool: 'block' } })))\r\n                },\r\n                'minecraft:block_survives_filter': {\r\n                    state: Reference('block_state')\r\n                },\r\n                'minecraft:carving_mask': {\r\n                    step: StringNode({ enum: 'generation_step' })\r\n                },\r\n                'minecraft:cave_surface': {\r\n                    surface: StringNode({ enum: ['floor', 'ceiling'] }),\r\n                    floor_to_ceiling_search_range: core_1.NumberNode({ integer: true })\r\n                },\r\n                'minecraft:chance': {\r\n                    chance: core_1.NumberNode({ integer: true, min: 0 })\r\n                },\r\n                'minecraft:count': CountConfig,\r\n                'minecraft:count_extra': {\r\n                    count: core_1.NumberNode({ integer: true, min: 0 }),\r\n                    extra_count: core_1.NumberNode({ integer: true, min: 0 }),\r\n                    extra_chance: core_1.NumberNode({ min: 0, max: 1 })\r\n                },\r\n                'minecraft:count_multilayer': CountConfig,\r\n                'minecraft:count_noise': {\r\n                    noise_level: core_1.NumberNode(),\r\n                    below_noise: core_1.NumberNode({ integer: true }),\r\n                    above_noise: core_1.NumberNode({ integer: true })\r\n                },\r\n                'minecraft:count_noise_biased': {\r\n                    noise_to_count_ratio: core_1.NumberNode({ integer: true }),\r\n                    noise_factor: core_1.NumberNode(),\r\n                    noise_offset: core_1.Opt(core_1.NumberNode())\r\n                },\r\n                'minecraft:decorated': {\r\n                    outer: Reference('configured_decorator'),\r\n                    inner: Reference('configured_decorator')\r\n                },\r\n                'minecraft:heightmap': {\r\n                    heightmap: StringNode({ enum: 'heightmap_type' })\r\n                },\r\n                'minecraft:heightmap_spread_double': {\r\n                    heightmap: StringNode({ enum: 'heightmap_type' })\r\n                },\r\n                'minecraft:lava_lake': {\r\n                    chance: core_1.NumberNode({ integer: true, min: 0 })\r\n                },\r\n                'minecraft:range': {\r\n                    height: Reference('height_provider')\r\n                },\r\n                'minecraft:surface_relative_threshold': {\r\n                    heightmap: StringNode({ enum: 'heightmap_type' }),\r\n                    min_inclusive: core_1.Opt(core_1.NumberNode({ integer: true })),\r\n                    max_inclusive: core_1.Opt(core_1.NumberNode({ integer: true }))\r\n                },\r\n                'minecraft:water_depth_threshold': {\r\n                    max_water_depth: core_1.NumberNode({ integer: true })\r\n                }\r\n            }\r\n        }, { context: 'decorator', category: 'predicate' })\r\n    }, { context: 'decorator', category: 'predicate' }));\r\n}\r\nexports.initDecoratorSchemas = initDecoratorSchemas;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.initProcessorListSchemas = exports.Processors = void 0;\r\nconst core_1 = require(\"@mcschema/core\");\r\nfunction initProcessorListSchemas(schemas, collections) {\r\n    const Reference = core_1.Reference.bind(undefined, schemas);\r\n    const StringNode = core_1.StringNode.bind(undefined, collections);\r\n    exports.Processors = core_1.ChoiceNode([\r\n        {\r\n            type: 'string',\r\n            node: StringNode({ validator: 'resource', params: { pool: '$worldgen/processor_list' } }),\r\n            change: v => undefined\r\n        },\r\n        {\r\n            type: 'object',\r\n            node: Reference('processor_list'),\r\n            change: v => ({\r\n                processors: [{\r\n                        \"processor_type\": \"minecraft:nop\"\r\n                    }]\r\n            })\r\n        }\r\n    ]);\r\n    schemas.register('processor_list', core_1.Mod(core_1.ObjectNode({\r\n        processors: core_1.ListNode(Reference('processor'))\r\n    }, { context: 'processor_list' }), {\r\n        default: () => ({\r\n            processors: [{\r\n                    processor_type: 'minecraft:rule',\r\n                    rules: [{\r\n                            location_predicate: {\r\n                                predicate_type: 'minecraft:always_true'\r\n                            },\r\n                            input_predicate: {\r\n                                predicate_type: 'minecraft:always_true'\r\n                            }\r\n                        }]\r\n                }]\r\n        })\r\n    }));\r\n    schemas.register('processor', core_1.Mod(core_1.ObjectNode({\r\n        processor_type: StringNode({ validator: 'resource', params: { pool: 'worldgen/structure_processor' } }),\r\n        [core_1.Switch]: [{ push: 'processor_type' }],\r\n        [core_1.Case]: {\r\n            'minecraft:block_age': {\r\n                mossiness: core_1.NumberNode()\r\n            },\r\n            'minecraft:block_ignore': {\r\n                blocks: core_1.ListNode(Reference('block_state'))\r\n            },\r\n            'minecraft:block_rot': {\r\n                integrity: core_1.NumberNode({ min: 0, max: 1 })\r\n            },\r\n            'minecraft:gravity': {\r\n                heightmap: StringNode({ enum: 'heightmap_type' }),\r\n                offset: core_1.NumberNode({ integer: true })\r\n            },\r\n            'minecraft:protected_blocks': {\r\n                value: StringNode({ validator: 'resource', params: { pool: '$tag/block' } })\r\n            },\r\n            'minecraft:rule': {\r\n                rules: core_1.ListNode(Reference('processor_rule'))\r\n            }\r\n        }\r\n    }, { category: 'function', context: 'processor' }), {\r\n        default: () => ({\r\n            processor_type: 'minecraft:rule',\r\n            rules: [{\r\n                    location_predicate: {\r\n                        predicate_type: 'minecraft:always_true'\r\n                    },\r\n                    input_predicate: {\r\n                        predicate_type: 'minecraft:always_true'\r\n                    }\r\n                }]\r\n        })\r\n    }));\r\n    schemas.register('processor_rule', core_1.Mod(core_1.ObjectNode({\r\n        position_predicate: core_1.Opt(Reference('pos_rule_test')),\r\n        location_predicate: Reference('rule_test'),\r\n        input_predicate: Reference('rule_test'),\r\n        output_state: Reference('block_state'),\r\n        output_nbt: core_1.Opt(StringNode({ validator: 'nbt', params: { registry: { category: 'minecraft:block' } } }))\r\n    }, { category: 'predicate', context: 'processor_rule' }), {\r\n        default: () => ({\r\n            location_predicate: {\r\n                predicate_type: 'minecraft:always_true'\r\n            },\r\n            input_predicate: {\r\n                predicate_type: 'minecraft:always_true'\r\n            }\r\n        })\r\n    }));\r\n    const posTestFields = {\r\n        min_dist: core_1.Opt(core_1.NumberNode({ min: 0, max: 255, integer: true })),\r\n        max_dist: core_1.Opt(core_1.NumberNode({ min: 0, max: 255, integer: true })),\r\n        min_chance: core_1.Opt(core_1.NumberNode({ min: 0, max: 1 })),\r\n        max_chance: core_1.Opt(core_1.NumberNode({ min: 0, max: 1 }))\r\n    };\r\n    schemas.register('pos_rule_test', core_1.ObjectNode({\r\n        predicate_type: StringNode({ validator: 'resource', params: { pool: 'pos_rule_test' } }),\r\n        [core_1.Switch]: [{ push: 'predicate_type' }],\r\n        [core_1.Case]: {\r\n            'minecraft:axis_aligned_linear_pos': {\r\n                axis: StringNode({ enum: ['x', 'y', 'z'] }),\r\n                ...posTestFields\r\n            },\r\n            'minecraft:linear_pos': posTestFields\r\n        }\r\n    }, { context: 'pos_rule_test', disableSwitchContext: true }));\r\n    schemas.register('rule_test', core_1.ObjectNode({\r\n        predicate_type: StringNode({ validator: 'resource', params: { pool: 'rule_test' } }),\r\n        [core_1.Switch]: [{ push: 'predicate_type' }],\r\n        [core_1.Case]: {\r\n            'minecraft:block_match': {\r\n                block: StringNode({ validator: 'resource', params: { pool: 'block' } })\r\n            },\r\n            'minecraft:blockstate_match': {\r\n                block_state: Reference('block_state')\r\n            },\r\n            'minecraft:random_block_match': {\r\n                block: StringNode({ validator: 'resource', params: { pool: 'block' } }),\r\n                probability: core_1.NumberNode({ min: 0, max: 1 })\r\n            },\r\n            'minecraft:random_blockstate_match': {\r\n                block_state: Reference('block_state'),\r\n                probability: core_1.NumberNode({ min: 0, max: 1 })\r\n            },\r\n            'minecraft:tag_match': {\r\n                tag: StringNode({ validator: 'resource', params: { pool: '$tag/block' } })\r\n            }\r\n        }\r\n    }, { context: 'rule_test', disableSwitchContext: true }));\r\n}\r\nexports.initProcessorListSchemas = initProcessorListSchemas;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.initFeatureSchemas = void 0;\r\nconst core_1 = require(\"@mcschema/core\");\r\nconst Common_1 = require(\"../Common\");\r\nrequire(\"./Decorator\");\r\nrequire(\"./ProcessorList\");\r\nconst ProcessorList_1 = require(\"./ProcessorList\");\r\nfunction initFeatureSchemas(schemas, collections) {\r\n    const Reference = core_1.Reference.bind(undefined, schemas);\r\n    const StringNode = core_1.StringNode.bind(undefined, collections);\r\n    const RandomPatchConfig = {\r\n        can_replace: core_1.Opt(core_1.BooleanNode()),\r\n        project: core_1.Opt(core_1.BooleanNode()),\r\n        need_water: core_1.Opt(core_1.BooleanNode()),\r\n        xspread: core_1.Opt(core_1.NumberNode({ integer: true, min: 0 })),\r\n        yspread: core_1.Opt(core_1.NumberNode({ integer: true, min: 0 })),\r\n        zspread: core_1.Opt(core_1.NumberNode({ integer: true, min: 0 })),\r\n        tries: core_1.Opt(core_1.NumberNode({ integer: true, min: 1 })),\r\n        state_provider: Reference('block_state_provider'),\r\n        block_placer: Reference('block_placer'),\r\n        whitelist: core_1.ListNode(Reference('block_state')),\r\n        blacklist: core_1.ListNode(Reference('block_state'))\r\n    };\r\n    const DiskConfig = {\r\n        state: Reference('block_state'),\r\n        radius: Common_1.IntProvider({ min: 0, max: 8 }),\r\n        half_height: core_1.NumberNode({ integer: true, min: 0, max: 4 }),\r\n        targets: core_1.ListNode(Reference('block_state'))\r\n    };\r\n    const HugeMushroomConfig = {\r\n        cap_provider: Reference('block_state_provider'),\r\n        stem_provider: Reference('block_state_provider'),\r\n        foliage_radius: core_1.Opt(core_1.NumberNode({ integer: true }))\r\n    };\r\n    const TargetBlockState = core_1.ObjectNode({\r\n        target: Reference('rule_test'),\r\n        state: Reference('block_state')\r\n    });\r\n    const OreConfig = {\r\n        size: core_1.NumberNode({ integer: true, min: 0, max: 64 }),\r\n        discard_chance_on_air_exposure: core_1.NumberNode({ min: 0, max: 1 }),\r\n        targets: core_1.ListNode(TargetBlockState)\r\n    };\r\n    const Feature = core_1.ChoiceNode([\r\n        {\r\n            type: 'string',\r\n            node: StringNode({ validator: 'resource', params: { pool: '$worldgen/configured_feature' } })\r\n        },\r\n        {\r\n            type: 'object',\r\n            node: Reference('configured_feature')\r\n        }\r\n    ], { choiceContext: 'feature' });\r\n    const VegetationPatchConfig = {\r\n        surface: StringNode({ enum: ['floor', 'ceiling'] }),\r\n        depth: Common_1.IntProvider({ min: 1, max: 128 }),\r\n        vertical_range: core_1.NumberNode({ integer: true, min: 1, max: 256 }),\r\n        extra_bottom_block_chance: core_1.NumberNode({ min: 0, max: 1 }),\r\n        extra_edge_column_chance: core_1.NumberNode({ min: 0, max: 1 }),\r\n        vegetation_chance: core_1.NumberNode({ min: 0, max: 1 }),\r\n        xz_radius: Common_1.IntProvider(),\r\n        replaceable: StringNode({ validator: 'resource', params: { pool: '$tag/block' } }),\r\n        ground_state: Reference('block_state_provider'),\r\n        vegetation_feature: Feature\r\n    };\r\n    schemas.register('configured_feature', core_1.Mod(core_1.ObjectNode({\r\n        type: StringNode({ validator: 'resource', params: { pool: 'worldgen/feature' } }),\r\n        config: core_1.ObjectNode({\r\n            [core_1.Switch]: ['pop', { push: 'type' }],\r\n            [core_1.Case]: {\r\n                'minecraft:bamboo': {\r\n                    probability: core_1.NumberNode({ min: 0, max: 1 })\r\n                },\r\n                'minecraft:basalt_columns': {\r\n                    reach: Common_1.IntProvider({ min: 0, max: 3 }),\r\n                    height: Common_1.IntProvider({ min: 1, max: 10 })\r\n                },\r\n                'minecraft:block_pile': {\r\n                    state_provider: Reference('block_state_provider')\r\n                },\r\n                'minecraft:decorated': {\r\n                    decorator: Reference('configured_decorator'),\r\n                    feature: Feature\r\n                },\r\n                'minecraft:decorated_flower': {\r\n                    decorator: Reference('configured_decorator'),\r\n                    feature: Feature\r\n                },\r\n                'minecraft:delta_feature': {\r\n                    contents: Reference('block_state'),\r\n                    rim: Reference('block_state'),\r\n                    size: Common_1.IntProvider({ min: 0, max: 16 }),\r\n                    rim_size: Common_1.IntProvider({ min: 0, max: 16 })\r\n                },\r\n                'minecraft:disk': DiskConfig,\r\n                'minecraft:dripstone_cluster': {\r\n                    floor_to_ceiling_search_range: core_1.NumberNode({ integer: true, min: 1, max: 512 }),\r\n                    height: Common_1.IntProvider({ min: 0, max: 128 }),\r\n                    radius: Common_1.IntProvider({ min: 0, max: 128 }),\r\n                    max_stalagmite_stalactite_height_diff: core_1.NumberNode({ integer: true, min: 0, max: 64 }),\r\n                    height_deviation: core_1.NumberNode({ integer: true, min: 1, max: 64 }),\r\n                    dripstone_block_layer_thickness: Common_1.IntProvider({ min: 0, max: 128 }),\r\n                    density: Common_1.FloatProvider({ min: 0, max: 2 }),\r\n                    wetness: Common_1.FloatProvider({ min: 0, max: 2 }),\r\n                    chance_of_dripstone_column_at_max_distance_from_center: core_1.NumberNode({ min: 0, max: 1 }),\r\n                    max_distance_from_edge_affecting_chance_of_dripstone_column: core_1.NumberNode({ integer: true, min: 1, max: 64 }),\r\n                    max_distance_from_center_affecting_height_bias: core_1.NumberNode({ integer: true, min: 1, max: 64 })\r\n                },\r\n                'minecraft:end_gateway': {\r\n                    exact: core_1.BooleanNode(),\r\n                    exit: core_1.Opt(Reference('block_pos'))\r\n                },\r\n                'minecraft:end_spike': {\r\n                    crystal_invulnerable: core_1.Opt(core_1.BooleanNode()),\r\n                    crystal_beam_target: core_1.Opt(Reference('block_pos')),\r\n                    spikes: core_1.ListNode(core_1.ObjectNode({\r\n                        centerX: core_1.Opt(core_1.NumberNode({ integer: true })),\r\n                        centerZ: core_1.Opt(core_1.NumberNode({ integer: true })),\r\n                        radius: core_1.Opt(core_1.NumberNode({ integer: true })),\r\n                        height: core_1.Opt(core_1.NumberNode({ integer: true })),\r\n                        guarded: core_1.Opt(core_1.BooleanNode())\r\n                    }))\r\n                },\r\n                'minecraft:fill_layer': {\r\n                    state: Reference('block_state'),\r\n                    height: core_1.NumberNode({ integer: true, min: 0, max: 255 })\r\n                },\r\n                'minecraft:flower': RandomPatchConfig,\r\n                'minecraft:forest_rock': {\r\n                    state: Reference('block_state')\r\n                },\r\n                'minecraft:fossil': {\r\n                    max_empty_corners_allowed: core_1.NumberNode({ integer: true, min: 0, max: 7 }),\r\n                    fossil_structures: core_1.ListNode(StringNode({ validator: 'resource', params: { pool: '$structure' } })),\r\n                    overlay_structures: core_1.ListNode(StringNode({ validator: 'resource', params: { pool: '$structure' } })),\r\n                    fossil_processors: ProcessorList_1.Processors,\r\n                    overlay_processors: ProcessorList_1.Processors,\r\n                },\r\n                'minecraft:geode': {\r\n                    blocks: core_1.ObjectNode({\r\n                        filling_provider: Reference('block_state_provider'),\r\n                        inner_layer_provider: Reference('block_state_provider'),\r\n                        alternate_inner_layer_provider: Reference('block_state_provider'),\r\n                        middle_layer_provider: Reference('block_state_provider'),\r\n                        outer_layer_provider: Reference('block_state_provider'),\r\n                        inner_placements: core_1.ListNode(Reference('block_state')),\r\n                        cannot_replace: StringNode({ validator: 'resource', params: { pool: '$tag/block' } }),\r\n                        invalid_blocks: StringNode({ validator: 'resource', params: { pool: '$tag/block' } })\r\n                    }),\r\n                    layers: core_1.ObjectNode({\r\n                        filling: core_1.Opt(core_1.NumberNode({ min: 0.01, max: 50 })),\r\n                        inner_layer: core_1.Opt(core_1.NumberNode({ min: 0.01, max: 50 })),\r\n                        middle_layer: core_1.Opt(core_1.NumberNode({ min: 0.01, max: 50 })),\r\n                        outer_layer: core_1.Opt(core_1.NumberNode({ min: 0.01, max: 50 })),\r\n                    }),\r\n                    crack: core_1.ObjectNode({\r\n                        generate_crack_chance: core_1.Opt(core_1.NumberNode({ min: 0, max: 1 })),\r\n                        base_crack_size: core_1.Opt(core_1.NumberNode({ min: 0, max: 5 })),\r\n                        crack_point_offset: core_1.Opt(core_1.NumberNode({ min: 0, max: 10, integer: true })),\r\n                    }),\r\n                    noise_multiplier: core_1.Opt(core_1.NumberNode({ min: 0, max: 1 })),\r\n                    use_potential_placements_chance: core_1.Opt(core_1.NumberNode({ min: 0, max: 1 })),\r\n                    use_alternate_layer0_chance: core_1.Opt(core_1.NumberNode({ min: 0, max: 1 })),\r\n                    placements_require_layer0_alternate: core_1.Opt(core_1.BooleanNode()),\r\n                    outer_wall_distance: core_1.Opt(Common_1.IntProvider({ min: 1, max: 20 })),\r\n                    distribution_points: core_1.Opt(Common_1.IntProvider({ min: 1, max: 20 })),\r\n                    point_offset: core_1.Opt(Common_1.IntProvider({ min: 0, max: 10 })),\r\n                    min_gen_offset: core_1.Opt(core_1.NumberNode({ integer: true })),\r\n                    max_gen_offset: core_1.Opt(core_1.NumberNode({ integer: true })),\r\n                    invalid_blocks_threshold: core_1.NumberNode({ integer: true })\r\n                },\r\n                'minecraft:glow_lichen': {\r\n                    search_range: core_1.Opt(core_1.NumberNode({ min: 1, max: 64, integer: true })),\r\n                    chance_of_spreading: core_1.Opt(core_1.NumberNode({ min: 0, max: 1 })),\r\n                    can_place_on_floor: core_1.Opt(core_1.BooleanNode()),\r\n                    can_place_on_ceiling: core_1.Opt(core_1.BooleanNode()),\r\n                    can_place_on_wall: core_1.Opt(core_1.BooleanNode()),\r\n                    can_be_placed_on: core_1.ListNode(Reference('block_state'))\r\n                },\r\n                'minecraft:growing_plant': {\r\n                    direction: StringNode({ enum: ['up', 'down', 'north', 'east', 'south', 'west'] }),\r\n                    allow_water: core_1.BooleanNode(),\r\n                    height_distribution: core_1.ListNode(core_1.ObjectNode({\r\n                        weight: core_1.NumberNode({ integer: true }),\r\n                        data: Common_1.IntProvider()\r\n                    })),\r\n                    body_provider: Reference('block_state_provider'),\r\n                    head_provider: Reference('block_state_provider')\r\n                },\r\n                'minecraft:huge_brown_mushroom': HugeMushroomConfig,\r\n                'minecraft:huge_fungus': {\r\n                    hat_state: Reference('block_state'),\r\n                    decor_state: Reference('block_state'),\r\n                    stem_state: Reference('block_state'),\r\n                    valid_base_block: Reference('block_state'),\r\n                    planted: core_1.Opt(core_1.BooleanNode())\r\n                },\r\n                'minecraft:huge_red_mushroom': HugeMushroomConfig,\r\n                'minecraft:ice_patch': DiskConfig,\r\n                'minecraft:iceberg': {\r\n                    state: Reference('block_state')\r\n                },\r\n                'minecraft:lake': {\r\n                    state: Reference('block_state')\r\n                },\r\n                'minecraft:large_dripstone': {\r\n                    floor_to_ceiling_search_range: core_1.Opt(core_1.NumberNode({ integer: true, min: 1, max: 512 })),\r\n                    column_radius: Common_1.IntProvider({ min: 0, max: 60 }),\r\n                    height_scale: Common_1.FloatProvider({ min: 0, max: 20 }),\r\n                    max_column_radius_to_cave_height_ratio: core_1.NumberNode({ min: 0, max: 1 }),\r\n                    stalactite_bluntness: Common_1.FloatProvider({ min: 0.1, max: 10 }),\r\n                    stalagmite_bluntness: Common_1.FloatProvider({ min: 0.1, max: 10 }),\r\n                    wind_speed: Common_1.FloatProvider({ min: 0, max: 2 }),\r\n                    min_radius_for_wind: core_1.NumberNode({ integer: true, min: 0, max: 100 }),\r\n                    min_bluntness_for_wind: core_1.NumberNode({ min: 0, max: 5 })\r\n                },\r\n                'minecraft:nether_forest_vegetation': {\r\n                    state_provider: Reference('block_state_provider')\r\n                },\r\n                'minecraft:netherrack_replace_blobs': {\r\n                    state: Reference('block_state'),\r\n                    target: Reference('block_state'),\r\n                    radius: Common_1.IntProvider({ min: 0, max: 12 })\r\n                },\r\n                'minecraft:no_bonemeal_flower': RandomPatchConfig,\r\n                'minecraft:ore': OreConfig,\r\n                'minecraft:random_patch': RandomPatchConfig,\r\n                'minecraft:random_boolean_selector': {\r\n                    feature_false: Feature,\r\n                    feature_true: Feature\r\n                },\r\n                'minecraft:random_selector': {\r\n                    features: core_1.ListNode(core_1.ObjectNode({\r\n                        chance: core_1.NumberNode({ min: 0, max: 1 }),\r\n                        feature: Feature\r\n                    })),\r\n                    default: Feature\r\n                },\r\n                'minecraft:replace_single_block': {\r\n                    targets: core_1.ListNode(TargetBlockState)\r\n                },\r\n                'minecraft:root_system': {\r\n                    required_vertical_space_for_tree: core_1.NumberNode({ integer: true, min: 1, max: 64 }),\r\n                    root_radius: core_1.NumberNode({ integer: true, min: 1, max: 64 }),\r\n                    root_placement_attempts: core_1.NumberNode({ integer: true, min: 1, max: 256 }),\r\n                    root_column_max_height: core_1.NumberNode({ integer: true, min: 1, max: 4096 }),\r\n                    hanging_root_radius: core_1.NumberNode({ integer: true, min: 1, max: 64 }),\r\n                    hanging_roots_vertical_span: core_1.NumberNode({ integer: true, min: 0, max: 16 }),\r\n                    hanging_root_placement_attempts: core_1.NumberNode({ integer: true, min: 0, max: 256 }),\r\n                    allowed_vertical_water_for_tree: core_1.NumberNode({ integer: true, min: 1, max: 64 }),\r\n                    root_replaceable: StringNode({ validator: 'resource', params: { pool: '$tag/block' } }),\r\n                    root_state_provider: Reference('block_state_provider'),\r\n                    hanging_root_state_provider: Reference('block_state_provider'),\r\n                    feature: Feature\r\n                },\r\n                'minecraft:scattered_ore': OreConfig,\r\n                'minecraft:sea_pickle': {\r\n                    count: Common_1.IntProvider({ min: 0, max: 256 })\r\n                },\r\n                'minecraft:seagrass': {\r\n                    probability: core_1.NumberNode({ min: 0, max: 1 })\r\n                },\r\n                'minecraft:simple_block': {\r\n                    to_place: Reference('block_state_provider'),\r\n                    place_on: core_1.Opt(core_1.ListNode(Reference('block_state'))),\r\n                    place_in: core_1.Opt(core_1.ListNode(Reference('block_state'))),\r\n                    place_under: core_1.Opt(core_1.ListNode(Reference('block_state')))\r\n                },\r\n                'minecraft:simple_random_selector': {\r\n                    features: core_1.ListNode(Feature)\r\n                },\r\n                'minecraft:small_dripstone': {\r\n                    max_placements: core_1.Opt(core_1.NumberNode({ integer: true, min: 0, max: 100 })),\r\n                    empty_space_search_radius: core_1.Opt(core_1.NumberNode({ integer: true, min: 0, max: 20 })),\r\n                    max_offset_from_origin: core_1.Opt(core_1.NumberNode({ integer: true, min: 0, max: 20 })),\r\n                    chance_of_taller_dripstone: core_1.Opt(core_1.NumberNode({ min: 0, max: 1 }))\r\n                },\r\n                'minecraft:spring_feature': {\r\n                    state: Reference('fluid_state'),\r\n                    rock_count: core_1.NumberNode({ integer: true }),\r\n                    hole_count: core_1.NumberNode({ integer: true }),\r\n                    requires_block_below: core_1.BooleanNode(),\r\n                    valid_blocks: core_1.ListNode(StringNode({ validator: 'resource', params: { pool: 'block' } }))\r\n                },\r\n                'minecraft:tree': {\r\n                    ignore_vines: core_1.Opt(core_1.BooleanNode()),\r\n                    force_dirt: core_1.Opt(core_1.BooleanNode()),\r\n                    minimum_size: Reference('feature_size'),\r\n                    dirt_provider: Reference('block_state_provider'),\r\n                    trunk_provider: Reference('block_state_provider'),\r\n                    foliage_provider: Reference('block_state_provider'),\r\n                    trunk_placer: core_1.ObjectNode({\r\n                        type: StringNode({ validator: 'resource', params: { pool: 'worldgen/trunk_placer_type' } }),\r\n                        base_height: core_1.NumberNode({ integer: true, min: 0, max: 32 }),\r\n                        height_rand_a: core_1.NumberNode({ integer: true, min: 0, max: 24 }),\r\n                        height_rand_b: core_1.NumberNode({ integer: true, min: 0, max: 24 }),\r\n                        [core_1.Switch]: [{ push: 'type' }],\r\n                        [core_1.Case]: {\r\n                            'minecraft:bending_trunk_placer': {\r\n                                bend_length: Common_1.IntProvider({ min: 1, max: 64 }),\r\n                                min_height_for_leaves: core_1.Opt(core_1.NumberNode({ integer: true, min: 1 }))\r\n                            }\r\n                        }\r\n                    }, { context: 'trunk_placer' }),\r\n                    foliage_placer: core_1.ObjectNode({\r\n                        type: StringNode({ validator: 'resource', params: { pool: 'worldgen/foliage_placer_type' } }),\r\n                        radius: Common_1.IntProvider({ min: 0, max: 16 }),\r\n                        offset: Common_1.IntProvider({ min: 0, max: 16 }),\r\n                        [core_1.Switch]: [{ push: 'type' }],\r\n                        [core_1.Case]: {\r\n                            'minecraft:blob_foliage_placer': {\r\n                                height: core_1.NumberNode({ integer: true, min: 0, max: 16 })\r\n                            },\r\n                            'minecraft:bush_foliage_placer': {\r\n                                height: core_1.NumberNode({ integer: true, min: 0, max: 16 })\r\n                            },\r\n                            'minecraft:fancy_foliage_placer': {\r\n                                height: core_1.NumberNode({ integer: true, min: 0, max: 16 })\r\n                            },\r\n                            'minecraft:jungle_foliage_placer': {\r\n                                height: core_1.NumberNode({ integer: true, min: 0, max: 16 })\r\n                            },\r\n                            'minecraft:mega_pine_foliage_placer': {\r\n                                crown_height: Common_1.IntProvider({ min: 0, max: 24 })\r\n                            },\r\n                            'minecraft:pine_foliage_placer': {\r\n                                height: Common_1.IntProvider({ min: 0, max: 24 })\r\n                            },\r\n                            'minecraft:random_spread_foliage_placer': {\r\n                                foliage_height: Common_1.IntProvider({ min: 1, max: 512 }),\r\n                                leaf_placement_attempts: core_1.NumberNode({ integer: true, min: 0, max: 256 })\r\n                            },\r\n                            'minecraft:spruce_foliage_placer': {\r\n                                trunk_height: Common_1.IntProvider({ min: 0, max: 24 })\r\n                            }\r\n                        }\r\n                    }, { context: 'foliage_placer', disableSwitchContext: true }),\r\n                    decorators: core_1.ListNode(core_1.ObjectNode({\r\n                        type: StringNode({ validator: 'resource', params: { pool: 'worldgen/tree_decorator_type' } }),\r\n                        [core_1.Switch]: [{ push: 'type' }],\r\n                        [core_1.Case]: {\r\n                            'minecraft:alter_ground': {\r\n                                provider: Reference('block_state_provider')\r\n                            },\r\n                            'minecraft:beehive': {\r\n                                probability: core_1.NumberNode({ min: 0, max: 1 })\r\n                            },\r\n                            'minecraft:cocoa': {\r\n                                probability: core_1.NumberNode({ min: 0, max: 1 })\r\n                            }\r\n                        }\r\n                    }, { context: 'tree_decorator' }))\r\n                },\r\n                'minecraft:underwater_magma': {\r\n                    floor_search_range: core_1.NumberNode({ integer: true, min: 0, max: 512 }),\r\n                    placement_radius_around_floor: core_1.NumberNode({ integer: true, min: 0, max: 64 }),\r\n                    placement_probability_per_valid_position: core_1.NumberNode({ min: 0, max: 1 })\r\n                },\r\n                'minecraft:vegetation_patch': VegetationPatchConfig,\r\n                'minecraft:waterlogged_vegetation_patch': VegetationPatchConfig\r\n            }\r\n        }, { context: 'feature' })\r\n    }, { context: 'feature' }), {\r\n        default: () => ({\r\n            type: 'minecraft:decorated',\r\n            config: {\r\n                decorator: {\r\n                    type: 'minecraft:count',\r\n                    config: {\r\n                        count: 4\r\n                    }\r\n                },\r\n                feature: {\r\n                    type: 'minecraft:tree',\r\n                    config: {\r\n                        max_water_depth: 0,\r\n                        ignore_vines: true,\r\n                        minimum_size: {},\r\n                        trunk_placer: {\r\n                            base_height: 5,\r\n                            height_rand_a: 2,\r\n                            height_rand_b: 0\r\n                        },\r\n                        foliage_placer: {\r\n                            radius: 2,\r\n                            offset: 0,\r\n                            height: 3\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        })\r\n    }));\r\n    schemas.register('feature_size', core_1.Mod(core_1.ObjectNode({\r\n        type: StringNode({ validator: 'resource', params: { pool: 'worldgen/feature_size_type' } }),\r\n        min_clipped_height: core_1.Opt(core_1.NumberNode({ min: 0, max: 80 })),\r\n        [core_1.Switch]: [{ push: 'type' }],\r\n        [core_1.Case]: {\r\n            'minecraft:two_layers_feature_size': {\r\n                limit: core_1.Opt(core_1.NumberNode({ integer: true, min: 0, max: 81 })),\r\n                lower_size: core_1.Opt(core_1.NumberNode({ integer: true, min: 0, max: 16 })),\r\n                upper_size: core_1.Opt(core_1.NumberNode({ integer: true, min: 0, max: 16 }))\r\n            },\r\n            'minecraft:three_layers_feature_size': {\r\n                limit: core_1.Opt(core_1.NumberNode({ integer: true, min: 0, max: 80 })),\r\n                upper_limit: core_1.Opt(core_1.NumberNode({ integer: true, min: 0, max: 80 })),\r\n                lower_size: core_1.Opt(core_1.NumberNode({ integer: true, min: 0, max: 16 })),\r\n                middle_size: core_1.Opt(core_1.NumberNode({ integer: true, min: 0, max: 16 })),\r\n                upper_size: core_1.Opt(core_1.NumberNode({ integer: true, min: 0, max: 16 }))\r\n            }\r\n        }\r\n    }, { disableSwitchContext: true }), {\r\n        default: () => ({\r\n            type: 'minecraft:two_layers_feature_size'\r\n        })\r\n    }));\r\n    const NoiseProvider = {\r\n        seed: core_1.NumberNode({ integer: true }),\r\n        noise: Reference('noise_parameters'),\r\n        scale: core_1.Mod(core_1.NumberNode({ min: Number.MIN_VALUE }), { default: () => 1 })\r\n    };\r\n    schemas.register('block_state_provider', core_1.Mod(core_1.ObjectNode({\r\n        type: StringNode({ validator: 'resource', params: { pool: 'worldgen/block_state_provider_type' } }),\r\n        [core_1.Switch]: [{ push: 'type' }],\r\n        [core_1.Case]: {\r\n            'minecraft:dual_noise_provider': {\r\n                ...NoiseProvider,\r\n                variety: Common_1.InclusiveRange({ integer: true, min: 1, max: 64 }),\r\n                slow_noise: Reference('noise_parameters'),\r\n                slow_scale: core_1.Mod(core_1.NumberNode({ min: Number.MIN_VALUE }), { default: () => 1 }),\r\n                states: core_1.ListNode(Reference('block_state'))\r\n            },\r\n            'minecraft:noise_threshold_provider': {\r\n                ...NoiseProvider,\r\n                threshold: core_1.NumberNode({ min: -1, max: 1 }),\r\n                high_chance: core_1.NumberNode({ min: 0, max: 1 }),\r\n                default_state: Reference('block_state'),\r\n                low_states: core_1.ListNode(Reference('block_state')),\r\n                high_states: core_1.ListNode(Reference('block_state'))\r\n            },\r\n            'minecraft:noise_provider': {\r\n                ...NoiseProvider,\r\n                states: core_1.ListNode(Reference('block_state'))\r\n            },\r\n            'minecraft:randomized_int_state_provider': {\r\n                property: StringNode(),\r\n                values: Common_1.IntProvider(),\r\n                source: Reference('block_state_provider')\r\n            },\r\n            'minecraft:rotated_block_provider': {\r\n                state: Reference('block_state')\r\n            },\r\n            'minecraft:simple_state_provider': {\r\n                state: Reference('block_state')\r\n            },\r\n            'minecraft:weighted_state_provider': {\r\n                entries: core_1.ListNode(core_1.Mod(core_1.ObjectNode({\r\n                    weight: core_1.NumberNode({ integer: true, min: 1 }),\r\n                    data: Reference('block_state')\r\n                }), {\r\n                    default: () => ({\r\n                        data: {}\r\n                    })\r\n                }))\r\n            }\r\n        }\r\n    }, { context: 'block_state_provider' }), {\r\n        default: () => ({\r\n            type: 'minecraft:simple_state_provider'\r\n        })\r\n    }));\r\n    schemas.register('block_placer', core_1.Mod(core_1.ObjectNode({\r\n        type: StringNode({ validator: 'resource', params: { pool: 'worldgen/block_placer_type' } }),\r\n        [core_1.Switch]: [{ push: 'type' }],\r\n        [core_1.Case]: {\r\n            'minecraft:column_placer': {\r\n                size: Common_1.IntProvider({ min: 0 })\r\n            }\r\n        }\r\n    }, { context: 'block_placer' }), {\r\n        default: () => ({\r\n            type: 'minecraft:simple_block_placer'\r\n        })\r\n    }));\r\n}\r\nexports.initFeatureSchemas = initFeatureSchemas;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.initNoiseSettingsSchemas = void 0;\r\nconst core_1 = require(\"@mcschema/core\");\r\nconst Common_1 = require(\"../Common\");\r\nfunction initNoiseSettingsSchemas(schemas, collections) {\r\n    const Reference = core_1.Reference.bind(undefined, schemas);\r\n    const StringNode = core_1.StringNode.bind(undefined, collections);\r\n    schemas.register('noise_settings', core_1.Mod(core_1.ObjectNode({\r\n        bedrock_roof_position: core_1.NumberNode({ integer: true }),\r\n        bedrock_floor_position: core_1.NumberNode({ integer: true }),\r\n        sea_level: core_1.NumberNode({ integer: true }),\r\n        disable_mob_generation: core_1.BooleanNode(),\r\n        noise_caves_enabled: core_1.BooleanNode(),\r\n        noodle_caves_enabled: core_1.BooleanNode(),\r\n        aquifers_enabled: core_1.BooleanNode(),\r\n        deepslate_enabled: core_1.BooleanNode(),\r\n        ore_veins_enabled: core_1.BooleanNode(),\r\n        default_block: Reference('block_state'),\r\n        default_fluid: Reference('block_state'),\r\n        noise: core_1.ObjectNode({\r\n            min_y: core_1.NumberNode({ integer: true, min: -2048, max: 2047 }),\r\n            height: core_1.NumberNode({ integer: true, min: 0, max: 4096 }),\r\n            density_factor: core_1.NumberNode(),\r\n            density_offset: core_1.NumberNode(),\r\n            size_horizontal: core_1.NumberNode({ integer: true }),\r\n            size_vertical: core_1.NumberNode({ integer: true }),\r\n            simplex_surface_noise: core_1.BooleanNode(),\r\n            random_density_offset: core_1.Opt(core_1.BooleanNode()),\r\n            island_noise_override: core_1.Opt(core_1.BooleanNode()),\r\n            amplified: core_1.Opt(core_1.BooleanNode()),\r\n            use_legacy_random: core_1.Opt(core_1.BooleanNode()),\r\n            sampling: core_1.ObjectNode({\r\n                xz_scale: core_1.NumberNode(),\r\n                y_scale: core_1.NumberNode(),\r\n                xz_factor: core_1.NumberNode(),\r\n                y_factor: core_1.NumberNode()\r\n            }),\r\n            bottom_slide: Reference('noise_slider'),\r\n            top_slide: Reference('noise_slider')\r\n        }),\r\n        octaves: core_1.ObjectNode({\r\n            temperature: Reference('noise_parameters'),\r\n            humidity: Reference('noise_parameters'),\r\n            continentalness: Reference('noise_parameters'),\r\n            erosion: Reference('noise_parameters'),\r\n            weirdness: Reference('noise_parameters'),\r\n            shift: Reference('noise_parameters'),\r\n        }),\r\n        structures: Reference('generator_structures')\r\n    }, { context: 'noise_settings' }), node => ({\r\n        default: () => Common_1.DefaultNoiseSettings,\r\n        validate: (path, value, errors, options) => {\r\n            var _a, _b, _c, _d;\r\n            value = node.validate(path, value, errors, options);\r\n            if (((_a = value === null || value === void 0 ? void 0 : value.noise) === null || _a === void 0 ? void 0 : _a.min_y) + ((_b = value === null || value === void 0 ? void 0 : value.noise) === null || _b === void 0 ? void 0 : _b.height) > 2047) {\r\n                errors.add(path.push('noise').push('height'), 'error.min_y_plus_height', 2047);\r\n            }\r\n            if (((_c = value === null || value === void 0 ? void 0 : value.noise) === null || _c === void 0 ? void 0 : _c.height) % 16 !== 0) {\r\n                errors.add(path.push('noise').push('height'), 'error.height_multiple', 16);\r\n            }\r\n            if (((_d = value === null || value === void 0 ? void 0 : value.noise) === null || _d === void 0 ? void 0 : _d.min_y) % 16 !== 0) {\r\n                errors.add(path.push('noise').push('min_y'), 'error.min_y_multiple', 16);\r\n            }\r\n            return value;\r\n        }\r\n    })));\r\n    schemas.register('noise_slider', core_1.ObjectNode({\r\n        target: core_1.NumberNode(),\r\n        size: core_1.NumberNode({ integer: true, min: 0 }),\r\n        offset: core_1.NumberNode({ integer: true })\r\n    }));\r\n    schemas.register('generator_structures', core_1.ObjectNode({\r\n        stronghold: core_1.Opt(core_1.ObjectNode({\r\n            distance: core_1.NumberNode({ integer: true, min: 0, max: 1023 }),\r\n            spread: core_1.NumberNode({ integer: true, min: 0, max: 1023 }),\r\n            count: core_1.NumberNode({ integer: true, min: 1, max: 4095 })\r\n        })),\r\n        structures: core_1.MapNode(StringNode({ validator: 'resource', params: { pool: 'worldgen/structure_feature' } }), core_1.Mod(core_1.ObjectNode({\r\n            spacing: core_1.NumberNode({ integer: true, min: 0, max: 4096 }),\r\n            separation: core_1.Mod(core_1.NumberNode({ integer: true, min: 0, max: 4096 }), (node) => ({\r\n                validate: (path, value, errors, options) => {\r\n                    if (path.pop().push('spacing').get() <= value) {\r\n                        errors.add(path, 'error.separation_smaller_spacing');\r\n                    }\r\n                    return node.validate(path, value, errors, options);\r\n                }\r\n            })),\r\n            salt: core_1.NumberNode({ integer: true, min: 0 })\r\n        }, { context: 'generator_structure' }), {\r\n            default: () => ({\r\n                spacing: 10,\r\n                separation: 5,\r\n                salt: 0\r\n            })\r\n        }))\r\n    }));\r\n    schemas.register('generator_layer', core_1.Mod(core_1.ObjectNode({\r\n        block: StringNode({ validator: 'resource', params: { pool: 'block' } }),\r\n        height: core_1.NumberNode({ integer: true, min: 1 })\r\n    }), {\r\n        default: () => ({\r\n            block: 'minecraft:stone',\r\n            height: 1\r\n        })\r\n    }));\r\n}\r\nexports.initNoiseSettingsSchemas = initNoiseSettingsSchemas;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.initStructureFeatureSchemas = void 0;\r\nconst core_1 = require(\"@mcschema/core\");\r\nfunction initStructureFeatureSchemas(schemas, collections) {\r\n    const StringNode = core_1.StringNode.bind(undefined, collections);\r\n    const Reference = core_1.Reference.bind(undefined, schemas);\r\n    const templatePoolConfig = {\r\n        start_pool: StringNode({ validator: 'resource', params: { pool: '$worldgen/template_pool' } }),\r\n        size: core_1.NumberNode({ integer: true })\r\n    };\r\n    schemas.register('configured_structure_feature', core_1.Mod(core_1.ObjectNode({\r\n        type: StringNode({ validator: 'resource', params: { pool: 'worldgen/structure_feature' } }),\r\n        config: core_1.ObjectNode({\r\n            [core_1.Switch]: ['pop', { push: 'type' }],\r\n            [core_1.Case]: {\r\n                'minecraft:bastion_remnant': templatePoolConfig,\r\n                'minecraft:buried_treasure': {\r\n                    probability: core_1.NumberNode({ min: 0, max: 1 })\r\n                },\r\n                'minecraft:mineshaft': {\r\n                    type: StringNode({ enum: ['normal', 'mesa'] }),\r\n                    probability: core_1.NumberNode({ min: 0, max: 1 })\r\n                },\r\n                'minecraft:nether_fossil': {\r\n                    height: Reference('height_provider')\r\n                },\r\n                'minecraft:ocean_ruin': {\r\n                    biome_temp: StringNode({ enum: ['cold', 'warm'] }),\r\n                    large_probability: core_1.NumberNode({ min: 0, max: 1 }),\r\n                    cluster_probability: core_1.NumberNode({ min: 0, max: 1 })\r\n                },\r\n                'minecraft:pillager_outpost': templatePoolConfig,\r\n                'minecraft:ruined_portal': {\r\n                    portal_type: StringNode({ enum: ['standard', 'desert', 'jungle', 'mountain', 'nether', 'ocean', 'swamp'] })\r\n                },\r\n                'minecraft:shipwreck': {\r\n                    is_beached: core_1.Opt(core_1.BooleanNode())\r\n                },\r\n                'minecraft:village': templatePoolConfig\r\n            }\r\n        }, { context: 'structure_feature', disableSwitchContext: true })\r\n    }, { context: 'structure_feature' }), {\r\n        default: () => ({\r\n            type: 'minecraft:bastion_remnant',\r\n            config: {\r\n                start_pool: 'minecraft:bastion/starts',\r\n                size: 6\r\n            }\r\n        })\r\n    }));\r\n}\r\nexports.initStructureFeatureSchemas = initStructureFeatureSchemas;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.initSurfaceBuilderSchemas = void 0;\r\nconst core_1 = require(\"@mcschema/core\");\r\nfunction initSurfaceBuilderSchemas(schemas, collections) {\r\n    const StringNode = core_1.StringNode.bind(undefined, collections);\r\n    const Reference = core_1.Reference.bind(undefined, schemas);\r\n    schemas.register('configured_surface_builder', core_1.Mod(core_1.ObjectNode({\r\n        type: StringNode({ validator: 'resource', params: { pool: 'worldgen/surface_builder' } }),\r\n        config: core_1.ObjectNode({\r\n            top_material: Reference('block_state'),\r\n            under_material: Reference('block_state'),\r\n            underwater_material: Reference('block_state'),\r\n        }, { context: 'surface_builder' })\r\n    }, { context: 'surface_builder' }), {\r\n        default: () => ({\r\n            type: 'minecraft:default',\r\n            config: {\r\n                top_material: {\r\n                    Name: 'minecraft:grass_block',\r\n                    Properties: {\r\n                        snowy: 'false'\r\n                    }\r\n                },\r\n                under_material: {\r\n                    Name: 'minecraft:dirt'\r\n                },\r\n                underwater_material: {\r\n                    Name: 'minecraft:gravel'\r\n                }\r\n            }\r\n        })\r\n    }));\r\n}\r\nexports.initSurfaceBuilderSchemas = initSurfaceBuilderSchemas;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.initTemplatePoolSchemas = void 0;\r\nconst core_1 = require(\"@mcschema/core\");\r\nrequire(\"./ProcessorList\");\r\nconst ProcessorList_1 = require(\"./ProcessorList\");\r\nfunction initTemplatePoolSchemas(schemas, collections) {\r\n    const Reference = core_1.Reference.bind(undefined, schemas);\r\n    const StringNode = core_1.StringNode.bind(undefined, collections);\r\n    schemas.register('template_pool', core_1.Mod(core_1.ObjectNode({\r\n        fallback: StringNode(),\r\n        elements: core_1.ListNode(Reference('template_weighted_element'))\r\n    }, { context: 'template_pool' }), {\r\n        default: () => ({\r\n            fallback: 'minecraft:empty',\r\n            elements: [\r\n                {\r\n                    weight: 1,\r\n                    element: {\r\n                        element_type: 'minecraft:single_pool_element',\r\n                        projection: 'rigid',\r\n                        processors: 'minecraft:empty'\r\n                    }\r\n                }\r\n            ]\r\n        })\r\n    }));\r\n    schemas.register('template_weighted_element', core_1.Mod(core_1.ObjectNode({\r\n        weight: core_1.NumberNode({ integer: true, min: 1 }),\r\n        element: Reference('template_element')\r\n    }, { category: 'pool' }), {\r\n        default: () => ({\r\n            weight: 1,\r\n            element: {\r\n                element_type: 'minecraft:single_pool_element',\r\n                projection: 'rigid',\r\n                processors: 'minecraft:empty'\r\n            }\r\n        })\r\n    }));\r\n    schemas.register('template_element', core_1.Mod(core_1.ObjectNode({\r\n        element_type: StringNode({ validator: 'resource', params: { pool: 'worldgen/structure_pool_element' } }),\r\n        projection: StringNode({ enum: ['rigid', 'terrain_matching'] }),\r\n        [core_1.Switch]: [{ push: 'element_type' }],\r\n        [core_1.Case]: {\r\n            'minecraft:feature_pool_element': {\r\n                feature: StringNode({ validator: 'resource', params: { pool: '$worldgen/configured_feature' } })\r\n            },\r\n            'minecraft:legacy_single_pool_element': {\r\n                location: StringNode({ validator: 'resource', params: { pool: '$structure' } }),\r\n                processors: ProcessorList_1.Processors\r\n            },\r\n            'minecraft:list_pool_element': {\r\n                elements: core_1.ListNode(Reference('template_element'))\r\n            },\r\n            'minecraft:single_pool_element': {\r\n                location: StringNode({ validator: 'resource', params: { pool: '$structure' } }),\r\n                processors: ProcessorList_1.Processors\r\n            }\r\n        }\r\n    }, { context: 'template_element', disableSwitchContext: true }), {\r\n        default: () => ({\r\n            element_type: 'minecraft:single_pool_element',\r\n            projection: 'rigid',\r\n            processors: 'minecraft:empty'\r\n        })\r\n    }));\r\n}\r\nexports.initTemplatePoolSchemas = initTemplatePoolSchemas;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.initWorldgenSchemas = void 0;\r\nconst Biome_1 = require(\"./Biome\");\r\nconst Carver_1 = require(\"./Carver\");\r\nconst Decorator_1 = require(\"./Decorator\");\r\nconst Feature_1 = require(\"./Feature\");\r\nconst NoiseSettings_1 = require(\"./NoiseSettings\");\r\nconst ProcessorList_1 = require(\"./ProcessorList\");\r\nconst StructureFeature_1 = require(\"./StructureFeature\");\r\nconst SurfaceBuilder_1 = require(\"./SurfaceBuilder\");\r\nconst TemplatePool_1 = require(\"./TemplatePool\");\r\nfunction initWorldgenSchemas(schemas, collections) {\r\n    // `ProcessorList.ts` has exports. It should be initialized first. \r\n    ProcessorList_1.initProcessorListSchemas(schemas, collections);\r\n    Biome_1.initBiomeSchemas(schemas, collections);\r\n    Carver_1.initCarverSchemas(schemas, collections);\r\n    Decorator_1.initDecoratorSchemas(schemas, collections);\r\n    Feature_1.initFeatureSchemas(schemas, collections);\r\n    NoiseSettings_1.initNoiseSettingsSchemas(schemas, collections);\r\n    StructureFeature_1.initStructureFeatureSchemas(schemas, collections);\r\n    SurfaceBuilder_1.initSurfaceBuilderSchemas(schemas, collections);\r\n    TemplatePool_1.initTemplatePoolSchemas(schemas, collections);\r\n}\r\nexports.initWorldgenSchemas = initWorldgenSchemas;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.initWorldSettingsSchemas = void 0;\r\nconst core_1 = require(\"@mcschema/core\");\r\nfunction initWorldSettingsSchemas(schemas, collections) {\r\n    const Reference = core_1.Reference.bind(undefined, schemas);\r\n    const StringNode = core_1.StringNode.bind(undefined, collections);\r\n    schemas.register('world_settings', core_1.Mod(core_1.ObjectNode({\r\n        generate_features: core_1.BooleanNode(),\r\n        bonus_chest: core_1.BooleanNode(),\r\n        seed: core_1.NumberNode({ integer: true }),\r\n        dimensions: core_1.MapNode(StringNode({ validator: 'resource', params: { pool: '$dimension' } }), Reference('dimension'))\r\n    }, { context: 'world_settings' }), {\r\n        default: () => {\r\n            const seed = Math.floor(Math.random() * (4294967296)) - 2147483648;\r\n            return {\r\n                generate_features: true,\r\n                bonus_chest: false,\r\n                seed,\r\n                dimensions: {\r\n                    'minecraft:overworld': {\r\n                        type: 'minecraft:overworld',\r\n                        generator: {\r\n                            type: 'minecraft:noise',\r\n                            seed,\r\n                            biome_source: {\r\n                                type: 'minecraft:vanilla_layered',\r\n                                seed\r\n                            },\r\n                            settings: 'minecraft:overworld',\r\n                        }\r\n                    },\r\n                    'minecraft:the_nether': {\r\n                        type: 'minecraft:the_nether',\r\n                        generator: {\r\n                            type: 'minecraft:noise',\r\n                            seed,\r\n                            biome_source: {\r\n                                type: 'minecraft:multi_noise',\r\n                                seed,\r\n                                humidity_noise: {\r\n                                    firstOctave: -7,\r\n                                    amplitudes: [1.0, 1.0]\r\n                                },\r\n                                altitude_noise: {\r\n                                    firstOctave: -7,\r\n                                    amplitudes: [1.0, 1.0]\r\n                                },\r\n                                weirdness_noise: {\r\n                                    firstOctave: -7,\r\n                                    amplitudes: [1.0, 1.0]\r\n                                },\r\n                                temperature_noise: {\r\n                                    firstOctave: -7,\r\n                                    amplitudes: [1.0, 1.0]\r\n                                },\r\n                                biomes: [\r\n                                    {\r\n                                        parameters: { altitude: 0.0, weirdness: 0.0, offset: 0.0, temperature: 0.0, humidity: 0.0 },\r\n                                        biome: 'minecraft:nether_wastes'\r\n                                    },\r\n                                    {\r\n                                        parameters: { altitude: 0.0, weirdness: 0.0, offset: 0.0, temperature: 0.0, humidity: -0.5 },\r\n                                        biome: 'minecraft:soul_sand_valley'\r\n                                    },\r\n                                    {\r\n                                        parameters: { altitude: 0.0, weirdness: 0.0, offset: 0.0, temperature: 0.4, humidity: 0.0 },\r\n                                        biome: 'minecraft:crimson_forest'\r\n                                    },\r\n                                    {\r\n                                        parameters: { altitude: 0.0, weirdness: 0.0, offset: 0.375, temperature: 0.0, humidity: 0.5 },\r\n                                        biome: 'minecraft:warped_forest'\r\n                                    },\r\n                                    {\r\n                                        parameters: { altitude: 0.0, weirdness: 0.0, offset: 0.175, temperature: -0.5, humidity: 0.0 },\r\n                                        biome: 'minecraft:basalt_deltas'\r\n                                    }\r\n                                ]\r\n                            },\r\n                            settings: 'minecraft:nether'\r\n                        }\r\n                    },\r\n                    'minecraft:the_end': {\r\n                        type: \"minecraft:the_end\",\r\n                        generator: {\r\n                            type: \"minecraft:noise\",\r\n                            seed,\r\n                            biome_source: {\r\n                                type: \"minecraft:the_end\",\r\n                                seed\r\n                            },\r\n                            settings: \"minecraft:end\"\r\n                        }\r\n                    }\r\n                }\r\n            };\r\n        }\r\n    }));\r\n}\r\nexports.initWorldSettingsSchemas = initWorldSettingsSchemas;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.initSchemas = void 0;\r\nconst Advancement_1 = require(\"./Advancement\");\r\nconst Common_1 = require(\"./Common\");\r\nconst Condition_1 = require(\"./Condition\");\r\nconst Dimension_1 = require(\"./Dimension\");\r\nconst DimensionType_1 = require(\"./DimensionType\");\r\nconst ItemModifier_1 = require(\"./ItemModifier\");\r\nconst LootTable_1 = require(\"./LootTable\");\r\nconst PackMcmeta_1 = require(\"./PackMcmeta\");\r\nconst Predicates_1 = require(\"./Predicates\");\r\nconst Recipe_1 = require(\"./Recipe\");\r\nconst Tags_1 = require(\"./Tags\");\r\nconst TextComponent_1 = require(\"./TextComponent\");\r\nconst worldgen_1 = require(\"./worldgen\");\r\nconst WorldSettings_1 = require(\"./WorldSettings\");\r\nfunction initSchemas(schemas, collections) {\r\n    // `Common.ts` is the only file that has exports. It should be initialized first. \r\n    Common_1.initCommonSchemas(schemas, collections);\r\n    Advancement_1.initAdvancementSchemas(schemas, collections);\r\n    Condition_1.initConditionSchemas(schemas, collections);\r\n    DimensionType_1.initDimensionTypeSchemas(schemas, collections);\r\n    Dimension_1.initDimensionSchemas(schemas, collections);\r\n    ItemModifier_1.initItemModifierSchemas(schemas, collections);\r\n    LootTable_1.initLootTableSchemas(schemas, collections);\r\n    PackMcmeta_1.initPackMcmetaSchemas(schemas, collections);\r\n    Predicates_1.initPredicatesSchemas(schemas, collections);\r\n    Recipe_1.initRecipeSchemas(schemas, collections);\r\n    Tags_1.initTagsSchemas(schemas, collections);\r\n    TextComponent_1.initTextComponentSchemas(schemas, collections);\r\n    worldgen_1.initWorldgenSchemas(schemas, collections);\r\n    WorldSettings_1.initWorldSettingsSchemas(schemas, collections);\r\n}\r\nexports.initSchemas = initSchemas;\r\n","\"use strict\";\r\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}));\r\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n});\r\nvar __importStar = (this && this.__importStar) || function (mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.getSchemas = exports.getCollections = void 0;\r\nconst core_1 = require(\"@mcschema/core\");\r\nconst Collections_1 = require(\"./Collections\");\r\nconst schemas_1 = require(\"./schemas\");\r\nexports.lootContext = __importStar(require(\"./LootContext\"));\r\nfunction getCollections() {\r\n    const collections = new core_1.CollectionRegistry();\r\n    Collections_1.initCollections(collections);\r\n    return collections;\r\n}\r\nexports.getCollections = getCollections;\r\n/**\r\n * @param collections The CollectionRegistry for this version. Note that apart from\r\n * the built-in collections, the client of this module is responsible for futhermore\r\n * adding the vanilla registries to it: the collection IDs shouldn't contain the\r\n * namespace (`minecraft:`) part, while the values within the collections should.\r\n *\r\n * @example\r\n * for (const key in VANILLA_REGISTRIES>) {\r\n *   collections.register(\r\n *     key.replace(/^minecraft:/, ''),\r\n *     Object.keys(VANILLA_REGISTRIES[key].entries)\r\n *   )\r\n * }\r\n */\r\nfunction getSchemas(collections) {\r\n    const schemas = new core_1.SchemaRegistry();\r\n    schemas_1.initSchemas(schemas, collections);\r\n    return schemas;\r\n}\r\nexports.getSchemas = getSchemas;\r\n","'use strict'\nmodule.exports = rfdc\n\nfunction copyBuffer (cur) {\n  if (cur instanceof Buffer) {\n    return Buffer.from(cur)\n  }\n\n  return new cur.constructor(cur.buffer.slice(), cur.byteOffset, cur.length)\n}\n\nfunction rfdc (opts) {\n  opts = opts || {}\n\n  if (opts.circles) return rfdcCircles(opts)\n  return opts.proto ? cloneProto : clone\n\n  function cloneArray (a, fn) {\n    var keys = Object.keys(a)\n    var a2 = new Array(keys.length)\n    for (var i = 0; i < keys.length; i++) {\n      var k = keys[i]\n      var cur = a[k]\n      if (typeof cur !== 'object' || cur === null) {\n        a2[k] = cur\n      } else if (cur instanceof Date) {\n        a2[k] = new Date(cur)\n      } else if (ArrayBuffer.isView(cur)) {\n        a2[k] = copyBuffer(cur)\n      } else {\n        a2[k] = fn(cur)\n      }\n    }\n    return a2\n  }\n\n  function clone (o) {\n    if (typeof o !== 'object' || o === null) return o\n    if (o instanceof Date) return new Date(o)\n    if (Array.isArray(o)) return cloneArray(o, clone)\n    if (o instanceof Map) return new Map(cloneArray(Array.from(o), clone))\n    if (o instanceof Set) return new Set(cloneArray(Array.from(o), clone))\n    var o2 = {}\n    for (var k in o) {\n      if (Object.hasOwnProperty.call(o, k) === false) continue\n      var cur = o[k]\n      if (typeof cur !== 'object' || cur === null) {\n        o2[k] = cur\n      } else if (cur instanceof Date) {\n        o2[k] = new Date(cur)\n      } else if (cur instanceof Map) {\n        o2[k] = new Map(cloneArray(Array.from(cur), clone))\n      } else if (cur instanceof Set) {\n        o2[k] = new Set(cloneArray(Array.from(cur), clone))\n      } else if (ArrayBuffer.isView(cur)) {\n        o2[k] = copyBuffer(cur)\n      } else {\n        o2[k] = clone(cur)\n      }\n    }\n    return o2\n  }\n\n  function cloneProto (o) {\n    if (typeof o !== 'object' || o === null) return o\n    if (o instanceof Date) return new Date(o)\n    if (Array.isArray(o)) return cloneArray(o, cloneProto)\n    if (o instanceof Map) return new Map(cloneArray(Array.from(o), cloneProto))\n    if (o instanceof Set) return new Set(cloneArray(Array.from(o), cloneProto))\n    var o2 = {}\n    for (var k in o) {\n      var cur = o[k]\n      if (typeof cur !== 'object' || cur === null) {\n        o2[k] = cur\n      } else if (cur instanceof Date) {\n        o2[k] = new Date(cur)\n      } else if (cur instanceof Map) {\n        o2[k] = new Map(cloneArray(Array.from(cur), cloneProto))\n      } else if (cur instanceof Set) {\n        o2[k] = new Set(cloneArray(Array.from(cur), cloneProto))\n      } else if (ArrayBuffer.isView(cur)) {\n        o2[k] = copyBuffer(cur)\n      } else {\n        o2[k] = cloneProto(cur)\n      }\n    }\n    return o2\n  }\n}\n\nfunction rfdcCircles (opts) {\n  var refs = []\n  var refsNew = []\n\n  return opts.proto ? cloneProto : clone\n\n  function cloneArray (a, fn) {\n    var keys = Object.keys(a)\n    var a2 = new Array(keys.length)\n    for (var i = 0; i < keys.length; i++) {\n      var k = keys[i]\n      var cur = a[k]\n      if (typeof cur !== 'object' || cur === null) {\n        a2[k] = cur\n      } else if (cur instanceof Date) {\n        a2[k] = new Date(cur)\n      } else if (ArrayBuffer.isView(cur)) {\n        a2[k] = copyBuffer(cur)\n      } else {\n        var index = refs.indexOf(cur)\n        if (index !== -1) {\n          a2[k] = refsNew[index]\n        } else {\n          a2[k] = fn(cur)\n        }\n      }\n    }\n    return a2\n  }\n\n  function clone (o) {\n    if (typeof o !== 'object' || o === null) return o\n    if (o instanceof Date) return new Date(o)\n    if (Array.isArray(o)) return cloneArray(o, clone)\n    if (o instanceof Map) return new Map(cloneArray(Array.from(o), clone))\n    if (o instanceof Set) return new Set(cloneArray(Array.from(o), clone))\n    var o2 = {}\n    refs.push(o)\n    refsNew.push(o2)\n    for (var k in o) {\n      if (Object.hasOwnProperty.call(o, k) === false) continue\n      var cur = o[k]\n      if (typeof cur !== 'object' || cur === null) {\n        o2[k] = cur\n      } else if (cur instanceof Date) {\n        o2[k] = new Date(cur)\n      } else if (cur instanceof Map) {\n        o2[k] = new Map(cloneArray(Array.from(cur), clone))\n      } else if (cur instanceof Set) {\n        o2[k] = new Set(cloneArray(Array.from(cur), clone))\n      } else if (ArrayBuffer.isView(cur)) {\n        o2[k] = copyBuffer(cur)\n      } else {\n        var i = refs.indexOf(cur)\n        if (i !== -1) {\n          o2[k] = refsNew[i]\n        } else {\n          o2[k] = clone(cur)\n        }\n      }\n    }\n    refs.pop()\n    refsNew.pop()\n    return o2\n  }\n\n  function cloneProto (o) {\n    if (typeof o !== 'object' || o === null) return o\n    if (o instanceof Date) return new Date(o)\n    if (Array.isArray(o)) return cloneArray(o, cloneProto)\n    if (o instanceof Map) return new Map(cloneArray(Array.from(o), cloneProto))\n    if (o instanceof Set) return new Set(cloneArray(Array.from(o), cloneProto))\n    var o2 = {}\n    refs.push(o)\n    refsNew.push(o2)\n    for (var k in o) {\n      var cur = o[k]\n      if (typeof cur !== 'object' || cur === null) {\n        o2[k] = cur\n      } else if (cur instanceof Date) {\n        o2[k] = new Date(cur)\n      } else if (cur instanceof Map) {\n        o2[k] = new Map(cloneArray(Array.from(cur), cloneProto))\n      } else if (cur instanceof Set) {\n        o2[k] = new Set(cloneArray(Array.from(cur), cloneProto))\n      } else if (ArrayBuffer.isView(cur)) {\n        o2[k] = copyBuffer(cur)\n      } else {\n        var i = refs.indexOf(cur)\n        if (i !== -1) {\n          o2[k] = refsNew[i]\n        } else {\n          o2[k] = cloneProto(cur)\n        }\n      }\n    }\n    refs.pop()\n    refsNew.pop()\n    return o2\n  }\n}\n","\n/*! pako 2.0.4 https://github.com/nodeca/pako @license (MIT AND Zlib) */\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\n/* eslint-disable space-unary-ops */\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\n\n//const Z_FILTERED          = 1;\n//const Z_HUFFMAN_ONLY      = 2;\n//const Z_RLE               = 3;\nconst Z_FIXED$1               = 4;\n//const Z_DEFAULT_STRATEGY  = 0;\n\n/* Possible values of the data_type field (though see inflate()) */\nconst Z_BINARY              = 0;\nconst Z_TEXT                = 1;\n//const Z_ASCII             = 1; // = Z_TEXT\nconst Z_UNKNOWN$1             = 2;\n\n/*============================================================================*/\n\n\nfunction zero$1(buf) { let len = buf.length; while (--len >= 0) { buf[len] = 0; } }\n\n// From zutil.h\n\nconst STORED_BLOCK = 0;\nconst STATIC_TREES = 1;\nconst DYN_TREES    = 2;\n/* The three kinds of block type */\n\nconst MIN_MATCH$1    = 3;\nconst MAX_MATCH$1    = 258;\n/* The minimum and maximum match lengths */\n\n// From deflate.h\n/* ===========================================================================\n * Internal compression state.\n */\n\nconst LENGTH_CODES$1  = 29;\n/* number of length codes, not counting the special END_BLOCK code */\n\nconst LITERALS$1      = 256;\n/* number of literal bytes 0..255 */\n\nconst L_CODES$1       = LITERALS$1 + 1 + LENGTH_CODES$1;\n/* number of Literal or Length codes, including the END_BLOCK code */\n\nconst D_CODES$1       = 30;\n/* number of distance codes */\n\nconst BL_CODES$1      = 19;\n/* number of codes used to transfer the bit lengths */\n\nconst HEAP_SIZE$1     = 2 * L_CODES$1 + 1;\n/* maximum heap size */\n\nconst MAX_BITS$1      = 15;\n/* All codes must not exceed MAX_BITS bits */\n\nconst Buf_size      = 16;\n/* size of bit buffer in bi_buf */\n\n\n/* ===========================================================================\n * Constants\n */\n\nconst MAX_BL_BITS = 7;\n/* Bit length codes must not exceed MAX_BL_BITS bits */\n\nconst END_BLOCK   = 256;\n/* end of block literal code */\n\nconst REP_3_6     = 16;\n/* repeat previous bit length 3-6 times (2 bits of repeat count) */\n\nconst REPZ_3_10   = 17;\n/* repeat a zero length 3-10 times  (3 bits of repeat count) */\n\nconst REPZ_11_138 = 18;\n/* repeat a zero length 11-138 times  (7 bits of repeat count) */\n\n/* eslint-disable comma-spacing,array-bracket-spacing */\nconst extra_lbits =   /* extra bits for each length code */\n  new Uint8Array([0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0]);\n\nconst extra_dbits =   /* extra bits for each distance code */\n  new Uint8Array([0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13]);\n\nconst extra_blbits =  /* extra bits for each bit length code */\n  new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,7]);\n\nconst bl_order =\n  new Uint8Array([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]);\n/* eslint-enable comma-spacing,array-bracket-spacing */\n\n/* The lengths of the bit length codes are sent in order of decreasing\n * probability, to avoid transmitting the lengths for unused bit length codes.\n */\n\n/* ===========================================================================\n * Local data. These are initialized only once.\n */\n\n// We pre-fill arrays with 0 to avoid uninitialized gaps\n\nconst DIST_CODE_LEN = 512; /* see definition of array dist_code below */\n\n// !!!! Use flat array instead of structure, Freq = i*2, Len = i*2+1\nconst static_ltree  = new Array((L_CODES$1 + 2) * 2);\nzero$1(static_ltree);\n/* The static literal tree. Since the bit lengths are imposed, there is no\n * need for the L_CODES extra codes used during heap construction. However\n * The codes 286 and 287 are needed to build a canonical tree (see _tr_init\n * below).\n */\n\nconst static_dtree  = new Array(D_CODES$1 * 2);\nzero$1(static_dtree);\n/* The static distance tree. (Actually a trivial tree since all codes use\n * 5 bits.)\n */\n\nconst _dist_code    = new Array(DIST_CODE_LEN);\nzero$1(_dist_code);\n/* Distance codes. The first 256 values correspond to the distances\n * 3 .. 258, the last 256 values correspond to the top 8 bits of\n * the 15 bit distances.\n */\n\nconst _length_code  = new Array(MAX_MATCH$1 - MIN_MATCH$1 + 1);\nzero$1(_length_code);\n/* length code for each normalized match length (0 == MIN_MATCH) */\n\nconst base_length   = new Array(LENGTH_CODES$1);\nzero$1(base_length);\n/* First normalized length for each code (0 = MIN_MATCH) */\n\nconst base_dist     = new Array(D_CODES$1);\nzero$1(base_dist);\n/* First normalized distance for each code (0 = distance of 1) */\n\n\nfunction StaticTreeDesc(static_tree, extra_bits, extra_base, elems, max_length) {\n\n  this.static_tree  = static_tree;  /* static tree or NULL */\n  this.extra_bits   = extra_bits;   /* extra bits for each code or NULL */\n  this.extra_base   = extra_base;   /* base index for extra_bits */\n  this.elems        = elems;        /* max number of elements in the tree */\n  this.max_length   = max_length;   /* max bit length for the codes */\n\n  // show if `static_tree` has data or dummy - needed for monomorphic objects\n  this.has_stree    = static_tree && static_tree.length;\n}\n\n\nlet static_l_desc;\nlet static_d_desc;\nlet static_bl_desc;\n\n\nfunction TreeDesc(dyn_tree, stat_desc) {\n  this.dyn_tree = dyn_tree;     /* the dynamic tree */\n  this.max_code = 0;            /* largest code with non zero frequency */\n  this.stat_desc = stat_desc;   /* the corresponding static tree */\n}\n\n\n\nconst d_code = (dist) => {\n\n  return dist < 256 ? _dist_code[dist] : _dist_code[256 + (dist >>> 7)];\n};\n\n\n/* ===========================================================================\n * Output a short LSB first on the stream.\n * IN assertion: there is enough room in pendingBuf.\n */\nconst put_short = (s, w) => {\n//    put_byte(s, (uch)((w) & 0xff));\n//    put_byte(s, (uch)((ush)(w) >> 8));\n  s.pending_buf[s.pending++] = (w) & 0xff;\n  s.pending_buf[s.pending++] = (w >>> 8) & 0xff;\n};\n\n\n/* ===========================================================================\n * Send a value on a given number of bits.\n * IN assertion: length <= 16 and value fits in length bits.\n */\nconst send_bits = (s, value, length) => {\n\n  if (s.bi_valid > (Buf_size - length)) {\n    s.bi_buf |= (value << s.bi_valid) & 0xffff;\n    put_short(s, s.bi_buf);\n    s.bi_buf = value >> (Buf_size - s.bi_valid);\n    s.bi_valid += length - Buf_size;\n  } else {\n    s.bi_buf |= (value << s.bi_valid) & 0xffff;\n    s.bi_valid += length;\n  }\n};\n\n\nconst send_code = (s, c, tree) => {\n\n  send_bits(s, tree[c * 2]/*.Code*/, tree[c * 2 + 1]/*.Len*/);\n};\n\n\n/* ===========================================================================\n * Reverse the first len bits of a code, using straightforward code (a faster\n * method would use a table)\n * IN assertion: 1 <= len <= 15\n */\nconst bi_reverse = (code, len) => {\n\n  let res = 0;\n  do {\n    res |= code & 1;\n    code >>>= 1;\n    res <<= 1;\n  } while (--len > 0);\n  return res >>> 1;\n};\n\n\n/* ===========================================================================\n * Flush the bit buffer, keeping at most 7 bits in it.\n */\nconst bi_flush = (s) => {\n\n  if (s.bi_valid === 16) {\n    put_short(s, s.bi_buf);\n    s.bi_buf = 0;\n    s.bi_valid = 0;\n\n  } else if (s.bi_valid >= 8) {\n    s.pending_buf[s.pending++] = s.bi_buf & 0xff;\n    s.bi_buf >>= 8;\n    s.bi_valid -= 8;\n  }\n};\n\n\n/* ===========================================================================\n * Compute the optimal bit lengths for a tree and update the total bit length\n * for the current block.\n * IN assertion: the fields freq and dad are set, heap[heap_max] and\n *    above are the tree nodes sorted by increasing frequency.\n * OUT assertions: the field len is set to the optimal bit length, the\n *     array bl_count contains the frequencies for each bit length.\n *     The length opt_len is updated; static_len is also updated if stree is\n *     not null.\n */\nconst gen_bitlen = (s, desc) =>\n//    deflate_state *s;\n//    tree_desc *desc;    /* the tree descriptor */\n{\n  const tree            = desc.dyn_tree;\n  const max_code        = desc.max_code;\n  const stree           = desc.stat_desc.static_tree;\n  const has_stree       = desc.stat_desc.has_stree;\n  const extra           = desc.stat_desc.extra_bits;\n  const base            = desc.stat_desc.extra_base;\n  const max_length      = desc.stat_desc.max_length;\n  let h;              /* heap index */\n  let n, m;           /* iterate over the tree elements */\n  let bits;           /* bit length */\n  let xbits;          /* extra bits */\n  let f;              /* frequency */\n  let overflow = 0;   /* number of elements with bit length too large */\n\n  for (bits = 0; bits <= MAX_BITS$1; bits++) {\n    s.bl_count[bits] = 0;\n  }\n\n  /* In a first pass, compute the optimal bit lengths (which may\n   * overflow in the case of the bit length tree).\n   */\n  tree[s.heap[s.heap_max] * 2 + 1]/*.Len*/ = 0; /* root of the heap */\n\n  for (h = s.heap_max + 1; h < HEAP_SIZE$1; h++) {\n    n = s.heap[h];\n    bits = tree[tree[n * 2 + 1]/*.Dad*/ * 2 + 1]/*.Len*/ + 1;\n    if (bits > max_length) {\n      bits = max_length;\n      overflow++;\n    }\n    tree[n * 2 + 1]/*.Len*/ = bits;\n    /* We overwrite tree[n].Dad which is no longer needed */\n\n    if (n > max_code) { continue; } /* not a leaf node */\n\n    s.bl_count[bits]++;\n    xbits = 0;\n    if (n >= base) {\n      xbits = extra[n - base];\n    }\n    f = tree[n * 2]/*.Freq*/;\n    s.opt_len += f * (bits + xbits);\n    if (has_stree) {\n      s.static_len += f * (stree[n * 2 + 1]/*.Len*/ + xbits);\n    }\n  }\n  if (overflow === 0) { return; }\n\n  // Trace((stderr,\"\\nbit length overflow\\n\"));\n  /* This happens for example on obj2 and pic of the Calgary corpus */\n\n  /* Find the first bit length which could increase: */\n  do {\n    bits = max_length - 1;\n    while (s.bl_count[bits] === 0) { bits--; }\n    s.bl_count[bits]--;      /* move one leaf down the tree */\n    s.bl_count[bits + 1] += 2; /* move one overflow item as its brother */\n    s.bl_count[max_length]--;\n    /* The brother of the overflow item also moves one step up,\n     * but this does not affect bl_count[max_length]\n     */\n    overflow -= 2;\n  } while (overflow > 0);\n\n  /* Now recompute all bit lengths, scanning in increasing frequency.\n   * h is still equal to HEAP_SIZE. (It is simpler to reconstruct all\n   * lengths instead of fixing only the wrong ones. This idea is taken\n   * from 'ar' written by Haruhiko Okumura.)\n   */\n  for (bits = max_length; bits !== 0; bits--) {\n    n = s.bl_count[bits];\n    while (n !== 0) {\n      m = s.heap[--h];\n      if (m > max_code) { continue; }\n      if (tree[m * 2 + 1]/*.Len*/ !== bits) {\n        // Trace((stderr,\"code %d bits %d->%d\\n\", m, tree[m].Len, bits));\n        s.opt_len += (bits - tree[m * 2 + 1]/*.Len*/) * tree[m * 2]/*.Freq*/;\n        tree[m * 2 + 1]/*.Len*/ = bits;\n      }\n      n--;\n    }\n  }\n};\n\n\n/* ===========================================================================\n * Generate the codes for a given tree and bit counts (which need not be\n * optimal).\n * IN assertion: the array bl_count contains the bit length statistics for\n * the given tree and the field len is set for all tree elements.\n * OUT assertion: the field code is set for all tree elements of non\n *     zero code length.\n */\nconst gen_codes = (tree, max_code, bl_count) =>\n//    ct_data *tree;             /* the tree to decorate */\n//    int max_code;              /* largest code with non zero frequency */\n//    ushf *bl_count;            /* number of codes at each bit length */\n{\n  const next_code = new Array(MAX_BITS$1 + 1); /* next code value for each bit length */\n  let code = 0;              /* running code value */\n  let bits;                  /* bit index */\n  let n;                     /* code index */\n\n  /* The distribution counts are first used to generate the code values\n   * without bit reversal.\n   */\n  for (bits = 1; bits <= MAX_BITS$1; bits++) {\n    next_code[bits] = code = (code + bl_count[bits - 1]) << 1;\n  }\n  /* Check that the bit counts in bl_count are consistent. The last code\n   * must be all ones.\n   */\n  //Assert (code + bl_count[MAX_BITS]-1 == (1<<MAX_BITS)-1,\n  //        \"inconsistent bit counts\");\n  //Tracev((stderr,\"\\ngen_codes: max_code %d \", max_code));\n\n  for (n = 0;  n <= max_code; n++) {\n    let len = tree[n * 2 + 1]/*.Len*/;\n    if (len === 0) { continue; }\n    /* Now reverse the bits */\n    tree[n * 2]/*.Code*/ = bi_reverse(next_code[len]++, len);\n\n    //Tracecv(tree != static_ltree, (stderr,\"\\nn %3d %c l %2d c %4x (%x) \",\n    //     n, (isgraph(n) ? n : ' '), len, tree[n].Code, next_code[len]-1));\n  }\n};\n\n\n/* ===========================================================================\n * Initialize the various 'constant' tables.\n */\nconst tr_static_init = () => {\n\n  let n;        /* iterates over tree elements */\n  let bits;     /* bit counter */\n  let length;   /* length value */\n  let code;     /* code value */\n  let dist;     /* distance index */\n  const bl_count = new Array(MAX_BITS$1 + 1);\n  /* number of codes at each bit length for an optimal tree */\n\n  // do check in _tr_init()\n  //if (static_init_done) return;\n\n  /* For some embedded targets, global variables are not initialized: */\n/*#ifdef NO_INIT_GLOBAL_POINTERS\n  static_l_desc.static_tree = static_ltree;\n  static_l_desc.extra_bits = extra_lbits;\n  static_d_desc.static_tree = static_dtree;\n  static_d_desc.extra_bits = extra_dbits;\n  static_bl_desc.extra_bits = extra_blbits;\n#endif*/\n\n  /* Initialize the mapping length (0..255) -> length code (0..28) */\n  length = 0;\n  for (code = 0; code < LENGTH_CODES$1 - 1; code++) {\n    base_length[code] = length;\n    for (n = 0; n < (1 << extra_lbits[code]); n++) {\n      _length_code[length++] = code;\n    }\n  }\n  //Assert (length == 256, \"tr_static_init: length != 256\");\n  /* Note that the length 255 (match length 258) can be represented\n   * in two different ways: code 284 + 5 bits or code 285, so we\n   * overwrite length_code[255] to use the best encoding:\n   */\n  _length_code[length - 1] = code;\n\n  /* Initialize the mapping dist (0..32K) -> dist code (0..29) */\n  dist = 0;\n  for (code = 0; code < 16; code++) {\n    base_dist[code] = dist;\n    for (n = 0; n < (1 << extra_dbits[code]); n++) {\n      _dist_code[dist++] = code;\n    }\n  }\n  //Assert (dist == 256, \"tr_static_init: dist != 256\");\n  dist >>= 7; /* from now on, all distances are divided by 128 */\n  for (; code < D_CODES$1; code++) {\n    base_dist[code] = dist << 7;\n    for (n = 0; n < (1 << (extra_dbits[code] - 7)); n++) {\n      _dist_code[256 + dist++] = code;\n    }\n  }\n  //Assert (dist == 256, \"tr_static_init: 256+dist != 512\");\n\n  /* Construct the codes of the static literal tree */\n  for (bits = 0; bits <= MAX_BITS$1; bits++) {\n    bl_count[bits] = 0;\n  }\n\n  n = 0;\n  while (n <= 143) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 8;\n    n++;\n    bl_count[8]++;\n  }\n  while (n <= 255) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 9;\n    n++;\n    bl_count[9]++;\n  }\n  while (n <= 279) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 7;\n    n++;\n    bl_count[7]++;\n  }\n  while (n <= 287) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 8;\n    n++;\n    bl_count[8]++;\n  }\n  /* Codes 286 and 287 do not exist, but we must include them in the\n   * tree construction to get a canonical Huffman tree (longest code\n   * all ones)\n   */\n  gen_codes(static_ltree, L_CODES$1 + 1, bl_count);\n\n  /* The static distance tree is trivial: */\n  for (n = 0; n < D_CODES$1; n++) {\n    static_dtree[n * 2 + 1]/*.Len*/ = 5;\n    static_dtree[n * 2]/*.Code*/ = bi_reverse(n, 5);\n  }\n\n  // Now data ready and we can init static trees\n  static_l_desc = new StaticTreeDesc(static_ltree, extra_lbits, LITERALS$1 + 1, L_CODES$1, MAX_BITS$1);\n  static_d_desc = new StaticTreeDesc(static_dtree, extra_dbits, 0,          D_CODES$1, MAX_BITS$1);\n  static_bl_desc = new StaticTreeDesc(new Array(0), extra_blbits, 0,         BL_CODES$1, MAX_BL_BITS);\n\n  //static_init_done = true;\n};\n\n\n/* ===========================================================================\n * Initialize a new block.\n */\nconst init_block = (s) => {\n\n  let n; /* iterates over tree elements */\n\n  /* Initialize the trees. */\n  for (n = 0; n < L_CODES$1;  n++) { s.dyn_ltree[n * 2]/*.Freq*/ = 0; }\n  for (n = 0; n < D_CODES$1;  n++) { s.dyn_dtree[n * 2]/*.Freq*/ = 0; }\n  for (n = 0; n < BL_CODES$1; n++) { s.bl_tree[n * 2]/*.Freq*/ = 0; }\n\n  s.dyn_ltree[END_BLOCK * 2]/*.Freq*/ = 1;\n  s.opt_len = s.static_len = 0;\n  s.last_lit = s.matches = 0;\n};\n\n\n/* ===========================================================================\n * Flush the bit buffer and align the output on a byte boundary\n */\nconst bi_windup = (s) =>\n{\n  if (s.bi_valid > 8) {\n    put_short(s, s.bi_buf);\n  } else if (s.bi_valid > 0) {\n    //put_byte(s, (Byte)s->bi_buf);\n    s.pending_buf[s.pending++] = s.bi_buf;\n  }\n  s.bi_buf = 0;\n  s.bi_valid = 0;\n};\n\n/* ===========================================================================\n * Copy a stored block, storing first the length and its\n * one's complement if requested.\n */\nconst copy_block = (s, buf, len, header) =>\n//DeflateState *s;\n//charf    *buf;    /* the input data */\n//unsigned len;     /* its length */\n//int      header;  /* true if block header must be written */\n{\n  bi_windup(s);        /* align on byte boundary */\n\n  if (header) {\n    put_short(s, len);\n    put_short(s, ~len);\n  }\n//  while (len--) {\n//    put_byte(s, *buf++);\n//  }\n  s.pending_buf.set(s.window.subarray(buf, buf + len), s.pending);\n  s.pending += len;\n};\n\n/* ===========================================================================\n * Compares to subtrees, using the tree depth as tie breaker when\n * the subtrees have equal frequency. This minimizes the worst case length.\n */\nconst smaller = (tree, n, m, depth) => {\n\n  const _n2 = n * 2;\n  const _m2 = m * 2;\n  return (tree[_n2]/*.Freq*/ < tree[_m2]/*.Freq*/ ||\n         (tree[_n2]/*.Freq*/ === tree[_m2]/*.Freq*/ && depth[n] <= depth[m]));\n};\n\n/* ===========================================================================\n * Restore the heap property by moving down the tree starting at node k,\n * exchanging a node with the smallest of its two sons if necessary, stopping\n * when the heap property is re-established (each father smaller than its\n * two sons).\n */\nconst pqdownheap = (s, tree, k) =>\n//    deflate_state *s;\n//    ct_data *tree;  /* the tree to restore */\n//    int k;               /* node to move down */\n{\n  const v = s.heap[k];\n  let j = k << 1;  /* left son of k */\n  while (j <= s.heap_len) {\n    /* Set j to the smallest of the two sons: */\n    if (j < s.heap_len &&\n      smaller(tree, s.heap[j + 1], s.heap[j], s.depth)) {\n      j++;\n    }\n    /* Exit if v is smaller than both sons */\n    if (smaller(tree, v, s.heap[j], s.depth)) { break; }\n\n    /* Exchange v with the smallest son */\n    s.heap[k] = s.heap[j];\n    k = j;\n\n    /* And continue down the tree, setting j to the left son of k */\n    j <<= 1;\n  }\n  s.heap[k] = v;\n};\n\n\n// inlined manually\n// const SMALLEST = 1;\n\n/* ===========================================================================\n * Send the block data compressed using the given Huffman trees\n */\nconst compress_block = (s, ltree, dtree) =>\n//    deflate_state *s;\n//    const ct_data *ltree; /* literal tree */\n//    const ct_data *dtree; /* distance tree */\n{\n  let dist;           /* distance of matched string */\n  let lc;             /* match length or unmatched char (if dist == 0) */\n  let lx = 0;         /* running index in l_buf */\n  let code;           /* the code to send */\n  let extra;          /* number of extra bits to send */\n\n  if (s.last_lit !== 0) {\n    do {\n      dist = (s.pending_buf[s.d_buf + lx * 2] << 8) | (s.pending_buf[s.d_buf + lx * 2 + 1]);\n      lc = s.pending_buf[s.l_buf + lx];\n      lx++;\n\n      if (dist === 0) {\n        send_code(s, lc, ltree); /* send a literal byte */\n        //Tracecv(isgraph(lc), (stderr,\" '%c' \", lc));\n      } else {\n        /* Here, lc is the match length - MIN_MATCH */\n        code = _length_code[lc];\n        send_code(s, code + LITERALS$1 + 1, ltree); /* send the length code */\n        extra = extra_lbits[code];\n        if (extra !== 0) {\n          lc -= base_length[code];\n          send_bits(s, lc, extra);       /* send the extra length bits */\n        }\n        dist--; /* dist is now the match distance - 1 */\n        code = d_code(dist);\n        //Assert (code < D_CODES, \"bad d_code\");\n\n        send_code(s, code, dtree);       /* send the distance code */\n        extra = extra_dbits[code];\n        if (extra !== 0) {\n          dist -= base_dist[code];\n          send_bits(s, dist, extra);   /* send the extra distance bits */\n        }\n      } /* literal or match pair ? */\n\n      /* Check that the overlay between pending_buf and d_buf+l_buf is ok: */\n      //Assert((uInt)(s->pending) < s->lit_bufsize + 2*lx,\n      //       \"pendingBuf overflow\");\n\n    } while (lx < s.last_lit);\n  }\n\n  send_code(s, END_BLOCK, ltree);\n};\n\n\n/* ===========================================================================\n * Construct one Huffman tree and assigns the code bit strings and lengths.\n * Update the total bit length for the current block.\n * IN assertion: the field freq is set for all tree elements.\n * OUT assertions: the fields len and code are set to the optimal bit length\n *     and corresponding code. The length opt_len is updated; static_len is\n *     also updated if stree is not null. The field max_code is set.\n */\nconst build_tree = (s, desc) =>\n//    deflate_state *s;\n//    tree_desc *desc; /* the tree descriptor */\n{\n  const tree     = desc.dyn_tree;\n  const stree    = desc.stat_desc.static_tree;\n  const has_stree = desc.stat_desc.has_stree;\n  const elems    = desc.stat_desc.elems;\n  let n, m;          /* iterate over heap elements */\n  let max_code = -1; /* largest code with non zero frequency */\n  let node;          /* new node being created */\n\n  /* Construct the initial heap, with least frequent element in\n   * heap[SMALLEST]. The sons of heap[n] are heap[2*n] and heap[2*n+1].\n   * heap[0] is not used.\n   */\n  s.heap_len = 0;\n  s.heap_max = HEAP_SIZE$1;\n\n  for (n = 0; n < elems; n++) {\n    if (tree[n * 2]/*.Freq*/ !== 0) {\n      s.heap[++s.heap_len] = max_code = n;\n      s.depth[n] = 0;\n\n    } else {\n      tree[n * 2 + 1]/*.Len*/ = 0;\n    }\n  }\n\n  /* The pkzip format requires that at least one distance code exists,\n   * and that at least one bit should be sent even if there is only one\n   * possible code. So to avoid special checks later on we force at least\n   * two codes of non zero frequency.\n   */\n  while (s.heap_len < 2) {\n    node = s.heap[++s.heap_len] = (max_code < 2 ? ++max_code : 0);\n    tree[node * 2]/*.Freq*/ = 1;\n    s.depth[node] = 0;\n    s.opt_len--;\n\n    if (has_stree) {\n      s.static_len -= stree[node * 2 + 1]/*.Len*/;\n    }\n    /* node is 0 or 1 so it does not have extra bits */\n  }\n  desc.max_code = max_code;\n\n  /* The elements heap[heap_len/2+1 .. heap_len] are leaves of the tree,\n   * establish sub-heaps of increasing lengths:\n   */\n  for (n = (s.heap_len >> 1/*int /2*/); n >= 1; n--) { pqdownheap(s, tree, n); }\n\n  /* Construct the Huffman tree by repeatedly combining the least two\n   * frequent nodes.\n   */\n  node = elems;              /* next internal node of the tree */\n  do {\n    //pqremove(s, tree, n);  /* n = node of least frequency */\n    /*** pqremove ***/\n    n = s.heap[1/*SMALLEST*/];\n    s.heap[1/*SMALLEST*/] = s.heap[s.heap_len--];\n    pqdownheap(s, tree, 1/*SMALLEST*/);\n    /***/\n\n    m = s.heap[1/*SMALLEST*/]; /* m = node of next least frequency */\n\n    s.heap[--s.heap_max] = n; /* keep the nodes sorted by frequency */\n    s.heap[--s.heap_max] = m;\n\n    /* Create a new node father of n and m */\n    tree[node * 2]/*.Freq*/ = tree[n * 2]/*.Freq*/ + tree[m * 2]/*.Freq*/;\n    s.depth[node] = (s.depth[n] >= s.depth[m] ? s.depth[n] : s.depth[m]) + 1;\n    tree[n * 2 + 1]/*.Dad*/ = tree[m * 2 + 1]/*.Dad*/ = node;\n\n    /* and insert the new node in the heap */\n    s.heap[1/*SMALLEST*/] = node++;\n    pqdownheap(s, tree, 1/*SMALLEST*/);\n\n  } while (s.heap_len >= 2);\n\n  s.heap[--s.heap_max] = s.heap[1/*SMALLEST*/];\n\n  /* At this point, the fields freq and dad are set. We can now\n   * generate the bit lengths.\n   */\n  gen_bitlen(s, desc);\n\n  /* The field len is now set, we can generate the bit codes */\n  gen_codes(tree, max_code, s.bl_count);\n};\n\n\n/* ===========================================================================\n * Scan a literal or distance tree to determine the frequencies of the codes\n * in the bit length tree.\n */\nconst scan_tree = (s, tree, max_code) =>\n//    deflate_state *s;\n//    ct_data *tree;   /* the tree to be scanned */\n//    int max_code;    /* and its largest code of non zero frequency */\n{\n  let n;                     /* iterates over all tree elements */\n  let prevlen = -1;          /* last emitted length */\n  let curlen;                /* length of current code */\n\n  let nextlen = tree[0 * 2 + 1]/*.Len*/; /* length of next code */\n\n  let count = 0;             /* repeat count of the current code */\n  let max_count = 7;         /* max repeat count */\n  let min_count = 4;         /* min repeat count */\n\n  if (nextlen === 0) {\n    max_count = 138;\n    min_count = 3;\n  }\n  tree[(max_code + 1) * 2 + 1]/*.Len*/ = 0xffff; /* guard */\n\n  for (n = 0; n <= max_code; n++) {\n    curlen = nextlen;\n    nextlen = tree[(n + 1) * 2 + 1]/*.Len*/;\n\n    if (++count < max_count && curlen === nextlen) {\n      continue;\n\n    } else if (count < min_count) {\n      s.bl_tree[curlen * 2]/*.Freq*/ += count;\n\n    } else if (curlen !== 0) {\n\n      if (curlen !== prevlen) { s.bl_tree[curlen * 2]/*.Freq*/++; }\n      s.bl_tree[REP_3_6 * 2]/*.Freq*/++;\n\n    } else if (count <= 10) {\n      s.bl_tree[REPZ_3_10 * 2]/*.Freq*/++;\n\n    } else {\n      s.bl_tree[REPZ_11_138 * 2]/*.Freq*/++;\n    }\n\n    count = 0;\n    prevlen = curlen;\n\n    if (nextlen === 0) {\n      max_count = 138;\n      min_count = 3;\n\n    } else if (curlen === nextlen) {\n      max_count = 6;\n      min_count = 3;\n\n    } else {\n      max_count = 7;\n      min_count = 4;\n    }\n  }\n};\n\n\n/* ===========================================================================\n * Send a literal or distance tree in compressed form, using the codes in\n * bl_tree.\n */\nconst send_tree = (s, tree, max_code) =>\n//    deflate_state *s;\n//    ct_data *tree; /* the tree to be scanned */\n//    int max_code;       /* and its largest code of non zero frequency */\n{\n  let n;                     /* iterates over all tree elements */\n  let prevlen = -1;          /* last emitted length */\n  let curlen;                /* length of current code */\n\n  let nextlen = tree[0 * 2 + 1]/*.Len*/; /* length of next code */\n\n  let count = 0;             /* repeat count of the current code */\n  let max_count = 7;         /* max repeat count */\n  let min_count = 4;         /* min repeat count */\n\n  /* tree[max_code+1].Len = -1; */  /* guard already set */\n  if (nextlen === 0) {\n    max_count = 138;\n    min_count = 3;\n  }\n\n  for (n = 0; n <= max_code; n++) {\n    curlen = nextlen;\n    nextlen = tree[(n + 1) * 2 + 1]/*.Len*/;\n\n    if (++count < max_count && curlen === nextlen) {\n      continue;\n\n    } else if (count < min_count) {\n      do { send_code(s, curlen, s.bl_tree); } while (--count !== 0);\n\n    } else if (curlen !== 0) {\n      if (curlen !== prevlen) {\n        send_code(s, curlen, s.bl_tree);\n        count--;\n      }\n      //Assert(count >= 3 && count <= 6, \" 3_6?\");\n      send_code(s, REP_3_6, s.bl_tree);\n      send_bits(s, count - 3, 2);\n\n    } else if (count <= 10) {\n      send_code(s, REPZ_3_10, s.bl_tree);\n      send_bits(s, count - 3, 3);\n\n    } else {\n      send_code(s, REPZ_11_138, s.bl_tree);\n      send_bits(s, count - 11, 7);\n    }\n\n    count = 0;\n    prevlen = curlen;\n    if (nextlen === 0) {\n      max_count = 138;\n      min_count = 3;\n\n    } else if (curlen === nextlen) {\n      max_count = 6;\n      min_count = 3;\n\n    } else {\n      max_count = 7;\n      min_count = 4;\n    }\n  }\n};\n\n\n/* ===========================================================================\n * Construct the Huffman tree for the bit lengths and return the index in\n * bl_order of the last bit length code to send.\n */\nconst build_bl_tree = (s) => {\n\n  let max_blindex;  /* index of last bit length code of non zero freq */\n\n  /* Determine the bit length frequencies for literal and distance trees */\n  scan_tree(s, s.dyn_ltree, s.l_desc.max_code);\n  scan_tree(s, s.dyn_dtree, s.d_desc.max_code);\n\n  /* Build the bit length tree: */\n  build_tree(s, s.bl_desc);\n  /* opt_len now includes the length of the tree representations, except\n   * the lengths of the bit lengths codes and the 5+5+4 bits for the counts.\n   */\n\n  /* Determine the number of bit length codes to send. The pkzip format\n   * requires that at least 4 bit length codes be sent. (appnote.txt says\n   * 3 but the actual value used is 4.)\n   */\n  for (max_blindex = BL_CODES$1 - 1; max_blindex >= 3; max_blindex--) {\n    if (s.bl_tree[bl_order[max_blindex] * 2 + 1]/*.Len*/ !== 0) {\n      break;\n    }\n  }\n  /* Update opt_len to include the bit length tree and counts */\n  s.opt_len += 3 * (max_blindex + 1) + 5 + 5 + 4;\n  //Tracev((stderr, \"\\ndyn trees: dyn %ld, stat %ld\",\n  //        s->opt_len, s->static_len));\n\n  return max_blindex;\n};\n\n\n/* ===========================================================================\n * Send the header for a block using dynamic Huffman trees: the counts, the\n * lengths of the bit length codes, the literal tree and the distance tree.\n * IN assertion: lcodes >= 257, dcodes >= 1, blcodes >= 4.\n */\nconst send_all_trees = (s, lcodes, dcodes, blcodes) =>\n//    deflate_state *s;\n//    int lcodes, dcodes, blcodes; /* number of codes for each tree */\n{\n  let rank;                    /* index in bl_order */\n\n  //Assert (lcodes >= 257 && dcodes >= 1 && blcodes >= 4, \"not enough codes\");\n  //Assert (lcodes <= L_CODES && dcodes <= D_CODES && blcodes <= BL_CODES,\n  //        \"too many codes\");\n  //Tracev((stderr, \"\\nbl counts: \"));\n  send_bits(s, lcodes - 257, 5); /* not +255 as stated in appnote.txt */\n  send_bits(s, dcodes - 1,   5);\n  send_bits(s, blcodes - 4,  4); /* not -3 as stated in appnote.txt */\n  for (rank = 0; rank < blcodes; rank++) {\n    //Tracev((stderr, \"\\nbl code %2d \", bl_order[rank]));\n    send_bits(s, s.bl_tree[bl_order[rank] * 2 + 1]/*.Len*/, 3);\n  }\n  //Tracev((stderr, \"\\nbl tree: sent %ld\", s->bits_sent));\n\n  send_tree(s, s.dyn_ltree, lcodes - 1); /* literal tree */\n  //Tracev((stderr, \"\\nlit tree: sent %ld\", s->bits_sent));\n\n  send_tree(s, s.dyn_dtree, dcodes - 1); /* distance tree */\n  //Tracev((stderr, \"\\ndist tree: sent %ld\", s->bits_sent));\n};\n\n\n/* ===========================================================================\n * Check if the data type is TEXT or BINARY, using the following algorithm:\n * - TEXT if the two conditions below are satisfied:\n *    a) There are no non-portable control characters belonging to the\n *       \"black list\" (0..6, 14..25, 28..31).\n *    b) There is at least one printable character belonging to the\n *       \"white list\" (9 {TAB}, 10 {LF}, 13 {CR}, 32..255).\n * - BINARY otherwise.\n * - The following partially-portable control characters form a\n *   \"gray list\" that is ignored in this detection algorithm:\n *   (7 {BEL}, 8 {BS}, 11 {VT}, 12 {FF}, 26 {SUB}, 27 {ESC}).\n * IN assertion: the fields Freq of dyn_ltree are set.\n */\nconst detect_data_type = (s) => {\n  /* black_mask is the bit mask of black-listed bytes\n   * set bits 0..6, 14..25, and 28..31\n   * 0xf3ffc07f = binary 11110011111111111100000001111111\n   */\n  let black_mask = 0xf3ffc07f;\n  let n;\n\n  /* Check for non-textual (\"black-listed\") bytes. */\n  for (n = 0; n <= 31; n++, black_mask >>>= 1) {\n    if ((black_mask & 1) && (s.dyn_ltree[n * 2]/*.Freq*/ !== 0)) {\n      return Z_BINARY;\n    }\n  }\n\n  /* Check for textual (\"white-listed\") bytes. */\n  if (s.dyn_ltree[9 * 2]/*.Freq*/ !== 0 || s.dyn_ltree[10 * 2]/*.Freq*/ !== 0 ||\n      s.dyn_ltree[13 * 2]/*.Freq*/ !== 0) {\n    return Z_TEXT;\n  }\n  for (n = 32; n < LITERALS$1; n++) {\n    if (s.dyn_ltree[n * 2]/*.Freq*/ !== 0) {\n      return Z_TEXT;\n    }\n  }\n\n  /* There are no \"black-listed\" or \"white-listed\" bytes:\n   * this stream either is empty or has tolerated (\"gray-listed\") bytes only.\n   */\n  return Z_BINARY;\n};\n\n\nlet static_init_done = false;\n\n/* ===========================================================================\n * Initialize the tree data structures for a new zlib stream.\n */\nconst _tr_init$1 = (s) =>\n{\n\n  if (!static_init_done) {\n    tr_static_init();\n    static_init_done = true;\n  }\n\n  s.l_desc  = new TreeDesc(s.dyn_ltree, static_l_desc);\n  s.d_desc  = new TreeDesc(s.dyn_dtree, static_d_desc);\n  s.bl_desc = new TreeDesc(s.bl_tree, static_bl_desc);\n\n  s.bi_buf = 0;\n  s.bi_valid = 0;\n\n  /* Initialize the first block of the first file: */\n  init_block(s);\n};\n\n\n/* ===========================================================================\n * Send a stored block\n */\nconst _tr_stored_block$1 = (s, buf, stored_len, last) =>\n//DeflateState *s;\n//charf *buf;       /* input block */\n//ulg stored_len;   /* length of input block */\n//int last;         /* one if this is the last block for a file */\n{\n  send_bits(s, (STORED_BLOCK << 1) + (last ? 1 : 0), 3);    /* send block type */\n  copy_block(s, buf, stored_len, true); /* with header */\n};\n\n\n/* ===========================================================================\n * Send one empty static block to give enough lookahead for inflate.\n * This takes 10 bits, of which 7 may remain in the bit buffer.\n */\nconst _tr_align$1 = (s) => {\n  send_bits(s, STATIC_TREES << 1, 3);\n  send_code(s, END_BLOCK, static_ltree);\n  bi_flush(s);\n};\n\n\n/* ===========================================================================\n * Determine the best encoding for the current block: dynamic trees, static\n * trees or store, and output the encoded block to the zip file.\n */\nconst _tr_flush_block$1 = (s, buf, stored_len, last) =>\n//DeflateState *s;\n//charf *buf;       /* input block, or NULL if too old */\n//ulg stored_len;   /* length of input block */\n//int last;         /* one if this is the last block for a file */\n{\n  let opt_lenb, static_lenb;  /* opt_len and static_len in bytes */\n  let max_blindex = 0;        /* index of last bit length code of non zero freq */\n\n  /* Build the Huffman trees unless a stored block is forced */\n  if (s.level > 0) {\n\n    /* Check if the file is binary or text */\n    if (s.strm.data_type === Z_UNKNOWN$1) {\n      s.strm.data_type = detect_data_type(s);\n    }\n\n    /* Construct the literal and distance trees */\n    build_tree(s, s.l_desc);\n    // Tracev((stderr, \"\\nlit data: dyn %ld, stat %ld\", s->opt_len,\n    //        s->static_len));\n\n    build_tree(s, s.d_desc);\n    // Tracev((stderr, \"\\ndist data: dyn %ld, stat %ld\", s->opt_len,\n    //        s->static_len));\n    /* At this point, opt_len and static_len are the total bit lengths of\n     * the compressed block data, excluding the tree representations.\n     */\n\n    /* Build the bit length tree for the above two trees, and get the index\n     * in bl_order of the last bit length code to send.\n     */\n    max_blindex = build_bl_tree(s);\n\n    /* Determine the best encoding. Compute the block lengths in bytes. */\n    opt_lenb = (s.opt_len + 3 + 7) >>> 3;\n    static_lenb = (s.static_len + 3 + 7) >>> 3;\n\n    // Tracev((stderr, \"\\nopt %lu(%lu) stat %lu(%lu) stored %lu lit %u \",\n    //        opt_lenb, s->opt_len, static_lenb, s->static_len, stored_len,\n    //        s->last_lit));\n\n    if (static_lenb <= opt_lenb) { opt_lenb = static_lenb; }\n\n  } else {\n    // Assert(buf != (char*)0, \"lost buf\");\n    opt_lenb = static_lenb = stored_len + 5; /* force a stored block */\n  }\n\n  if ((stored_len + 4 <= opt_lenb) && (buf !== -1)) {\n    /* 4: two words for the lengths */\n\n    /* The test buf != NULL is only necessary if LIT_BUFSIZE > WSIZE.\n     * Otherwise we can't have processed more than WSIZE input bytes since\n     * the last block flush, because compression would have been\n     * successful. If LIT_BUFSIZE <= WSIZE, it is never too late to\n     * transform a block into a stored block.\n     */\n    _tr_stored_block$1(s, buf, stored_len, last);\n\n  } else if (s.strategy === Z_FIXED$1 || static_lenb === opt_lenb) {\n\n    send_bits(s, (STATIC_TREES << 1) + (last ? 1 : 0), 3);\n    compress_block(s, static_ltree, static_dtree);\n\n  } else {\n    send_bits(s, (DYN_TREES << 1) + (last ? 1 : 0), 3);\n    send_all_trees(s, s.l_desc.max_code + 1, s.d_desc.max_code + 1, max_blindex + 1);\n    compress_block(s, s.dyn_ltree, s.dyn_dtree);\n  }\n  // Assert (s->compressed_len == s->bits_sent, \"bad compressed size\");\n  /* The above check is made mod 2^32, for files larger than 512 MB\n   * and uLong implemented on 32 bits.\n   */\n  init_block(s);\n\n  if (last) {\n    bi_windup(s);\n  }\n  // Tracev((stderr,\"\\ncomprlen %lu(%lu) \", s->compressed_len>>3,\n  //       s->compressed_len-7*last));\n};\n\n/* ===========================================================================\n * Save the match info and tally the frequency counts. Return true if\n * the current block must be flushed.\n */\nconst _tr_tally$1 = (s, dist, lc) =>\n//    deflate_state *s;\n//    unsigned dist;  /* distance of matched string */\n//    unsigned lc;    /* match length-MIN_MATCH or unmatched char (if dist==0) */\n{\n  //let out_length, in_length, dcode;\n\n  s.pending_buf[s.d_buf + s.last_lit * 2]     = (dist >>> 8) & 0xff;\n  s.pending_buf[s.d_buf + s.last_lit * 2 + 1] = dist & 0xff;\n\n  s.pending_buf[s.l_buf + s.last_lit] = lc & 0xff;\n  s.last_lit++;\n\n  if (dist === 0) {\n    /* lc is the unmatched char */\n    s.dyn_ltree[lc * 2]/*.Freq*/++;\n  } else {\n    s.matches++;\n    /* Here, lc is the match length - MIN_MATCH */\n    dist--;             /* dist = match distance - 1 */\n    //Assert((ush)dist < (ush)MAX_DIST(s) &&\n    //       (ush)lc <= (ush)(MAX_MATCH-MIN_MATCH) &&\n    //       (ush)d_code(dist) < (ush)D_CODES,  \"_tr_tally: bad match\");\n\n    s.dyn_ltree[(_length_code[lc] + LITERALS$1 + 1) * 2]/*.Freq*/++;\n    s.dyn_dtree[d_code(dist) * 2]/*.Freq*/++;\n  }\n\n// (!) This block is disabled in zlib defaults,\n// don't enable it for binary compatibility\n\n//#ifdef TRUNCATE_BLOCK\n//  /* Try to guess if it is profitable to stop the current block here */\n//  if ((s.last_lit & 0x1fff) === 0 && s.level > 2) {\n//    /* Compute an upper bound for the compressed length */\n//    out_length = s.last_lit*8;\n//    in_length = s.strstart - s.block_start;\n//\n//    for (dcode = 0; dcode < D_CODES; dcode++) {\n//      out_length += s.dyn_dtree[dcode*2]/*.Freq*/ * (5 + extra_dbits[dcode]);\n//    }\n//    out_length >>>= 3;\n//    //Tracev((stderr,\"\\nlast_lit %u, in %ld, out ~%ld(%ld%%) \",\n//    //       s->last_lit, in_length, out_length,\n//    //       100L - out_length*100L/in_length));\n//    if (s.matches < (s.last_lit>>1)/*int /2*/ && out_length < (in_length>>1)/*int /2*/) {\n//      return true;\n//    }\n//  }\n//#endif\n\n  return (s.last_lit === s.lit_bufsize - 1);\n  /* We avoid equality with lit_bufsize because of wraparound at 64K\n   * on 16 bit machines and because stored blocks are restricted to\n   * 64K-1 bytes.\n   */\n};\n\nvar _tr_init_1  = _tr_init$1;\nvar _tr_stored_block_1 = _tr_stored_block$1;\nvar _tr_flush_block_1  = _tr_flush_block$1;\nvar _tr_tally_1 = _tr_tally$1;\nvar _tr_align_1 = _tr_align$1;\n\nvar trees = {\n\t_tr_init: _tr_init_1,\n\t_tr_stored_block: _tr_stored_block_1,\n\t_tr_flush_block: _tr_flush_block_1,\n\t_tr_tally: _tr_tally_1,\n\t_tr_align: _tr_align_1\n};\n\n// Note: adler32 takes 12% for level 0 and 2% for level 6.\n// It isn't worth it to make additional optimizations as in original.\n// Small size is preferable.\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nconst adler32 = (adler, buf, len, pos) => {\n  let s1 = (adler & 0xffff) |0,\n      s2 = ((adler >>> 16) & 0xffff) |0,\n      n = 0;\n\n  while (len !== 0) {\n    // Set limit ~ twice less than 5552, to keep\n    // s2 in 31-bits, because we force signed ints.\n    // in other case %= will fail.\n    n = len > 2000 ? 2000 : len;\n    len -= n;\n\n    do {\n      s1 = (s1 + buf[pos++]) |0;\n      s2 = (s2 + s1) |0;\n    } while (--n);\n\n    s1 %= 65521;\n    s2 %= 65521;\n  }\n\n  return (s1 | (s2 << 16)) |0;\n};\n\n\nvar adler32_1 = adler32;\n\n// Note: we can't get significant speed boost here.\n// So write code to minimize size - no pregenerated tables\n// and array tools dependencies.\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\n// Use ordinary array, since untyped makes no boost here\nconst makeTable = () => {\n  let c, table = [];\n\n  for (var n = 0; n < 256; n++) {\n    c = n;\n    for (var k = 0; k < 8; k++) {\n      c = ((c & 1) ? (0xEDB88320 ^ (c >>> 1)) : (c >>> 1));\n    }\n    table[n] = c;\n  }\n\n  return table;\n};\n\n// Create table on load. Just 255 signed longs. Not a problem.\nconst crcTable = new Uint32Array(makeTable());\n\n\nconst crc32 = (crc, buf, len, pos) => {\n  const t = crcTable;\n  const end = pos + len;\n\n  crc ^= -1;\n\n  for (let i = pos; i < end; i++) {\n    crc = (crc >>> 8) ^ t[(crc ^ buf[i]) & 0xFF];\n  }\n\n  return (crc ^ (-1)); // >>> 0;\n};\n\n\nvar crc32_1 = crc32;\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nvar messages = {\n  2:      'need dictionary',     /* Z_NEED_DICT       2  */\n  1:      'stream end',          /* Z_STREAM_END      1  */\n  0:      '',                    /* Z_OK              0  */\n  '-1':   'file error',          /* Z_ERRNO         (-1) */\n  '-2':   'stream error',        /* Z_STREAM_ERROR  (-2) */\n  '-3':   'data error',          /* Z_DATA_ERROR    (-3) */\n  '-4':   'insufficient memory', /* Z_MEM_ERROR     (-4) */\n  '-5':   'buffer error',        /* Z_BUF_ERROR     (-5) */\n  '-6':   'incompatible version' /* Z_VERSION_ERROR (-6) */\n};\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nvar constants$2 = {\n\n  /* Allowed flush values; see deflate() and inflate() below for details */\n  Z_NO_FLUSH:         0,\n  Z_PARTIAL_FLUSH:    1,\n  Z_SYNC_FLUSH:       2,\n  Z_FULL_FLUSH:       3,\n  Z_FINISH:           4,\n  Z_BLOCK:            5,\n  Z_TREES:            6,\n\n  /* Return codes for the compression/decompression functions. Negative values\n  * are errors, positive values are used for special but normal events.\n  */\n  Z_OK:               0,\n  Z_STREAM_END:       1,\n  Z_NEED_DICT:        2,\n  Z_ERRNO:           -1,\n  Z_STREAM_ERROR:    -2,\n  Z_DATA_ERROR:      -3,\n  Z_MEM_ERROR:       -4,\n  Z_BUF_ERROR:       -5,\n  //Z_VERSION_ERROR: -6,\n\n  /* compression levels */\n  Z_NO_COMPRESSION:         0,\n  Z_BEST_SPEED:             1,\n  Z_BEST_COMPRESSION:       9,\n  Z_DEFAULT_COMPRESSION:   -1,\n\n\n  Z_FILTERED:               1,\n  Z_HUFFMAN_ONLY:           2,\n  Z_RLE:                    3,\n  Z_FIXED:                  4,\n  Z_DEFAULT_STRATEGY:       0,\n\n  /* Possible values of the data_type field (though see inflate()) */\n  Z_BINARY:                 0,\n  Z_TEXT:                   1,\n  //Z_ASCII:                1, // = Z_TEXT (deprecated)\n  Z_UNKNOWN:                2,\n\n  /* The deflate compression method */\n  Z_DEFLATED:               8\n  //Z_NULL:                 null // Use -1 or null inline, depending on var type\n};\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nconst { _tr_init, _tr_stored_block, _tr_flush_block, _tr_tally, _tr_align } = trees;\n\n\n\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\nconst {\n  Z_NO_FLUSH: Z_NO_FLUSH$2, Z_PARTIAL_FLUSH, Z_FULL_FLUSH: Z_FULL_FLUSH$1, Z_FINISH: Z_FINISH$3, Z_BLOCK: Z_BLOCK$1,\n  Z_OK: Z_OK$3, Z_STREAM_END: Z_STREAM_END$3, Z_STREAM_ERROR: Z_STREAM_ERROR$2, Z_DATA_ERROR: Z_DATA_ERROR$2, Z_BUF_ERROR: Z_BUF_ERROR$1,\n  Z_DEFAULT_COMPRESSION: Z_DEFAULT_COMPRESSION$1,\n  Z_FILTERED, Z_HUFFMAN_ONLY, Z_RLE, Z_FIXED, Z_DEFAULT_STRATEGY: Z_DEFAULT_STRATEGY$1,\n  Z_UNKNOWN,\n  Z_DEFLATED: Z_DEFLATED$2\n} = constants$2;\n\n/*============================================================================*/\n\n\nconst MAX_MEM_LEVEL = 9;\n/* Maximum value for memLevel in deflateInit2 */\nconst MAX_WBITS$1 = 15;\n/* 32K LZ77 window */\nconst DEF_MEM_LEVEL = 8;\n\n\nconst LENGTH_CODES  = 29;\n/* number of length codes, not counting the special END_BLOCK code */\nconst LITERALS      = 256;\n/* number of literal bytes 0..255 */\nconst L_CODES       = LITERALS + 1 + LENGTH_CODES;\n/* number of Literal or Length codes, including the END_BLOCK code */\nconst D_CODES       = 30;\n/* number of distance codes */\nconst BL_CODES      = 19;\n/* number of codes used to transfer the bit lengths */\nconst HEAP_SIZE     = 2 * L_CODES + 1;\n/* maximum heap size */\nconst MAX_BITS  = 15;\n/* All codes must not exceed MAX_BITS bits */\n\nconst MIN_MATCH = 3;\nconst MAX_MATCH = 258;\nconst MIN_LOOKAHEAD = (MAX_MATCH + MIN_MATCH + 1);\n\nconst PRESET_DICT = 0x20;\n\nconst INIT_STATE = 42;\nconst EXTRA_STATE = 69;\nconst NAME_STATE = 73;\nconst COMMENT_STATE = 91;\nconst HCRC_STATE = 103;\nconst BUSY_STATE = 113;\nconst FINISH_STATE = 666;\n\nconst BS_NEED_MORE      = 1; /* block not completed, need more input or more output */\nconst BS_BLOCK_DONE     = 2; /* block flush performed */\nconst BS_FINISH_STARTED = 3; /* finish started, need only more output at next deflate */\nconst BS_FINISH_DONE    = 4; /* finish done, accept no more input or output */\n\nconst OS_CODE = 0x03; // Unix :) . Don't detect, use this default.\n\nconst err = (strm, errorCode) => {\n  strm.msg = messages[errorCode];\n  return errorCode;\n};\n\nconst rank = (f) => {\n  return ((f) << 1) - ((f) > 4 ? 9 : 0);\n};\n\nconst zero = (buf) => {\n  let len = buf.length; while (--len >= 0) { buf[len] = 0; }\n};\n\n\n/* eslint-disable new-cap */\nlet HASH_ZLIB = (s, prev, data) => ((prev << s.hash_shift) ^ data) & s.hash_mask;\n// This hash causes less collisions, https://github.com/nodeca/pako/issues/135\n// But breaks binary compatibility\n//let HASH_FAST = (s, prev, data) => ((prev << 8) + (prev >> 8) + (data << 4)) & s.hash_mask;\nlet HASH = HASH_ZLIB;\n\n/* =========================================================================\n * Flush as much pending output as possible. All deflate() output goes\n * through this function so some applications may wish to modify it\n * to avoid allocating a large strm->output buffer and copying into it.\n * (See also read_buf()).\n */\nconst flush_pending = (strm) => {\n  const s = strm.state;\n\n  //_tr_flush_bits(s);\n  let len = s.pending;\n  if (len > strm.avail_out) {\n    len = strm.avail_out;\n  }\n  if (len === 0) { return; }\n\n  strm.output.set(s.pending_buf.subarray(s.pending_out, s.pending_out + len), strm.next_out);\n  strm.next_out += len;\n  s.pending_out += len;\n  strm.total_out += len;\n  strm.avail_out -= len;\n  s.pending -= len;\n  if (s.pending === 0) {\n    s.pending_out = 0;\n  }\n};\n\n\nconst flush_block_only = (s, last) => {\n  _tr_flush_block(s, (s.block_start >= 0 ? s.block_start : -1), s.strstart - s.block_start, last);\n  s.block_start = s.strstart;\n  flush_pending(s.strm);\n};\n\n\nconst put_byte = (s, b) => {\n  s.pending_buf[s.pending++] = b;\n};\n\n\n/* =========================================================================\n * Put a short in the pending buffer. The 16-bit value is put in MSB order.\n * IN assertion: the stream state is correct and there is enough room in\n * pending_buf.\n */\nconst putShortMSB = (s, b) => {\n\n  //  put_byte(s, (Byte)(b >> 8));\n//  put_byte(s, (Byte)(b & 0xff));\n  s.pending_buf[s.pending++] = (b >>> 8) & 0xff;\n  s.pending_buf[s.pending++] = b & 0xff;\n};\n\n\n/* ===========================================================================\n * Read a new buffer from the current input stream, update the adler32\n * and total number of bytes read.  All deflate() input goes through\n * this function so some applications may wish to modify it to avoid\n * allocating a large strm->input buffer and copying from it.\n * (See also flush_pending()).\n */\nconst read_buf = (strm, buf, start, size) => {\n\n  let len = strm.avail_in;\n\n  if (len > size) { len = size; }\n  if (len === 0) { return 0; }\n\n  strm.avail_in -= len;\n\n  // zmemcpy(buf, strm->next_in, len);\n  buf.set(strm.input.subarray(strm.next_in, strm.next_in + len), start);\n  if (strm.state.wrap === 1) {\n    strm.adler = adler32_1(strm.adler, buf, len, start);\n  }\n\n  else if (strm.state.wrap === 2) {\n    strm.adler = crc32_1(strm.adler, buf, len, start);\n  }\n\n  strm.next_in += len;\n  strm.total_in += len;\n\n  return len;\n};\n\n\n/* ===========================================================================\n * Set match_start to the longest match starting at the given string and\n * return its length. Matches shorter or equal to prev_length are discarded,\n * in which case the result is equal to prev_length and match_start is\n * garbage.\n * IN assertions: cur_match is the head of the hash chain for the current\n *   string (strstart) and its distance is <= MAX_DIST, and prev_length >= 1\n * OUT assertion: the match length is not greater than s->lookahead.\n */\nconst longest_match = (s, cur_match) => {\n\n  let chain_length = s.max_chain_length;      /* max hash chain length */\n  let scan = s.strstart; /* current string */\n  let match;                       /* matched string */\n  let len;                           /* length of current match */\n  let best_len = s.prev_length;              /* best match length so far */\n  let nice_match = s.nice_match;             /* stop if match long enough */\n  const limit = (s.strstart > (s.w_size - MIN_LOOKAHEAD)) ?\n      s.strstart - (s.w_size - MIN_LOOKAHEAD) : 0/*NIL*/;\n\n  const _win = s.window; // shortcut\n\n  const wmask = s.w_mask;\n  const prev  = s.prev;\n\n  /* Stop when cur_match becomes <= limit. To simplify the code,\n   * we prevent matches with the string of window index 0.\n   */\n\n  const strend = s.strstart + MAX_MATCH;\n  let scan_end1  = _win[scan + best_len - 1];\n  let scan_end   = _win[scan + best_len];\n\n  /* The code is optimized for HASH_BITS >= 8 and MAX_MATCH-2 multiple of 16.\n   * It is easy to get rid of this optimization if necessary.\n   */\n  // Assert(s->hash_bits >= 8 && MAX_MATCH == 258, \"Code too clever\");\n\n  /* Do not waste too much time if we already have a good match: */\n  if (s.prev_length >= s.good_match) {\n    chain_length >>= 2;\n  }\n  /* Do not look for matches beyond the end of the input. This is necessary\n   * to make deflate deterministic.\n   */\n  if (nice_match > s.lookahead) { nice_match = s.lookahead; }\n\n  // Assert((ulg)s->strstart <= s->window_size-MIN_LOOKAHEAD, \"need lookahead\");\n\n  do {\n    // Assert(cur_match < s->strstart, \"no future\");\n    match = cur_match;\n\n    /* Skip to next match if the match length cannot increase\n     * or if the match length is less than 2.  Note that the checks below\n     * for insufficient lookahead only occur occasionally for performance\n     * reasons.  Therefore uninitialized memory will be accessed, and\n     * conditional jumps will be made that depend on those values.\n     * However the length of the match is limited to the lookahead, so\n     * the output of deflate is not affected by the uninitialized values.\n     */\n\n    if (_win[match + best_len]     !== scan_end  ||\n        _win[match + best_len - 1] !== scan_end1 ||\n        _win[match]                !== _win[scan] ||\n        _win[++match]              !== _win[scan + 1]) {\n      continue;\n    }\n\n    /* The check at best_len-1 can be removed because it will be made\n     * again later. (This heuristic is not always a win.)\n     * It is not necessary to compare scan[2] and match[2] since they\n     * are always equal when the other bytes match, given that\n     * the hash keys are equal and that HASH_BITS >= 8.\n     */\n    scan += 2;\n    match++;\n    // Assert(*scan == *match, \"match[2]?\");\n\n    /* We check for insufficient lookahead only every 8th comparison;\n     * the 256th check will be made at strstart+258.\n     */\n    do {\n      /*jshint noempty:false*/\n    } while (_win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             _win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             _win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             _win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             scan < strend);\n\n    // Assert(scan <= s->window+(unsigned)(s->window_size-1), \"wild scan\");\n\n    len = MAX_MATCH - (strend - scan);\n    scan = strend - MAX_MATCH;\n\n    if (len > best_len) {\n      s.match_start = cur_match;\n      best_len = len;\n      if (len >= nice_match) {\n        break;\n      }\n      scan_end1  = _win[scan + best_len - 1];\n      scan_end   = _win[scan + best_len];\n    }\n  } while ((cur_match = prev[cur_match & wmask]) > limit && --chain_length !== 0);\n\n  if (best_len <= s.lookahead) {\n    return best_len;\n  }\n  return s.lookahead;\n};\n\n\n/* ===========================================================================\n * Fill the window when the lookahead becomes insufficient.\n * Updates strstart and lookahead.\n *\n * IN assertion: lookahead < MIN_LOOKAHEAD\n * OUT assertions: strstart <= window_size-MIN_LOOKAHEAD\n *    At least one byte has been read, or avail_in == 0; reads are\n *    performed for at least two bytes (required for the zip translate_eol\n *    option -- not supported here).\n */\nconst fill_window = (s) => {\n\n  const _w_size = s.w_size;\n  let p, n, m, more, str;\n\n  //Assert(s->lookahead < MIN_LOOKAHEAD, \"already enough lookahead\");\n\n  do {\n    more = s.window_size - s.lookahead - s.strstart;\n\n    // JS ints have 32 bit, block below not needed\n    /* Deal with !@#$% 64K limit: */\n    //if (sizeof(int) <= 2) {\n    //    if (more == 0 && s->strstart == 0 && s->lookahead == 0) {\n    //        more = wsize;\n    //\n    //  } else if (more == (unsigned)(-1)) {\n    //        /* Very unlikely, but possible on 16 bit machine if\n    //         * strstart == 0 && lookahead == 1 (input done a byte at time)\n    //         */\n    //        more--;\n    //    }\n    //}\n\n\n    /* If the window is almost full and there is insufficient lookahead,\n     * move the upper half to the lower one to make room in the upper half.\n     */\n    if (s.strstart >= _w_size + (_w_size - MIN_LOOKAHEAD)) {\n\n      s.window.set(s.window.subarray(_w_size, _w_size + _w_size), 0);\n      s.match_start -= _w_size;\n      s.strstart -= _w_size;\n      /* we now have strstart >= MAX_DIST */\n      s.block_start -= _w_size;\n\n      /* Slide the hash table (could be avoided with 32 bit values\n       at the expense of memory usage). We slide even when level == 0\n       to keep the hash table consistent if we switch back to level > 0\n       later. (Using level 0 permanently is not an optimal usage of\n       zlib, so we don't care about this pathological case.)\n       */\n\n      n = s.hash_size;\n      p = n;\n\n      do {\n        m = s.head[--p];\n        s.head[p] = (m >= _w_size ? m - _w_size : 0);\n      } while (--n);\n\n      n = _w_size;\n      p = n;\n\n      do {\n        m = s.prev[--p];\n        s.prev[p] = (m >= _w_size ? m - _w_size : 0);\n        /* If n is not on any hash chain, prev[n] is garbage but\n         * its value will never be used.\n         */\n      } while (--n);\n\n      more += _w_size;\n    }\n    if (s.strm.avail_in === 0) {\n      break;\n    }\n\n    /* If there was no sliding:\n     *    strstart <= WSIZE+MAX_DIST-1 && lookahead <= MIN_LOOKAHEAD - 1 &&\n     *    more == window_size - lookahead - strstart\n     * => more >= window_size - (MIN_LOOKAHEAD-1 + WSIZE + MAX_DIST-1)\n     * => more >= window_size - 2*WSIZE + 2\n     * In the BIG_MEM or MMAP case (not yet supported),\n     *   window_size == input_size + MIN_LOOKAHEAD  &&\n     *   strstart + s->lookahead <= input_size => more >= MIN_LOOKAHEAD.\n     * Otherwise, window_size == 2*WSIZE so more >= 2.\n     * If there was sliding, more >= WSIZE. So in all cases, more >= 2.\n     */\n    //Assert(more >= 2, \"more < 2\");\n    n = read_buf(s.strm, s.window, s.strstart + s.lookahead, more);\n    s.lookahead += n;\n\n    /* Initialize the hash value now that we have some input: */\n    if (s.lookahead + s.insert >= MIN_MATCH) {\n      str = s.strstart - s.insert;\n      s.ins_h = s.window[str];\n\n      /* UPDATE_HASH(s, s->ins_h, s->window[str + 1]); */\n      s.ins_h = HASH(s, s.ins_h, s.window[str + 1]);\n//#if MIN_MATCH != 3\n//        Call update_hash() MIN_MATCH-3 more times\n//#endif\n      while (s.insert) {\n        /* UPDATE_HASH(s, s->ins_h, s->window[str + MIN_MATCH-1]); */\n        s.ins_h = HASH(s, s.ins_h, s.window[str + MIN_MATCH - 1]);\n\n        s.prev[str & s.w_mask] = s.head[s.ins_h];\n        s.head[s.ins_h] = str;\n        str++;\n        s.insert--;\n        if (s.lookahead + s.insert < MIN_MATCH) {\n          break;\n        }\n      }\n    }\n    /* If the whole input has less than MIN_MATCH bytes, ins_h is garbage,\n     * but this is not important since only literal bytes will be emitted.\n     */\n\n  } while (s.lookahead < MIN_LOOKAHEAD && s.strm.avail_in !== 0);\n\n  /* If the WIN_INIT bytes after the end of the current data have never been\n   * written, then zero those bytes in order to avoid memory check reports of\n   * the use of uninitialized (or uninitialised as Julian writes) bytes by\n   * the longest match routines.  Update the high water mark for the next\n   * time through here.  WIN_INIT is set to MAX_MATCH since the longest match\n   * routines allow scanning to strstart + MAX_MATCH, ignoring lookahead.\n   */\n//  if (s.high_water < s.window_size) {\n//    const curr = s.strstart + s.lookahead;\n//    let init = 0;\n//\n//    if (s.high_water < curr) {\n//      /* Previous high water mark below current data -- zero WIN_INIT\n//       * bytes or up to end of window, whichever is less.\n//       */\n//      init = s.window_size - curr;\n//      if (init > WIN_INIT)\n//        init = WIN_INIT;\n//      zmemzero(s->window + curr, (unsigned)init);\n//      s->high_water = curr + init;\n//    }\n//    else if (s->high_water < (ulg)curr + WIN_INIT) {\n//      /* High water mark at or above current data, but below current data\n//       * plus WIN_INIT -- zero out to current data plus WIN_INIT, or up\n//       * to end of window, whichever is less.\n//       */\n//      init = (ulg)curr + WIN_INIT - s->high_water;\n//      if (init > s->window_size - s->high_water)\n//        init = s->window_size - s->high_water;\n//      zmemzero(s->window + s->high_water, (unsigned)init);\n//      s->high_water += init;\n//    }\n//  }\n//\n//  Assert((ulg)s->strstart <= s->window_size - MIN_LOOKAHEAD,\n//    \"not enough room for search\");\n};\n\n/* ===========================================================================\n * Copy without compression as much as possible from the input stream, return\n * the current block state.\n * This function does not insert new strings in the dictionary since\n * uncompressible data is probably not useful. This function is used\n * only for the level=0 compression option.\n * NOTE: this function should be optimized to avoid extra copying from\n * window to pending_buf.\n */\nconst deflate_stored = (s, flush) => {\n\n  /* Stored blocks are limited to 0xffff bytes, pending_buf is limited\n   * to pending_buf_size, and each stored block has a 5 byte header:\n   */\n  let max_block_size = 0xffff;\n\n  if (max_block_size > s.pending_buf_size - 5) {\n    max_block_size = s.pending_buf_size - 5;\n  }\n\n  /* Copy as much as possible from input to output: */\n  for (;;) {\n    /* Fill the window as much as possible: */\n    if (s.lookahead <= 1) {\n\n      //Assert(s->strstart < s->w_size+MAX_DIST(s) ||\n      //  s->block_start >= (long)s->w_size, \"slide too late\");\n//      if (!(s.strstart < s.w_size + (s.w_size - MIN_LOOKAHEAD) ||\n//        s.block_start >= s.w_size)) {\n//        throw  new Error(\"slide too late\");\n//      }\n\n      fill_window(s);\n      if (s.lookahead === 0 && flush === Z_NO_FLUSH$2) {\n        return BS_NEED_MORE;\n      }\n\n      if (s.lookahead === 0) {\n        break;\n      }\n      /* flush the current block */\n    }\n    //Assert(s->block_start >= 0L, \"block gone\");\n//    if (s.block_start < 0) throw new Error(\"block gone\");\n\n    s.strstart += s.lookahead;\n    s.lookahead = 0;\n\n    /* Emit a stored block if pending_buf will be full: */\n    const max_start = s.block_start + max_block_size;\n\n    if (s.strstart === 0 || s.strstart >= max_start) {\n      /* strstart == 0 is possible when wraparound on 16-bit machine */\n      s.lookahead = s.strstart - max_start;\n      s.strstart = max_start;\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n\n\n    }\n    /* Flush if we may have to slide, otherwise block_start may become\n     * negative and the data will be gone:\n     */\n    if (s.strstart - s.block_start >= (s.w_size - MIN_LOOKAHEAD)) {\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n    }\n  }\n\n  s.insert = 0;\n\n  if (flush === Z_FINISH$3) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n\n  if (s.strstart > s.block_start) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n\n  return BS_NEED_MORE;\n};\n\n/* ===========================================================================\n * Compress as much as possible from the input stream, return the current\n * block state.\n * This function does not perform lazy evaluation of matches and inserts\n * new strings in the dictionary only for unmatched strings or for short\n * matches. It is used only for the fast compression options.\n */\nconst deflate_fast = (s, flush) => {\n\n  let hash_head;        /* head of the hash chain */\n  let bflush;           /* set if current block must be flushed */\n\n  for (;;) {\n    /* Make sure that we always have enough lookahead, except\n     * at the end of the input file. We need MAX_MATCH bytes\n     * for the next match, plus MIN_MATCH bytes to insert the\n     * string following the next match.\n     */\n    if (s.lookahead < MIN_LOOKAHEAD) {\n      fill_window(s);\n      if (s.lookahead < MIN_LOOKAHEAD && flush === Z_NO_FLUSH$2) {\n        return BS_NEED_MORE;\n      }\n      if (s.lookahead === 0) {\n        break; /* flush the current block */\n      }\n    }\n\n    /* Insert the string window[strstart .. strstart+2] in the\n     * dictionary, and set hash_head to the head of the hash chain:\n     */\n    hash_head = 0/*NIL*/;\n    if (s.lookahead >= MIN_MATCH) {\n      /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n      s.ins_h = HASH(s, s.ins_h, s.window[s.strstart + MIN_MATCH - 1]);\n      hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n      s.head[s.ins_h] = s.strstart;\n      /***/\n    }\n\n    /* Find the longest match, discarding those <= prev_length.\n     * At this point we have always match_length < MIN_MATCH\n     */\n    if (hash_head !== 0/*NIL*/ && ((s.strstart - hash_head) <= (s.w_size - MIN_LOOKAHEAD))) {\n      /* To simplify the code, we prevent matches with the string\n       * of window index 0 (in particular we have to avoid a match\n       * of the string with itself at the start of the input file).\n       */\n      s.match_length = longest_match(s, hash_head);\n      /* longest_match() sets match_start */\n    }\n    if (s.match_length >= MIN_MATCH) {\n      // check_match(s, s.strstart, s.match_start, s.match_length); // for debug only\n\n      /*** _tr_tally_dist(s, s.strstart - s.match_start,\n                     s.match_length - MIN_MATCH, bflush); ***/\n      bflush = _tr_tally(s, s.strstart - s.match_start, s.match_length - MIN_MATCH);\n\n      s.lookahead -= s.match_length;\n\n      /* Insert new strings in the hash table only if the match length\n       * is not too large. This saves time but degrades compression.\n       */\n      if (s.match_length <= s.max_lazy_match/*max_insert_length*/ && s.lookahead >= MIN_MATCH) {\n        s.match_length--; /* string at strstart already in table */\n        do {\n          s.strstart++;\n          /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n          s.ins_h = HASH(s, s.ins_h, s.window[s.strstart + MIN_MATCH - 1]);\n          hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n          s.head[s.ins_h] = s.strstart;\n          /***/\n          /* strstart never exceeds WSIZE-MAX_MATCH, so there are\n           * always MIN_MATCH bytes ahead.\n           */\n        } while (--s.match_length !== 0);\n        s.strstart++;\n      } else\n      {\n        s.strstart += s.match_length;\n        s.match_length = 0;\n        s.ins_h = s.window[s.strstart];\n        /* UPDATE_HASH(s, s.ins_h, s.window[s.strstart+1]); */\n        s.ins_h = HASH(s, s.ins_h, s.window[s.strstart + 1]);\n\n//#if MIN_MATCH != 3\n//                Call UPDATE_HASH() MIN_MATCH-3 more times\n//#endif\n        /* If lookahead < MIN_MATCH, ins_h is garbage, but it does not\n         * matter since it will be recomputed at next deflate call.\n         */\n      }\n    } else {\n      /* No match, output a literal byte */\n      //Tracevv((stderr,\"%c\", s.window[s.strstart]));\n      /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/\n      bflush = _tr_tally(s, 0, s.window[s.strstart]);\n\n      s.lookahead--;\n      s.strstart++;\n    }\n    if (bflush) {\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n    }\n  }\n  s.insert = ((s.strstart < (MIN_MATCH - 1)) ? s.strstart : MIN_MATCH - 1);\n  if (flush === Z_FINISH$3) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.last_lit) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n  return BS_BLOCK_DONE;\n};\n\n/* ===========================================================================\n * Same as above, but achieves better compression. We use a lazy\n * evaluation for matches: a match is finally adopted only if there is\n * no better match at the next window position.\n */\nconst deflate_slow = (s, flush) => {\n\n  let hash_head;          /* head of hash chain */\n  let bflush;              /* set if current block must be flushed */\n\n  let max_insert;\n\n  /* Process the input block. */\n  for (;;) {\n    /* Make sure that we always have enough lookahead, except\n     * at the end of the input file. We need MAX_MATCH bytes\n     * for the next match, plus MIN_MATCH bytes to insert the\n     * string following the next match.\n     */\n    if (s.lookahead < MIN_LOOKAHEAD) {\n      fill_window(s);\n      if (s.lookahead < MIN_LOOKAHEAD && flush === Z_NO_FLUSH$2) {\n        return BS_NEED_MORE;\n      }\n      if (s.lookahead === 0) { break; } /* flush the current block */\n    }\n\n    /* Insert the string window[strstart .. strstart+2] in the\n     * dictionary, and set hash_head to the head of the hash chain:\n     */\n    hash_head = 0/*NIL*/;\n    if (s.lookahead >= MIN_MATCH) {\n      /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n      s.ins_h = HASH(s, s.ins_h, s.window[s.strstart + MIN_MATCH - 1]);\n      hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n      s.head[s.ins_h] = s.strstart;\n      /***/\n    }\n\n    /* Find the longest match, discarding those <= prev_length.\n     */\n    s.prev_length = s.match_length;\n    s.prev_match = s.match_start;\n    s.match_length = MIN_MATCH - 1;\n\n    if (hash_head !== 0/*NIL*/ && s.prev_length < s.max_lazy_match &&\n        s.strstart - hash_head <= (s.w_size - MIN_LOOKAHEAD)/*MAX_DIST(s)*/) {\n      /* To simplify the code, we prevent matches with the string\n       * of window index 0 (in particular we have to avoid a match\n       * of the string with itself at the start of the input file).\n       */\n      s.match_length = longest_match(s, hash_head);\n      /* longest_match() sets match_start */\n\n      if (s.match_length <= 5 &&\n         (s.strategy === Z_FILTERED || (s.match_length === MIN_MATCH && s.strstart - s.match_start > 4096/*TOO_FAR*/))) {\n\n        /* If prev_match is also MIN_MATCH, match_start is garbage\n         * but we will ignore the current match anyway.\n         */\n        s.match_length = MIN_MATCH - 1;\n      }\n    }\n    /* If there was a match at the previous step and the current\n     * match is not better, output the previous match:\n     */\n    if (s.prev_length >= MIN_MATCH && s.match_length <= s.prev_length) {\n      max_insert = s.strstart + s.lookahead - MIN_MATCH;\n      /* Do not insert strings in hash table beyond this. */\n\n      //check_match(s, s.strstart-1, s.prev_match, s.prev_length);\n\n      /***_tr_tally_dist(s, s.strstart - 1 - s.prev_match,\n                     s.prev_length - MIN_MATCH, bflush);***/\n      bflush = _tr_tally(s, s.strstart - 1 - s.prev_match, s.prev_length - MIN_MATCH);\n      /* Insert in hash table all strings up to the end of the match.\n       * strstart-1 and strstart are already inserted. If there is not\n       * enough lookahead, the last two strings are not inserted in\n       * the hash table.\n       */\n      s.lookahead -= s.prev_length - 1;\n      s.prev_length -= 2;\n      do {\n        if (++s.strstart <= max_insert) {\n          /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n          s.ins_h = HASH(s, s.ins_h, s.window[s.strstart + MIN_MATCH - 1]);\n          hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n          s.head[s.ins_h] = s.strstart;\n          /***/\n        }\n      } while (--s.prev_length !== 0);\n      s.match_available = 0;\n      s.match_length = MIN_MATCH - 1;\n      s.strstart++;\n\n      if (bflush) {\n        /*** FLUSH_BLOCK(s, 0); ***/\n        flush_block_only(s, false);\n        if (s.strm.avail_out === 0) {\n          return BS_NEED_MORE;\n        }\n        /***/\n      }\n\n    } else if (s.match_available) {\n      /* If there was no match at the previous position, output a\n       * single literal. If there was a match but the current match\n       * is longer, truncate the previous match to a single literal.\n       */\n      //Tracevv((stderr,\"%c\", s->window[s->strstart-1]));\n      /*** _tr_tally_lit(s, s.window[s.strstart-1], bflush); ***/\n      bflush = _tr_tally(s, 0, s.window[s.strstart - 1]);\n\n      if (bflush) {\n        /*** FLUSH_BLOCK_ONLY(s, 0) ***/\n        flush_block_only(s, false);\n        /***/\n      }\n      s.strstart++;\n      s.lookahead--;\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n    } else {\n      /* There is no previous match to compare with, wait for\n       * the next step to decide.\n       */\n      s.match_available = 1;\n      s.strstart++;\n      s.lookahead--;\n    }\n  }\n  //Assert (flush != Z_NO_FLUSH, \"no flush?\");\n  if (s.match_available) {\n    //Tracevv((stderr,\"%c\", s->window[s->strstart-1]));\n    /*** _tr_tally_lit(s, s.window[s.strstart-1], bflush); ***/\n    bflush = _tr_tally(s, 0, s.window[s.strstart - 1]);\n\n    s.match_available = 0;\n  }\n  s.insert = s.strstart < MIN_MATCH - 1 ? s.strstart : MIN_MATCH - 1;\n  if (flush === Z_FINISH$3) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.last_lit) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n\n  return BS_BLOCK_DONE;\n};\n\n\n/* ===========================================================================\n * For Z_RLE, simply look for runs of bytes, generate matches only of distance\n * one.  Do not maintain a hash table.  (It will be regenerated if this run of\n * deflate switches away from Z_RLE.)\n */\nconst deflate_rle = (s, flush) => {\n\n  let bflush;            /* set if current block must be flushed */\n  let prev;              /* byte at distance one to match */\n  let scan, strend;      /* scan goes up to strend for length of run */\n\n  const _win = s.window;\n\n  for (;;) {\n    /* Make sure that we always have enough lookahead, except\n     * at the end of the input file. We need MAX_MATCH bytes\n     * for the longest run, plus one for the unrolled loop.\n     */\n    if (s.lookahead <= MAX_MATCH) {\n      fill_window(s);\n      if (s.lookahead <= MAX_MATCH && flush === Z_NO_FLUSH$2) {\n        return BS_NEED_MORE;\n      }\n      if (s.lookahead === 0) { break; } /* flush the current block */\n    }\n\n    /* See how many times the previous byte repeats */\n    s.match_length = 0;\n    if (s.lookahead >= MIN_MATCH && s.strstart > 0) {\n      scan = s.strstart - 1;\n      prev = _win[scan];\n      if (prev === _win[++scan] && prev === _win[++scan] && prev === _win[++scan]) {\n        strend = s.strstart + MAX_MATCH;\n        do {\n          /*jshint noempty:false*/\n        } while (prev === _win[++scan] && prev === _win[++scan] &&\n                 prev === _win[++scan] && prev === _win[++scan] &&\n                 prev === _win[++scan] && prev === _win[++scan] &&\n                 prev === _win[++scan] && prev === _win[++scan] &&\n                 scan < strend);\n        s.match_length = MAX_MATCH - (strend - scan);\n        if (s.match_length > s.lookahead) {\n          s.match_length = s.lookahead;\n        }\n      }\n      //Assert(scan <= s->window+(uInt)(s->window_size-1), \"wild scan\");\n    }\n\n    /* Emit match if have run of MIN_MATCH or longer, else emit literal */\n    if (s.match_length >= MIN_MATCH) {\n      //check_match(s, s.strstart, s.strstart - 1, s.match_length);\n\n      /*** _tr_tally_dist(s, 1, s.match_length - MIN_MATCH, bflush); ***/\n      bflush = _tr_tally(s, 1, s.match_length - MIN_MATCH);\n\n      s.lookahead -= s.match_length;\n      s.strstart += s.match_length;\n      s.match_length = 0;\n    } else {\n      /* No match, output a literal byte */\n      //Tracevv((stderr,\"%c\", s->window[s->strstart]));\n      /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/\n      bflush = _tr_tally(s, 0, s.window[s.strstart]);\n\n      s.lookahead--;\n      s.strstart++;\n    }\n    if (bflush) {\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n    }\n  }\n  s.insert = 0;\n  if (flush === Z_FINISH$3) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.last_lit) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n  return BS_BLOCK_DONE;\n};\n\n/* ===========================================================================\n * For Z_HUFFMAN_ONLY, do not look for matches.  Do not maintain a hash table.\n * (It will be regenerated if this run of deflate switches away from Huffman.)\n */\nconst deflate_huff = (s, flush) => {\n\n  let bflush;             /* set if current block must be flushed */\n\n  for (;;) {\n    /* Make sure that we have a literal to write. */\n    if (s.lookahead === 0) {\n      fill_window(s);\n      if (s.lookahead === 0) {\n        if (flush === Z_NO_FLUSH$2) {\n          return BS_NEED_MORE;\n        }\n        break;      /* flush the current block */\n      }\n    }\n\n    /* Output a literal byte */\n    s.match_length = 0;\n    //Tracevv((stderr,\"%c\", s->window[s->strstart]));\n    /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/\n    bflush = _tr_tally(s, 0, s.window[s.strstart]);\n    s.lookahead--;\n    s.strstart++;\n    if (bflush) {\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n    }\n  }\n  s.insert = 0;\n  if (flush === Z_FINISH$3) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.last_lit) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n  return BS_BLOCK_DONE;\n};\n\n/* Values for max_lazy_match, good_match and max_chain_length, depending on\n * the desired pack level (0..9). The values given below have been tuned to\n * exclude worst case performance for pathological files. Better values may be\n * found for specific files.\n */\nfunction Config(good_length, max_lazy, nice_length, max_chain, func) {\n\n  this.good_length = good_length;\n  this.max_lazy = max_lazy;\n  this.nice_length = nice_length;\n  this.max_chain = max_chain;\n  this.func = func;\n}\n\nconst configuration_table = [\n  /*      good lazy nice chain */\n  new Config(0, 0, 0, 0, deflate_stored),          /* 0 store only */\n  new Config(4, 4, 8, 4, deflate_fast),            /* 1 max speed, no lazy matches */\n  new Config(4, 5, 16, 8, deflate_fast),           /* 2 */\n  new Config(4, 6, 32, 32, deflate_fast),          /* 3 */\n\n  new Config(4, 4, 16, 16, deflate_slow),          /* 4 lazy matches */\n  new Config(8, 16, 32, 32, deflate_slow),         /* 5 */\n  new Config(8, 16, 128, 128, deflate_slow),       /* 6 */\n  new Config(8, 32, 128, 256, deflate_slow),       /* 7 */\n  new Config(32, 128, 258, 1024, deflate_slow),    /* 8 */\n  new Config(32, 258, 258, 4096, deflate_slow)     /* 9 max compression */\n];\n\n\n/* ===========================================================================\n * Initialize the \"longest match\" routines for a new zlib stream\n */\nconst lm_init = (s) => {\n\n  s.window_size = 2 * s.w_size;\n\n  /*** CLEAR_HASH(s); ***/\n  zero(s.head); // Fill with NIL (= 0);\n\n  /* Set the default configuration parameters:\n   */\n  s.max_lazy_match = configuration_table[s.level].max_lazy;\n  s.good_match = configuration_table[s.level].good_length;\n  s.nice_match = configuration_table[s.level].nice_length;\n  s.max_chain_length = configuration_table[s.level].max_chain;\n\n  s.strstart = 0;\n  s.block_start = 0;\n  s.lookahead = 0;\n  s.insert = 0;\n  s.match_length = s.prev_length = MIN_MATCH - 1;\n  s.match_available = 0;\n  s.ins_h = 0;\n};\n\n\nfunction DeflateState() {\n  this.strm = null;            /* pointer back to this zlib stream */\n  this.status = 0;            /* as the name implies */\n  this.pending_buf = null;      /* output still pending */\n  this.pending_buf_size = 0;  /* size of pending_buf */\n  this.pending_out = 0;       /* next pending byte to output to the stream */\n  this.pending = 0;           /* nb of bytes in the pending buffer */\n  this.wrap = 0;              /* bit 0 true for zlib, bit 1 true for gzip */\n  this.gzhead = null;         /* gzip header information to write */\n  this.gzindex = 0;           /* where in extra, name, or comment */\n  this.method = Z_DEFLATED$2; /* can only be DEFLATED */\n  this.last_flush = -1;   /* value of flush param for previous deflate call */\n\n  this.w_size = 0;  /* LZ77 window size (32K by default) */\n  this.w_bits = 0;  /* log2(w_size)  (8..16) */\n  this.w_mask = 0;  /* w_size - 1 */\n\n  this.window = null;\n  /* Sliding window. Input bytes are read into the second half of the window,\n   * and move to the first half later to keep a dictionary of at least wSize\n   * bytes. With this organization, matches are limited to a distance of\n   * wSize-MAX_MATCH bytes, but this ensures that IO is always\n   * performed with a length multiple of the block size.\n   */\n\n  this.window_size = 0;\n  /* Actual size of window: 2*wSize, except when the user input buffer\n   * is directly used as sliding window.\n   */\n\n  this.prev = null;\n  /* Link to older string with same hash index. To limit the size of this\n   * array to 64K, this link is maintained only for the last 32K strings.\n   * An index in this array is thus a window index modulo 32K.\n   */\n\n  this.head = null;   /* Heads of the hash chains or NIL. */\n\n  this.ins_h = 0;       /* hash index of string to be inserted */\n  this.hash_size = 0;   /* number of elements in hash table */\n  this.hash_bits = 0;   /* log2(hash_size) */\n  this.hash_mask = 0;   /* hash_size-1 */\n\n  this.hash_shift = 0;\n  /* Number of bits by which ins_h must be shifted at each input\n   * step. It must be such that after MIN_MATCH steps, the oldest\n   * byte no longer takes part in the hash key, that is:\n   *   hash_shift * MIN_MATCH >= hash_bits\n   */\n\n  this.block_start = 0;\n  /* Window position at the beginning of the current output block. Gets\n   * negative when the window is moved backwards.\n   */\n\n  this.match_length = 0;      /* length of best match */\n  this.prev_match = 0;        /* previous match */\n  this.match_available = 0;   /* set if previous match exists */\n  this.strstart = 0;          /* start of string to insert */\n  this.match_start = 0;       /* start of matching string */\n  this.lookahead = 0;         /* number of valid bytes ahead in window */\n\n  this.prev_length = 0;\n  /* Length of the best match at previous step. Matches not greater than this\n   * are discarded. This is used in the lazy match evaluation.\n   */\n\n  this.max_chain_length = 0;\n  /* To speed up deflation, hash chains are never searched beyond this\n   * length.  A higher limit improves compression ratio but degrades the\n   * speed.\n   */\n\n  this.max_lazy_match = 0;\n  /* Attempt to find a better match only when the current match is strictly\n   * smaller than this value. This mechanism is used only for compression\n   * levels >= 4.\n   */\n  // That's alias to max_lazy_match, don't use directly\n  //this.max_insert_length = 0;\n  /* Insert new strings in the hash table only if the match length is not\n   * greater than this length. This saves time but degrades compression.\n   * max_insert_length is used only for compression levels <= 3.\n   */\n\n  this.level = 0;     /* compression level (1..9) */\n  this.strategy = 0;  /* favor or force Huffman coding*/\n\n  this.good_match = 0;\n  /* Use a faster search when the previous match is longer than this */\n\n  this.nice_match = 0; /* Stop searching when current match exceeds this */\n\n              /* used by trees.c: */\n\n  /* Didn't use ct_data typedef below to suppress compiler warning */\n\n  // struct ct_data_s dyn_ltree[HEAP_SIZE];   /* literal and length tree */\n  // struct ct_data_s dyn_dtree[2*D_CODES+1]; /* distance tree */\n  // struct ct_data_s bl_tree[2*BL_CODES+1];  /* Huffman tree for bit lengths */\n\n  // Use flat array of DOUBLE size, with interleaved fata,\n  // because JS does not support effective\n  this.dyn_ltree  = new Uint16Array(HEAP_SIZE * 2);\n  this.dyn_dtree  = new Uint16Array((2 * D_CODES + 1) * 2);\n  this.bl_tree    = new Uint16Array((2 * BL_CODES + 1) * 2);\n  zero(this.dyn_ltree);\n  zero(this.dyn_dtree);\n  zero(this.bl_tree);\n\n  this.l_desc   = null;         /* desc. for literal tree */\n  this.d_desc   = null;         /* desc. for distance tree */\n  this.bl_desc  = null;         /* desc. for bit length tree */\n\n  //ush bl_count[MAX_BITS+1];\n  this.bl_count = new Uint16Array(MAX_BITS + 1);\n  /* number of codes at each bit length for an optimal tree */\n\n  //int heap[2*L_CODES+1];      /* heap used to build the Huffman trees */\n  this.heap = new Uint16Array(2 * L_CODES + 1);  /* heap used to build the Huffman trees */\n  zero(this.heap);\n\n  this.heap_len = 0;               /* number of elements in the heap */\n  this.heap_max = 0;               /* element of largest frequency */\n  /* The sons of heap[n] are heap[2*n] and heap[2*n+1]. heap[0] is not used.\n   * The same heap array is used to build all trees.\n   */\n\n  this.depth = new Uint16Array(2 * L_CODES + 1); //uch depth[2*L_CODES+1];\n  zero(this.depth);\n  /* Depth of each subtree used as tie breaker for trees of equal frequency\n   */\n\n  this.l_buf = 0;          /* buffer index for literals or lengths */\n\n  this.lit_bufsize = 0;\n  /* Size of match buffer for literals/lengths.  There are 4 reasons for\n   * limiting lit_bufsize to 64K:\n   *   - frequencies can be kept in 16 bit counters\n   *   - if compression is not successful for the first block, all input\n   *     data is still in the window so we can still emit a stored block even\n   *     when input comes from standard input.  (This can also be done for\n   *     all blocks if lit_bufsize is not greater than 32K.)\n   *   - if compression is not successful for a file smaller than 64K, we can\n   *     even emit a stored file instead of a stored block (saving 5 bytes).\n   *     This is applicable only for zip (not gzip or zlib).\n   *   - creating new Huffman trees less frequently may not provide fast\n   *     adaptation to changes in the input data statistics. (Take for\n   *     example a binary file with poorly compressible code followed by\n   *     a highly compressible string table.) Smaller buffer sizes give\n   *     fast adaptation but have of course the overhead of transmitting\n   *     trees more frequently.\n   *   - I can't count above 4\n   */\n\n  this.last_lit = 0;      /* running index in l_buf */\n\n  this.d_buf = 0;\n  /* Buffer index for distances. To simplify the code, d_buf and l_buf have\n   * the same number of elements. To use different lengths, an extra flag\n   * array would be necessary.\n   */\n\n  this.opt_len = 0;       /* bit length of current block with optimal trees */\n  this.static_len = 0;    /* bit length of current block with static trees */\n  this.matches = 0;       /* number of string matches in current block */\n  this.insert = 0;        /* bytes at end of window left to insert */\n\n\n  this.bi_buf = 0;\n  /* Output buffer. bits are inserted starting at the bottom (least\n   * significant bits).\n   */\n  this.bi_valid = 0;\n  /* Number of valid bits in bi_buf.  All bits above the last valid bit\n   * are always zero.\n   */\n\n  // Used for window memory init. We safely ignore it for JS. That makes\n  // sense only for pointers and memory check tools.\n  //this.high_water = 0;\n  /* High water mark offset in window for initialized bytes -- bytes above\n   * this are set to zero in order to avoid memory check warnings when\n   * longest match routines access bytes past the input.  This is then\n   * updated to the new high water mark.\n   */\n}\n\n\nconst deflateResetKeep = (strm) => {\n\n  if (!strm || !strm.state) {\n    return err(strm, Z_STREAM_ERROR$2);\n  }\n\n  strm.total_in = strm.total_out = 0;\n  strm.data_type = Z_UNKNOWN;\n\n  const s = strm.state;\n  s.pending = 0;\n  s.pending_out = 0;\n\n  if (s.wrap < 0) {\n    s.wrap = -s.wrap;\n    /* was made negative by deflate(..., Z_FINISH); */\n  }\n  s.status = (s.wrap ? INIT_STATE : BUSY_STATE);\n  strm.adler = (s.wrap === 2) ?\n    0  // crc32(0, Z_NULL, 0)\n  :\n    1; // adler32(0, Z_NULL, 0)\n  s.last_flush = Z_NO_FLUSH$2;\n  _tr_init(s);\n  return Z_OK$3;\n};\n\n\nconst deflateReset = (strm) => {\n\n  const ret = deflateResetKeep(strm);\n  if (ret === Z_OK$3) {\n    lm_init(strm.state);\n  }\n  return ret;\n};\n\n\nconst deflateSetHeader = (strm, head) => {\n\n  if (!strm || !strm.state) { return Z_STREAM_ERROR$2; }\n  if (strm.state.wrap !== 2) { return Z_STREAM_ERROR$2; }\n  strm.state.gzhead = head;\n  return Z_OK$3;\n};\n\n\nconst deflateInit2 = (strm, level, method, windowBits, memLevel, strategy) => {\n\n  if (!strm) { // === Z_NULL\n    return Z_STREAM_ERROR$2;\n  }\n  let wrap = 1;\n\n  if (level === Z_DEFAULT_COMPRESSION$1) {\n    level = 6;\n  }\n\n  if (windowBits < 0) { /* suppress zlib wrapper */\n    wrap = 0;\n    windowBits = -windowBits;\n  }\n\n  else if (windowBits > 15) {\n    wrap = 2;           /* write gzip wrapper instead */\n    windowBits -= 16;\n  }\n\n\n  if (memLevel < 1 || memLevel > MAX_MEM_LEVEL || method !== Z_DEFLATED$2 ||\n    windowBits < 8 || windowBits > 15 || level < 0 || level > 9 ||\n    strategy < 0 || strategy > Z_FIXED) {\n    return err(strm, Z_STREAM_ERROR$2);\n  }\n\n\n  if (windowBits === 8) {\n    windowBits = 9;\n  }\n  /* until 256-byte window bug fixed */\n\n  const s = new DeflateState();\n\n  strm.state = s;\n  s.strm = strm;\n\n  s.wrap = wrap;\n  s.gzhead = null;\n  s.w_bits = windowBits;\n  s.w_size = 1 << s.w_bits;\n  s.w_mask = s.w_size - 1;\n\n  s.hash_bits = memLevel + 7;\n  s.hash_size = 1 << s.hash_bits;\n  s.hash_mask = s.hash_size - 1;\n  s.hash_shift = ~~((s.hash_bits + MIN_MATCH - 1) / MIN_MATCH);\n\n  s.window = new Uint8Array(s.w_size * 2);\n  s.head = new Uint16Array(s.hash_size);\n  s.prev = new Uint16Array(s.w_size);\n\n  // Don't need mem init magic for JS.\n  //s.high_water = 0;  /* nothing written to s->window yet */\n\n  s.lit_bufsize = 1 << (memLevel + 6); /* 16K elements by default */\n\n  s.pending_buf_size = s.lit_bufsize * 4;\n\n  //overlay = (ushf *) ZALLOC(strm, s->lit_bufsize, sizeof(ush)+2);\n  //s->pending_buf = (uchf *) overlay;\n  s.pending_buf = new Uint8Array(s.pending_buf_size);\n\n  // It is offset from `s.pending_buf` (size is `s.lit_bufsize * 2`)\n  //s->d_buf = overlay + s->lit_bufsize/sizeof(ush);\n  s.d_buf = 1 * s.lit_bufsize;\n\n  //s->l_buf = s->pending_buf + (1+sizeof(ush))*s->lit_bufsize;\n  s.l_buf = (1 + 2) * s.lit_bufsize;\n\n  s.level = level;\n  s.strategy = strategy;\n  s.method = method;\n\n  return deflateReset(strm);\n};\n\nconst deflateInit = (strm, level) => {\n\n  return deflateInit2(strm, level, Z_DEFLATED$2, MAX_WBITS$1, DEF_MEM_LEVEL, Z_DEFAULT_STRATEGY$1);\n};\n\n\nconst deflate$2 = (strm, flush) => {\n\n  let beg, val; // for gzip header write only\n\n  if (!strm || !strm.state ||\n    flush > Z_BLOCK$1 || flush < 0) {\n    return strm ? err(strm, Z_STREAM_ERROR$2) : Z_STREAM_ERROR$2;\n  }\n\n  const s = strm.state;\n\n  if (!strm.output ||\n      (!strm.input && strm.avail_in !== 0) ||\n      (s.status === FINISH_STATE && flush !== Z_FINISH$3)) {\n    return err(strm, (strm.avail_out === 0) ? Z_BUF_ERROR$1 : Z_STREAM_ERROR$2);\n  }\n\n  s.strm = strm; /* just in case */\n  const old_flush = s.last_flush;\n  s.last_flush = flush;\n\n  /* Write the header */\n  if (s.status === INIT_STATE) {\n\n    if (s.wrap === 2) { // GZIP header\n      strm.adler = 0;  //crc32(0L, Z_NULL, 0);\n      put_byte(s, 31);\n      put_byte(s, 139);\n      put_byte(s, 8);\n      if (!s.gzhead) { // s->gzhead == Z_NULL\n        put_byte(s, 0);\n        put_byte(s, 0);\n        put_byte(s, 0);\n        put_byte(s, 0);\n        put_byte(s, 0);\n        put_byte(s, s.level === 9 ? 2 :\n                    (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2 ?\n                     4 : 0));\n        put_byte(s, OS_CODE);\n        s.status = BUSY_STATE;\n      }\n      else {\n        put_byte(s, (s.gzhead.text ? 1 : 0) +\n                    (s.gzhead.hcrc ? 2 : 0) +\n                    (!s.gzhead.extra ? 0 : 4) +\n                    (!s.gzhead.name ? 0 : 8) +\n                    (!s.gzhead.comment ? 0 : 16)\n        );\n        put_byte(s, s.gzhead.time & 0xff);\n        put_byte(s, (s.gzhead.time >> 8) & 0xff);\n        put_byte(s, (s.gzhead.time >> 16) & 0xff);\n        put_byte(s, (s.gzhead.time >> 24) & 0xff);\n        put_byte(s, s.level === 9 ? 2 :\n                    (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2 ?\n                     4 : 0));\n        put_byte(s, s.gzhead.os & 0xff);\n        if (s.gzhead.extra && s.gzhead.extra.length) {\n          put_byte(s, s.gzhead.extra.length & 0xff);\n          put_byte(s, (s.gzhead.extra.length >> 8) & 0xff);\n        }\n        if (s.gzhead.hcrc) {\n          strm.adler = crc32_1(strm.adler, s.pending_buf, s.pending, 0);\n        }\n        s.gzindex = 0;\n        s.status = EXTRA_STATE;\n      }\n    }\n    else // DEFLATE header\n    {\n      let header = (Z_DEFLATED$2 + ((s.w_bits - 8) << 4)) << 8;\n      let level_flags = -1;\n\n      if (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2) {\n        level_flags = 0;\n      } else if (s.level < 6) {\n        level_flags = 1;\n      } else if (s.level === 6) {\n        level_flags = 2;\n      } else {\n        level_flags = 3;\n      }\n      header |= (level_flags << 6);\n      if (s.strstart !== 0) { header |= PRESET_DICT; }\n      header += 31 - (header % 31);\n\n      s.status = BUSY_STATE;\n      putShortMSB(s, header);\n\n      /* Save the adler32 of the preset dictionary: */\n      if (s.strstart !== 0) {\n        putShortMSB(s, strm.adler >>> 16);\n        putShortMSB(s, strm.adler & 0xffff);\n      }\n      strm.adler = 1; // adler32(0L, Z_NULL, 0);\n    }\n  }\n\n//#ifdef GZIP\n  if (s.status === EXTRA_STATE) {\n    if (s.gzhead.extra/* != Z_NULL*/) {\n      beg = s.pending;  /* start of bytes to update crc */\n\n      while (s.gzindex < (s.gzhead.extra.length & 0xffff)) {\n        if (s.pending === s.pending_buf_size) {\n          if (s.gzhead.hcrc && s.pending > beg) {\n            strm.adler = crc32_1(strm.adler, s.pending_buf, s.pending - beg, beg);\n          }\n          flush_pending(strm);\n          beg = s.pending;\n          if (s.pending === s.pending_buf_size) {\n            break;\n          }\n        }\n        put_byte(s, s.gzhead.extra[s.gzindex] & 0xff);\n        s.gzindex++;\n      }\n      if (s.gzhead.hcrc && s.pending > beg) {\n        strm.adler = crc32_1(strm.adler, s.pending_buf, s.pending - beg, beg);\n      }\n      if (s.gzindex === s.gzhead.extra.length) {\n        s.gzindex = 0;\n        s.status = NAME_STATE;\n      }\n    }\n    else {\n      s.status = NAME_STATE;\n    }\n  }\n  if (s.status === NAME_STATE) {\n    if (s.gzhead.name/* != Z_NULL*/) {\n      beg = s.pending;  /* start of bytes to update crc */\n      //int val;\n\n      do {\n        if (s.pending === s.pending_buf_size) {\n          if (s.gzhead.hcrc && s.pending > beg) {\n            strm.adler = crc32_1(strm.adler, s.pending_buf, s.pending - beg, beg);\n          }\n          flush_pending(strm);\n          beg = s.pending;\n          if (s.pending === s.pending_buf_size) {\n            val = 1;\n            break;\n          }\n        }\n        // JS specific: little magic to add zero terminator to end of string\n        if (s.gzindex < s.gzhead.name.length) {\n          val = s.gzhead.name.charCodeAt(s.gzindex++) & 0xff;\n        } else {\n          val = 0;\n        }\n        put_byte(s, val);\n      } while (val !== 0);\n\n      if (s.gzhead.hcrc && s.pending > beg) {\n        strm.adler = crc32_1(strm.adler, s.pending_buf, s.pending - beg, beg);\n      }\n      if (val === 0) {\n        s.gzindex = 0;\n        s.status = COMMENT_STATE;\n      }\n    }\n    else {\n      s.status = COMMENT_STATE;\n    }\n  }\n  if (s.status === COMMENT_STATE) {\n    if (s.gzhead.comment/* != Z_NULL*/) {\n      beg = s.pending;  /* start of bytes to update crc */\n      //int val;\n\n      do {\n        if (s.pending === s.pending_buf_size) {\n          if (s.gzhead.hcrc && s.pending > beg) {\n            strm.adler = crc32_1(strm.adler, s.pending_buf, s.pending - beg, beg);\n          }\n          flush_pending(strm);\n          beg = s.pending;\n          if (s.pending === s.pending_buf_size) {\n            val = 1;\n            break;\n          }\n        }\n        // JS specific: little magic to add zero terminator to end of string\n        if (s.gzindex < s.gzhead.comment.length) {\n          val = s.gzhead.comment.charCodeAt(s.gzindex++) & 0xff;\n        } else {\n          val = 0;\n        }\n        put_byte(s, val);\n      } while (val !== 0);\n\n      if (s.gzhead.hcrc && s.pending > beg) {\n        strm.adler = crc32_1(strm.adler, s.pending_buf, s.pending - beg, beg);\n      }\n      if (val === 0) {\n        s.status = HCRC_STATE;\n      }\n    }\n    else {\n      s.status = HCRC_STATE;\n    }\n  }\n  if (s.status === HCRC_STATE) {\n    if (s.gzhead.hcrc) {\n      if (s.pending + 2 > s.pending_buf_size) {\n        flush_pending(strm);\n      }\n      if (s.pending + 2 <= s.pending_buf_size) {\n        put_byte(s, strm.adler & 0xff);\n        put_byte(s, (strm.adler >> 8) & 0xff);\n        strm.adler = 0; //crc32(0L, Z_NULL, 0);\n        s.status = BUSY_STATE;\n      }\n    }\n    else {\n      s.status = BUSY_STATE;\n    }\n  }\n//#endif\n\n  /* Flush as much pending output as possible */\n  if (s.pending !== 0) {\n    flush_pending(strm);\n    if (strm.avail_out === 0) {\n      /* Since avail_out is 0, deflate will be called again with\n       * more output space, but possibly with both pending and\n       * avail_in equal to zero. There won't be anything to do,\n       * but this is not an error situation so make sure we\n       * return OK instead of BUF_ERROR at next call of deflate:\n       */\n      s.last_flush = -1;\n      return Z_OK$3;\n    }\n\n    /* Make sure there is something to do and avoid duplicate consecutive\n     * flushes. For repeated and useless calls with Z_FINISH, we keep\n     * returning Z_STREAM_END instead of Z_BUF_ERROR.\n     */\n  } else if (strm.avail_in === 0 && rank(flush) <= rank(old_flush) &&\n    flush !== Z_FINISH$3) {\n    return err(strm, Z_BUF_ERROR$1);\n  }\n\n  /* User must not provide more input after the first FINISH: */\n  if (s.status === FINISH_STATE && strm.avail_in !== 0) {\n    return err(strm, Z_BUF_ERROR$1);\n  }\n\n  /* Start a new block or continue the current one.\n   */\n  if (strm.avail_in !== 0 || s.lookahead !== 0 ||\n    (flush !== Z_NO_FLUSH$2 && s.status !== FINISH_STATE)) {\n    let bstate = (s.strategy === Z_HUFFMAN_ONLY) ? deflate_huff(s, flush) :\n      (s.strategy === Z_RLE ? deflate_rle(s, flush) :\n        configuration_table[s.level].func(s, flush));\n\n    if (bstate === BS_FINISH_STARTED || bstate === BS_FINISH_DONE) {\n      s.status = FINISH_STATE;\n    }\n    if (bstate === BS_NEED_MORE || bstate === BS_FINISH_STARTED) {\n      if (strm.avail_out === 0) {\n        s.last_flush = -1;\n        /* avoid BUF_ERROR next call, see above */\n      }\n      return Z_OK$3;\n      /* If flush != Z_NO_FLUSH && avail_out == 0, the next call\n       * of deflate should use the same flush parameter to make sure\n       * that the flush is complete. So we don't have to output an\n       * empty block here, this will be done at next call. This also\n       * ensures that for a very small output buffer, we emit at most\n       * one empty block.\n       */\n    }\n    if (bstate === BS_BLOCK_DONE) {\n      if (flush === Z_PARTIAL_FLUSH) {\n        _tr_align(s);\n      }\n      else if (flush !== Z_BLOCK$1) { /* FULL_FLUSH or SYNC_FLUSH */\n\n        _tr_stored_block(s, 0, 0, false);\n        /* For a full flush, this empty block will be recognized\n         * as a special marker by inflate_sync().\n         */\n        if (flush === Z_FULL_FLUSH$1) {\n          /*** CLEAR_HASH(s); ***/             /* forget history */\n          zero(s.head); // Fill with NIL (= 0);\n\n          if (s.lookahead === 0) {\n            s.strstart = 0;\n            s.block_start = 0;\n            s.insert = 0;\n          }\n        }\n      }\n      flush_pending(strm);\n      if (strm.avail_out === 0) {\n        s.last_flush = -1; /* avoid BUF_ERROR at next call, see above */\n        return Z_OK$3;\n      }\n    }\n  }\n  //Assert(strm->avail_out > 0, \"bug2\");\n  //if (strm.avail_out <= 0) { throw new Error(\"bug2\");}\n\n  if (flush !== Z_FINISH$3) { return Z_OK$3; }\n  if (s.wrap <= 0) { return Z_STREAM_END$3; }\n\n  /* Write the trailer */\n  if (s.wrap === 2) {\n    put_byte(s, strm.adler & 0xff);\n    put_byte(s, (strm.adler >> 8) & 0xff);\n    put_byte(s, (strm.adler >> 16) & 0xff);\n    put_byte(s, (strm.adler >> 24) & 0xff);\n    put_byte(s, strm.total_in & 0xff);\n    put_byte(s, (strm.total_in >> 8) & 0xff);\n    put_byte(s, (strm.total_in >> 16) & 0xff);\n    put_byte(s, (strm.total_in >> 24) & 0xff);\n  }\n  else\n  {\n    putShortMSB(s, strm.adler >>> 16);\n    putShortMSB(s, strm.adler & 0xffff);\n  }\n\n  flush_pending(strm);\n  /* If avail_out is zero, the application will call deflate again\n   * to flush the rest.\n   */\n  if (s.wrap > 0) { s.wrap = -s.wrap; }\n  /* write the trailer only once! */\n  return s.pending !== 0 ? Z_OK$3 : Z_STREAM_END$3;\n};\n\n\nconst deflateEnd = (strm) => {\n\n  if (!strm/*== Z_NULL*/ || !strm.state/*== Z_NULL*/) {\n    return Z_STREAM_ERROR$2;\n  }\n\n  const status = strm.state.status;\n  if (status !== INIT_STATE &&\n    status !== EXTRA_STATE &&\n    status !== NAME_STATE &&\n    status !== COMMENT_STATE &&\n    status !== HCRC_STATE &&\n    status !== BUSY_STATE &&\n    status !== FINISH_STATE\n  ) {\n    return err(strm, Z_STREAM_ERROR$2);\n  }\n\n  strm.state = null;\n\n  return status === BUSY_STATE ? err(strm, Z_DATA_ERROR$2) : Z_OK$3;\n};\n\n\n/* =========================================================================\n * Initializes the compression dictionary from the given byte\n * sequence without producing any compressed output.\n */\nconst deflateSetDictionary = (strm, dictionary) => {\n\n  let dictLength = dictionary.length;\n\n  if (!strm/*== Z_NULL*/ || !strm.state/*== Z_NULL*/) {\n    return Z_STREAM_ERROR$2;\n  }\n\n  const s = strm.state;\n  const wrap = s.wrap;\n\n  if (wrap === 2 || (wrap === 1 && s.status !== INIT_STATE) || s.lookahead) {\n    return Z_STREAM_ERROR$2;\n  }\n\n  /* when using zlib wrappers, compute Adler-32 for provided dictionary */\n  if (wrap === 1) {\n    /* adler32(strm->adler, dictionary, dictLength); */\n    strm.adler = adler32_1(strm.adler, dictionary, dictLength, 0);\n  }\n\n  s.wrap = 0;   /* avoid computing Adler-32 in read_buf */\n\n  /* if dictionary would fill window, just replace the history */\n  if (dictLength >= s.w_size) {\n    if (wrap === 0) {            /* already empty otherwise */\n      /*** CLEAR_HASH(s); ***/\n      zero(s.head); // Fill with NIL (= 0);\n      s.strstart = 0;\n      s.block_start = 0;\n      s.insert = 0;\n    }\n    /* use the tail */\n    // dictionary = dictionary.slice(dictLength - s.w_size);\n    let tmpDict = new Uint8Array(s.w_size);\n    tmpDict.set(dictionary.subarray(dictLength - s.w_size, dictLength), 0);\n    dictionary = tmpDict;\n    dictLength = s.w_size;\n  }\n  /* insert dictionary into window and hash */\n  const avail = strm.avail_in;\n  const next = strm.next_in;\n  const input = strm.input;\n  strm.avail_in = dictLength;\n  strm.next_in = 0;\n  strm.input = dictionary;\n  fill_window(s);\n  while (s.lookahead >= MIN_MATCH) {\n    let str = s.strstart;\n    let n = s.lookahead - (MIN_MATCH - 1);\n    do {\n      /* UPDATE_HASH(s, s->ins_h, s->window[str + MIN_MATCH-1]); */\n      s.ins_h = HASH(s, s.ins_h, s.window[str + MIN_MATCH - 1]);\n\n      s.prev[str & s.w_mask] = s.head[s.ins_h];\n\n      s.head[s.ins_h] = str;\n      str++;\n    } while (--n);\n    s.strstart = str;\n    s.lookahead = MIN_MATCH - 1;\n    fill_window(s);\n  }\n  s.strstart += s.lookahead;\n  s.block_start = s.strstart;\n  s.insert = s.lookahead;\n  s.lookahead = 0;\n  s.match_length = s.prev_length = MIN_MATCH - 1;\n  s.match_available = 0;\n  strm.next_in = next;\n  strm.input = input;\n  strm.avail_in = avail;\n  s.wrap = wrap;\n  return Z_OK$3;\n};\n\n\nvar deflateInit_1 = deflateInit;\nvar deflateInit2_1 = deflateInit2;\nvar deflateReset_1 = deflateReset;\nvar deflateResetKeep_1 = deflateResetKeep;\nvar deflateSetHeader_1 = deflateSetHeader;\nvar deflate_2$1 = deflate$2;\nvar deflateEnd_1 = deflateEnd;\nvar deflateSetDictionary_1 = deflateSetDictionary;\nvar deflateInfo = 'pako deflate (from Nodeca project)';\n\n/* Not implemented\nmodule.exports.deflateBound = deflateBound;\nmodule.exports.deflateCopy = deflateCopy;\nmodule.exports.deflateParams = deflateParams;\nmodule.exports.deflatePending = deflatePending;\nmodule.exports.deflatePrime = deflatePrime;\nmodule.exports.deflateTune = deflateTune;\n*/\n\nvar deflate_1$2 = {\n\tdeflateInit: deflateInit_1,\n\tdeflateInit2: deflateInit2_1,\n\tdeflateReset: deflateReset_1,\n\tdeflateResetKeep: deflateResetKeep_1,\n\tdeflateSetHeader: deflateSetHeader_1,\n\tdeflate: deflate_2$1,\n\tdeflateEnd: deflateEnd_1,\n\tdeflateSetDictionary: deflateSetDictionary_1,\n\tdeflateInfo: deflateInfo\n};\n\nconst _has = (obj, key) => {\n  return Object.prototype.hasOwnProperty.call(obj, key);\n};\n\nvar assign = function (obj /*from1, from2, from3, ...*/) {\n  const sources = Array.prototype.slice.call(arguments, 1);\n  while (sources.length) {\n    const source = sources.shift();\n    if (!source) { continue; }\n\n    if (typeof source !== 'object') {\n      throw new TypeError(source + 'must be non-object');\n    }\n\n    for (const p in source) {\n      if (_has(source, p)) {\n        obj[p] = source[p];\n      }\n    }\n  }\n\n  return obj;\n};\n\n\n// Join array of chunks to single array.\nvar flattenChunks = (chunks) => {\n  // calculate data length\n  let len = 0;\n\n  for (let i = 0, l = chunks.length; i < l; i++) {\n    len += chunks[i].length;\n  }\n\n  // join chunks\n  const result = new Uint8Array(len);\n\n  for (let i = 0, pos = 0, l = chunks.length; i < l; i++) {\n    let chunk = chunks[i];\n    result.set(chunk, pos);\n    pos += chunk.length;\n  }\n\n  return result;\n};\n\nvar common = {\n\tassign: assign,\n\tflattenChunks: flattenChunks\n};\n\n// String encode/decode helpers\n\n\n// Quick check if we can use fast array to bin string conversion\n//\n// - apply(Array) can fail on Android 2.2\n// - apply(Uint8Array) can fail on iOS 5.1 Safari\n//\nlet STR_APPLY_UIA_OK = true;\n\ntry { String.fromCharCode.apply(null, new Uint8Array(1)); } catch (__) { STR_APPLY_UIA_OK = false; }\n\n\n// Table with utf8 lengths (calculated by first byte of sequence)\n// Note, that 5 & 6-byte values and some 4-byte values can not be represented in JS,\n// because max possible codepoint is 0x10ffff\nconst _utf8len = new Uint8Array(256);\nfor (let q = 0; q < 256; q++) {\n  _utf8len[q] = (q >= 252 ? 6 : q >= 248 ? 5 : q >= 240 ? 4 : q >= 224 ? 3 : q >= 192 ? 2 : 1);\n}\n_utf8len[254] = _utf8len[254] = 1; // Invalid sequence start\n\n\n// convert string to array (typed, when possible)\nvar string2buf = (str) => {\n  if (typeof TextEncoder === 'function' && TextEncoder.prototype.encode) {\n    return new TextEncoder().encode(str);\n  }\n\n  let buf, c, c2, m_pos, i, str_len = str.length, buf_len = 0;\n\n  // count binary size\n  for (m_pos = 0; m_pos < str_len; m_pos++) {\n    c = str.charCodeAt(m_pos);\n    if ((c & 0xfc00) === 0xd800 && (m_pos + 1 < str_len)) {\n      c2 = str.charCodeAt(m_pos + 1);\n      if ((c2 & 0xfc00) === 0xdc00) {\n        c = 0x10000 + ((c - 0xd800) << 10) + (c2 - 0xdc00);\n        m_pos++;\n      }\n    }\n    buf_len += c < 0x80 ? 1 : c < 0x800 ? 2 : c < 0x10000 ? 3 : 4;\n  }\n\n  // allocate buffer\n  buf = new Uint8Array(buf_len);\n\n  // convert\n  for (i = 0, m_pos = 0; i < buf_len; m_pos++) {\n    c = str.charCodeAt(m_pos);\n    if ((c & 0xfc00) === 0xd800 && (m_pos + 1 < str_len)) {\n      c2 = str.charCodeAt(m_pos + 1);\n      if ((c2 & 0xfc00) === 0xdc00) {\n        c = 0x10000 + ((c - 0xd800) << 10) + (c2 - 0xdc00);\n        m_pos++;\n      }\n    }\n    if (c < 0x80) {\n      /* one byte */\n      buf[i++] = c;\n    } else if (c < 0x800) {\n      /* two bytes */\n      buf[i++] = 0xC0 | (c >>> 6);\n      buf[i++] = 0x80 | (c & 0x3f);\n    } else if (c < 0x10000) {\n      /* three bytes */\n      buf[i++] = 0xE0 | (c >>> 12);\n      buf[i++] = 0x80 | (c >>> 6 & 0x3f);\n      buf[i++] = 0x80 | (c & 0x3f);\n    } else {\n      /* four bytes */\n      buf[i++] = 0xf0 | (c >>> 18);\n      buf[i++] = 0x80 | (c >>> 12 & 0x3f);\n      buf[i++] = 0x80 | (c >>> 6 & 0x3f);\n      buf[i++] = 0x80 | (c & 0x3f);\n    }\n  }\n\n  return buf;\n};\n\n// Helper\nconst buf2binstring = (buf, len) => {\n  // On Chrome, the arguments in a function call that are allowed is `65534`.\n  // If the length of the buffer is smaller than that, we can use this optimization,\n  // otherwise we will take a slower path.\n  if (len < 65534) {\n    if (buf.subarray && STR_APPLY_UIA_OK) {\n      return String.fromCharCode.apply(null, buf.length === len ? buf : buf.subarray(0, len));\n    }\n  }\n\n  let result = '';\n  for (let i = 0; i < len; i++) {\n    result += String.fromCharCode(buf[i]);\n  }\n  return result;\n};\n\n\n// convert array to string\nvar buf2string = (buf, max) => {\n  const len = max || buf.length;\n\n  if (typeof TextDecoder === 'function' && TextDecoder.prototype.decode) {\n    return new TextDecoder().decode(buf.subarray(0, max));\n  }\n\n  let i, out;\n\n  // Reserve max possible length (2 words per char)\n  // NB: by unknown reasons, Array is significantly faster for\n  //     String.fromCharCode.apply than Uint16Array.\n  const utf16buf = new Array(len * 2);\n\n  for (out = 0, i = 0; i < len;) {\n    let c = buf[i++];\n    // quick process ascii\n    if (c < 0x80) { utf16buf[out++] = c; continue; }\n\n    let c_len = _utf8len[c];\n    // skip 5 & 6 byte codes\n    if (c_len > 4) { utf16buf[out++] = 0xfffd; i += c_len - 1; continue; }\n\n    // apply mask on first byte\n    c &= c_len === 2 ? 0x1f : c_len === 3 ? 0x0f : 0x07;\n    // join the rest\n    while (c_len > 1 && i < len) {\n      c = (c << 6) | (buf[i++] & 0x3f);\n      c_len--;\n    }\n\n    // terminated by end of string?\n    if (c_len > 1) { utf16buf[out++] = 0xfffd; continue; }\n\n    if (c < 0x10000) {\n      utf16buf[out++] = c;\n    } else {\n      c -= 0x10000;\n      utf16buf[out++] = 0xd800 | ((c >> 10) & 0x3ff);\n      utf16buf[out++] = 0xdc00 | (c & 0x3ff);\n    }\n  }\n\n  return buf2binstring(utf16buf, out);\n};\n\n\n// Calculate max possible position in utf8 buffer,\n// that will not break sequence. If that's not possible\n// - (very small limits) return max size as is.\n//\n// buf[] - utf8 bytes array\n// max   - length limit (mandatory);\nvar utf8border = (buf, max) => {\n\n  max = max || buf.length;\n  if (max > buf.length) { max = buf.length; }\n\n  // go back from last position, until start of sequence found\n  let pos = max - 1;\n  while (pos >= 0 && (buf[pos] & 0xC0) === 0x80) { pos--; }\n\n  // Very small and broken sequence,\n  // return max, because we should return something anyway.\n  if (pos < 0) { return max; }\n\n  // If we came to start of buffer - that means buffer is too small,\n  // return max too.\n  if (pos === 0) { return max; }\n\n  return (pos + _utf8len[buf[pos]] > max) ? pos : max;\n};\n\nvar strings = {\n\tstring2buf: string2buf,\n\tbuf2string: buf2string,\n\tutf8border: utf8border\n};\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nfunction ZStream() {\n  /* next input byte */\n  this.input = null; // JS specific, because we have no pointers\n  this.next_in = 0;\n  /* number of bytes available at input */\n  this.avail_in = 0;\n  /* total number of input bytes read so far */\n  this.total_in = 0;\n  /* next output byte should be put there */\n  this.output = null; // JS specific, because we have no pointers\n  this.next_out = 0;\n  /* remaining free space at output */\n  this.avail_out = 0;\n  /* total number of bytes output so far */\n  this.total_out = 0;\n  /* last error message, NULL if no error */\n  this.msg = ''/*Z_NULL*/;\n  /* not visible by applications */\n  this.state = null;\n  /* best guess about the data type: binary or text */\n  this.data_type = 2/*Z_UNKNOWN*/;\n  /* adler32 value of the uncompressed data */\n  this.adler = 0;\n}\n\nvar zstream = ZStream;\n\nconst toString$1 = Object.prototype.toString;\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\nconst {\n  Z_NO_FLUSH: Z_NO_FLUSH$1, Z_SYNC_FLUSH, Z_FULL_FLUSH, Z_FINISH: Z_FINISH$2,\n  Z_OK: Z_OK$2, Z_STREAM_END: Z_STREAM_END$2,\n  Z_DEFAULT_COMPRESSION,\n  Z_DEFAULT_STRATEGY,\n  Z_DEFLATED: Z_DEFLATED$1\n} = constants$2;\n\n/* ===========================================================================*/\n\n\n/**\n * class Deflate\n *\n * Generic JS-style wrapper for zlib calls. If you don't need\n * streaming behaviour - use more simple functions: [[deflate]],\n * [[deflateRaw]] and [[gzip]].\n **/\n\n/* internal\n * Deflate.chunks -> Array\n *\n * Chunks of output data, if [[Deflate#onData]] not overridden.\n **/\n\n/**\n * Deflate.result -> Uint8Array\n *\n * Compressed result, generated by default [[Deflate#onData]]\n * and [[Deflate#onEnd]] handlers. Filled after you push last chunk\n * (call [[Deflate#push]] with `Z_FINISH` / `true` param).\n **/\n\n/**\n * Deflate.err -> Number\n *\n * Error code after deflate finished. 0 (Z_OK) on success.\n * You will not need it in real life, because deflate errors\n * are possible only on wrong options or bad `onData` / `onEnd`\n * custom handlers.\n **/\n\n/**\n * Deflate.msg -> String\n *\n * Error message, if [[Deflate.err]] != 0\n **/\n\n\n/**\n * new Deflate(options)\n * - options (Object): zlib deflate options.\n *\n * Creates new deflator instance with specified params. Throws exception\n * on bad params. Supported options:\n *\n * - `level`\n * - `windowBits`\n * - `memLevel`\n * - `strategy`\n * - `dictionary`\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information on these.\n *\n * Additional options, for internal needs:\n *\n * - `chunkSize` - size of generated data chunks (16K by default)\n * - `raw` (Boolean) - do raw deflate\n * - `gzip` (Boolean) - create gzip wrapper\n * - `header` (Object) - custom header for gzip\n *   - `text` (Boolean) - true if compressed data believed to be text\n *   - `time` (Number) - modification time, unix timestamp\n *   - `os` (Number) - operation system code\n *   - `extra` (Array) - array of bytes with extra data (max 65536)\n *   - `name` (String) - file name (binary string)\n *   - `comment` (String) - comment (binary string)\n *   - `hcrc` (Boolean) - true if header crc should be added\n *\n * ##### Example:\n *\n * ```javascript\n * const pako = require('pako')\n *   , chunk1 = new Uint8Array([1,2,3,4,5,6,7,8,9])\n *   , chunk2 = new Uint8Array([10,11,12,13,14,15,16,17,18,19]);\n *\n * const deflate = new pako.Deflate({ level: 3});\n *\n * deflate.push(chunk1, false);\n * deflate.push(chunk2, true);  // true -> last chunk\n *\n * if (deflate.err) { throw new Error(deflate.err); }\n *\n * console.log(deflate.result);\n * ```\n **/\nfunction Deflate$1(options) {\n  this.options = common.assign({\n    level: Z_DEFAULT_COMPRESSION,\n    method: Z_DEFLATED$1,\n    chunkSize: 16384,\n    windowBits: 15,\n    memLevel: 8,\n    strategy: Z_DEFAULT_STRATEGY\n  }, options || {});\n\n  let opt = this.options;\n\n  if (opt.raw && (opt.windowBits > 0)) {\n    opt.windowBits = -opt.windowBits;\n  }\n\n  else if (opt.gzip && (opt.windowBits > 0) && (opt.windowBits < 16)) {\n    opt.windowBits += 16;\n  }\n\n  this.err    = 0;      // error code, if happens (0 = Z_OK)\n  this.msg    = '';     // error message\n  this.ended  = false;  // used to avoid multiple onEnd() calls\n  this.chunks = [];     // chunks of compressed data\n\n  this.strm = new zstream();\n  this.strm.avail_out = 0;\n\n  let status = deflate_1$2.deflateInit2(\n    this.strm,\n    opt.level,\n    opt.method,\n    opt.windowBits,\n    opt.memLevel,\n    opt.strategy\n  );\n\n  if (status !== Z_OK$2) {\n    throw new Error(messages[status]);\n  }\n\n  if (opt.header) {\n    deflate_1$2.deflateSetHeader(this.strm, opt.header);\n  }\n\n  if (opt.dictionary) {\n    let dict;\n    // Convert data if needed\n    if (typeof opt.dictionary === 'string') {\n      // If we need to compress text, change encoding to utf8.\n      dict = strings.string2buf(opt.dictionary);\n    } else if (toString$1.call(opt.dictionary) === '[object ArrayBuffer]') {\n      dict = new Uint8Array(opt.dictionary);\n    } else {\n      dict = opt.dictionary;\n    }\n\n    status = deflate_1$2.deflateSetDictionary(this.strm, dict);\n\n    if (status !== Z_OK$2) {\n      throw new Error(messages[status]);\n    }\n\n    this._dict_set = true;\n  }\n}\n\n/**\n * Deflate#push(data[, flush_mode]) -> Boolean\n * - data (Uint8Array|ArrayBuffer|String): input data. Strings will be\n *   converted to utf8 byte sequence.\n * - flush_mode (Number|Boolean): 0..6 for corresponding Z_NO_FLUSH..Z_TREE modes.\n *   See constants. Skipped or `false` means Z_NO_FLUSH, `true` means Z_FINISH.\n *\n * Sends input data to deflate pipe, generating [[Deflate#onData]] calls with\n * new compressed chunks. Returns `true` on success. The last data block must\n * have `flush_mode` Z_FINISH (or `true`). That will flush internal pending\n * buffers and call [[Deflate#onEnd]].\n *\n * On fail call [[Deflate#onEnd]] with error code and return false.\n *\n * ##### Example\n *\n * ```javascript\n * push(chunk, false); // push one of data chunks\n * ...\n * push(chunk, true);  // push last chunk\n * ```\n **/\nDeflate$1.prototype.push = function (data, flush_mode) {\n  const strm = this.strm;\n  const chunkSize = this.options.chunkSize;\n  let status, _flush_mode;\n\n  if (this.ended) { return false; }\n\n  if (flush_mode === ~~flush_mode) _flush_mode = flush_mode;\n  else _flush_mode = flush_mode === true ? Z_FINISH$2 : Z_NO_FLUSH$1;\n\n  // Convert data if needed\n  if (typeof data === 'string') {\n    // If we need to compress text, change encoding to utf8.\n    strm.input = strings.string2buf(data);\n  } else if (toString$1.call(data) === '[object ArrayBuffer]') {\n    strm.input = new Uint8Array(data);\n  } else {\n    strm.input = data;\n  }\n\n  strm.next_in = 0;\n  strm.avail_in = strm.input.length;\n\n  for (;;) {\n    if (strm.avail_out === 0) {\n      strm.output = new Uint8Array(chunkSize);\n      strm.next_out = 0;\n      strm.avail_out = chunkSize;\n    }\n\n    // Make sure avail_out > 6 to avoid repeating markers\n    if ((_flush_mode === Z_SYNC_FLUSH || _flush_mode === Z_FULL_FLUSH) && strm.avail_out <= 6) {\n      this.onData(strm.output.subarray(0, strm.next_out));\n      strm.avail_out = 0;\n      continue;\n    }\n\n    status = deflate_1$2.deflate(strm, _flush_mode);\n\n    // Ended => flush and finish\n    if (status === Z_STREAM_END$2) {\n      if (strm.next_out > 0) {\n        this.onData(strm.output.subarray(0, strm.next_out));\n      }\n      status = deflate_1$2.deflateEnd(this.strm);\n      this.onEnd(status);\n      this.ended = true;\n      return status === Z_OK$2;\n    }\n\n    // Flush if out buffer full\n    if (strm.avail_out === 0) {\n      this.onData(strm.output);\n      continue;\n    }\n\n    // Flush if requested and has data\n    if (_flush_mode > 0 && strm.next_out > 0) {\n      this.onData(strm.output.subarray(0, strm.next_out));\n      strm.avail_out = 0;\n      continue;\n    }\n\n    if (strm.avail_in === 0) break;\n  }\n\n  return true;\n};\n\n\n/**\n * Deflate#onData(chunk) -> Void\n * - chunk (Uint8Array): output data.\n *\n * By default, stores data blocks in `chunks[]` property and glue\n * those in `onEnd`. Override this handler, if you need another behaviour.\n **/\nDeflate$1.prototype.onData = function (chunk) {\n  this.chunks.push(chunk);\n};\n\n\n/**\n * Deflate#onEnd(status) -> Void\n * - status (Number): deflate status. 0 (Z_OK) on success,\n *   other if not.\n *\n * Called once after you tell deflate that the input stream is\n * complete (Z_FINISH). By default - join collected chunks,\n * free memory and fill `results` / `err` properties.\n **/\nDeflate$1.prototype.onEnd = function (status) {\n  // On success - join\n  if (status === Z_OK$2) {\n    this.result = common.flattenChunks(this.chunks);\n  }\n  this.chunks = [];\n  this.err = status;\n  this.msg = this.strm.msg;\n};\n\n\n/**\n * deflate(data[, options]) -> Uint8Array\n * - data (Uint8Array|String): input data to compress.\n * - options (Object): zlib deflate options.\n *\n * Compress `data` with deflate algorithm and `options`.\n *\n * Supported options are:\n *\n * - level\n * - windowBits\n * - memLevel\n * - strategy\n * - dictionary\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information on these.\n *\n * Sugar (options):\n *\n * - `raw` (Boolean) - say that we work with raw stream, if you don't wish to specify\n *   negative windowBits implicitly.\n *\n * ##### Example:\n *\n * ```javascript\n * const pako = require('pako')\n * const data = new Uint8Array([1,2,3,4,5,6,7,8,9]);\n *\n * console.log(pako.deflate(data));\n * ```\n **/\nfunction deflate$1(input, options) {\n  const deflator = new Deflate$1(options);\n\n  deflator.push(input, true);\n\n  // That will never happens, if you don't cheat with options :)\n  if (deflator.err) { throw deflator.msg || messages[deflator.err]; }\n\n  return deflator.result;\n}\n\n\n/**\n * deflateRaw(data[, options]) -> Uint8Array\n * - data (Uint8Array|String): input data to compress.\n * - options (Object): zlib deflate options.\n *\n * The same as [[deflate]], but creates raw data, without wrapper\n * (header and adler32 crc).\n **/\nfunction deflateRaw$1(input, options) {\n  options = options || {};\n  options.raw = true;\n  return deflate$1(input, options);\n}\n\n\n/**\n * gzip(data[, options]) -> Uint8Array\n * - data (Uint8Array|String): input data to compress.\n * - options (Object): zlib deflate options.\n *\n * The same as [[deflate]], but create gzip wrapper instead of\n * deflate one.\n **/\nfunction gzip$1(input, options) {\n  options = options || {};\n  options.gzip = true;\n  return deflate$1(input, options);\n}\n\n\nvar Deflate_1$1 = Deflate$1;\nvar deflate_2 = deflate$1;\nvar deflateRaw_1$1 = deflateRaw$1;\nvar gzip_1$1 = gzip$1;\nvar constants$1 = constants$2;\n\nvar deflate_1$1 = {\n\tDeflate: Deflate_1$1,\n\tdeflate: deflate_2,\n\tdeflateRaw: deflateRaw_1$1,\n\tgzip: gzip_1$1,\n\tconstants: constants$1\n};\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\n// See state defs from inflate.js\nconst BAD$1 = 30;       /* got a data error -- remain here until reset */\nconst TYPE$1 = 12;      /* i: waiting for type bits, including last-flag bit */\n\n/*\n   Decode literal, length, and distance codes and write out the resulting\n   literal and match bytes until either not enough input or output is\n   available, an end-of-block is encountered, or a data error is encountered.\n   When large enough input and output buffers are supplied to inflate(), for\n   example, a 16K input buffer and a 64K output buffer, more than 95% of the\n   inflate execution time is spent in this routine.\n\n   Entry assumptions:\n\n        state.mode === LEN\n        strm.avail_in >= 6\n        strm.avail_out >= 258\n        start >= strm.avail_out\n        state.bits < 8\n\n   On return, state.mode is one of:\n\n        LEN -- ran out of enough output space or enough available input\n        TYPE -- reached end of block code, inflate() to interpret next block\n        BAD -- error in block data\n\n   Notes:\n\n    - The maximum input bits used by a length/distance pair is 15 bits for the\n      length code, 5 bits for the length extra, 15 bits for the distance code,\n      and 13 bits for the distance extra.  This totals 48 bits, or six bytes.\n      Therefore if strm.avail_in >= 6, then there is enough input to avoid\n      checking for available input while decoding.\n\n    - The maximum bytes that a single length/distance pair can output is 258\n      bytes, which is the maximum length that can be coded.  inflate_fast()\n      requires strm.avail_out >= 258 for each loop to avoid checking for\n      output space.\n */\nvar inffast = function inflate_fast(strm, start) {\n  let _in;                    /* local strm.input */\n  let last;                   /* have enough input while in < last */\n  let _out;                   /* local strm.output */\n  let beg;                    /* inflate()'s initial strm.output */\n  let end;                    /* while out < end, enough space available */\n//#ifdef INFLATE_STRICT\n  let dmax;                   /* maximum distance from zlib header */\n//#endif\n  let wsize;                  /* window size or zero if not using window */\n  let whave;                  /* valid bytes in the window */\n  let wnext;                  /* window write index */\n  // Use `s_window` instead `window`, avoid conflict with instrumentation tools\n  let s_window;               /* allocated sliding window, if wsize != 0 */\n  let hold;                   /* local strm.hold */\n  let bits;                   /* local strm.bits */\n  let lcode;                  /* local strm.lencode */\n  let dcode;                  /* local strm.distcode */\n  let lmask;                  /* mask for first level of length codes */\n  let dmask;                  /* mask for first level of distance codes */\n  let here;                   /* retrieved table entry */\n  let op;                     /* code bits, operation, extra bits, or */\n                              /*  window position, window bytes to copy */\n  let len;                    /* match length, unused bytes */\n  let dist;                   /* match distance */\n  let from;                   /* where to copy match from */\n  let from_source;\n\n\n  let input, output; // JS specific, because we have no pointers\n\n  /* copy state to local variables */\n  const state = strm.state;\n  //here = state.here;\n  _in = strm.next_in;\n  input = strm.input;\n  last = _in + (strm.avail_in - 5);\n  _out = strm.next_out;\n  output = strm.output;\n  beg = _out - (start - strm.avail_out);\n  end = _out + (strm.avail_out - 257);\n//#ifdef INFLATE_STRICT\n  dmax = state.dmax;\n//#endif\n  wsize = state.wsize;\n  whave = state.whave;\n  wnext = state.wnext;\n  s_window = state.window;\n  hold = state.hold;\n  bits = state.bits;\n  lcode = state.lencode;\n  dcode = state.distcode;\n  lmask = (1 << state.lenbits) - 1;\n  dmask = (1 << state.distbits) - 1;\n\n\n  /* decode literals and length/distances until end-of-block or not enough\n     input data or output space */\n\n  top:\n  do {\n    if (bits < 15) {\n      hold += input[_in++] << bits;\n      bits += 8;\n      hold += input[_in++] << bits;\n      bits += 8;\n    }\n\n    here = lcode[hold & lmask];\n\n    dolen:\n    for (;;) { // Goto emulation\n      op = here >>> 24/*here.bits*/;\n      hold >>>= op;\n      bits -= op;\n      op = (here >>> 16) & 0xff/*here.op*/;\n      if (op === 0) {                          /* literal */\n        //Tracevv((stderr, here.val >= 0x20 && here.val < 0x7f ?\n        //        \"inflate:         literal '%c'\\n\" :\n        //        \"inflate:         literal 0x%02x\\n\", here.val));\n        output[_out++] = here & 0xffff/*here.val*/;\n      }\n      else if (op & 16) {                     /* length base */\n        len = here & 0xffff/*here.val*/;\n        op &= 15;                           /* number of extra bits */\n        if (op) {\n          if (bits < op) {\n            hold += input[_in++] << bits;\n            bits += 8;\n          }\n          len += hold & ((1 << op) - 1);\n          hold >>>= op;\n          bits -= op;\n        }\n        //Tracevv((stderr, \"inflate:         length %u\\n\", len));\n        if (bits < 15) {\n          hold += input[_in++] << bits;\n          bits += 8;\n          hold += input[_in++] << bits;\n          bits += 8;\n        }\n        here = dcode[hold & dmask];\n\n        dodist:\n        for (;;) { // goto emulation\n          op = here >>> 24/*here.bits*/;\n          hold >>>= op;\n          bits -= op;\n          op = (here >>> 16) & 0xff/*here.op*/;\n\n          if (op & 16) {                      /* distance base */\n            dist = here & 0xffff/*here.val*/;\n            op &= 15;                       /* number of extra bits */\n            if (bits < op) {\n              hold += input[_in++] << bits;\n              bits += 8;\n              if (bits < op) {\n                hold += input[_in++] << bits;\n                bits += 8;\n              }\n            }\n            dist += hold & ((1 << op) - 1);\n//#ifdef INFLATE_STRICT\n            if (dist > dmax) {\n              strm.msg = 'invalid distance too far back';\n              state.mode = BAD$1;\n              break top;\n            }\n//#endif\n            hold >>>= op;\n            bits -= op;\n            //Tracevv((stderr, \"inflate:         distance %u\\n\", dist));\n            op = _out - beg;                /* max distance in output */\n            if (dist > op) {                /* see if copy from window */\n              op = dist - op;               /* distance back in window */\n              if (op > whave) {\n                if (state.sane) {\n                  strm.msg = 'invalid distance too far back';\n                  state.mode = BAD$1;\n                  break top;\n                }\n\n// (!) This block is disabled in zlib defaults,\n// don't enable it for binary compatibility\n//#ifdef INFLATE_ALLOW_INVALID_DISTANCE_TOOFAR_ARRR\n//                if (len <= op - whave) {\n//                  do {\n//                    output[_out++] = 0;\n//                  } while (--len);\n//                  continue top;\n//                }\n//                len -= op - whave;\n//                do {\n//                  output[_out++] = 0;\n//                } while (--op > whave);\n//                if (op === 0) {\n//                  from = _out - dist;\n//                  do {\n//                    output[_out++] = output[from++];\n//                  } while (--len);\n//                  continue top;\n//                }\n//#endif\n              }\n              from = 0; // window index\n              from_source = s_window;\n              if (wnext === 0) {           /* very common case */\n                from += wsize - op;\n                if (op < len) {         /* some from window */\n                  len -= op;\n                  do {\n                    output[_out++] = s_window[from++];\n                  } while (--op);\n                  from = _out - dist;  /* rest from output */\n                  from_source = output;\n                }\n              }\n              else if (wnext < op) {      /* wrap around window */\n                from += wsize + wnext - op;\n                op -= wnext;\n                if (op < len) {         /* some from end of window */\n                  len -= op;\n                  do {\n                    output[_out++] = s_window[from++];\n                  } while (--op);\n                  from = 0;\n                  if (wnext < len) {  /* some from start of window */\n                    op = wnext;\n                    len -= op;\n                    do {\n                      output[_out++] = s_window[from++];\n                    } while (--op);\n                    from = _out - dist;      /* rest from output */\n                    from_source = output;\n                  }\n                }\n              }\n              else {                      /* contiguous in window */\n                from += wnext - op;\n                if (op < len) {         /* some from window */\n                  len -= op;\n                  do {\n                    output[_out++] = s_window[from++];\n                  } while (--op);\n                  from = _out - dist;  /* rest from output */\n                  from_source = output;\n                }\n              }\n              while (len > 2) {\n                output[_out++] = from_source[from++];\n                output[_out++] = from_source[from++];\n                output[_out++] = from_source[from++];\n                len -= 3;\n              }\n              if (len) {\n                output[_out++] = from_source[from++];\n                if (len > 1) {\n                  output[_out++] = from_source[from++];\n                }\n              }\n            }\n            else {\n              from = _out - dist;          /* copy direct from output */\n              do {                        /* minimum length is three */\n                output[_out++] = output[from++];\n                output[_out++] = output[from++];\n                output[_out++] = output[from++];\n                len -= 3;\n              } while (len > 2);\n              if (len) {\n                output[_out++] = output[from++];\n                if (len > 1) {\n                  output[_out++] = output[from++];\n                }\n              }\n            }\n          }\n          else if ((op & 64) === 0) {          /* 2nd level distance code */\n            here = dcode[(here & 0xffff)/*here.val*/ + (hold & ((1 << op) - 1))];\n            continue dodist;\n          }\n          else {\n            strm.msg = 'invalid distance code';\n            state.mode = BAD$1;\n            break top;\n          }\n\n          break; // need to emulate goto via \"continue\"\n        }\n      }\n      else if ((op & 64) === 0) {              /* 2nd level length code */\n        here = lcode[(here & 0xffff)/*here.val*/ + (hold & ((1 << op) - 1))];\n        continue dolen;\n      }\n      else if (op & 32) {                     /* end-of-block */\n        //Tracevv((stderr, \"inflate:         end of block\\n\"));\n        state.mode = TYPE$1;\n        break top;\n      }\n      else {\n        strm.msg = 'invalid literal/length code';\n        state.mode = BAD$1;\n        break top;\n      }\n\n      break; // need to emulate goto via \"continue\"\n    }\n  } while (_in < last && _out < end);\n\n  /* return unused bytes (on entry, bits < 8, so in won't go too far back) */\n  len = bits >> 3;\n  _in -= len;\n  bits -= len << 3;\n  hold &= (1 << bits) - 1;\n\n  /* update state and return */\n  strm.next_in = _in;\n  strm.next_out = _out;\n  strm.avail_in = (_in < last ? 5 + (last - _in) : 5 - (_in - last));\n  strm.avail_out = (_out < end ? 257 + (end - _out) : 257 - (_out - end));\n  state.hold = hold;\n  state.bits = bits;\n  return;\n};\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nconst MAXBITS = 15;\nconst ENOUGH_LENS$1 = 852;\nconst ENOUGH_DISTS$1 = 592;\n//const ENOUGH = (ENOUGH_LENS+ENOUGH_DISTS);\n\nconst CODES$1 = 0;\nconst LENS$1 = 1;\nconst DISTS$1 = 2;\n\nconst lbase = new Uint16Array([ /* Length codes 257..285 base */\n  3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 19, 23, 27, 31,\n  35, 43, 51, 59, 67, 83, 99, 115, 131, 163, 195, 227, 258, 0, 0\n]);\n\nconst lext = new Uint8Array([ /* Length codes 257..285 extra */\n  16, 16, 16, 16, 16, 16, 16, 16, 17, 17, 17, 17, 18, 18, 18, 18,\n  19, 19, 19, 19, 20, 20, 20, 20, 21, 21, 21, 21, 16, 72, 78\n]);\n\nconst dbase = new Uint16Array([ /* Distance codes 0..29 base */\n  1, 2, 3, 4, 5, 7, 9, 13, 17, 25, 33, 49, 65, 97, 129, 193,\n  257, 385, 513, 769, 1025, 1537, 2049, 3073, 4097, 6145,\n  8193, 12289, 16385, 24577, 0, 0\n]);\n\nconst dext = new Uint8Array([ /* Distance codes 0..29 extra */\n  16, 16, 16, 16, 17, 17, 18, 18, 19, 19, 20, 20, 21, 21, 22, 22,\n  23, 23, 24, 24, 25, 25, 26, 26, 27, 27,\n  28, 28, 29, 29, 64, 64\n]);\n\nconst inflate_table = (type, lens, lens_index, codes, table, table_index, work, opts) =>\n{\n  const bits = opts.bits;\n      //here = opts.here; /* table entry for duplication */\n\n  let len = 0;               /* a code's length in bits */\n  let sym = 0;               /* index of code symbols */\n  let min = 0, max = 0;          /* minimum and maximum code lengths */\n  let root = 0;              /* number of index bits for root table */\n  let curr = 0;              /* number of index bits for current table */\n  let drop = 0;              /* code bits to drop for sub-table */\n  let left = 0;                   /* number of prefix codes available */\n  let used = 0;              /* code entries in table used */\n  let huff = 0;              /* Huffman code */\n  let incr;              /* for incrementing code, index */\n  let fill;              /* index for replicating entries */\n  let low;               /* low bits for current root entry */\n  let mask;              /* mask for low root bits */\n  let next;             /* next available space in table */\n  let base = null;     /* base value table to use */\n  let base_index = 0;\n//  let shoextra;    /* extra bits table to use */\n  let end;                    /* use base and extra for symbol > end */\n  const count = new Uint16Array(MAXBITS + 1); //[MAXBITS+1];    /* number of codes of each length */\n  const offs = new Uint16Array(MAXBITS + 1); //[MAXBITS+1];     /* offsets in table for each length */\n  let extra = null;\n  let extra_index = 0;\n\n  let here_bits, here_op, here_val;\n\n  /*\n   Process a set of code lengths to create a canonical Huffman code.  The\n   code lengths are lens[0..codes-1].  Each length corresponds to the\n   symbols 0..codes-1.  The Huffman code is generated by first sorting the\n   symbols by length from short to long, and retaining the symbol order\n   for codes with equal lengths.  Then the code starts with all zero bits\n   for the first code of the shortest length, and the codes are integer\n   increments for the same length, and zeros are appended as the length\n   increases.  For the deflate format, these bits are stored backwards\n   from their more natural integer increment ordering, and so when the\n   decoding tables are built in the large loop below, the integer codes\n   are incremented backwards.\n\n   This routine assumes, but does not check, that all of the entries in\n   lens[] are in the range 0..MAXBITS.  The caller must assure this.\n   1..MAXBITS is interpreted as that code length.  zero means that that\n   symbol does not occur in this code.\n\n   The codes are sorted by computing a count of codes for each length,\n   creating from that a table of starting indices for each length in the\n   sorted table, and then entering the symbols in order in the sorted\n   table.  The sorted table is work[], with that space being provided by\n   the caller.\n\n   The length counts are used for other purposes as well, i.e. finding\n   the minimum and maximum length codes, determining if there are any\n   codes at all, checking for a valid set of lengths, and looking ahead\n   at length counts to determine sub-table sizes when building the\n   decoding tables.\n   */\n\n  /* accumulate lengths for codes (assumes lens[] all in 0..MAXBITS) */\n  for (len = 0; len <= MAXBITS; len++) {\n    count[len] = 0;\n  }\n  for (sym = 0; sym < codes; sym++) {\n    count[lens[lens_index + sym]]++;\n  }\n\n  /* bound code lengths, force root to be within code lengths */\n  root = bits;\n  for (max = MAXBITS; max >= 1; max--) {\n    if (count[max] !== 0) { break; }\n  }\n  if (root > max) {\n    root = max;\n  }\n  if (max === 0) {                     /* no symbols to code at all */\n    //table.op[opts.table_index] = 64;  //here.op = (var char)64;    /* invalid code marker */\n    //table.bits[opts.table_index] = 1;   //here.bits = (var char)1;\n    //table.val[opts.table_index++] = 0;   //here.val = (var short)0;\n    table[table_index++] = (1 << 24) | (64 << 16) | 0;\n\n\n    //table.op[opts.table_index] = 64;\n    //table.bits[opts.table_index] = 1;\n    //table.val[opts.table_index++] = 0;\n    table[table_index++] = (1 << 24) | (64 << 16) | 0;\n\n    opts.bits = 1;\n    return 0;     /* no symbols, but wait for decoding to report error */\n  }\n  for (min = 1; min < max; min++) {\n    if (count[min] !== 0) { break; }\n  }\n  if (root < min) {\n    root = min;\n  }\n\n  /* check for an over-subscribed or incomplete set of lengths */\n  left = 1;\n  for (len = 1; len <= MAXBITS; len++) {\n    left <<= 1;\n    left -= count[len];\n    if (left < 0) {\n      return -1;\n    }        /* over-subscribed */\n  }\n  if (left > 0 && (type === CODES$1 || max !== 1)) {\n    return -1;                      /* incomplete set */\n  }\n\n  /* generate offsets into symbol table for each length for sorting */\n  offs[1] = 0;\n  for (len = 1; len < MAXBITS; len++) {\n    offs[len + 1] = offs[len] + count[len];\n  }\n\n  /* sort symbols by length, by symbol order within each length */\n  for (sym = 0; sym < codes; sym++) {\n    if (lens[lens_index + sym] !== 0) {\n      work[offs[lens[lens_index + sym]]++] = sym;\n    }\n  }\n\n  /*\n   Create and fill in decoding tables.  In this loop, the table being\n   filled is at next and has curr index bits.  The code being used is huff\n   with length len.  That code is converted to an index by dropping drop\n   bits off of the bottom.  For codes where len is less than drop + curr,\n   those top drop + curr - len bits are incremented through all values to\n   fill the table with replicated entries.\n\n   root is the number of index bits for the root table.  When len exceeds\n   root, sub-tables are created pointed to by the root entry with an index\n   of the low root bits of huff.  This is saved in low to check for when a\n   new sub-table should be started.  drop is zero when the root table is\n   being filled, and drop is root when sub-tables are being filled.\n\n   When a new sub-table is needed, it is necessary to look ahead in the\n   code lengths to determine what size sub-table is needed.  The length\n   counts are used for this, and so count[] is decremented as codes are\n   entered in the tables.\n\n   used keeps track of how many table entries have been allocated from the\n   provided *table space.  It is checked for LENS and DIST tables against\n   the constants ENOUGH_LENS and ENOUGH_DISTS to guard against changes in\n   the initial root table size constants.  See the comments in inftrees.h\n   for more information.\n\n   sym increments through all symbols, and the loop terminates when\n   all codes of length max, i.e. all codes, have been processed.  This\n   routine permits incomplete codes, so another loop after this one fills\n   in the rest of the decoding tables with invalid code markers.\n   */\n\n  /* set up for code type */\n  // poor man optimization - use if-else instead of switch,\n  // to avoid deopts in old v8\n  if (type === CODES$1) {\n    base = extra = work;    /* dummy value--not used */\n    end = 19;\n\n  } else if (type === LENS$1) {\n    base = lbase;\n    base_index -= 257;\n    extra = lext;\n    extra_index -= 257;\n    end = 256;\n\n  } else {                    /* DISTS */\n    base = dbase;\n    extra = dext;\n    end = -1;\n  }\n\n  /* initialize opts for loop */\n  huff = 0;                   /* starting code */\n  sym = 0;                    /* starting code symbol */\n  len = min;                  /* starting code length */\n  next = table_index;              /* current table to fill in */\n  curr = root;                /* current table index bits */\n  drop = 0;                   /* current bits to drop from code for index */\n  low = -1;                   /* trigger new sub-table when len > root */\n  used = 1 << root;          /* use root table entries */\n  mask = used - 1;            /* mask for comparing low */\n\n  /* check available table space */\n  if ((type === LENS$1 && used > ENOUGH_LENS$1) ||\n    (type === DISTS$1 && used > ENOUGH_DISTS$1)) {\n    return 1;\n  }\n\n  /* process all codes and make table entries */\n  for (;;) {\n    /* create table entry */\n    here_bits = len - drop;\n    if (work[sym] < end) {\n      here_op = 0;\n      here_val = work[sym];\n    }\n    else if (work[sym] > end) {\n      here_op = extra[extra_index + work[sym]];\n      here_val = base[base_index + work[sym]];\n    }\n    else {\n      here_op = 32 + 64;         /* end of block */\n      here_val = 0;\n    }\n\n    /* replicate for those indices with low len bits equal to huff */\n    incr = 1 << (len - drop);\n    fill = 1 << curr;\n    min = fill;                 /* save offset to next table */\n    do {\n      fill -= incr;\n      table[next + (huff >> drop) + fill] = (here_bits << 24) | (here_op << 16) | here_val |0;\n    } while (fill !== 0);\n\n    /* backwards increment the len-bit code huff */\n    incr = 1 << (len - 1);\n    while (huff & incr) {\n      incr >>= 1;\n    }\n    if (incr !== 0) {\n      huff &= incr - 1;\n      huff += incr;\n    } else {\n      huff = 0;\n    }\n\n    /* go to next symbol, update count, len */\n    sym++;\n    if (--count[len] === 0) {\n      if (len === max) { break; }\n      len = lens[lens_index + work[sym]];\n    }\n\n    /* create new sub-table if needed */\n    if (len > root && (huff & mask) !== low) {\n      /* if first time, transition to sub-tables */\n      if (drop === 0) {\n        drop = root;\n      }\n\n      /* increment past last table */\n      next += min;            /* here min is 1 << curr */\n\n      /* determine length of next table */\n      curr = len - drop;\n      left = 1 << curr;\n      while (curr + drop < max) {\n        left -= count[curr + drop];\n        if (left <= 0) { break; }\n        curr++;\n        left <<= 1;\n      }\n\n      /* check for enough space */\n      used += 1 << curr;\n      if ((type === LENS$1 && used > ENOUGH_LENS$1) ||\n        (type === DISTS$1 && used > ENOUGH_DISTS$1)) {\n        return 1;\n      }\n\n      /* point entry in root table to sub-table */\n      low = huff & mask;\n      /*table.op[low] = curr;\n      table.bits[low] = root;\n      table.val[low] = next - opts.table_index;*/\n      table[low] = (root << 24) | (curr << 16) | (next - table_index) |0;\n    }\n  }\n\n  /* fill in remaining table entry if code is incomplete (guaranteed to have\n   at most one remaining entry, since if the code is incomplete, the\n   maximum code length that was allowed to get this far is one bit) */\n  if (huff !== 0) {\n    //table.op[next + huff] = 64;            /* invalid code marker */\n    //table.bits[next + huff] = len - drop;\n    //table.val[next + huff] = 0;\n    table[next + huff] = ((len - drop) << 24) | (64 << 16) |0;\n  }\n\n  /* set return parameters */\n  //opts.table_index += used;\n  opts.bits = root;\n  return 0;\n};\n\n\nvar inftrees = inflate_table;\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\n\n\n\n\n\nconst CODES = 0;\nconst LENS = 1;\nconst DISTS = 2;\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\nconst {\n  Z_FINISH: Z_FINISH$1, Z_BLOCK, Z_TREES,\n  Z_OK: Z_OK$1, Z_STREAM_END: Z_STREAM_END$1, Z_NEED_DICT: Z_NEED_DICT$1, Z_STREAM_ERROR: Z_STREAM_ERROR$1, Z_DATA_ERROR: Z_DATA_ERROR$1, Z_MEM_ERROR: Z_MEM_ERROR$1, Z_BUF_ERROR,\n  Z_DEFLATED\n} = constants$2;\n\n\n/* STATES ====================================================================*/\n/* ===========================================================================*/\n\n\nconst    HEAD = 1;       /* i: waiting for magic header */\nconst    FLAGS = 2;      /* i: waiting for method and flags (gzip) */\nconst    TIME = 3;       /* i: waiting for modification time (gzip) */\nconst    OS = 4;         /* i: waiting for extra flags and operating system (gzip) */\nconst    EXLEN = 5;      /* i: waiting for extra length (gzip) */\nconst    EXTRA = 6;      /* i: waiting for extra bytes (gzip) */\nconst    NAME = 7;       /* i: waiting for end of file name (gzip) */\nconst    COMMENT = 8;    /* i: waiting for end of comment (gzip) */\nconst    HCRC = 9;       /* i: waiting for header crc (gzip) */\nconst    DICTID = 10;    /* i: waiting for dictionary check value */\nconst    DICT = 11;      /* waiting for inflateSetDictionary() call */\nconst        TYPE = 12;      /* i: waiting for type bits, including last-flag bit */\nconst        TYPEDO = 13;    /* i: same, but skip check to exit inflate on new block */\nconst        STORED = 14;    /* i: waiting for stored size (length and complement) */\nconst        COPY_ = 15;     /* i/o: same as COPY below, but only first time in */\nconst        COPY = 16;      /* i/o: waiting for input or output to copy stored block */\nconst        TABLE = 17;     /* i: waiting for dynamic block table lengths */\nconst        LENLENS = 18;   /* i: waiting for code length code lengths */\nconst        CODELENS = 19;  /* i: waiting for length/lit and distance code lengths */\nconst            LEN_ = 20;      /* i: same as LEN below, but only first time in */\nconst            LEN = 21;       /* i: waiting for length/lit/eob code */\nconst            LENEXT = 22;    /* i: waiting for length extra bits */\nconst            DIST = 23;      /* i: waiting for distance code */\nconst            DISTEXT = 24;   /* i: waiting for distance extra bits */\nconst            MATCH = 25;     /* o: waiting for output space to copy string */\nconst            LIT = 26;       /* o: waiting for output space to write literal */\nconst    CHECK = 27;     /* i: waiting for 32-bit check value */\nconst    LENGTH = 28;    /* i: waiting for 32-bit length (gzip) */\nconst    DONE = 29;      /* finished check, done -- remain here until reset */\nconst    BAD = 30;       /* got a data error -- remain here until reset */\nconst    MEM = 31;       /* got an inflate() memory error -- remain here until reset */\nconst    SYNC = 32;      /* looking for synchronization bytes to restart inflate() */\n\n/* ===========================================================================*/\n\n\n\nconst ENOUGH_LENS = 852;\nconst ENOUGH_DISTS = 592;\n//const ENOUGH =  (ENOUGH_LENS+ENOUGH_DISTS);\n\nconst MAX_WBITS = 15;\n/* 32K LZ77 window */\nconst DEF_WBITS = MAX_WBITS;\n\n\nconst zswap32 = (q) => {\n\n  return  (((q >>> 24) & 0xff) +\n          ((q >>> 8) & 0xff00) +\n          ((q & 0xff00) << 8) +\n          ((q & 0xff) << 24));\n};\n\n\nfunction InflateState() {\n  this.mode = 0;             /* current inflate mode */\n  this.last = false;          /* true if processing last block */\n  this.wrap = 0;              /* bit 0 true for zlib, bit 1 true for gzip */\n  this.havedict = false;      /* true if dictionary provided */\n  this.flags = 0;             /* gzip header method and flags (0 if zlib) */\n  this.dmax = 0;              /* zlib header max distance (INFLATE_STRICT) */\n  this.check = 0;             /* protected copy of check value */\n  this.total = 0;             /* protected copy of output count */\n  // TODO: may be {}\n  this.head = null;           /* where to save gzip header information */\n\n  /* sliding window */\n  this.wbits = 0;             /* log base 2 of requested window size */\n  this.wsize = 0;             /* window size or zero if not using window */\n  this.whave = 0;             /* valid bytes in the window */\n  this.wnext = 0;             /* window write index */\n  this.window = null;         /* allocated sliding window, if needed */\n\n  /* bit accumulator */\n  this.hold = 0;              /* input bit accumulator */\n  this.bits = 0;              /* number of bits in \"in\" */\n\n  /* for string and stored block copying */\n  this.length = 0;            /* literal or length of data to copy */\n  this.offset = 0;            /* distance back to copy string from */\n\n  /* for table and code decoding */\n  this.extra = 0;             /* extra bits needed */\n\n  /* fixed and dynamic code tables */\n  this.lencode = null;          /* starting table for length/literal codes */\n  this.distcode = null;         /* starting table for distance codes */\n  this.lenbits = 0;           /* index bits for lencode */\n  this.distbits = 0;          /* index bits for distcode */\n\n  /* dynamic table building */\n  this.ncode = 0;             /* number of code length code lengths */\n  this.nlen = 0;              /* number of length code lengths */\n  this.ndist = 0;             /* number of distance code lengths */\n  this.have = 0;              /* number of code lengths in lens[] */\n  this.next = null;              /* next available space in codes[] */\n\n  this.lens = new Uint16Array(320); /* temporary storage for code lengths */\n  this.work = new Uint16Array(288); /* work area for code table building */\n\n  /*\n   because we don't have pointers in js, we use lencode and distcode directly\n   as buffers so we don't need codes\n  */\n  //this.codes = new Int32Array(ENOUGH);       /* space for code tables */\n  this.lendyn = null;              /* dynamic table for length/literal codes (JS specific) */\n  this.distdyn = null;             /* dynamic table for distance codes (JS specific) */\n  this.sane = 0;                   /* if false, allow invalid distance too far */\n  this.back = 0;                   /* bits back of last unprocessed length/lit */\n  this.was = 0;                    /* initial length of match */\n}\n\n\nconst inflateResetKeep = (strm) => {\n\n  if (!strm || !strm.state) { return Z_STREAM_ERROR$1; }\n  const state = strm.state;\n  strm.total_in = strm.total_out = state.total = 0;\n  strm.msg = ''; /*Z_NULL*/\n  if (state.wrap) {       /* to support ill-conceived Java test suite */\n    strm.adler = state.wrap & 1;\n  }\n  state.mode = HEAD;\n  state.last = 0;\n  state.havedict = 0;\n  state.dmax = 32768;\n  state.head = null/*Z_NULL*/;\n  state.hold = 0;\n  state.bits = 0;\n  //state.lencode = state.distcode = state.next = state.codes;\n  state.lencode = state.lendyn = new Int32Array(ENOUGH_LENS);\n  state.distcode = state.distdyn = new Int32Array(ENOUGH_DISTS);\n\n  state.sane = 1;\n  state.back = -1;\n  //Tracev((stderr, \"inflate: reset\\n\"));\n  return Z_OK$1;\n};\n\n\nconst inflateReset = (strm) => {\n\n  if (!strm || !strm.state) { return Z_STREAM_ERROR$1; }\n  const state = strm.state;\n  state.wsize = 0;\n  state.whave = 0;\n  state.wnext = 0;\n  return inflateResetKeep(strm);\n\n};\n\n\nconst inflateReset2 = (strm, windowBits) => {\n  let wrap;\n\n  /* get the state */\n  if (!strm || !strm.state) { return Z_STREAM_ERROR$1; }\n  const state = strm.state;\n\n  /* extract wrap request from windowBits parameter */\n  if (windowBits < 0) {\n    wrap = 0;\n    windowBits = -windowBits;\n  }\n  else {\n    wrap = (windowBits >> 4) + 1;\n    if (windowBits < 48) {\n      windowBits &= 15;\n    }\n  }\n\n  /* set number of window bits, free window if different */\n  if (windowBits && (windowBits < 8 || windowBits > 15)) {\n    return Z_STREAM_ERROR$1;\n  }\n  if (state.window !== null && state.wbits !== windowBits) {\n    state.window = null;\n  }\n\n  /* update state and reset the rest of it */\n  state.wrap = wrap;\n  state.wbits = windowBits;\n  return inflateReset(strm);\n};\n\n\nconst inflateInit2 = (strm, windowBits) => {\n\n  if (!strm) { return Z_STREAM_ERROR$1; }\n  //strm.msg = Z_NULL;                 /* in case we return an error */\n\n  const state = new InflateState();\n\n  //if (state === Z_NULL) return Z_MEM_ERROR;\n  //Tracev((stderr, \"inflate: allocated\\n\"));\n  strm.state = state;\n  state.window = null/*Z_NULL*/;\n  const ret = inflateReset2(strm, windowBits);\n  if (ret !== Z_OK$1) {\n    strm.state = null/*Z_NULL*/;\n  }\n  return ret;\n};\n\n\nconst inflateInit = (strm) => {\n\n  return inflateInit2(strm, DEF_WBITS);\n};\n\n\n/*\n Return state with length and distance decoding tables and index sizes set to\n fixed code decoding.  Normally this returns fixed tables from inffixed.h.\n If BUILDFIXED is defined, then instead this routine builds the tables the\n first time it's called, and returns those tables the first time and\n thereafter.  This reduces the size of the code by about 2K bytes, in\n exchange for a little execution time.  However, BUILDFIXED should not be\n used for threaded applications, since the rewriting of the tables and virgin\n may not be thread-safe.\n */\nlet virgin = true;\n\nlet lenfix, distfix; // We have no pointers in JS, so keep tables separate\n\n\nconst fixedtables = (state) => {\n\n  /* build fixed huffman tables if first call (may not be thread safe) */\n  if (virgin) {\n    lenfix = new Int32Array(512);\n    distfix = new Int32Array(32);\n\n    /* literal/length table */\n    let sym = 0;\n    while (sym < 144) { state.lens[sym++] = 8; }\n    while (sym < 256) { state.lens[sym++] = 9; }\n    while (sym < 280) { state.lens[sym++] = 7; }\n    while (sym < 288) { state.lens[sym++] = 8; }\n\n    inftrees(LENS,  state.lens, 0, 288, lenfix,   0, state.work, { bits: 9 });\n\n    /* distance table */\n    sym = 0;\n    while (sym < 32) { state.lens[sym++] = 5; }\n\n    inftrees(DISTS, state.lens, 0, 32,   distfix, 0, state.work, { bits: 5 });\n\n    /* do this just once */\n    virgin = false;\n  }\n\n  state.lencode = lenfix;\n  state.lenbits = 9;\n  state.distcode = distfix;\n  state.distbits = 5;\n};\n\n\n/*\n Update the window with the last wsize (normally 32K) bytes written before\n returning.  If window does not exist yet, create it.  This is only called\n when a window is already in use, or when output has been written during this\n inflate call, but the end of the deflate stream has not been reached yet.\n It is also called to create a window for dictionary data when a dictionary\n is loaded.\n\n Providing output buffers larger than 32K to inflate() should provide a speed\n advantage, since only the last 32K of output is copied to the sliding window\n upon return from inflate(), and since all distances after the first 32K of\n output will fall in the output data, making match copies simpler and faster.\n The advantage may be dependent on the size of the processor's data caches.\n */\nconst updatewindow = (strm, src, end, copy) => {\n\n  let dist;\n  const state = strm.state;\n\n  /* if it hasn't been done already, allocate space for the window */\n  if (state.window === null) {\n    state.wsize = 1 << state.wbits;\n    state.wnext = 0;\n    state.whave = 0;\n\n    state.window = new Uint8Array(state.wsize);\n  }\n\n  /* copy state->wsize or less output bytes into the circular window */\n  if (copy >= state.wsize) {\n    state.window.set(src.subarray(end - state.wsize, end), 0);\n    state.wnext = 0;\n    state.whave = state.wsize;\n  }\n  else {\n    dist = state.wsize - state.wnext;\n    if (dist > copy) {\n      dist = copy;\n    }\n    //zmemcpy(state->window + state->wnext, end - copy, dist);\n    state.window.set(src.subarray(end - copy, end - copy + dist), state.wnext);\n    copy -= dist;\n    if (copy) {\n      //zmemcpy(state->window, end - copy, copy);\n      state.window.set(src.subarray(end - copy, end), 0);\n      state.wnext = copy;\n      state.whave = state.wsize;\n    }\n    else {\n      state.wnext += dist;\n      if (state.wnext === state.wsize) { state.wnext = 0; }\n      if (state.whave < state.wsize) { state.whave += dist; }\n    }\n  }\n  return 0;\n};\n\n\nconst inflate$2 = (strm, flush) => {\n\n  let state;\n  let input, output;          // input/output buffers\n  let next;                   /* next input INDEX */\n  let put;                    /* next output INDEX */\n  let have, left;             /* available input and output */\n  let hold;                   /* bit buffer */\n  let bits;                   /* bits in bit buffer */\n  let _in, _out;              /* save starting available input and output */\n  let copy;                   /* number of stored or match bytes to copy */\n  let from;                   /* where to copy match bytes from */\n  let from_source;\n  let here = 0;               /* current decoding table entry */\n  let here_bits, here_op, here_val; // paked \"here\" denormalized (JS specific)\n  //let last;                   /* parent table entry */\n  let last_bits, last_op, last_val; // paked \"last\" denormalized (JS specific)\n  let len;                    /* length to copy for repeats, bits to drop */\n  let ret;                    /* return code */\n  const hbuf = new Uint8Array(4);    /* buffer for gzip header crc calculation */\n  let opts;\n\n  let n; // temporary variable for NEED_BITS\n\n  const order = /* permutation of code lengths */\n    new Uint8Array([ 16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15 ]);\n\n\n  if (!strm || !strm.state || !strm.output ||\n      (!strm.input && strm.avail_in !== 0)) {\n    return Z_STREAM_ERROR$1;\n  }\n\n  state = strm.state;\n  if (state.mode === TYPE) { state.mode = TYPEDO; }    /* skip check */\n\n\n  //--- LOAD() ---\n  put = strm.next_out;\n  output = strm.output;\n  left = strm.avail_out;\n  next = strm.next_in;\n  input = strm.input;\n  have = strm.avail_in;\n  hold = state.hold;\n  bits = state.bits;\n  //---\n\n  _in = have;\n  _out = left;\n  ret = Z_OK$1;\n\n  inf_leave: // goto emulation\n  for (;;) {\n    switch (state.mode) {\n      case HEAD:\n        if (state.wrap === 0) {\n          state.mode = TYPEDO;\n          break;\n        }\n        //=== NEEDBITS(16);\n        while (bits < 16) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if ((state.wrap & 2) && hold === 0x8b1f) {  /* gzip header */\n          state.check = 0/*crc32(0L, Z_NULL, 0)*/;\n          //=== CRC2(state.check, hold);\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          state.check = crc32_1(state.check, hbuf, 2, 0);\n          //===//\n\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n          state.mode = FLAGS;\n          break;\n        }\n        state.flags = 0;           /* expect zlib header */\n        if (state.head) {\n          state.head.done = false;\n        }\n        if (!(state.wrap & 1) ||   /* check if zlib header allowed */\n          (((hold & 0xff)/*BITS(8)*/ << 8) + (hold >> 8)) % 31) {\n          strm.msg = 'incorrect header check';\n          state.mode = BAD;\n          break;\n        }\n        if ((hold & 0x0f)/*BITS(4)*/ !== Z_DEFLATED) {\n          strm.msg = 'unknown compression method';\n          state.mode = BAD;\n          break;\n        }\n        //--- DROPBITS(4) ---//\n        hold >>>= 4;\n        bits -= 4;\n        //---//\n        len = (hold & 0x0f)/*BITS(4)*/ + 8;\n        if (state.wbits === 0) {\n          state.wbits = len;\n        }\n        else if (len > state.wbits) {\n          strm.msg = 'invalid window size';\n          state.mode = BAD;\n          break;\n        }\n\n        // !!! pako patch. Force use `options.windowBits` if passed.\n        // Required to always use max window size by default.\n        state.dmax = 1 << state.wbits;\n        //state.dmax = 1 << len;\n\n        //Tracev((stderr, \"inflate:   zlib header ok\\n\"));\n        strm.adler = state.check = 1/*adler32(0L, Z_NULL, 0)*/;\n        state.mode = hold & 0x200 ? DICTID : TYPE;\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        break;\n      case FLAGS:\n        //=== NEEDBITS(16); */\n        while (bits < 16) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        state.flags = hold;\n        if ((state.flags & 0xff) !== Z_DEFLATED) {\n          strm.msg = 'unknown compression method';\n          state.mode = BAD;\n          break;\n        }\n        if (state.flags & 0xe000) {\n          strm.msg = 'unknown header flags set';\n          state.mode = BAD;\n          break;\n        }\n        if (state.head) {\n          state.head.text = ((hold >> 8) & 1);\n        }\n        if (state.flags & 0x0200) {\n          //=== CRC2(state.check, hold);\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          state.check = crc32_1(state.check, hbuf, 2, 0);\n          //===//\n        }\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = TIME;\n        /* falls through */\n      case TIME:\n        //=== NEEDBITS(32); */\n        while (bits < 32) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if (state.head) {\n          state.head.time = hold;\n        }\n        if (state.flags & 0x0200) {\n          //=== CRC4(state.check, hold)\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          hbuf[2] = (hold >>> 16) & 0xff;\n          hbuf[3] = (hold >>> 24) & 0xff;\n          state.check = crc32_1(state.check, hbuf, 4, 0);\n          //===\n        }\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = OS;\n        /* falls through */\n      case OS:\n        //=== NEEDBITS(16); */\n        while (bits < 16) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if (state.head) {\n          state.head.xflags = (hold & 0xff);\n          state.head.os = (hold >> 8);\n        }\n        if (state.flags & 0x0200) {\n          //=== CRC2(state.check, hold);\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          state.check = crc32_1(state.check, hbuf, 2, 0);\n          //===//\n        }\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = EXLEN;\n        /* falls through */\n      case EXLEN:\n        if (state.flags & 0x0400) {\n          //=== NEEDBITS(16); */\n          while (bits < 16) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.length = hold;\n          if (state.head) {\n            state.head.extra_len = hold;\n          }\n          if (state.flags & 0x0200) {\n            //=== CRC2(state.check, hold);\n            hbuf[0] = hold & 0xff;\n            hbuf[1] = (hold >>> 8) & 0xff;\n            state.check = crc32_1(state.check, hbuf, 2, 0);\n            //===//\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n        }\n        else if (state.head) {\n          state.head.extra = null/*Z_NULL*/;\n        }\n        state.mode = EXTRA;\n        /* falls through */\n      case EXTRA:\n        if (state.flags & 0x0400) {\n          copy = state.length;\n          if (copy > have) { copy = have; }\n          if (copy) {\n            if (state.head) {\n              len = state.head.extra_len - state.length;\n              if (!state.head.extra) {\n                // Use untyped array for more convenient processing later\n                state.head.extra = new Uint8Array(state.head.extra_len);\n              }\n              state.head.extra.set(\n                input.subarray(\n                  next,\n                  // extra field is limited to 65536 bytes\n                  // - no need for additional size check\n                  next + copy\n                ),\n                /*len + copy > state.head.extra_max - len ? state.head.extra_max : copy,*/\n                len\n              );\n              //zmemcpy(state.head.extra + len, next,\n              //        len + copy > state.head.extra_max ?\n              //        state.head.extra_max - len : copy);\n            }\n            if (state.flags & 0x0200) {\n              state.check = crc32_1(state.check, input, copy, next);\n            }\n            have -= copy;\n            next += copy;\n            state.length -= copy;\n          }\n          if (state.length) { break inf_leave; }\n        }\n        state.length = 0;\n        state.mode = NAME;\n        /* falls through */\n      case NAME:\n        if (state.flags & 0x0800) {\n          if (have === 0) { break inf_leave; }\n          copy = 0;\n          do {\n            // TODO: 2 or 1 bytes?\n            len = input[next + copy++];\n            /* use constant limit because in js we should not preallocate memory */\n            if (state.head && len &&\n                (state.length < 65536 /*state.head.name_max*/)) {\n              state.head.name += String.fromCharCode(len);\n            }\n          } while (len && copy < have);\n\n          if (state.flags & 0x0200) {\n            state.check = crc32_1(state.check, input, copy, next);\n          }\n          have -= copy;\n          next += copy;\n          if (len) { break inf_leave; }\n        }\n        else if (state.head) {\n          state.head.name = null;\n        }\n        state.length = 0;\n        state.mode = COMMENT;\n        /* falls through */\n      case COMMENT:\n        if (state.flags & 0x1000) {\n          if (have === 0) { break inf_leave; }\n          copy = 0;\n          do {\n            len = input[next + copy++];\n            /* use constant limit because in js we should not preallocate memory */\n            if (state.head && len &&\n                (state.length < 65536 /*state.head.comm_max*/)) {\n              state.head.comment += String.fromCharCode(len);\n            }\n          } while (len && copy < have);\n          if (state.flags & 0x0200) {\n            state.check = crc32_1(state.check, input, copy, next);\n          }\n          have -= copy;\n          next += copy;\n          if (len) { break inf_leave; }\n        }\n        else if (state.head) {\n          state.head.comment = null;\n        }\n        state.mode = HCRC;\n        /* falls through */\n      case HCRC:\n        if (state.flags & 0x0200) {\n          //=== NEEDBITS(16); */\n          while (bits < 16) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          if (hold !== (state.check & 0xffff)) {\n            strm.msg = 'header crc mismatch';\n            state.mode = BAD;\n            break;\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n        }\n        if (state.head) {\n          state.head.hcrc = ((state.flags >> 9) & 1);\n          state.head.done = true;\n        }\n        strm.adler = state.check = 0;\n        state.mode = TYPE;\n        break;\n      case DICTID:\n        //=== NEEDBITS(32); */\n        while (bits < 32) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        strm.adler = state.check = zswap32(hold);\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = DICT;\n        /* falls through */\n      case DICT:\n        if (state.havedict === 0) {\n          //--- RESTORE() ---\n          strm.next_out = put;\n          strm.avail_out = left;\n          strm.next_in = next;\n          strm.avail_in = have;\n          state.hold = hold;\n          state.bits = bits;\n          //---\n          return Z_NEED_DICT$1;\n        }\n        strm.adler = state.check = 1/*adler32(0L, Z_NULL, 0)*/;\n        state.mode = TYPE;\n        /* falls through */\n      case TYPE:\n        if (flush === Z_BLOCK || flush === Z_TREES) { break inf_leave; }\n        /* falls through */\n      case TYPEDO:\n        if (state.last) {\n          //--- BYTEBITS() ---//\n          hold >>>= bits & 7;\n          bits -= bits & 7;\n          //---//\n          state.mode = CHECK;\n          break;\n        }\n        //=== NEEDBITS(3); */\n        while (bits < 3) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        state.last = (hold & 0x01)/*BITS(1)*/;\n        //--- DROPBITS(1) ---//\n        hold >>>= 1;\n        bits -= 1;\n        //---//\n\n        switch ((hold & 0x03)/*BITS(2)*/) {\n          case 0:                             /* stored block */\n            //Tracev((stderr, \"inflate:     stored block%s\\n\",\n            //        state.last ? \" (last)\" : \"\"));\n            state.mode = STORED;\n            break;\n          case 1:                             /* fixed block */\n            fixedtables(state);\n            //Tracev((stderr, \"inflate:     fixed codes block%s\\n\",\n            //        state.last ? \" (last)\" : \"\"));\n            state.mode = LEN_;             /* decode codes */\n            if (flush === Z_TREES) {\n              //--- DROPBITS(2) ---//\n              hold >>>= 2;\n              bits -= 2;\n              //---//\n              break inf_leave;\n            }\n            break;\n          case 2:                             /* dynamic block */\n            //Tracev((stderr, \"inflate:     dynamic codes block%s\\n\",\n            //        state.last ? \" (last)\" : \"\"));\n            state.mode = TABLE;\n            break;\n          case 3:\n            strm.msg = 'invalid block type';\n            state.mode = BAD;\n        }\n        //--- DROPBITS(2) ---//\n        hold >>>= 2;\n        bits -= 2;\n        //---//\n        break;\n      case STORED:\n        //--- BYTEBITS() ---// /* go to byte boundary */\n        hold >>>= bits & 7;\n        bits -= bits & 7;\n        //---//\n        //=== NEEDBITS(32); */\n        while (bits < 32) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if ((hold & 0xffff) !== ((hold >>> 16) ^ 0xffff)) {\n          strm.msg = 'invalid stored block lengths';\n          state.mode = BAD;\n          break;\n        }\n        state.length = hold & 0xffff;\n        //Tracev((stderr, \"inflate:       stored length %u\\n\",\n        //        state.length));\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = COPY_;\n        if (flush === Z_TREES) { break inf_leave; }\n        /* falls through */\n      case COPY_:\n        state.mode = COPY;\n        /* falls through */\n      case COPY:\n        copy = state.length;\n        if (copy) {\n          if (copy > have) { copy = have; }\n          if (copy > left) { copy = left; }\n          if (copy === 0) { break inf_leave; }\n          //--- zmemcpy(put, next, copy); ---\n          output.set(input.subarray(next, next + copy), put);\n          //---//\n          have -= copy;\n          next += copy;\n          left -= copy;\n          put += copy;\n          state.length -= copy;\n          break;\n        }\n        //Tracev((stderr, \"inflate:       stored end\\n\"));\n        state.mode = TYPE;\n        break;\n      case TABLE:\n        //=== NEEDBITS(14); */\n        while (bits < 14) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        state.nlen = (hold & 0x1f)/*BITS(5)*/ + 257;\n        //--- DROPBITS(5) ---//\n        hold >>>= 5;\n        bits -= 5;\n        //---//\n        state.ndist = (hold & 0x1f)/*BITS(5)*/ + 1;\n        //--- DROPBITS(5) ---//\n        hold >>>= 5;\n        bits -= 5;\n        //---//\n        state.ncode = (hold & 0x0f)/*BITS(4)*/ + 4;\n        //--- DROPBITS(4) ---//\n        hold >>>= 4;\n        bits -= 4;\n        //---//\n//#ifndef PKZIP_BUG_WORKAROUND\n        if (state.nlen > 286 || state.ndist > 30) {\n          strm.msg = 'too many length or distance symbols';\n          state.mode = BAD;\n          break;\n        }\n//#endif\n        //Tracev((stderr, \"inflate:       table sizes ok\\n\"));\n        state.have = 0;\n        state.mode = LENLENS;\n        /* falls through */\n      case LENLENS:\n        while (state.have < state.ncode) {\n          //=== NEEDBITS(3);\n          while (bits < 3) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.lens[order[state.have++]] = (hold & 0x07);//BITS(3);\n          //--- DROPBITS(3) ---//\n          hold >>>= 3;\n          bits -= 3;\n          //---//\n        }\n        while (state.have < 19) {\n          state.lens[order[state.have++]] = 0;\n        }\n        // We have separate tables & no pointers. 2 commented lines below not needed.\n        //state.next = state.codes;\n        //state.lencode = state.next;\n        // Switch to use dynamic table\n        state.lencode = state.lendyn;\n        state.lenbits = 7;\n\n        opts = { bits: state.lenbits };\n        ret = inftrees(CODES, state.lens, 0, 19, state.lencode, 0, state.work, opts);\n        state.lenbits = opts.bits;\n\n        if (ret) {\n          strm.msg = 'invalid code lengths set';\n          state.mode = BAD;\n          break;\n        }\n        //Tracev((stderr, \"inflate:       code lengths ok\\n\"));\n        state.have = 0;\n        state.mode = CODELENS;\n        /* falls through */\n      case CODELENS:\n        while (state.have < state.nlen + state.ndist) {\n          for (;;) {\n            here = state.lencode[hold & ((1 << state.lenbits) - 1)];/*BITS(state.lenbits)*/\n            here_bits = here >>> 24;\n            here_op = (here >>> 16) & 0xff;\n            here_val = here & 0xffff;\n\n            if ((here_bits) <= bits) { break; }\n            //--- PULLBYTE() ---//\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n            //---//\n          }\n          if (here_val < 16) {\n            //--- DROPBITS(here.bits) ---//\n            hold >>>= here_bits;\n            bits -= here_bits;\n            //---//\n            state.lens[state.have++] = here_val;\n          }\n          else {\n            if (here_val === 16) {\n              //=== NEEDBITS(here.bits + 2);\n              n = here_bits + 2;\n              while (bits < n) {\n                if (have === 0) { break inf_leave; }\n                have--;\n                hold += input[next++] << bits;\n                bits += 8;\n              }\n              //===//\n              //--- DROPBITS(here.bits) ---//\n              hold >>>= here_bits;\n              bits -= here_bits;\n              //---//\n              if (state.have === 0) {\n                strm.msg = 'invalid bit length repeat';\n                state.mode = BAD;\n                break;\n              }\n              len = state.lens[state.have - 1];\n              copy = 3 + (hold & 0x03);//BITS(2);\n              //--- DROPBITS(2) ---//\n              hold >>>= 2;\n              bits -= 2;\n              //---//\n            }\n            else if (here_val === 17) {\n              //=== NEEDBITS(here.bits + 3);\n              n = here_bits + 3;\n              while (bits < n) {\n                if (have === 0) { break inf_leave; }\n                have--;\n                hold += input[next++] << bits;\n                bits += 8;\n              }\n              //===//\n              //--- DROPBITS(here.bits) ---//\n              hold >>>= here_bits;\n              bits -= here_bits;\n              //---//\n              len = 0;\n              copy = 3 + (hold & 0x07);//BITS(3);\n              //--- DROPBITS(3) ---//\n              hold >>>= 3;\n              bits -= 3;\n              //---//\n            }\n            else {\n              //=== NEEDBITS(here.bits + 7);\n              n = here_bits + 7;\n              while (bits < n) {\n                if (have === 0) { break inf_leave; }\n                have--;\n                hold += input[next++] << bits;\n                bits += 8;\n              }\n              //===//\n              //--- DROPBITS(here.bits) ---//\n              hold >>>= here_bits;\n              bits -= here_bits;\n              //---//\n              len = 0;\n              copy = 11 + (hold & 0x7f);//BITS(7);\n              //--- DROPBITS(7) ---//\n              hold >>>= 7;\n              bits -= 7;\n              //---//\n            }\n            if (state.have + copy > state.nlen + state.ndist) {\n              strm.msg = 'invalid bit length repeat';\n              state.mode = BAD;\n              break;\n            }\n            while (copy--) {\n              state.lens[state.have++] = len;\n            }\n          }\n        }\n\n        /* handle error breaks in while */\n        if (state.mode === BAD) { break; }\n\n        /* check for end-of-block code (better have one) */\n        if (state.lens[256] === 0) {\n          strm.msg = 'invalid code -- missing end-of-block';\n          state.mode = BAD;\n          break;\n        }\n\n        /* build code tables -- note: do not change the lenbits or distbits\n           values here (9 and 6) without reading the comments in inftrees.h\n           concerning the ENOUGH constants, which depend on those values */\n        state.lenbits = 9;\n\n        opts = { bits: state.lenbits };\n        ret = inftrees(LENS, state.lens, 0, state.nlen, state.lencode, 0, state.work, opts);\n        // We have separate tables & no pointers. 2 commented lines below not needed.\n        // state.next_index = opts.table_index;\n        state.lenbits = opts.bits;\n        // state.lencode = state.next;\n\n        if (ret) {\n          strm.msg = 'invalid literal/lengths set';\n          state.mode = BAD;\n          break;\n        }\n\n        state.distbits = 6;\n        //state.distcode.copy(state.codes);\n        // Switch to use dynamic table\n        state.distcode = state.distdyn;\n        opts = { bits: state.distbits };\n        ret = inftrees(DISTS, state.lens, state.nlen, state.ndist, state.distcode, 0, state.work, opts);\n        // We have separate tables & no pointers. 2 commented lines below not needed.\n        // state.next_index = opts.table_index;\n        state.distbits = opts.bits;\n        // state.distcode = state.next;\n\n        if (ret) {\n          strm.msg = 'invalid distances set';\n          state.mode = BAD;\n          break;\n        }\n        //Tracev((stderr, 'inflate:       codes ok\\n'));\n        state.mode = LEN_;\n        if (flush === Z_TREES) { break inf_leave; }\n        /* falls through */\n      case LEN_:\n        state.mode = LEN;\n        /* falls through */\n      case LEN:\n        if (have >= 6 && left >= 258) {\n          //--- RESTORE() ---\n          strm.next_out = put;\n          strm.avail_out = left;\n          strm.next_in = next;\n          strm.avail_in = have;\n          state.hold = hold;\n          state.bits = bits;\n          //---\n          inffast(strm, _out);\n          //--- LOAD() ---\n          put = strm.next_out;\n          output = strm.output;\n          left = strm.avail_out;\n          next = strm.next_in;\n          input = strm.input;\n          have = strm.avail_in;\n          hold = state.hold;\n          bits = state.bits;\n          //---\n\n          if (state.mode === TYPE) {\n            state.back = -1;\n          }\n          break;\n        }\n        state.back = 0;\n        for (;;) {\n          here = state.lencode[hold & ((1 << state.lenbits) - 1)];  /*BITS(state.lenbits)*/\n          here_bits = here >>> 24;\n          here_op = (here >>> 16) & 0xff;\n          here_val = here & 0xffff;\n\n          if (here_bits <= bits) { break; }\n          //--- PULLBYTE() ---//\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n          //---//\n        }\n        if (here_op && (here_op & 0xf0) === 0) {\n          last_bits = here_bits;\n          last_op = here_op;\n          last_val = here_val;\n          for (;;) {\n            here = state.lencode[last_val +\n                    ((hold & ((1 << (last_bits + last_op)) - 1))/*BITS(last.bits + last.op)*/ >> last_bits)];\n            here_bits = here >>> 24;\n            here_op = (here >>> 16) & 0xff;\n            here_val = here & 0xffff;\n\n            if ((last_bits + here_bits) <= bits) { break; }\n            //--- PULLBYTE() ---//\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n            //---//\n          }\n          //--- DROPBITS(last.bits) ---//\n          hold >>>= last_bits;\n          bits -= last_bits;\n          //---//\n          state.back += last_bits;\n        }\n        //--- DROPBITS(here.bits) ---//\n        hold >>>= here_bits;\n        bits -= here_bits;\n        //---//\n        state.back += here_bits;\n        state.length = here_val;\n        if (here_op === 0) {\n          //Tracevv((stderr, here.val >= 0x20 && here.val < 0x7f ?\n          //        \"inflate:         literal '%c'\\n\" :\n          //        \"inflate:         literal 0x%02x\\n\", here.val));\n          state.mode = LIT;\n          break;\n        }\n        if (here_op & 32) {\n          //Tracevv((stderr, \"inflate:         end of block\\n\"));\n          state.back = -1;\n          state.mode = TYPE;\n          break;\n        }\n        if (here_op & 64) {\n          strm.msg = 'invalid literal/length code';\n          state.mode = BAD;\n          break;\n        }\n        state.extra = here_op & 15;\n        state.mode = LENEXT;\n        /* falls through */\n      case LENEXT:\n        if (state.extra) {\n          //=== NEEDBITS(state.extra);\n          n = state.extra;\n          while (bits < n) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.length += hold & ((1 << state.extra) - 1)/*BITS(state.extra)*/;\n          //--- DROPBITS(state.extra) ---//\n          hold >>>= state.extra;\n          bits -= state.extra;\n          //---//\n          state.back += state.extra;\n        }\n        //Tracevv((stderr, \"inflate:         length %u\\n\", state.length));\n        state.was = state.length;\n        state.mode = DIST;\n        /* falls through */\n      case DIST:\n        for (;;) {\n          here = state.distcode[hold & ((1 << state.distbits) - 1)];/*BITS(state.distbits)*/\n          here_bits = here >>> 24;\n          here_op = (here >>> 16) & 0xff;\n          here_val = here & 0xffff;\n\n          if ((here_bits) <= bits) { break; }\n          //--- PULLBYTE() ---//\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n          //---//\n        }\n        if ((here_op & 0xf0) === 0) {\n          last_bits = here_bits;\n          last_op = here_op;\n          last_val = here_val;\n          for (;;) {\n            here = state.distcode[last_val +\n                    ((hold & ((1 << (last_bits + last_op)) - 1))/*BITS(last.bits + last.op)*/ >> last_bits)];\n            here_bits = here >>> 24;\n            here_op = (here >>> 16) & 0xff;\n            here_val = here & 0xffff;\n\n            if ((last_bits + here_bits) <= bits) { break; }\n            //--- PULLBYTE() ---//\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n            //---//\n          }\n          //--- DROPBITS(last.bits) ---//\n          hold >>>= last_bits;\n          bits -= last_bits;\n          //---//\n          state.back += last_bits;\n        }\n        //--- DROPBITS(here.bits) ---//\n        hold >>>= here_bits;\n        bits -= here_bits;\n        //---//\n        state.back += here_bits;\n        if (here_op & 64) {\n          strm.msg = 'invalid distance code';\n          state.mode = BAD;\n          break;\n        }\n        state.offset = here_val;\n        state.extra = (here_op) & 15;\n        state.mode = DISTEXT;\n        /* falls through */\n      case DISTEXT:\n        if (state.extra) {\n          //=== NEEDBITS(state.extra);\n          n = state.extra;\n          while (bits < n) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.offset += hold & ((1 << state.extra) - 1)/*BITS(state.extra)*/;\n          //--- DROPBITS(state.extra) ---//\n          hold >>>= state.extra;\n          bits -= state.extra;\n          //---//\n          state.back += state.extra;\n        }\n//#ifdef INFLATE_STRICT\n        if (state.offset > state.dmax) {\n          strm.msg = 'invalid distance too far back';\n          state.mode = BAD;\n          break;\n        }\n//#endif\n        //Tracevv((stderr, \"inflate:         distance %u\\n\", state.offset));\n        state.mode = MATCH;\n        /* falls through */\n      case MATCH:\n        if (left === 0) { break inf_leave; }\n        copy = _out - left;\n        if (state.offset > copy) {         /* copy from window */\n          copy = state.offset - copy;\n          if (copy > state.whave) {\n            if (state.sane) {\n              strm.msg = 'invalid distance too far back';\n              state.mode = BAD;\n              break;\n            }\n// (!) This block is disabled in zlib defaults,\n// don't enable it for binary compatibility\n//#ifdef INFLATE_ALLOW_INVALID_DISTANCE_TOOFAR_ARRR\n//          Trace((stderr, \"inflate.c too far\\n\"));\n//          copy -= state.whave;\n//          if (copy > state.length) { copy = state.length; }\n//          if (copy > left) { copy = left; }\n//          left -= copy;\n//          state.length -= copy;\n//          do {\n//            output[put++] = 0;\n//          } while (--copy);\n//          if (state.length === 0) { state.mode = LEN; }\n//          break;\n//#endif\n          }\n          if (copy > state.wnext) {\n            copy -= state.wnext;\n            from = state.wsize - copy;\n          }\n          else {\n            from = state.wnext - copy;\n          }\n          if (copy > state.length) { copy = state.length; }\n          from_source = state.window;\n        }\n        else {                              /* copy from output */\n          from_source = output;\n          from = put - state.offset;\n          copy = state.length;\n        }\n        if (copy > left) { copy = left; }\n        left -= copy;\n        state.length -= copy;\n        do {\n          output[put++] = from_source[from++];\n        } while (--copy);\n        if (state.length === 0) { state.mode = LEN; }\n        break;\n      case LIT:\n        if (left === 0) { break inf_leave; }\n        output[put++] = state.length;\n        left--;\n        state.mode = LEN;\n        break;\n      case CHECK:\n        if (state.wrap) {\n          //=== NEEDBITS(32);\n          while (bits < 32) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            // Use '|' instead of '+' to make sure that result is signed\n            hold |= input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          _out -= left;\n          strm.total_out += _out;\n          state.total += _out;\n          if (_out) {\n            strm.adler = state.check =\n                /*UPDATE(state.check, put - _out, _out);*/\n                (state.flags ? crc32_1(state.check, output, _out, put - _out) : adler32_1(state.check, output, _out, put - _out));\n\n          }\n          _out = left;\n          // NB: crc32 stored as signed 32-bit int, zswap32 returns signed too\n          if ((state.flags ? hold : zswap32(hold)) !== state.check) {\n            strm.msg = 'incorrect data check';\n            state.mode = BAD;\n            break;\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n          //Tracev((stderr, \"inflate:   check matches trailer\\n\"));\n        }\n        state.mode = LENGTH;\n        /* falls through */\n      case LENGTH:\n        if (state.wrap && state.flags) {\n          //=== NEEDBITS(32);\n          while (bits < 32) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          if (hold !== (state.total & 0xffffffff)) {\n            strm.msg = 'incorrect length check';\n            state.mode = BAD;\n            break;\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n          //Tracev((stderr, \"inflate:   length matches trailer\\n\"));\n        }\n        state.mode = DONE;\n        /* falls through */\n      case DONE:\n        ret = Z_STREAM_END$1;\n        break inf_leave;\n      case BAD:\n        ret = Z_DATA_ERROR$1;\n        break inf_leave;\n      case MEM:\n        return Z_MEM_ERROR$1;\n      case SYNC:\n        /* falls through */\n      default:\n        return Z_STREAM_ERROR$1;\n    }\n  }\n\n  // inf_leave <- here is real place for \"goto inf_leave\", emulated via \"break inf_leave\"\n\n  /*\n     Return from inflate(), updating the total counts and the check value.\n     If there was no progress during the inflate() call, return a buffer\n     error.  Call updatewindow() to create and/or update the window state.\n     Note: a memory error from inflate() is non-recoverable.\n   */\n\n  //--- RESTORE() ---\n  strm.next_out = put;\n  strm.avail_out = left;\n  strm.next_in = next;\n  strm.avail_in = have;\n  state.hold = hold;\n  state.bits = bits;\n  //---\n\n  if (state.wsize || (_out !== strm.avail_out && state.mode < BAD &&\n                      (state.mode < CHECK || flush !== Z_FINISH$1))) {\n    if (updatewindow(strm, strm.output, strm.next_out, _out - strm.avail_out)) ;\n  }\n  _in -= strm.avail_in;\n  _out -= strm.avail_out;\n  strm.total_in += _in;\n  strm.total_out += _out;\n  state.total += _out;\n  if (state.wrap && _out) {\n    strm.adler = state.check = /*UPDATE(state.check, strm.next_out - _out, _out);*/\n      (state.flags ? crc32_1(state.check, output, _out, strm.next_out - _out) : adler32_1(state.check, output, _out, strm.next_out - _out));\n  }\n  strm.data_type = state.bits + (state.last ? 64 : 0) +\n                    (state.mode === TYPE ? 128 : 0) +\n                    (state.mode === LEN_ || state.mode === COPY_ ? 256 : 0);\n  if (((_in === 0 && _out === 0) || flush === Z_FINISH$1) && ret === Z_OK$1) {\n    ret = Z_BUF_ERROR;\n  }\n  return ret;\n};\n\n\nconst inflateEnd = (strm) => {\n\n  if (!strm || !strm.state /*|| strm->zfree == (free_func)0*/) {\n    return Z_STREAM_ERROR$1;\n  }\n\n  let state = strm.state;\n  if (state.window) {\n    state.window = null;\n  }\n  strm.state = null;\n  return Z_OK$1;\n};\n\n\nconst inflateGetHeader = (strm, head) => {\n\n  /* check state */\n  if (!strm || !strm.state) { return Z_STREAM_ERROR$1; }\n  const state = strm.state;\n  if ((state.wrap & 2) === 0) { return Z_STREAM_ERROR$1; }\n\n  /* save header structure */\n  state.head = head;\n  head.done = false;\n  return Z_OK$1;\n};\n\n\nconst inflateSetDictionary = (strm, dictionary) => {\n  const dictLength = dictionary.length;\n\n  let state;\n  let dictid;\n  let ret;\n\n  /* check state */\n  if (!strm /* == Z_NULL */ || !strm.state /* == Z_NULL */) { return Z_STREAM_ERROR$1; }\n  state = strm.state;\n\n  if (state.wrap !== 0 && state.mode !== DICT) {\n    return Z_STREAM_ERROR$1;\n  }\n\n  /* check for correct dictionary identifier */\n  if (state.mode === DICT) {\n    dictid = 1; /* adler32(0, null, 0)*/\n    /* dictid = adler32(dictid, dictionary, dictLength); */\n    dictid = adler32_1(dictid, dictionary, dictLength, 0);\n    if (dictid !== state.check) {\n      return Z_DATA_ERROR$1;\n    }\n  }\n  /* copy dictionary to window using updatewindow(), which will amend the\n   existing dictionary if appropriate */\n  ret = updatewindow(strm, dictionary, dictLength, dictLength);\n  if (ret) {\n    state.mode = MEM;\n    return Z_MEM_ERROR$1;\n  }\n  state.havedict = 1;\n  // Tracev((stderr, \"inflate:   dictionary set\\n\"));\n  return Z_OK$1;\n};\n\n\nvar inflateReset_1 = inflateReset;\nvar inflateReset2_1 = inflateReset2;\nvar inflateResetKeep_1 = inflateResetKeep;\nvar inflateInit_1 = inflateInit;\nvar inflateInit2_1 = inflateInit2;\nvar inflate_2$1 = inflate$2;\nvar inflateEnd_1 = inflateEnd;\nvar inflateGetHeader_1 = inflateGetHeader;\nvar inflateSetDictionary_1 = inflateSetDictionary;\nvar inflateInfo = 'pako inflate (from Nodeca project)';\n\n/* Not implemented\nmodule.exports.inflateCopy = inflateCopy;\nmodule.exports.inflateGetDictionary = inflateGetDictionary;\nmodule.exports.inflateMark = inflateMark;\nmodule.exports.inflatePrime = inflatePrime;\nmodule.exports.inflateSync = inflateSync;\nmodule.exports.inflateSyncPoint = inflateSyncPoint;\nmodule.exports.inflateUndermine = inflateUndermine;\n*/\n\nvar inflate_1$2 = {\n\tinflateReset: inflateReset_1,\n\tinflateReset2: inflateReset2_1,\n\tinflateResetKeep: inflateResetKeep_1,\n\tinflateInit: inflateInit_1,\n\tinflateInit2: inflateInit2_1,\n\tinflate: inflate_2$1,\n\tinflateEnd: inflateEnd_1,\n\tinflateGetHeader: inflateGetHeader_1,\n\tinflateSetDictionary: inflateSetDictionary_1,\n\tinflateInfo: inflateInfo\n};\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nfunction GZheader() {\n  /* true if compressed data believed to be text */\n  this.text       = 0;\n  /* modification time */\n  this.time       = 0;\n  /* extra flags (not used when writing a gzip file) */\n  this.xflags     = 0;\n  /* operating system */\n  this.os         = 0;\n  /* pointer to extra field or Z_NULL if none */\n  this.extra      = null;\n  /* extra field length (valid if extra != Z_NULL) */\n  this.extra_len  = 0; // Actually, we don't need it in JS,\n                       // but leave for few code modifications\n\n  //\n  // Setup limits is not necessary because in js we should not preallocate memory\n  // for inflate use constant limit in 65536 bytes\n  //\n\n  /* space at extra (only when reading header) */\n  // this.extra_max  = 0;\n  /* pointer to zero-terminated file name or Z_NULL */\n  this.name       = '';\n  /* space at name (only when reading header) */\n  // this.name_max   = 0;\n  /* pointer to zero-terminated comment or Z_NULL */\n  this.comment    = '';\n  /* space at comment (only when reading header) */\n  // this.comm_max   = 0;\n  /* true if there was or will be a header crc */\n  this.hcrc       = 0;\n  /* true when done reading gzip header (not used when writing a gzip file) */\n  this.done       = false;\n}\n\nvar gzheader = GZheader;\n\nconst toString = Object.prototype.toString;\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\nconst {\n  Z_NO_FLUSH, Z_FINISH,\n  Z_OK, Z_STREAM_END, Z_NEED_DICT, Z_STREAM_ERROR, Z_DATA_ERROR, Z_MEM_ERROR\n} = constants$2;\n\n/* ===========================================================================*/\n\n\n/**\n * class Inflate\n *\n * Generic JS-style wrapper for zlib calls. If you don't need\n * streaming behaviour - use more simple functions: [[inflate]]\n * and [[inflateRaw]].\n **/\n\n/* internal\n * inflate.chunks -> Array\n *\n * Chunks of output data, if [[Inflate#onData]] not overridden.\n **/\n\n/**\n * Inflate.result -> Uint8Array|String\n *\n * Uncompressed result, generated by default [[Inflate#onData]]\n * and [[Inflate#onEnd]] handlers. Filled after you push last chunk\n * (call [[Inflate#push]] with `Z_FINISH` / `true` param).\n **/\n\n/**\n * Inflate.err -> Number\n *\n * Error code after inflate finished. 0 (Z_OK) on success.\n * Should be checked if broken data possible.\n **/\n\n/**\n * Inflate.msg -> String\n *\n * Error message, if [[Inflate.err]] != 0\n **/\n\n\n/**\n * new Inflate(options)\n * - options (Object): zlib inflate options.\n *\n * Creates new inflator instance with specified params. Throws exception\n * on bad params. Supported options:\n *\n * - `windowBits`\n * - `dictionary`\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information on these.\n *\n * Additional options, for internal needs:\n *\n * - `chunkSize` - size of generated data chunks (16K by default)\n * - `raw` (Boolean) - do raw inflate\n * - `to` (String) - if equal to 'string', then result will be converted\n *   from utf8 to utf16 (javascript) string. When string output requested,\n *   chunk length can differ from `chunkSize`, depending on content.\n *\n * By default, when no options set, autodetect deflate/gzip data format via\n * wrapper header.\n *\n * ##### Example:\n *\n * ```javascript\n * const pako = require('pako')\n * const chunk1 = new Uint8Array([1,2,3,4,5,6,7,8,9])\n * const chunk2 = new Uint8Array([10,11,12,13,14,15,16,17,18,19]);\n *\n * const inflate = new pako.Inflate({ level: 3});\n *\n * inflate.push(chunk1, false);\n * inflate.push(chunk2, true);  // true -> last chunk\n *\n * if (inflate.err) { throw new Error(inflate.err); }\n *\n * console.log(inflate.result);\n * ```\n **/\nfunction Inflate$1(options) {\n  this.options = common.assign({\n    chunkSize: 1024 * 64,\n    windowBits: 15,\n    to: ''\n  }, options || {});\n\n  const opt = this.options;\n\n  // Force window size for `raw` data, if not set directly,\n  // because we have no header for autodetect.\n  if (opt.raw && (opt.windowBits >= 0) && (opt.windowBits < 16)) {\n    opt.windowBits = -opt.windowBits;\n    if (opt.windowBits === 0) { opt.windowBits = -15; }\n  }\n\n  // If `windowBits` not defined (and mode not raw) - set autodetect flag for gzip/deflate\n  if ((opt.windowBits >= 0) && (opt.windowBits < 16) &&\n      !(options && options.windowBits)) {\n    opt.windowBits += 32;\n  }\n\n  // Gzip header has no info about windows size, we can do autodetect only\n  // for deflate. So, if window size not set, force it to max when gzip possible\n  if ((opt.windowBits > 15) && (opt.windowBits < 48)) {\n    // bit 3 (16) -> gzipped data\n    // bit 4 (32) -> autodetect gzip/deflate\n    if ((opt.windowBits & 15) === 0) {\n      opt.windowBits |= 15;\n    }\n  }\n\n  this.err    = 0;      // error code, if happens (0 = Z_OK)\n  this.msg    = '';     // error message\n  this.ended  = false;  // used to avoid multiple onEnd() calls\n  this.chunks = [];     // chunks of compressed data\n\n  this.strm   = new zstream();\n  this.strm.avail_out = 0;\n\n  let status  = inflate_1$2.inflateInit2(\n    this.strm,\n    opt.windowBits\n  );\n\n  if (status !== Z_OK) {\n    throw new Error(messages[status]);\n  }\n\n  this.header = new gzheader();\n\n  inflate_1$2.inflateGetHeader(this.strm, this.header);\n\n  // Setup dictionary\n  if (opt.dictionary) {\n    // Convert data if needed\n    if (typeof opt.dictionary === 'string') {\n      opt.dictionary = strings.string2buf(opt.dictionary);\n    } else if (toString.call(opt.dictionary) === '[object ArrayBuffer]') {\n      opt.dictionary = new Uint8Array(opt.dictionary);\n    }\n    if (opt.raw) { //In raw mode we need to set the dictionary early\n      status = inflate_1$2.inflateSetDictionary(this.strm, opt.dictionary);\n      if (status !== Z_OK) {\n        throw new Error(messages[status]);\n      }\n    }\n  }\n}\n\n/**\n * Inflate#push(data[, flush_mode]) -> Boolean\n * - data (Uint8Array|ArrayBuffer): input data\n * - flush_mode (Number|Boolean): 0..6 for corresponding Z_NO_FLUSH..Z_TREE\n *   flush modes. See constants. Skipped or `false` means Z_NO_FLUSH,\n *   `true` means Z_FINISH.\n *\n * Sends input data to inflate pipe, generating [[Inflate#onData]] calls with\n * new output chunks. Returns `true` on success. If end of stream detected,\n * [[Inflate#onEnd]] will be called.\n *\n * `flush_mode` is not needed for normal operation, because end of stream\n * detected automatically. You may try to use it for advanced things, but\n * this functionality was not tested.\n *\n * On fail call [[Inflate#onEnd]] with error code and return false.\n *\n * ##### Example\n *\n * ```javascript\n * push(chunk, false); // push one of data chunks\n * ...\n * push(chunk, true);  // push last chunk\n * ```\n **/\nInflate$1.prototype.push = function (data, flush_mode) {\n  const strm = this.strm;\n  const chunkSize = this.options.chunkSize;\n  const dictionary = this.options.dictionary;\n  let status, _flush_mode, last_avail_out;\n\n  if (this.ended) return false;\n\n  if (flush_mode === ~~flush_mode) _flush_mode = flush_mode;\n  else _flush_mode = flush_mode === true ? Z_FINISH : Z_NO_FLUSH;\n\n  // Convert data if needed\n  if (toString.call(data) === '[object ArrayBuffer]') {\n    strm.input = new Uint8Array(data);\n  } else {\n    strm.input = data;\n  }\n\n  strm.next_in = 0;\n  strm.avail_in = strm.input.length;\n\n  for (;;) {\n    if (strm.avail_out === 0) {\n      strm.output = new Uint8Array(chunkSize);\n      strm.next_out = 0;\n      strm.avail_out = chunkSize;\n    }\n\n    status = inflate_1$2.inflate(strm, _flush_mode);\n\n    if (status === Z_NEED_DICT && dictionary) {\n      status = inflate_1$2.inflateSetDictionary(strm, dictionary);\n\n      if (status === Z_OK) {\n        status = inflate_1$2.inflate(strm, _flush_mode);\n      } else if (status === Z_DATA_ERROR) {\n        // Replace code with more verbose\n        status = Z_NEED_DICT;\n      }\n    }\n\n    // Skip snyc markers if more data follows and not raw mode\n    while (strm.avail_in > 0 &&\n           status === Z_STREAM_END &&\n           strm.state.wrap > 0 &&\n           data[strm.next_in] !== 0)\n    {\n      inflate_1$2.inflateReset(strm);\n      status = inflate_1$2.inflate(strm, _flush_mode);\n    }\n\n    switch (status) {\n      case Z_STREAM_ERROR:\n      case Z_DATA_ERROR:\n      case Z_NEED_DICT:\n      case Z_MEM_ERROR:\n        this.onEnd(status);\n        this.ended = true;\n        return false;\n    }\n\n    // Remember real `avail_out` value, because we may patch out buffer content\n    // to align utf8 strings boundaries.\n    last_avail_out = strm.avail_out;\n\n    if (strm.next_out) {\n      if (strm.avail_out === 0 || status === Z_STREAM_END) {\n\n        if (this.options.to === 'string') {\n\n          let next_out_utf8 = strings.utf8border(strm.output, strm.next_out);\n\n          let tail = strm.next_out - next_out_utf8;\n          let utf8str = strings.buf2string(strm.output, next_out_utf8);\n\n          // move tail & realign counters\n          strm.next_out = tail;\n          strm.avail_out = chunkSize - tail;\n          if (tail) strm.output.set(strm.output.subarray(next_out_utf8, next_out_utf8 + tail), 0);\n\n          this.onData(utf8str);\n\n        } else {\n          this.onData(strm.output.length === strm.next_out ? strm.output : strm.output.subarray(0, strm.next_out));\n        }\n      }\n    }\n\n    // Must repeat iteration if out buffer is full\n    if (status === Z_OK && last_avail_out === 0) continue;\n\n    // Finalize if end of stream reached.\n    if (status === Z_STREAM_END) {\n      status = inflate_1$2.inflateEnd(this.strm);\n      this.onEnd(status);\n      this.ended = true;\n      return true;\n    }\n\n    if (strm.avail_in === 0) break;\n  }\n\n  return true;\n};\n\n\n/**\n * Inflate#onData(chunk) -> Void\n * - chunk (Uint8Array|String): output data. When string output requested,\n *   each chunk will be string.\n *\n * By default, stores data blocks in `chunks[]` property and glue\n * those in `onEnd`. Override this handler, if you need another behaviour.\n **/\nInflate$1.prototype.onData = function (chunk) {\n  this.chunks.push(chunk);\n};\n\n\n/**\n * Inflate#onEnd(status) -> Void\n * - status (Number): inflate status. 0 (Z_OK) on success,\n *   other if not.\n *\n * Called either after you tell inflate that the input stream is\n * complete (Z_FINISH). By default - join collected chunks,\n * free memory and fill `results` / `err` properties.\n **/\nInflate$1.prototype.onEnd = function (status) {\n  // On success - join\n  if (status === Z_OK) {\n    if (this.options.to === 'string') {\n      this.result = this.chunks.join('');\n    } else {\n      this.result = common.flattenChunks(this.chunks);\n    }\n  }\n  this.chunks = [];\n  this.err = status;\n  this.msg = this.strm.msg;\n};\n\n\n/**\n * inflate(data[, options]) -> Uint8Array|String\n * - data (Uint8Array): input data to decompress.\n * - options (Object): zlib inflate options.\n *\n * Decompress `data` with inflate/ungzip and `options`. Autodetect\n * format via wrapper header by default. That's why we don't provide\n * separate `ungzip` method.\n *\n * Supported options are:\n *\n * - windowBits\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information.\n *\n * Sugar (options):\n *\n * - `raw` (Boolean) - say that we work with raw stream, if you don't wish to specify\n *   negative windowBits implicitly.\n * - `to` (String) - if equal to 'string', then result will be converted\n *   from utf8 to utf16 (javascript) string. When string output requested,\n *   chunk length can differ from `chunkSize`, depending on content.\n *\n *\n * ##### Example:\n *\n * ```javascript\n * const pako = require('pako');\n * const input = pako.deflate(new Uint8Array([1,2,3,4,5,6,7,8,9]));\n * let output;\n *\n * try {\n *   output = pako.inflate(input);\n * } catch (err) {\n *   console.log(err);\n * }\n * ```\n **/\nfunction inflate$1(input, options) {\n  const inflator = new Inflate$1(options);\n\n  inflator.push(input);\n\n  // That will never happens, if you don't cheat with options :)\n  if (inflator.err) throw inflator.msg || messages[inflator.err];\n\n  return inflator.result;\n}\n\n\n/**\n * inflateRaw(data[, options]) -> Uint8Array|String\n * - data (Uint8Array): input data to decompress.\n * - options (Object): zlib inflate options.\n *\n * The same as [[inflate]], but creates raw data, without wrapper\n * (header and adler32 crc).\n **/\nfunction inflateRaw$1(input, options) {\n  options = options || {};\n  options.raw = true;\n  return inflate$1(input, options);\n}\n\n\n/**\n * ungzip(data[, options]) -> Uint8Array|String\n * - data (Uint8Array): input data to decompress.\n * - options (Object): zlib inflate options.\n *\n * Just shortcut to [[inflate]], because it autodetects format\n * by header.content. Done for convenience.\n **/\n\n\nvar Inflate_1$1 = Inflate$1;\nvar inflate_2 = inflate$1;\nvar inflateRaw_1$1 = inflateRaw$1;\nvar ungzip$1 = inflate$1;\nvar constants = constants$2;\n\nvar inflate_1$1 = {\n\tInflate: Inflate_1$1,\n\tinflate: inflate_2,\n\tinflateRaw: inflateRaw_1$1,\n\tungzip: ungzip$1,\n\tconstants: constants\n};\n\nconst { Deflate, deflate, deflateRaw, gzip } = deflate_1$1;\n\nconst { Inflate, inflate, inflateRaw, ungzip } = inflate_1$1;\n\n\n\nvar Deflate_1 = Deflate;\nvar deflate_1 = deflate;\nvar deflateRaw_1 = deflateRaw;\nvar gzip_1 = gzip;\nvar Inflate_1 = Inflate;\nvar inflate_1 = inflate;\nvar inflateRaw_1 = inflateRaw;\nvar ungzip_1 = ungzip;\nvar constants_1 = constants$2;\n\nvar pako = {\n\tDeflate: Deflate_1,\n\tdeflate: deflate_1,\n\tdeflateRaw: deflateRaw_1,\n\tgzip: gzip_1,\n\tInflate: Inflate_1,\n\tinflate: inflate_1,\n\tinflateRaw: inflateRaw_1,\n\tungzip: ungzip_1,\n\tconstants: constants_1\n};\n\nexport { Deflate_1 as Deflate, Inflate_1 as Inflate, constants_1 as constants, pako as default, deflate_1 as deflate, deflateRaw_1 as deflateRaw, gzip_1 as gzip, inflate_1 as inflate, inflateRaw_1 as inflateRaw, ungzip_1 as ungzip };\n","import t from\"pako\";import{vec3 as e,mat4 as s,glMatrix as i}from\"gl-matrix\";var n;!function(t){t.UP=\"up\",t.DOWN=\"down\",t.NORTH=\"north\",t.EAST=\"east\",t.SOUTH=\"south\",t.WEST=\"west\"}(n||(n={}));const r={[n.UP]:[0,1,0],[n.DOWN]:[0,-1,0],[n.NORTH]:[0,0,-1],[n.EAST]:[1,0,0],[n.SOUTH]:[0,0,1],[n.WEST]:[-1,0,0]};var o;!function(t){t.ALL=[t.UP,t.DOWN,t.NORTH,t.EAST,t.SOUTH,t.WEST],t.normal=function(t){return r[t]}}(n||(n={})),function(t){t.create=function(t,e,s){return[t,e,s]},t.offset=function(t,e,s,i){return[t[0]+e,t[1]+s,t[2]+i]},t.towards=function(e,s){return t.offset(e,...n.normal(s))}}(o||(o={}));const a={end:0,byte:1,short:2,int:3,long:4,float:5,double:6,byteArray:7,string:8,list:9,compound:10,intArray:11,longArray:12},l=[\"end\",\"byte\",\"short\",\"int\",\"long\",\"float\",\"double\",\"byteArray\",\"string\",\"list\",\"compound\",\"intArray\",\"longArray\"];class h{constructor(t,e=!1){this.byte=this.readNum.bind(this,\"getInt8\",1),this.short=this.readNum.bind(this,\"getInt16\",2),this.int=this.readNum.bind(this,\"getInt32\",4),this.float=this.readNum.bind(this,\"getFloat32\",4),this.double=this.readNum.bind(this,\"getFloat64\",8),this.offset=0,this.littleEndian=e,this.arrayView=t,this.dataView=new DataView(t.buffer,t.byteOffset)}end(){return null}readNum(t,e){const s=this.dataView[t](this.offset,this.littleEndian);return this.offset+=e,s}long(){return[this.int(),this.int()]}byteArray(){const t=this.int(),e=[];for(let s=0;s<t;s++)e.push(this.byte());return e}intArray(){const t=this.int(),e=[];for(let s=0;s<t;s++)e.push(this.int());return e}longArray(){const t=this.int(),e=[];for(let s=0;s<t;s++)e.push(this.long());return e}string(){const t=this.short(),e=this.arrayView.slice(this.offset,this.offset+t);return this.offset+=t,function(t){var e,s=[];for(e=0;e<t.length;e++)0==(128&t[e])?s.push(127&t[e]):e+1<t.length&&192==(224&t[e])&&128==(192&t[e+1])?s.push((31&t[e])<<6|63&t[e+1]):e+2<t.length&&224==(240&t[e])&&128==(192&t[e+1])&&128==(192&t[e+2])?s.push((15&t[e])<<12|(63&t[e+1])<<6|63&t[e+2]):e+3<t.length&&240==(248&t[e])&&128==(192&t[e+1])&&128==(192&t[e+2])&&128==(192&t[e+3])&&s.push((7&t[e])<<18|(63&t[e+1])<<12|(63&t[e+2])<<6|63&t[e+3]);return String.fromCharCode.apply(null,s)}(e)}list(){const t=l[this.byte()],e=this.int(),s=[];for(let i=0;i<e;i++)s.push(this[t]());return{type:t,value:s}}compound(){const t={};for(;;){const e=l[this.byte()];if(\"end\"===e)break;const s=this.string(),i=this[e]();t[s]={type:e,value:i}}return t}}class u{constructor(t=!1){this.byte=this.writeNum.bind(this,\"setInt8\",1),this.short=this.writeNum.bind(this,\"setInt16\",2),this.int=this.writeNum.bind(this,\"setInt32\",4),this.float=this.writeNum.bind(this,\"setFloat32\",4),this.double=this.writeNum.bind(this,\"setFloat64\",8),this.offset=0,this.littleEndian=t,this.buffer=new ArrayBuffer(1024),this.arrayView=new Uint8Array(this.buffer),this.dataView=new DataView(this.buffer)}accommodate(t){const e=this.offset+t;if(this.buffer.byteLength>=e)return;let s=this.buffer.byteLength;for(;s<e;)s*=2;const i=new ArrayBuffer(s),n=new Uint8Array(i);n.set(this.arrayView),this.offset>this.buffer.byteLength&&n.fill(0,this.buffer.byteLength,this.offset),this.buffer=i,this.dataView=new DataView(i),this.arrayView=n}getData(){return this.accommodate(0),this.arrayView.slice(0,this.offset)}end(t){}writeNum(t,e,s){this.accommodate(e),this.dataView[t](this.offset,s,this.littleEndian),this.offset+=e}long(t){this.int(t[0]),this.int(t[1])}byteArray(t){this.int(t.length),this.accommodate(t.length),this.arrayView.set(t,this.offset),this.offset+=t.length}intArray(t){this.int(t.length);for(let e=0;e<t.length;e++)this.int(t[e])}longArray(t){this.int(t.length);for(let e=0;e<t.length;e++)this.long(t[e])}string(t){const e=function(t){var e,s,i=[];for(e=0;e<t.length;e++)(s=t.charCodeAt(e))<128?i.push(s):s<2048?(i.push(192|s>>6),i.push(128|63&s)):s<65536?(i.push(224|s>>12),i.push(128|s>>6&63),i.push(128|63&s)):(i.push(240|s>>18&7),i.push(128|s>>12&63),i.push(128|s>>6&63),i.push(128|63&s));return i}(t);this.short(e.length),this.accommodate(e.length),this.arrayView.set(e,this.offset),this.offset+=e.length}list(t){this.byte(a[t.type]),this.int(t.value.length),t.value;for(let e=0;e<t.value.length;e++)this[t.type](t.value[e])}compound(t){for(const e in t)this.byte(a[t[e].type]),this.string(e),this[t[e].type](t[e].value);this.byte(a.end)}}function c(t,e){const s=new h(t,e);if(s.byte()!==a.compound)throw new Error(\"Top tag should be a compound\");return{name:s.string(),value:s.compound()}}function d(e,s){return c(t.inflate(e),s)}function f(t,e){return 2===(s=new Uint8Array(t.slice(0,2))).length&&31===s[0]&&139===s[1]?{compressed:!0,result:d(t,e)}:{compressed:!1,result:c(t,e)};var s}function g(t){const e=[];for(let s=0;s<32;s+=1)for(let i=0;i<32;i+=1){const n=4*((31&s)+32*(31&i));if(0===t[n+3])continue;const r=(t[n]<<16)+(t[n+1]<<8)+t[n+2],o=(t[n+4096]<<24)+(t[n+4097]<<16)+(t[n+4098]<<8)+t[n+4099],a=4096*r,l=(t[a]<<24)+(t[a+1]<<16)+(t[a+2]<<8)+t[a+3],h=t[a+4],u=t.slice(a+5,a+4+l);e.push({x:s,z:i,timestamp:o,compression:h,data:u})}return e}function p(t,e,s){const i=x(t,e,s);switch(i.compression){case 1:case 2:i.nbt=d(i.data);break;case 3:i.nbt=c(i.data);break;default:throw new Error(`Invalid compression mode ${i.compression}`)}return i}function m(t,e){const s=new u(e);return s.byte(a.compound),s.string(t.name),s.compound(t.value),s.getData()}function v(e,s,i){const n=m(e,s);return t[i?\"deflate\":\"gzip\"](n)}function b(t,e,s){return e?v(t,s):m(t,s)}function w(t){let e=0;for(const s of t)e+=Math.ceil(s.data.length/4096);const s=new Uint8Array(8192+4096*e),i=new DataView(s.buffer);let n=2;for(const e of t){const t=4*((31&e.x)+32*(31&e.z)),r=Math.ceil(e.data.length/4096);i.setInt8(t,n>>16),i.setInt16(t+1,65535&n),i.setInt8(t+3,r),i.setInt32(t+4096,e.timestamp);const o=4096*n;i.setInt32(o,e.data.length+1),i.setInt8(o+4,e.compression),s.set(e.data,o+5),n+=r}return s}function P(t,e,s,i){const n=x(t,e,s);switch(n.compression){case 1:n.data=v(i);break;case 2:n.data=v(i,!1,!0);break;case 3:n.data=m(i);break;default:throw new Error(`Invalid compression mode ${n.compression}`)}return n}function x(t,e,s){const i=t.find((t=>t.x===e&&t.z===s));if(void 0===i)throw new Error(`Cannot find chunk [${e}, ${s}]`);return i}function y(t,e,s){if(!t[e])throw new Error(`Missing ${e} tag`);if(t[e].type!==s)throw new Error(`Expected ${e} to be of type ${s}, but found ${t[e].type}`);return t[e].value}function A(t,e,s,i){const n=y(t,e,\"list\");if(n.type!==s)throw new Error(`Expected ${e} to be a list of ${s}s, but found ${n.type}s`);if(i&&n.value.length!==i)throw new Error(`Expected ${e} to be a list of length ${i}, but found length ${n.value.length}`);return n.value}function S(t,e){try{return t()}catch(t){return e}}class B{constructor(t,e={}){this.name=t,this.properties=e}getName(){return this.name}getProperties(){return this.properties}getProperty(t){return this.properties[t]}isFluid(){return\"minecraft:water\"===this.name||\"minecraft:lava\"===this.name}equals(t){return this.name===t.name&&Object.keys(this.properties).every((e=>t.properties[e]===this.properties[e]))}toString(){return 0===Object.keys(this.properties).length?this.name:`${this.name}[${Object.entries(this.properties).map((([t,e])=>t+\"=\"+e)).join(\",\")}]`}static fromNbt(t){const e=y(t.value,\"Name\",\"string\"),s=S((()=>y(t.value,\"Properties\",\"compound\")),{}),i=Object.keys(s).reduce(((t,e)=>Object.assign(Object.assign({},t),{[e]:y(s,e,\"string\")})),{});return new B(e,i)}static fromJson(t){var e,s;const i=null!==(e=k.readObject(t))&&void 0!==e?e:{},n=null!==(s=k.readString(i.Name))&&void 0!==s?s:\"minecraft:stone\",r=k.readMap(i.Properties,(t=>{var e;return null!==(e=k.readString(t))&&void 0!==e?e:\"\"}));return new B(n,r)}}B.AIR=new B(\"minecraft:air\");class E{constructor(t){this.minY=t,this.storage=Array(E.SIZE),this.palette=[B.AIR]}get minBlockY(){return this.minY<<4}index(t,e,s){return(t<<8)+(e<<4)+s}getBlockState(t,e,s){var i;const n=this.storage[this.index(t,e,s)];return null!==(i=this.palette[n])&&void 0!==i?i:B.AIR}setBlockState(t,e,s,i){let n=this.palette.findIndex((t=>t.equals(i)));-1===n&&(n=this.palette.length,this.palette.push(i)),this.storage[this.index(t,e,s)]=n}}E.WIDTH=16,E.SIZE=E.WIDTH*E.WIDTH*E.WIDTH;class C{constructor(t,e,s){this.minY=t,this.height=e,this.pos=s,this.sections=Array(this.sectionsCount).fill(null)}get maxY(){return this.minY+this.height}get minSection(){return this.minY>>4}get maxSection(){return 1+(this.maxY-1>>4)}get sectionsCount(){return this.maxSection-this.minSection}getSectionIndex(t){return(t>>4)-this.minSection}getBlockState(t){var e;const[s,i,n]=t,r=this.sections[this.getSectionIndex(i)];return null!==(e=null==r?void 0:r.getBlockState(15&s,15&i,15&n))&&void 0!==e?e:B.AIR}setBlockState(t,e){const[s,i,n]=t,r=this.getSectionIndex(i);let o=this.sections[r];if(null===o){if(e.equals(B.AIR))return;o=this.getOrCreateSection(r)}o.setBlockState(15&s,15&i,15&n,e)}getOrCreateSection(t){return null==this.sections[t]&&(this.sections[t]=new E(this.minSection+t)),this.sections[t]}}var I,k,R;!function(t){t.create=function(t,e){return[t,e]},t.fromBlockPos=function(t){return[t[0]>>4,t[2]>>4]},t.fromLong=function(t){return[4294967295&Number(t),Number(t>>BigInt(32))]},t.minBlockX=function(t){return t[0]<<4},t.minBlockZ=function(t){return t[1]<<4},t.maxBlockX=function(t){return t[0]<<19},t.maxBlockZ=function(t){return t[1]<<19}}(I||(I={})),function(t){function e(t){return\"object\"==typeof t&&null!==t?t:void 0}t.readNumber=function(t){return\"number\"==typeof t?t:void 0},t.readInt=function(t){return\"number\"==typeof t?Math.floor(t):void 0},t.readString=function(t){return\"string\"==typeof t?t:void 0},t.readBoolean=function(t){return\"boolean\"==typeof t?t:void 0},t.readObject=e,t.readArray=function(t,e){if(Array.isArray(t))return t.map((t=>e(t)))},t.readMap=function(t,s){var i;const n=null!==(i=e(t))&&void 0!==i?i:{};return Object.fromEntries(Object.entries(n).map((([t,e])=>[t,s(e)])))},t.compose=function(t,e,s){const i=e(t);return i?s(i):void 0}}(k||(k={}));class _{constructor(t,e=[],s=[]){this.size=t,this.palette=e,this.blocks=s,this.blocksMap=[],s.forEach((e=>{if(!this.isInside(e.pos))throw new Error(`Found block at ${e.pos} which is outside the structure bounds ${this.size}`);this.blocksMap[e.pos[0]*t[1]*t[2]+e.pos[1]*t[2]+e.pos[2]]=e}))}getSize(){return this.size}addBlock(t,e,s,i){if(!this.isInside(t))throw new Error(`Cannot add block at ${t} outside the structure bounds ${this.size}`);const n=new B(e,s);let r=this.palette.findIndex((t=>t.equals(n)));return-1===r&&(r=this.palette.length,this.palette.push(n)),this.blocks.push({pos:t,state:r,nbt:i}),this.blocksMap[t[0]*this.size[1]*this.size[2]+t[1]*this.size[2]+t[2]]={pos:t,state:r,nbt:i},this}getBlocks(){return this.blocks.map((t=>({pos:t.pos,state:this.palette[t.state],nbt:t.nbt})))}getBlock(t){if(!this.isInside(t))return null;const e=this.blocksMap[t[0]*this.size[1]*this.size[2]+t[1]*this.size[2]+t[2]];if(!e)return null;return{pos:e.pos,state:this.palette[e.state],nbt:e.nbt}}isInside(t){return t[0]>=0&&t[0]<this.size[0]&&t[1]>=0&&t[1]<this.size[1]&&t[2]>=0&&t[2]<this.size[2]}static fromNbt(t){const e=A(t.value,\"size\",\"int\",3),s=A(t.value,\"palette\",\"compound\").map((t=>B.fromNbt({name:\"\",value:t}))),i=A(t.value,\"blocks\",\"compound\").map((t=>({pos:A(t,\"pos\",\"int\",3),state:y(t,\"state\",\"int\"),nbt:S((()=>y(t,\"nbt\",\"compound\")),void 0)})));return new _(e,s,i)}}function F(t){return t*t}function M(t,e,s){return Math.max(e,Math.min(s,t))}function N(t,e,s){return e+t*(s-e)}function T(t,e,s,i,n,r){return N(e,N(t,s,i),N(t,n,r))}function O(t,e,s,i,n,r,o,a,l,h,u){return N(s,T(t,e,i,n,r,o),T(t,e,a,l,h,u))}function U(t,e,s){return s<0?t:s>1?e:N(s,t,e)}function D(t){return t*t*t*(t*(6*t-15)+10)}function L(t,e,s){let i=e-t;for(;i>0;){const e=Math.floor(i/2),n=t+e;s(n)?i=e:(t=n+1,i-=e+1)}return t}class z{constructor(t){this.xo=256*t.nextDouble(),this.yo=256*t.nextDouble(),this.zo=256*t.nextDouble(),this.p=Array(256);for(let t=0;t<256;t+=1)this.p[t]=t;for(let e=0;e<256;e+=1){const s=t.nextInt(256-e),i=this.p[e];this.p[e]=this.p[e+s],this.p[e+s]=i}}sample2D(t,e){let s,i,n;const r=(t+e)*z.F2,o=Math.floor(t+r),a=t-(o-(s=(o+(i=Math.floor(e+r)))*z.G2));let l,h;a>(n=e-(i-s))?(l=1,h=0):(l=0,h=1);const u=a-l+z.G2,c=n-h+z.G2,d=a-1+2*z.G2,f=n-1+2*z.G2,g=255&o,p=255&i,m=this.P(g+this.P(p))%12,v=this.P(g+l+this.P(p+h))%12,b=this.P(g+1+this.P(p+1))%12;return 70*(this.getCornerNoise3D(m,a,n,0,.5)+this.getCornerNoise3D(v,u,c,0,.5)+this.getCornerNoise3D(b,d,f,0,.5))}sample(t,e,s){const i=.3333333333333333*(t+e+s),n=Math.floor(t+i),r=Math.floor(e+i),o=Math.floor(s+i),a=.16666666666666666*(n+r+o),l=t-(n-a),h=e-(r-a),u=s-(o-a);let c,d,f,g,p,m;l>=h?h>=u?(c=1,d=0,f=0,g=1,p=1,m=0):l>=u?(c=1,d=0,f=0,g=1,p=0,m=1):(c=0,d=0,f=1,g=1,p=0,m=1):h<u?(c=0,d=0,f=1,g=0,p=1,m=1):l<u?(c=0,d=1,f=0,g=0,p=1,m=1):(c=0,d=1,f=0,g=1,p=1,m=0);const v=l-c+.16666666666666666,b=h-d+.16666666666666666,w=u-f+.16666666666666666,P=l-g+.3333333333333333,x=h-p+.3333333333333333,y=u-m+.3333333333333333,A=l-.5,S=h-.5,B=u-.5,E=255&n,C=255&r,I=255&o,k=this.P(E+this.P(C+this.P(I)))%12,R=this.P(E+c+this.P(C+d+this.P(I+f)))%12,_=this.P(E+g+this.P(C+p+this.P(I+m)))%12,F=this.P(E+1+this.P(C+1+this.P(I+1)))%12;return 32*(this.getCornerNoise3D(k,l,h,u,.6)+this.getCornerNoise3D(R,v,b,w,.6)+this.getCornerNoise3D(_,P,x,y,.6)+this.getCornerNoise3D(F,A,S,B,.6))}P(t){return this.p[255&t]}getCornerNoise3D(t,e,s,i,n){let r,o=n-e*e-s*s-i*i;return o<0?r=0:(o*=o,r=o*o*z.gradDot(t,e,s,i)),r}static gradDot(t,e,s,i){const n=z.GRADIENT[15&t];return n[0]*e+n[1]*s+n[2]*i}}z.GRADIENT=[[1,1,0],[-1,1,0],[1,-1,0],[-1,-1,0],[1,0,1],[-1,0,1],[1,0,-1],[-1,0,-1],[0,1,1],[0,-1,1],[0,1,-1],[0,-1,-1],[1,1,0],[0,-1,1],[-1,1,0],[0,-1,-1]],z.F2=.5*(Math.sqrt(3)-1),z.G2=(3-Math.sqrt(3))/6;class V{constructor(t){this.xo=256*t.nextDouble(),this.yo=256*t.nextDouble(),this.zo=256*t.nextDouble(),this.p=Array(256);for(let t=0;t<256;t+=1)this.p[t]=t>127?t-256:t;for(let e=0;e<256;e+=1){const s=t.nextInt(256-e),i=this.p[e];this.p[e]=this.p[e+s],this.p[e+s]=i}}sample(t,e,s,i=0,n=0){const r=t+this.xo,o=e+this.yo,a=s+this.zo,l=Math.floor(r),h=Math.floor(o),u=Math.floor(a),c=r-l,d=o-h,f=a-u;let g=0;if(0!==i){const t=n>=0&&n<d?n:d;g=Math.floor(t/i+1e-7)*i}return this.sampleAndLerp(l,h,u,c,d-g,f,d)}sampleAndLerp(t,e,s,i,n,r,o){const a=this.P(t),l=this.P(t+1),h=this.P(a+e),u=this.P(a+e+1),c=this.P(l+e),d=this.P(l+e+1),f=z.gradDot(this.P(h+s),i,n,r),g=z.gradDot(this.P(c+s),i-1,n,r),p=z.gradDot(this.P(u+s),i,n-1,r),m=z.gradDot(this.P(d+s),i-1,n-1,r),v=z.gradDot(this.P(h+s+1),i,n,r-1),b=z.gradDot(this.P(c+s+1),i-1,n,r-1),w=z.gradDot(this.P(u+s+1),i,n-1,r-1),P=z.gradDot(this.P(d+s+1),i-1,n-1,r-1);return O(D(i),D(o),D(r),f,g,p,m,v,b,w,P)}P(t){return 255&this.p[255&t]}}class j{constructor(t,e,s){if(1-e<s.length)throw new Error(\"Positive octaves are not allowed\");this.noiseLevels=Array(s.length);for(let i=-e;i>=0;i-=1)i<s.length&&0!==s[i]?this.noiseLevels[i]=new V(t):t.consume(262);this.amplitudes=s,this.lowestFreqInputFactor=Math.pow(2,e),this.lowestFreqValueFactor=Math.pow(2,s.length-1)/(Math.pow(2,s.length)-1)}sample(t,e,s,i=0,n=0,r=!1){let o=0,a=this.lowestFreqInputFactor,l=this.lowestFreqValueFactor;for(let h=0;h<this.noiseLevels.length;h+=1){const u=this.noiseLevels[h];u&&(o+=this.amplitudes[h]*l*u.sample(j.wrap(t*a),r?-u.yo:j.wrap(e*a),j.wrap(s*a),i*a,n*a)),a*=2,l/=2}return o}getOctaveNoise(t){return this.noiseLevels[this.noiseLevels.length-1-t]}static wrap(t){return t-33554432*Math.floor(t/33554432+.5)}}class Y{constructor(t){this.minLimitNoise=new j(t,-15,[1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0]),this.maxLimitNoise=new j(t,-15,[1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0]),this.mainNoise=new j(t,-7,[1,1,1,1,1,0,0,0])}sample(t,e,s,i,n,r,o){let a,l=0,h=1;for(let i=0;i<8;i+=1){if(a=this.mainNoise.getOctaveNoise(i),a){const i=r*h,n=o*h,u=j.wrap(t*i),c=j.wrap(e*n),d=j.wrap(s*i);l+=a.sample(u,c,d,n,e*n)/h}h/=2}l=(l/10+1)/2,h=1;let u=0,c=0;for(let r=0;r<16;r+=1){const o=i*h,d=n*h,f=j.wrap(t*o),g=j.wrap(e*d),p=j.wrap(s*o);l<1&&(a=this.minLimitNoise.getOctaveNoise(r))&&(u+=a.sample(f,g,p,d,e*d)/h),l>0&&(a=this.maxLimitNoise.getOctaveNoise(r))&&(c+=a.sample(f,g,p,d,e*d)/h),h/=2}return U(u/512,c/512,l)}}class X{constructor(t,{firstOctave:e,amplitudes:s}){this.first=new j(t,e,s),this.second=new j(t,e,s);let i=1/0,n=-1/0;for(let t=0;t<s.length;t+=1)0!==s[t]&&(i=Math.min(i,t),n=Math.max(n,t));const r=.1*(1+1/(n-i+1));this.valueFactor=1/6/r}sample(t,e,s){const i=t*X.INPUT_FACTOR,n=e*X.INPUT_FACTOR,r=s*X.INPUT_FACTOR;return(this.first.sample(t,e,s)+this.second.sample(i,n,r))*this.valueFactor}}X.INPUT_FACTOR=1.0181268882175227,function(t){t.fromJson=function(t){var e,s,i;const n=null!==(e=k.readObject(t))&&void 0!==e?e:{};return{firstOctave:null!==(s=k.readInt(n.firstOctave))&&void 0!==s?s:0,amplitudes:null!==(i=k.readArray(n.amplitudes,(t=>{var e;return null!==(e=k.readNumber(t))&&void 0!==e?e:0})))&&void 0!==i?i:[]}}}(R||(R={}));class H{constructor(t,e){const s=e[e.length-1],i=-e[0]+s+1,n=new Set(e),r=new z(t);this.noiseLevels=Array(i),s>=0&&s<i&&n.has(0)&&(this.noiseLevels[s]=r);for(let e=s+1;e<i;e+=1)e>=0&&n.has(s-e)?this.noiseLevels[e]=new z(t):t.consume(262);if(s>0)throw new Error(\"Positive octaves are not allowed\");this.highestFreqInputFactor=Math.pow(2,s),this.highestFreqValueFactor=1/(Math.pow(2,i)-1)}sample(t,e,s){let i=0,n=this.highestFreqInputFactor,r=this.highestFreqValueFactor;for(let o=0;o<this.noiseLevels.length;o+=1){const a=this.noiseLevels[o];a&&(i+=r*a.sample2D(t*n+(s?a.xo:0),e*n+(s?a.yo:0))),n/=2,r*=2}return i}}class W{constructor(t){this.seed=BigInt(0),this.setSeed(t)}fork(){return new W(this.nextLong())}setSeed(t){this.seed=t^W.MULTIPLIER&W.MODULUS_MASK}advance(){this.seed=this.seed*W.MULTIPLIER+W.INCREMENT&W.MODULUS_MASK}consume(t){for(let e=0;e<t;e+=1)this.advance()}next(t){this.advance();const e=Number(this.seed>>BigInt(W.MODULUS_BITS-t));return e>2147483647?e-4294967296:e}nextInt(t){if(void 0===t)return this.next(32);if(0==(t&t-1))return Number(BigInt(t)*BigInt(this.next(31))>>BigInt(31));let e,s;for(;(e=this.next(31))-(s=e%t)+(t-1)<0;);return s}nextLong(){return(BigInt(this.next(32))<<BigInt(32))+BigInt(this.next(32))}nextFloat(){return this.next(24)*W.FLOAT_MULTIPLIER}nextDouble(){const t=this.next(30);return this.advance(),t*W.DOUBLE_MULTIPLIER}}W.MODULUS_BITS=48,W.MODULUS_MASK=BigInt(\"281474976710655\"),W.MULTIPLIER=BigInt(\"25214903917\"),W.INCREMENT=BigInt(\"11\"),W.FLOAT_MULTIPLIER=1/Math.pow(2,24),W.DOUBLE_MULTIPLIER=1/Math.pow(2,30);class J extends W{constructor(){super(...arguments),this.count=0}getCount(){return this.count}next(t){return this.count+=1,super.next(t)}}class Z{constructor(t,e,s=[],i=[],n=[]){this.name=t,this.coordinate=e,this.locations=s,this.values=i,this.derivatives=n}apply(t){const e=this.coordinate(t),s=L(0,this.locations.length,(t=>e<this.locations[t]))-1,i=this.locations.length-1;if(s<0)return this.values[0](t)+this.derivatives[0]*(e-this.locations[0]);if(s===i)return this.values[i](t)+this.derivatives[i]*(e-this.locations[i]);const n=this.locations[s],r=this.locations[s+1],o=this.derivatives[s],a=this.derivatives[s+1],l=(e-n)/(r-n),h=this.values[s](t),u=this.values[s+1](t),c=o*(r-n)-(u-h),d=-a*(r-n)+(u-h);return N(l,h,u)+l*(1-l)*N(l,c,d)}addPoint(t,e,s=0){return this.locations.push(t),this.values.push(\"number\"==typeof e?()=>e:e.apply.bind(e)),this.derivatives.push(s),this}}const $=t=>[(t>>16&255)/256,(t>>8&255)/256,(255&t)/256],G=[124/256,189/256,107/256],q=$(6396257),K=$(8431445),Q=$(4764952),tt=$(4159204),et=$(8431445),st=$(2129968),it=t=>[t/8,1-t/32,64*t],nt={large_fern:()=>G,tall_grass:()=>G,grass_block:()=>G,fern:()=>G,grass:()=>G,potted_fern:()=>G,spruce_leaves:()=>q,birch_leaves:()=>K,oak_leaves:()=>Q,jungle_leaves:()=>Q,acacia_leaves:()=>Q,dark_oak_leaves:()=>Q,vine:()=>Q,water:()=>tt,bubble_column:()=>tt,cauldron:()=>tt,redstone_wire:t=>{var e;return(t=>{const e=t/15;return[.6*e+(e>0?.4:.3),M(e*e*.7-.5,0,1),M(e*e*.6-.7,0,1)]})(parseInt(null!==(e=t.power)&&void 0!==e?e:\"0\"))},sugar_cane:()=>G,attached_melon_stem:()=>et,attached_pumpkin_stem:()=>et,melon_stem:t=>{var e;return it(parseInt(null!==(e=t.age)&&void 0!==e?e:\"0\"))},pumpkin_stem:t=>{var e;return it(parseInt(null!==(e=t.age)&&void 0!==e?e:\"0\"))},lily_pad:()=>st};var rt;function ot(...t){let e=0;for(const s of t)e+=s.length;const s=new Float32Array(e);let i=0;for(const e of t)s.set(e,i),i+=e.length;return s}function at(t,s){const i=e.create();for(let n=0;n<t.length;n+=3)i[0]=t[n],i[1]=t[n+1],i[2]=t[n+2],e.transformMat4(i,i,s),t[n]=i[0],t[n+1]=i[1],t[n+2]=i[2]}!function(t){t.rotate=function(t,e,s){let{up:i,down:n,north:r,east:o,south:a,west:l}=t;switch(s){case 90:[r,o,a,l]=[o,a,l,r];break;case 180:[r,o,a,l]=[a,l,r,o];break;case 270:[r,o,a,l]=[l,r,o,a]}switch(e){case 90:[i,r,n,a]=[r,n,a,i];break;case 180:[i,r,n,a]=[n,a,i,r];break;case 270:[i,r,n,a]=[a,i,r,n]}return{up:i,down:n,north:r,east:o,south:a,west:l}}}(rt||(rt={}));class lt{constructor(t,e,s){this.id=t,this.variants=e,this.multipart=s,this.variants=e}getModelVariants(t){if(this.variants){const e=Object.keys(this.variants).filter((e=>this.matchesVariant(e,t)));if(0===e.length)return[];const s=this.variants[e[0]];return[Array.isArray(s)?s[0]:s]}if(this.multipart){return this.multipart.filter((e=>!e.when||this.matchesCase(e.when,t))).map((t=>Array.isArray(t.apply)?t.apply[0]:t.apply))}return[]}getBuffers(t,e,n,r,o,a){var l,h,u,c;const d=this.getModelVariants(e),f=[],g=[],p=[],m=[];for(const v of d){const d=rt.rotate(a,null!==(l=v.x)&&void 0!==l?l:0,null!==(h=v.y)&&void 0!==h?h:0),b=r.getBlockModel(v.model).getBuffers(t,e,n,o,d);if(v.x||v.y){const t=s.create();s.identity(t),s.translate(t,t,[8,8,8]),s.rotateY(t,t,-i.toRadian(null!==(u=v.y)&&void 0!==u?u:0)),s.rotateX(t,t,-i.toRadian(null!==(c=v.x)&&void 0!==c?c:0)),s.translate(t,t,[-8,-8,-8]),at(b.position,t)}f.push(b.position),g.push(...b.texCoord),p.push(...b.tintColor),m.push(...b.index),o+=b.texCoord.length/2}const v=s.create();s.identity(v),s.scale(v,v,[.0625,.0625,.0625]);const b=ot(...f);return at(b,v),{position:b,texCoord:g,tintColor:p,index:m}}matchesVariant(t,e){return t.split(\",\").every((t=>{const[s,i]=t.split(\"=\");return e[s]===i}))}matchesCase(t,e){if(Array.isArray(t.OR))return t.OR.some((t=>this.matchesCase(t,e)));const s=t;return Object.keys(s).every((t=>s[t].split(\"|\").includes(e[t])))}static fromJson(t,e){return new lt(t,e.variants,e.multipart)}}const ht={0:[0,3,2,3,2,1,0,1],90:[2,3,2,1,0,1,0,3],180:[2,1,0,1,0,3,2,3],270:[0,1,0,3,2,3,2,1]},ut={x:[1,0,0],y:[0,1,0],z:[0,0,1]},ct=1.41421356237,dt={x:[1,ct,ct],y:[ct,1,ct],z:[ct,ct,1]};class ft{constructor(t,e,s,i){this.id=t,this.parent=e,this.textures=s,this.elements=i,this.flattened=!1}getBuffers(t,e,s,i,n){var r;const o=[],a=[],l=[],h=[];for(const u of null!==(r=this.elements)&&void 0!==r?r:[]){const r=this.getElementBuffers(t,e,u,i,s,n);o.push(r.position),a.push(...r.texCoord),l.push(...r.tintColor),h.push(...r.index),i+=r.texCoord.length/2}return{position:ot(...o),texCoord:a,tintColor:l,index:h}}getElementBuffers(t,n,r,o,a,l){var h,u,c,d,f,g,p,m,v,b,w,P;const x=r.from[0],y=r.from[1],A=r.from[2],S=r.to[0],B=r.to[1],E=r.to[2],C=[],I=[],k=[],R=[],_=(e,s,i)=>{var r,l,h,u,c,d,f,g,p,m,v,b;const[w,P,x,y]=a.getTextureUV(this.getTexture(e.texture)),A=(x-w)/16,S=(y-P)/16,B=A/16,E=S/16;s[0]=(null!==(l=null===(r=e.uv)||void 0===r?void 0:r[0])&&void 0!==l?l:s[0])*A+B,s[1]=(null!==(u=null===(h=e.uv)||void 0===h?void 0:h[1])&&void 0!==u?u:s[1])*S+E,s[2]=(null!==(d=null===(c=e.uv)||void 0===c?void 0:c[2])&&void 0!==d?d:s[2])*A-B,s[3]=(null!==(g=null===(f=e.uv)||void 0===f?void 0:f[3])&&void 0!==g?g:s[3])*S-E;const _=ht[null!==(p=e.rotation)&&void 0!==p?p:0];I.push(w+s[_[0]],P+s[_[1]],w+s[_[2]],P+s[_[3]],w+s[_[4]],P+s[_[5]],w+s[_[6]],P+s[_[7]]);const F=(null!==(m=e.tintindex)&&void 0!==m?m:-1)>=0&&null!==(b=null===(v=nt[t.slice(10)])||void 0===v?void 0:v.call(nt,n))&&void 0!==b?b:[1,1,1];k.push(...F,...F,...F,...F),C.push(...i),R.push(o,o+1,o+2,o,o+2,o+3),o+=4};!(null===(u=null===(h=r.faces)||void 0===h?void 0:h.up)||void 0===u?void 0:u.texture)||r.faces.up.cullface&&l[r.faces.up.cullface]||_(r.faces.up,[x,16-E,S,16-A],[x,B,E,S,B,E,S,B,A,x,B,A]),!(null===(d=null===(c=r.faces)||void 0===c?void 0:c.down)||void 0===d?void 0:d.texture)||r.faces.down.cullface&&l[r.faces.down.cullface]||_(r.faces.down,[16-E,16-S,16-A,16-x],[x,y,A,S,y,A,S,y,E,x,y,E]),!(null===(g=null===(f=r.faces)||void 0===f?void 0:f.south)||void 0===g?void 0:g.texture)||r.faces.south.cullface&&l[r.faces.south.cullface]||_(r.faces.south,[x,16-B,S,16-y],[x,y,E,S,y,E,S,B,E,x,B,E]),!(null===(m=null===(p=r.faces)||void 0===p?void 0:p.north)||void 0===m?void 0:m.texture)||r.faces.north.cullface&&l[r.faces.north.cullface]||_(r.faces.north,[16-S,16-B,16-x,16-y],[S,y,A,x,y,A,x,B,A,S,B,A]),!(null===(b=null===(v=r.faces)||void 0===v?void 0:v.east)||void 0===b?void 0:b.texture)||r.faces.east.cullface&&l[r.faces.east.cullface]||_(r.faces.east,[16-E,16-B,16-A,16-y],[S,y,E,S,y,A,S,B,A,S,B,E]),!(null===(P=null===(w=r.faces)||void 0===w?void 0:w.west)||void 0===P?void 0:P.texture)||r.faces.west.cullface&&l[r.faces.west.cullface]||_(r.faces.west,[A,16-B,E,16-y],[x,y,A,x,y,E,x,B,E,x,B,A]);const F=s.create();if(s.identity(F),r.rotation){const t=e.fromValues(...r.rotation.origin);s.translate(F,F,t),s.rotate(F,F,i.toRadian(r.rotation.angle),ut[r.rotation.axis]),r.rotation.rescale&&s.scale(F,F,dt[r.rotation.axis]),e.negate(t,t),s.translate(F,F,t)}const M=new Float32Array(C);return at(M,F),{position:M,texCoord:I,tintColor:k,index:R}}getTexture(t){for(var e,s;t.startsWith(\"#\");)t=null!==(s=null===(e=this.textures)||void 0===e?void 0:e[t.slice(1)])&&void 0!==s?s:\"\";return t.startsWith(\"minecraft:\")||(t=\"minecraft:\"+t),t}flatten(t){var e;if(!this.flattened&&this.parent){const s=t.getBlockModel(this.parent);if(!s)return console.warn(`parent ${this.parent} does not exist!`),void(this.flattened=!0);s.flatten(t),this.elements||(this.elements=s.elements),this.textures||(this.textures={}),Object.keys(null!==(e=s.textures)&&void 0!==e?e:{}).forEach((t=>{this.textures[t]||(this.textures[t]=s.textures[t])})),this.flattened=!0}}static fromJson(t,e){let s=e.parent;return s&&!s.startsWith(\"minecraft:\")&&(s=\"minecraft:\"+s),new ft(t,s,e.textures,e.elements)}}class gt{constructor(t,e,s){this.gl=t,this.program=this.initShaderProgram(e,s)}getProgram(){return this.program}initShaderProgram(t,e){const s=this.loadShader(this.gl.VERTEX_SHADER,t),i=this.loadShader(this.gl.FRAGMENT_SHADER,e),n=this.gl.createProgram();if(this.gl.attachShader(n,s),this.gl.attachShader(n,i),this.gl.linkProgram(n),!this.gl.getProgramParameter(n,this.gl.LINK_STATUS))throw new Error(`Unable to link shader program: ${this.gl.getProgramInfoLog(n)}`);return n}loadShader(t,e){const s=this.gl.createShader(t);if(this.gl.shaderSource(s,e),this.gl.compileShader(s),!this.gl.getShaderParameter(s,this.gl.COMPILE_STATUS)){const e=new Error(`Compiling ${t===this.gl.VERTEX_SHADER?\"vertex\":\"fragment\"} shader: ${this.gl.getShaderInfoLog(s)}`);throw this.gl.deleteShader(s),e}return s}}function pt(t,e,s,i,n){const r=new lt(\"\",{\"\":{model:\"\"}},void 0),o={getBlockModel:()=>n};return n.flatten(o),r.getBuffers(t,{},e,o,s,i)}function mt(t,e,s,i,r,o){const a=r.up?16:[14.2,12.5,10.5,9,7,5.3,3.7,1.9,16,16,16,16,16,16,16,16][s];return pt(`minecraft:${t}`,i,e,r,new ft(\"\",\"\",{still:`minecraft:block/${t}_still`,flow:`minecraft:block/${t}_flow`},[{from:[0,0,0],to:[16,a,16],faces:{up:{texture:\"#still\",tintindex:o,cullface:n.UP},down:{texture:\"#still\",tintindex:o,cullface:n.DOWN},north:{texture:\"#flow\",tintindex:o,cullface:n.NORTH},east:{texture:\"#flow\",tintindex:o,cullface:n.EAST},south:{texture:\"#flow\",tintindex:o,cullface:n.SOUTH},west:{texture:\"#flow\",tintindex:o,cullface:n.WEST}}}]))}const vt={\"minecraft:water\":(t,e,s,i)=>mt(\"water\",t,parseInt(e.level),s,i,0),\"minecraft:lava\":(t,e,s,i)=>mt(\"lava\",t,parseInt(e.level),s,i),\"minecraft:chest\":(t,e,s)=>function(t,e,s,i){return pt(\"minecraft:chest\",i,t,{},new ft(\"\",\"\",{0:\"minecraft:block/chest\"},[{from:[1,0,1],to:[15,14,15],faces:{up:{texture:\"#0\"},down:{texture:\"#0\"},north:{texture:\"#0\"},east:{texture:\"#0\"},south:{texture:\"#0\"},west:{texture:\"#0\"}}}]))}(t,e.facing,e.type,s)},bt=new Set(Object.keys(vt));class wt{constructor(t,e,s,i){var n,r;this.gl=t,this.structure=e,this.resources=s,this.chunks=[],(null==i?void 0:i.facesPerBuffer)&&console.warn(\"webgl render warning: facesPerBuffer option has been removed in favor of chunkSize\"),this.chunkSize=null!==(n=null==i?void 0:i.chunkSize)&&void 0!==n?n:16,this.useInvisibleBlockBuffer=null===(r=null==i?void 0:i.useInvisibleBlockBuffer)||void 0===r||r,this.shaderProgram=new gt(t,\"\\n  attribute vec4 vertPos;\\n  attribute vec2 texCoord;\\n  attribute vec3 tintColor;\\n  attribute vec3 normal;\\n\\n  uniform mat4 mView;\\n  uniform mat4 mProj;\\n\\n  varying highp vec2 vTexCoord;\\n  varying highp vec3 vTintColor;\\n  varying highp float vLighting;\\n\\n  void main(void) {\\n    gl_Position = mProj * mView * vertPos;\\n    vTexCoord = texCoord;\\n    vTintColor = tintColor;\\n    vLighting = normal.y * 0.2 + abs(normal.z) * 0.1 + 0.8;\\n  }\\n\",\"\\n  precision highp float;\\n  varying highp vec2 vTexCoord;\\n  varying highp vec3 vTintColor;\\n  varying highp float vLighting;\\n\\n  uniform sampler2D sampler;\\n\\n  void main(void) {\\n    vec4 texColor = texture2D(sampler, vTexCoord);\\n    if(texColor.a < 0.01) discard;\\n    gl_FragColor = vec4(texColor.xyz * vTintColor * vLighting, texColor.a);\\n  }\\n\").getProgram(),this.gridShaderProgram=new gt(t,\"\\n  attribute vec4 vertPos;\\n  attribute vec3 vertColor;\\n\\n  uniform mat4 mView;\\n  uniform mat4 mProj;\\n\\n  varying highp vec3 vColor;\\n\\n  void main(void) {\\n    gl_Position = mProj * mView * vertPos;\\n    vColor = vertColor;\\n  }\\n\",\"\\n  precision highp float;\\n  varying highp vec3 vColor;\\n\\n  void main(void) {\\n    gl_FragColor = vec4(vColor, 1.0);\\n  }\\n\").getProgram(),this.colorShaderProgram=new gt(t,\"\\n  attribute vec4 vertPos;\\n  attribute vec3 blockPos;\\n\\n  uniform mat4 mView;\\n  uniform mat4 mProj;\\n\\n  varying highp vec3 vColor;\\n\\n  void main(void) {\\n    gl_Position = mProj * mView * vertPos;\\n    vColor = blockPos / 256.0;\\n  }\\n\",\"\\n  precision highp float;\\n  varying highp vec3 vColor;\\n\\n  void main(void) {\\n    gl_FragColor = vec4(vColor, 1.0);\\n  }\\n\").getProgram(),this.updateStructureBuffers(),this.gridBuffers=this.getGridBuffers(),this.outlineBuffers=this.getOutlineBuffers(),this.invisibleBlockBuffers=this.getInvisibleBlockBuffers(),this.atlasTexture=this.getBlockTexture(),this.projMatrix=this.getPerspective(),this.activeShader=this.shaderProgram,this.initialize()}setStructure(t){this.structure=t,this.updateStructureBuffers(),this.gridBuffers=this.getGridBuffers(),this.invisibleBlockBuffers=this.getInvisibleBlockBuffers()}initialize(){this.gl.enable(this.gl.DEPTH_TEST),this.gl.depthFunc(this.gl.LEQUAL),this.gl.enable(this.gl.BLEND),this.gl.blendFunc(this.gl.SRC_ALPHA,this.gl.ONE_MINUS_SRC_ALPHA),this.gl.enable(this.gl.CULL_FACE),this.gl.cullFace(this.gl.BACK)}getBlockTexture(){const t=this.gl.createTexture();return this.gl.bindTexture(this.gl.TEXTURE_2D,t),this.gl.texImage2D(this.gl.TEXTURE_2D,0,this.gl.RGBA,this.gl.RGBA,this.gl.UNSIGNED_BYTE,this.resources.getTextureAtlas()),this.gl.generateMipmap(this.gl.TEXTURE_2D),this.gl.texParameteri(this.gl.TEXTURE_2D,this.gl.TEXTURE_MAG_FILTER,this.gl.NEAREST),t}getPerspective(){const t=70*Math.PI/180,e=this.gl.canvas.clientWidth/this.gl.canvas.clientHeight,i=s.create();return s.perspective(i,t,e,.1,500),i}getChunk(t){const e=2*Math.abs(t[0])+(t[0]<0?1:0),s=2*Math.abs(t[1])+(t[1]<0?1:0),i=2*Math.abs(t[2])+(t[2]<0?1:0);return this.chunks[e]||(this.chunks[e]=[]),this.chunks[e][s]||(this.chunks[e][s]=[]),this.chunks[e][s][i]||(this.chunks[e][s][i]={positions:[],textureCoordinates:[],tintColors:[],blockPositions:[],normals:[],indices:[],indexOffset:0}),this.chunks[e][s][i]}updateStructureBuffers(t){var i;const r=(t,i,n)=>{const r=s.create();s.translate(r,r,i),at(t.position,r),n.positions.push(t.position),n.textureCoordinates.push(...t.texCoord),n.tintColors.push(...t.tintColor);for(let s=0;s<t.position.length;s+=12){const i=e.fromValues(t.position[s],t.position[s+1],t.position[s+2]),r=e.fromValues(t.position[s+3],t.position[s+4],t.position[s+5]),o=e.fromValues(t.position[s+6],t.position[s+7],t.position[s+8]);e.subtract(r,r,i),e.subtract(o,o,i),e.cross(r,r,o),e.normalize(r,r),n.normals.push(...r,...r,...r,...r)}for(let e=0;e<t.texCoord.length/2;e+=1)n.blockPositions.push(...i);n.indices.push(...t.index),n.indexOffset+=t.texCoord.length/2},o=t=>{t.positions=[],t.textureCoordinates=[],t.tintColors=[],t.blockPositions=[],t.normals=[],t.indices=[],t.indexOffset=0},a=t=>{t.buffer?(this.updateBuffer(t.buffer.position,this.gl.ARRAY_BUFFER,ot(...t.positions)),this.updateBuffer(t.buffer.texCoord,this.gl.ARRAY_BUFFER,new Float32Array(t.textureCoordinates)),this.updateBuffer(t.buffer.tintColor,this.gl.ARRAY_BUFFER,new Float32Array(t.tintColors)),this.updateBuffer(t.buffer.normal,this.gl.ARRAY_BUFFER,new Float32Array(t.normals)),this.updateBuffer(t.buffer.blockPos,this.gl.ARRAY_BUFFER,new Float32Array(t.blockPositions)),this.updateBuffer(t.buffer.index,this.gl.ELEMENT_ARRAY_BUFFER,new Uint16Array(t.indices)),t.buffer.length=t.indices.length):t.buffer={position:this.createBuffer(this.gl.ARRAY_BUFFER,ot(...t.positions)),texCoord:this.createBuffer(this.gl.ARRAY_BUFFER,new Float32Array(t.textureCoordinates)),tintColor:this.createBuffer(this.gl.ARRAY_BUFFER,new Float32Array(t.tintColors)),blockPos:this.createBuffer(this.gl.ARRAY_BUFFER,new Float32Array(t.blockPositions)),normal:this.createBuffer(this.gl.ARRAY_BUFFER,new Float32Array(t.normals)),index:this.createBuffer(this.gl.ELEMENT_ARRAY_BUFFER,new Uint16Array(t.indices)),length:t.indices.length}};let l;t?t.forEach((t=>{const e=this.getChunk(t);o(e)})):this.chunks.forEach((t=>t.forEach((t=>t.forEach((t=>{o(t)}))))));for(const s of this.structure.getBlocks()){const o=s.state.getName(),a=s.state.getProperties(),h=null!==(i=this.resources.getDefaultBlockProperties(o))&&void 0!==i?i:{};Object.entries(h).forEach((([t,e])=>{a[t]||(a[t]=e)}));const u=[Math.floor(s.pos[0]/this.chunkSize),Math.floor(s.pos[1]/this.chunkSize),Math.floor(s.pos[2]/this.chunkSize)];if(t&&!t.some((t=>e.equals(t,u))))continue;const c=this.getChunk(u);try{const t=this.resources.getBlockDefinition(o),e={up:this.needsCull(s,n.UP),down:this.needsCull(s,n.DOWN),west:this.needsCull(s,n.WEST),east:this.needsCull(s,n.EAST),north:this.needsCull(s,n.NORTH),south:this.needsCull(s,n.SOUTH)};t&&(l=t.getBuffers(o,a,this.resources,this.resources,c.indexOffset,e),r(l,s.pos,c)),bt.has(o)&&(l=vt[o](c.indexOffset,a,this.resources,e),r(l,s.pos,c))}catch(t){console.error(`Error rendering block ${o}`,t)}}t?t.forEach((t=>{const e=this.getChunk(t);a(e)})):this.chunks.forEach((t=>t.forEach((t=>t.forEach((t=>{a(t)}))))))}needsCull(t,e){var s,i;const r=null===(s=this.structure.getBlock(o.towards(t.pos,e)))||void 0===s?void 0:s.state;return!!r&&((null===(i=this.resources.getBlockFlags(r.getName()))||void 0===i?void 0:i.opaque)?!(e===n.UP&&t.state.isFluid()):t.state.isFluid()&&r.isFluid())}getGridBuffers(){const[t,e,s]=this.structure.getSize(),i=[],n=[];i.push(0,0,0,t,0,0),n.push(1,0,0,1,0,0),i.push(0,0,0,0,0,s),n.push(0,0,1,0,0,1),i.push(0,0,0,0,e,0),i.push(t,0,0,t,e,0),i.push(0,0,s,0,e,s),i.push(t,0,s,t,e,s),i.push(0,e,0,0,e,s),i.push(t,e,0,t,e,s),i.push(0,e,0,t,e,0),i.push(0,e,s,t,e,s);for(let e=1;e<=t;e+=1)i.push(e,0,0,e,0,s);for(let e=1;e<=s;e+=1)i.push(0,0,e,t,0,e);for(let e=0;e<8+t+s;e+=1)n.push(.8,.8,.8,.8,.8,.8);return{position:this.createBuffer(this.gl.ARRAY_BUFFER,new Float32Array(i)),color:this.createBuffer(this.gl.ARRAY_BUFFER,new Float32Array(n)),length:i.length/3}}getOutlineBuffers(){const t=[],e=[];return this.addCube(t,e,[1,1,1],[0,0,0],[1,1,1]),{position:this.createBuffer(this.gl.ARRAY_BUFFER,new Float32Array(t)),color:this.createBuffer(this.gl.ARRAY_BUFFER,new Float32Array(e)),length:t.length/3}}getInvisibleBlockBuffers(){if(!this.useInvisibleBlockBuffer)return;const t=this.structure.getSize(),e=[],s=[];for(let i=0;i<t[0];i+=1)for(let n=0;n<t[1];n+=1)for(let r=0;r<t[2];r+=1){const t=this.structure.getBlock([i,n,r]);void 0!==t&&(null===t?this.addCube(e,s,[1,.25,.25],[i+.4375,n+.4375,r+.4375],[i+.5625,n+.5625,r+.5625]):\"minecraft:air\"===t.state.getName()?this.addCube(e,s,[.5,.5,1],[i+.375,n+.375,r+.375],[i+.625,n+.625,r+.625]):\"minecraft:cave_air\"===t.state.getName()&&this.addCube(e,s,[.5,1,.5],[i+.375,n+.375,r+.375],[i+.625,n+.625,r+.625]))}return{position:this.createBuffer(this.gl.ARRAY_BUFFER,new Float32Array(e)),color:this.createBuffer(this.gl.ARRAY_BUFFER,new Float32Array(s)),length:e.length/3}}addCube(t,e,s,i,n){t.push(i[0],i[1],i[2],i[0],i[1],n[2]),t.push(n[0],i[1],i[2],n[0],i[1],n[2]),t.push(i[0],i[1],i[2],n[0],i[1],i[2]),t.push(i[0],i[1],n[2],n[0],i[1],n[2]),t.push(i[0],i[1],i[2],i[0],n[1],i[2]),t.push(n[0],i[1],i[2],n[0],n[1],i[2]),t.push(i[0],i[1],n[2],i[0],n[1],n[2]),t.push(n[0],i[1],n[2],n[0],n[1],n[2]),t.push(i[0],n[1],i[2],i[0],n[1],n[2]),t.push(n[0],n[1],i[2],n[0],n[1],n[2]),t.push(i[0],n[1],i[2],n[0],n[1],i[2]),t.push(i[0],n[1],n[2],n[0],n[1],n[2]);for(let t=0;t<24;t+=1)e.push(...s)}createBuffer(t,e){const s=this.gl.createBuffer();return this.gl.bindBuffer(t,s),this.gl.bufferData(t,e,this.gl.DYNAMIC_DRAW),s}updateBuffer(t,e,s){this.gl.bindBuffer(e,t),this.gl.bufferData(e,s,this.gl.STATIC_DRAW)}drawGrid(t){this.setShader(this.gridShaderProgram),this.setVertexAttr(\"vertPos\",3,this.gridBuffers.position),this.setVertexAttr(\"vertColor\",3,this.gridBuffers.color),this.setUniform(\"mView\",t),this.setUniform(\"mProj\",this.projMatrix),this.gl.drawArrays(this.gl.LINES,0,this.gridBuffers.length)}drawInvisibleBlocks(t){this.useInvisibleBlockBuffer&&(this.setShader(this.gridShaderProgram),this.setVertexAttr(\"vertPos\",3,this.invisibleBlockBuffers.position),this.setVertexAttr(\"vertColor\",3,this.invisibleBlockBuffers.color),this.setUniform(\"mView\",t),this.setUniform(\"mProj\",this.projMatrix),this.gl.drawArrays(this.gl.LINES,0,this.invisibleBlockBuffers.length))}drawStructure(t){this.setShader(this.shaderProgram),this.gl.activeTexture(this.gl.TEXTURE0),this.gl.bindTexture(this.gl.TEXTURE_2D,this.atlasTexture),this.setUniform(\"mView\",t),this.setUniform(\"mProj\",this.projMatrix),this.chunks.forEach((t=>{t.forEach((t=>{t.forEach((t=>{t.buffer&&(this.setVertexAttr(\"vertPos\",3,t.buffer.position),this.setVertexAttr(\"texCoord\",2,t.buffer.texCoord),this.setVertexAttr(\"tintColor\",3,t.buffer.tintColor),this.setVertexAttr(\"normal\",3,t.buffer.normal),this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER,t.buffer.index),this.gl.drawElements(this.gl.TRIANGLES,t.buffer.length,this.gl.UNSIGNED_SHORT,0))}))}))}))}drawColoredStructure(t){this.setShader(this.colorShaderProgram),this.setUniform(\"mView\",t),this.setUniform(\"mProj\",this.projMatrix),this.chunks.forEach((t=>{t.forEach((t=>{t.forEach((t=>{t.buffer&&(this.setVertexAttr(\"vertPos\",3,t.buffer.position),this.setVertexAttr(\"blockPos\",3,t.buffer.blockPos),this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER,t.buffer.index),this.gl.drawElements(this.gl.TRIANGLES,t.buffer.length,this.gl.UNSIGNED_SHORT,0))}))}))}))}drawOutline(t,e){this.setShader(this.gridShaderProgram),this.setVertexAttr(\"vertPos\",3,this.outlineBuffers.position),this.setVertexAttr(\"vertColor\",3,this.outlineBuffers.color);const i=s.create();s.copy(i,t),s.translate(i,i,e),this.setUniform(\"mView\",i),this.setUniform(\"mProj\",this.projMatrix),this.gl.drawArrays(this.gl.LINES,0,this.outlineBuffers.length)}setViewport(t,e,s,i){this.gl.viewport(t,e,s,i),this.projMatrix=this.getPerspective()}setShader(t){this.gl.useProgram(t),this.activeShader=t}setVertexAttr(t,e,s){const i=this.gl.getAttribLocation(this.activeShader,t);this.gl.bindBuffer(this.gl.ARRAY_BUFFER,s),this.gl.vertexAttribPointer(i,e,this.gl.FLOAT,!1,0,0),this.gl.enableVertexAttribArray(i)}setUniform(t,e){const s=this.gl.getUniformLocation(this.activeShader,t);this.gl.uniformMatrix4fv(s,!1,e)}}\n/*! *****************************************************************************\nCopyright (c) Microsoft Corporation.\n\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\nPERFORMANCE OF THIS SOFTWARE.\n***************************************************************************** */function Pt(t,e,s,i){return new(s||(s=Promise))((function(n,r){function o(t){try{l(i.next(t))}catch(t){r(t)}}function a(t){try{l(i.throw(t))}catch(t){r(t)}}function l(t){var e;t.done?n(t.value):(e=t.value,e instanceof s?e:new s((function(t){t(e)}))).then(o,a)}l((i=i.apply(t,e||[])).next())}))}class xt{constructor(t,e){this.img=t,this.idMap=e,this.part=16/t.width}getTextureAtlas(){return this.img}getTextureUV(t){var e;return null!==(e=this.idMap[t])&&void 0!==e?e:[0,0,this.part,this.part]}static fromBlobs(t){return Pt(this,void 0,void 0,(function*(){const e=Math.sqrt(Object.keys(t).length+1),s=Math.pow(2,Math.ceil(Math.log(e)/Math.log(2))),i=16*s,n=1/s,r=document.createElement(\"canvas\");r.width=i,r.height=i;const o=r.getContext(\"2d\");this.drawInvalidTexture(o);const a={};let l=1;return yield Promise.all(Object.keys(t).map((e=>Pt(this,void 0,void 0,(function*(){const i=l%s,r=Math.floor(l/s);l+=1,a[e]=[n*i,n*r,n*i+n,n*r+n];const h=yield createImageBitmap(t[e]);o.drawImage(h,0,0,16,16,16*i,16*r,16,16)}))))),new xt(o.getImageData(0,0,i,i),a)}))}static empty(){const t=document.createElement(\"canvas\");t.width=16,t.height=16;const e=t.getContext(\"2d\");return xt.drawInvalidTexture(e),new xt(e.getImageData(0,0,16,16),{})}static drawInvalidTexture(t){t.fillStyle=\"black\",t.fillRect(0,0,16,16),t.fillStyle=\"magenta\",t.fillRect(0,0,8,8),t.fillRect(8,8,8,8)}}var yt,At,St,Bt,Et,Ct,It,kt;!function(t){function e(t,e){return\"number\"==typeof t?new s(t,null!=e?e:t):t}t.target=function(t,e,s,i,r,o){return new n(t,e,s,i,r,o)},t.parameters=function(t,s,n,r,o,a,l){return new i(e(t),e(s),e(n),e(r),e(o),e(a),l)},t.param=e;class s{constructor(t,e){this.min=t,this.max=e}distance(t){const e=(\"number\"==typeof t?t:t.min)-this.max,s=this.min-(\"number\"==typeof t?t:t.max);return e>0?e:Math.max(s,0)}union(t){return new s(Math.min(this.min,t.min),Math.max(this.max,t.max))}static fromJson(t){var e;if(\"number\"==typeof t)return new s(t,t);const[i,n]=null!==(e=k.readArray(t,(t=>k.readNumber(t))))&&void 0!==e?e:[];return new s(null!=i?i:0,null!=n?n:0)}}t.Param=s;class i{constructor(t,e,s,i,n,r,o){this.temperature=t,this.humidity=e,this.continentalness=s,this.erosion=i,this.depth=n,this.weirdness=r,this.offset=o}fittness(t){return F(this.temperature.distance(t.temperature))+F(this.humidity.distance(t.humidity))+F(this.continentalness.distance(t.continentalness))+F(this.erosion.distance(t.erosion))+F(this.depth.distance(t.depth))+F(this.weirdness.distance(t.weirdness))+F(this.offset-t.offset)}space(){return[this.temperature,this.humidity,this.continentalness,this.erosion,this.depth,this.weirdness,new s(this.offset,this.offset)]}static fromJson(t){var e,n;const r=null!==(e=k.readObject(t))&&void 0!==e?e:{};return new i(s.fromJson(r.temperature),s.fromJson(r.humidity),s.fromJson(r.continentalness),s.fromJson(r.erosion),s.fromJson(r.depth),s.fromJson(r.weirdness),null!==(n=k.readInt(r.offset))&&void 0!==n?n:0)}}t.ParamPoint=i;class n{constructor(t,e,s,i,n,r){this.temperature=t,this.humidity=e,this.continentalness=s,this.erosion=i,this.depth=n,this.weirdness=r}get offset(){return 0}toArray(){return[this.temperature,this.humidity,this.continentalness,this.erosion,this.depth,this.weirdness,this.offset]}}t.TargetPoint=n;t.Parameters=class{constructor(t){this.things=t,this.index=new r(t)}find(t){return this.index.search(t,((t,e)=>t.distance(e)))}};class r{constructor(t){this.root=r.build(t.map((([t,e])=>new l(t,e))))}static build(t){if(1===t.length)return t[0];if(t.length<=r.CHILDREN_PER_NODE){const e=t.map((t=>{let e=0;for(let s=0;s<7;s+=1){const i=t.space[s];e+=Math.abs((i.min+i.max)/2)}return{key:e,node:t}})).sort(((t,e)=>t.key-e.key)).map((({node:t})=>t));return new a(e)}let e=1/0,s=-1,i=[];for(let n=0;n<7;++n){r.sort(t,n,!1),i=r.bucketize(t);let o=0;for(const t of i)o+=r.area(t.space);e>o&&(e=o,s=n)}return t=r.sort(t,s,!1),i=r.bucketize(t),i=r.sort(i,s,!0),new a(i.map((t=>r.build(t.children))))}static sort(t,e,s){return t.map((t=>{const i=t.space[e],n=(i.min+i.max)/2;return{key:s?Math.abs(n):n,node:t}})).sort(((t,e)=>t.key-e.key)).map((({node:t})=>t))}static bucketize(t){const e=[];let s=[];const i=Math.pow(10,Math.floor(Math.log(t.length-.01)/Math.log(10)));for(const n of t)s.push(n),s.length<i||(e.push(new a(s)),s=[]);return 0!==s.length&&e.push(new a(s)),e}static area(t){let e=0;for(const s of t)e+=Math.abs(s.max-s.min);return e}search(t,e){return this.root.search(t.toArray(),e).thing()}}r.CHILDREN_PER_NODE=10,t.RTree=r;class o{constructor(t){this.space=t}distance(t){let e=0;for(let s=0;s<7;s+=1)e+=F(this.space[s].distance(t[s]));return e}}t.RNode=o;class a extends o{constructor(t){super(a.buildSpace(t)),this.children=t}static buildSpace(t){let e=[...Array(7)].map((()=>new s(1/0,-1/0)));for(const s of t)e=[...Array(7)].map(((t,i)=>e[i].union(s.space[i])));return e}search(t,e){let s=1/0,i=null;for(const n of this.children){const r=e(n,t);if(s<=r)continue;const o=n.search(t,e),a=n==o?r:e(o,t);s<=a||(s=a,i=o)}return i}}t.RSubTree=a;class l extends o{constructor(t,e){super(t.space()),this.thing=e}search(){return this}}t.RLeaf=l}(yt||(yt={}));class Rt{constructor(t){this.biome=t}getBiome(){return this.biome}static fromJson(t){var e,s;const i=null!==(e=k.readObject(t))&&void 0!==e?e:{},n=null!==(s=k.readString(i.biome))&&void 0!==s?s:\"minecraft:the_void\";return new Rt(n)}}class _t{constructor(t){this.parameters=t}getBiome(t,e,s,i){const n=i(t,e,s);return this.parameters.find(n)}static fromJson(t){var e,s;const i=null!==(e=k.readObject(t))&&void 0!==e?e:{},n=(null!==(s=k.readArray(i.biomes,(t=>{var e;return(t=>{var e;return{biome:null!==(e=k.readString(t.biome))&&void 0!==e?e:\"minecraft:the_void\",parameters:yt.ParamPoint.fromJson(t.parameters)}})(null!==(e=k.readObject(t))&&void 0!==e?e:{})})))&&void 0!==s?s:[]).map((t=>[t.parameters,()=>t.biome]));return new _t(new yt.Parameters(n))}}!function(t){function e(t){return h.apply(t)+.015}function s(t){return u.apply(t)}function i(t){return c.apply(t)}function n(t){return 3*-(Math.abs(Math.abs(t)-.6666667)-.33333334)}t.offset=e,t.factor=s,t.peaks=i,t.peaksAndValleys=n,t.point=function(t,e,s){return{continents:t,erosion:e,weirdness:s,ridges:n(s)}},t.nearWater=function(t,e){return!(t<-.2)&&(t<-.05||Math.abs(e)<.15)},t.shape=function(t,n){return{offset:e(t),factor:s(t),peaks:i(t),nearWater:n}};const r=f(\"beachSpline\",-.15,-.05,0,0,.1,0,-.03,!1,!1),o=f(\"lowSpline\",-.1,-.1,.03,.1,.1,.01,-.03,!1,!1),a=f(\"midSpline\",-.1,-.1,.03,.1,.7,.01,-.03,!0,!0),l=f(\"highSpline\",-.05,.3,.03,.1,1,.01,.01,!0,!0),h=new Z(\"offsetSampler\",(t=>t.continents)).addPoint(-1.1,.044).addPoint(-1.02,-.2222).addPoint(-.51,-.2222).addPoint(-.44,-.12).addPoint(-.18,-.12).addPoint(-.16,r).addPoint(-.15,r).addPoint(-.1,o).addPoint(.25,a).addPoint(1,l),u=new Z(\"Factor-Continents\",(t=>t.continents)).addPoint(-.19,505).addPoint(-.15,d(\"erosionCoast\",800,!0,\"ridgeCoast-OldMountains\")).addPoint(-.1,d(\"erosionInland\",700,!0,\"ridgeInland-OldMountains\")).addPoint(.03,d(\"erosionMidInland\",650,!0,\"ridgeMidInland-OldMountains\")).addPoint(.06,d(\"erosionFarInland\",600,!1,\"ridgeFarInland-OldMountains\")),c=new Z(\"Peaks\",(t=>t.continents)).addPoint(.1,0).addPoint(.2,new Z(\"Peaks-erosion\",(t=>t.erosion)).addPoint(-.8,new Z(\"Peaks-erosion-ridges\",(t=>t.ridges)).addPoint(-1,0).addPoint(.2,0).addPoint(1,new Z(\"Peaks-erosion-ridges-weirdness\",(t=>t.weirdness)).addPoint(-.01,80).addPoint(.01,20))).addPoint(-.4,0));function d(t,e,s,i){const n=new Z(t,(t=>t.erosion)).addPoint(-.6,e).addPoint(-.5,342).addPoint(-.35,e).addPoint(-.25,e).addPoint(-.1,342).addPoint(.03,e);if(s){const t=new Z(\"weirdnessShattered\",(t=>t.weirdness)).addPoint(0,e).addPoint(.1,80),s=new Z(\"ridgesShattered\",(t=>t.ridges)).addPoint(-.9,e).addPoint(-.69,t);n.addPoint(.35,e).addPoint(.45,s).addPoint(.55,s).addPoint(.62,e)}else{const t=new Z(i,(t=>t.ridges)).addPoint(-.7,e).addPoint(-.15,175),s=new Z(i,(t=>t.ridges)).addPoint(.45,e).addPoint(.7,200);n.addPoint(.05,s).addPoint(.4,s).addPoint(.45,t).addPoint(.55,t).addPoint(.58,e)}return n}function f(t,e,s,i,n,r,o,a,l,h){const u=g(N(r,.6,1.5),h),c=g(N(r,.6,1),h),d=g(r,h),f=v(t+\"-widePlateau\",e-.15,.5*r,N(.5,.5,.5)*r,.5*r,.6*r,.5),p=v(t+\"-narrowPlateau\",e,o*r,i*r,.5*r,.6*r,.5),m=v(t+\"-plains\",e,o,o,i,n,.5),b=v(t+\"-plainsFarInland\",e,o,o,i,n,.5),w=new Z(t,(t=>t.ridges)).addPoint(-1,e).addPoint(-.4,m).addPoint(0,n+.07),P=v(t+\"-swamps\",-.02,a,a,i,n,0),x=new Z(t,(t=>t.erosion)).addPoint(-.85,u).addPoint(-.7,c).addPoint(-.4,d).addPoint(-.35,f).addPoint(-.1,p).addPoint(.2,m);return l&&x.addPoint(.4,b).addPoint(.45,w).addPoint(.55,w).addPoint(.58,b),x.addPoint(.7,P),x}function g(t,e){const s=new Z(`M-spline for continentalness: ${t} ${e}`,(t=>t.ridges)),i=p(-1,t,-.7),n=p(1,t,-.7),r=function(t){return.5*(1-t)/(.46082947*(1-.5*(1-t)))-1.17}(t);if(-.65<r&&r<1){const e=p(-.65,t,-.7),o=p(-.75,t,-.7),a=m(i,o,-1,-.75);s.addPoint(-1,i,a),s.addPoint(-.75,o),s.addPoint(-.65,e);const l=p(r,t,-.7),h=m(l,n,r,1);s.addPoint(r-.01,l),s.addPoint(r,l,h),s.addPoint(1,n,h)}else{const t=m(i,n,-1,1);e?(s.addPoint(-1,Math.max(.2,i)),s.addPoint(0,N(.5,i,n),t)):s.addPoint(-1,i,t),s.addPoint(1,n,t)}return s}function p(t,e,s){const i=.46082947*(t+1.17)*(1-.5*(1-e))-.5*(1-e);return t<s?Math.max(i,-.2222):Math.max(i,0)}function m(t,e,s,i){return(e-t)/(i-s)}function v(t,e,s,i,n,r,o){const a=Math.max(.5*(s-e),o),l=5*(i-s);return new Z(t,(t=>t.ridges)).addPoint(-1,e,a).addPoint(-.4,s,Math.min(a,l)).addPoint(0,i,l).addPoint(.4,n,2*(n-i)).addPoint(1,r,.7*(r-n))}}(At||(At={}));class Ft{constructor(t,e,s,i,n,r){this.cellCountY=e,this.cellCountZ=s,this.cellMinY=n,this.filler=r,this.noise000=0,this.noise001=0,this.noise100=0,this.noise101=0,this.noise010=0,this.noise011=0,this.noise110=0,this.noise111=0,this.valueXZ00=0,this.valueXZ10=0,this.valueXZ01=0,this.valueXZ11=0,this.valueZ0=0,this.valueZ1=0,this.minCellX=i[0]*t,this.minCellZ=i[1]*s,this.slice0=Ft.allocateSlice(e,s),this.slice1=Ft.allocateSlice(e,s)}static allocateSlice(t,e){const s=Array(e+1);for(let i=0;i<e+1;i+=1)s[i]=Array(t+1);return s}initializeForFirstCellX(){this.fillSlice(this.slice0,this.minCellX)}advanceCellX(t){this.fillSlice(this.slice1,this.minCellX+t+1)}fillSlice(t,e){for(let s=0;s<this.cellCountZ+1;s+=1)this.filler(t[s],e,this.minCellZ+s,this.cellMinY,this.cellCountY)}selectCellYZ(t,e){this.noise000=this.slice0[e][t],this.noise001=this.slice0[e+1][t],this.noise100=this.slice1[e][t],this.noise101=this.slice1[e+1][t],this.noise010=this.slice0[e][t+1],this.noise011=this.slice0[e+1][t+1],this.noise110=this.slice1[e][t+1],this.noise111=this.slice1[e+1][t+1]}updateForY(t){this.valueXZ00=N(t,this.noise000,this.noise010),this.valueXZ10=N(t,this.noise100,this.noise110),this.valueXZ01=N(t,this.noise001,this.noise011),this.valueXZ11=N(t,this.noise101,this.noise111)}updateForX(t){this.valueZ0=N(t,this.valueXZ00,this.valueXZ10),this.valueZ1=N(t,this.valueXZ01,this.valueXZ11)}calculateValue(t){return N(t,this.valueZ0,this.valueZ1)}swapSlices(){[this.slice0,this.slice1]=[this.slice1,this.slice0]}}class Mt{constructor(t,e,s,i,n,r,o,a){this.cellWidth=t,this.cellHeight=e,this.cellCountY=s,this.biomeSource=i,this.settings=n,this.shapeOverride=a;const l=new W(o),h=n.useLegacyRandom?new W(o):l.fork();this.blendedNoise=new Y(h),l.consume(8),this.temperatureNoise=new X(new J(o),r.temperature),this.humidityNoise=new X(new J(o+BigInt(1)),r.humidity),this.continentalnessNoise=new X(new J(o+BigInt(2)),r.continentalness),this.erosionNoise=new X(new J(o+BigInt(3)),r.erosion),this.weirdnessNoise=new X(new J(o+BigInt(4)),r.weirdness),this.offsetNoise=new X(new J(o+BigInt(5)),r.shift),this.mountainPeakNoise=new X(l.fork(),{firstOctave:-16,amplitudes:[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]})}getClimate(t,e,s){const i=t+this.getOffset(t,0,s),n=e+this.getOffset(e,s,t),r=s+this.getOffset(s,t,0),o=this.temperatureNoise.sample(i,n,r),a=this.humidityNoise.sample(i,n,r),l=this.continentalnessNoise.sample(i,0,r),h=this.erosionNoise.sample(i,0,r),u=this.weirdnessNoise.sample(i,0,r),c=At.offset(At.point(l,h,u)),d=Mt.computeDimensionDensity(1,-.51875,4*e)+c;return new yt.TargetPoint(o,a,l,h,d,u)}getTerrainShape(t,e){if(this.shapeOverride)return this.shapeOverride;const s=t+this.getOffset(t,0,e),i=e+this.getOffset(e,t,0),n=this.continentalnessNoise.sample(s,0,i),r=this.erosionNoise.sample(s,0,i),o=this.weirdnessNoise.sample(s,0,i),a=At.point(n,r,o),l=At.nearWater(n,o);return At.shape(a,l)}getOffset(t,e,s){return 4*this.offsetNoise.sample(t,e,s)}fillNoiseColumn(t,e,s,i,n){const r=e*this.cellWidth>>2,o=s*this.cellWidth>>2,{offset:a,factor:l,peaks:h}=this.getTerrainShape(r,o),u=684.412*this.settings.sampling.xzScale,c=684.412*this.settings.sampling.yScale,d=u/this.settings.sampling.xzFactor,f=c/this.settings.sampling.yFactor;for(let r=0;r<=n;r+=1){const n=r+i,o=this.blendedNoise.sample(e,n,s,u,c,d,f),g=this.samplePeakNoise(h,e*this.cellHeight,s*this.cellHeight)/128,p=this.computeInitialDensity(n*this.cellHeight,a,l,0,g)+o;t[r]=this.applySlide(p,n)}}samplePeakNoise(t,e,s){if(0===t)return 0;const i=3e3/this.cellWidth,n=this.mountainPeakNoise.sample(e*i,0,s*i);return n>0?t*n:t/2*n}computeInitialDensity(t,e,s,i,n){const r=(Mt.computeDimensionDensity(this.settings.densityFactor,this.settings.densityOffset,t,i)+e+n)*s;return r*(r>0?4:1)}applySlide(t,e){const s=e-Math.floor(this.settings.minY/this.cellHeight);if(this.settings.topSlide.size>0){const e=(this.cellCountY-s-this.settings.topSlide.offset)/this.settings.topSlide.size;t=U(this.settings.topSlide.target,t,e)}if(this.settings.bottomSlide.size>0){const e=(s-this.settings.bottomSlide.offset)/this.settings.bottomSlide.size;t=U(this.settings.bottomSlide.target,t,e)}return t}static computeDimensionDensity(t,e,s,i=0){return t*(1-s/128+i)+e}}class Nt{constructor(t,e,s,i){this.seed=t,this.biomeSource=e,this.settings=s,this.cellHeight=s.noise.ySize<<2,this.cellWidth=s.noise.xzSize<<2,this.cellCountXZ=Math.floor(16/this.cellWidth),this.cellCountY=Math.floor(s.noise.height/this.cellHeight),this.sampler=new Mt(this.cellWidth,this.cellHeight,this.cellCountY,e,s.noise,s.octaves,t,i)}fill(t){const e=Math.max(t.minY,this.settings.noise.minY),s=Math.min(t.maxY,this.settings.noise.minY+this.settings.noise.height),i=Math.floor(e/this.cellHeight),n=Math.floor((s-e)/this.cellHeight),r=I.minBlockX(t.pos),o=I.minBlockZ(t.pos),a=new Ft(this.cellCountXZ,n,this.cellCountXZ,t.pos,i,this.sampler.fillNoiseColumn.bind(this.sampler)),l=Array(a);l.forEach((t=>t.initializeForFirstCellX()));for(let e=0;e<this.cellCountXZ;e+=1){l.forEach((t=>t.advanceCellX(e)));for(let s=0;s<this.cellCountXZ;s+=1){let h=t.getOrCreateSection(t.sectionsCount-1);for(let u=n-1;u>=0;u-=1){l.forEach((t=>t.selectCellYZ(u,s)));for(let n=this.cellHeight-1;n>=0;n-=1){const c=(i+u)*this.cellHeight+n,d=15&c,f=t.getSectionIndex(c);t.getSectionIndex(h.minBlockY)!==f&&(h=t.getOrCreateSection(f));const g=n/this.cellHeight;l.forEach((t=>t.updateForY(g)));for(let t=0;t<this.cellWidth;t+=1){const i=r+e*this.cellWidth+t,n=15&i,u=t/this.cellWidth;l.forEach((t=>t.updateForX(u)));for(let t=0;t<this.cellWidth;t+=1){const e=o+s*this.cellWidth+t,r=15&e,l=t/this.cellWidth,u=a.calculateValue(l),f=this.baseState(i,c,e,u);f.equals(B.AIR)||h.setBlockState(n,d,r,f)}}}}}l.forEach((t=>t.swapSlices()))}}baseState(t,e,s,i){return(i=(i=M(i/200,-1,1))/2-i*i*i/24)>0?this.settings.defaultBlock:e<this.settings.seaLevel?this.settings.defaultFluid:B.AIR}}!function(t){t.fromJson=function(t){var e,s,i,n,r,o,a,l,h,u,c,d;const f=null!==(e=k.readObject(t))&&void 0!==e?e:{};return{minY:null!==(s=k.readInt(f.min_y))&&void 0!==s?s:0,height:null!==(i=k.readInt(f.height))&&void 0!==i?i:256,xzSize:null!==(n=k.readInt(f.size_horizontal))&&void 0!==n?n:1,ySize:null!==(r=k.readInt(f.size_vertical))&&void 0!==r?r:1,densityFactor:null!==(o=k.readNumber(f.density_factor))&&void 0!==o?o:0,densityOffset:null!==(a=k.readNumber(f.density_offset))&&void 0!==a?a:0,sampling:Bt.fromJson(f.sampling),topSlide:Et.fromJson(f.top_slide),bottomSlide:Et.fromJson(f.bottom_slide),useSimplexSurfaceNoise:null!==(l=k.readBoolean(f.simplex_surface_noise))&&void 0!==l&&l,randomDensityOffset:null!==(h=k.readBoolean(f.random_density_offset))&&void 0!==h&&h,islandNoiseOverride:null!==(u=k.readBoolean(f.island_noise_override))&&void 0!==u&&u,isAmplified:null!==(c=k.readBoolean(f.amplified))&&void 0!==c&&c,useLegacyRandom:null!==(d=k.readBoolean(f.use_legacy_random))&&void 0!==d&&d}}}(St||(St={})),function(t){t.fromJson=function(t){var e,s,i,n,r;const o=null!==(e=k.readObject(t))&&void 0!==e?e:{};return{xzScale:null!==(s=k.readNumber(o.xz_scale))&&void 0!==s?s:1,yScale:null!==(i=k.readNumber(o.y_scale))&&void 0!==i?i:1,xzFactor:null!==(n=k.readNumber(o.xz_factor))&&void 0!==n?n:80,yFactor:null!==(r=k.readNumber(o.y_factor))&&void 0!==r?r:80}}}(Bt||(Bt={})),function(t){t.fromJson=function(t){var e,s,i,n;const r=null!==(e=k.readObject(t))&&void 0!==e?e:{};return{target:null!==(s=k.readNumber(r.target))&&void 0!==s?s:0,size:null!==(i=k.readInt(r.size))&&void 0!==i?i:0,offset:null!==(n=k.readInt(r.offset))&&void 0!==n?n:0}}}(Et||(Et={})),function(t){t.fromJson=function(t){var e,s,i,n,r,o,a,l,h,u;const c=null!==(e=k.readObject(t))&&void 0!==e?e:{};return{structures:It.fromJson(c.structures),noise:St.fromJson(c.noise),octaves:kt.fromJson(c.octaves),defaultBlock:B.fromJson(c.default_block),defaultFluid:B.fromJson(c.default_fluid),bedrockRoofPosition:null!==(s=k.readInt(c.bedrock_roof_position))&&void 0!==s?s:0,bedrockFloorPosition:null!==(i=k.readInt(c.bedrock_floor_position))&&void 0!==i?i:0,seaLevel:null!==(n=k.readInt(c.sea_level))&&void 0!==n?n:0,disableMobGeneration:null!==(r=k.readBoolean(c.disable_mob_generation))&&void 0!==r&&r,aquifersEnabled:null!==(o=k.readBoolean(c.aquifers_enabled))&&void 0!==o&&o,noiseCavesEnabled:null!==(a=k.readBoolean(c.noise_caves_enabled))&&void 0!==a&&a,deepslateEnabled:null!==(l=k.readBoolean(c.deepslate_enabled))&&void 0!==l&&l,oreVeinsEnabled:null!==(h=k.readBoolean(c.ore_veins_enabled))&&void 0!==h&&h,noodleCavesEnabled:null!==(u=k.readBoolean(c.noodle_caves_enabled))&&void 0!==u&&u}}}(Ct||(Ct={})),function(t){t.fromJson=function(t){var e;const s=null!==(e=k.readObject(t))&&void 0!==e?e:{};return{stronghold:k.compose(s.stronghold,k.readObject,(t=>{var e,s,i;return{distance:null!==(e=k.readInt(t.distance))&&void 0!==e?e:0,spread:null!==(s=k.readInt(t.spread))&&void 0!==s?s:0,count:null!==(i=k.readInt(t.count))&&void 0!==i?i:0}})),structures:k.readMap(s.structures,(t=>{var e;return(t=>{var e,s,i;return{spacing:null!==(e=k.readInt(t.spacing))&&void 0!==e?e:0,separation:null!==(s=k.readInt(t.separation))&&void 0!==s?s:0,salt:null!==(i=k.readInt(t.salt))&&void 0!==i?i:0}})(null!==(e=k.readObject(t))&&void 0!==e?e:{})}))}}}(It||(It={})),function(t){t.fromJson=function(t){var e;const s=null!==(e=k.readObject(t))&&void 0!==e?e:{};return{temperature:R.fromJson(s.temperature),humidity:R.fromJson(s.humidity),continentalness:R.fromJson(s.continentalness),erosion:R.fromJson(s.erosion),weirdness:R.fromJson(s.weirdness),shift:R.fromJson(s.shift)}}}(kt||(kt={}));export{Y as BlendedNoise,nt as BlockColors,lt as BlockDefinition,ft as BlockModel,o as BlockPos,B as BlockState,C as Chunk,I as ChunkPos,E as ChunkSection,yt as Climate,n as Direction,Rt as FixedBiome,V as ImprovedNoise,k as Json,_t as MultiNoise,h as NbtReader,u as NbtWriter,Nt as NoiseChunkGenerator,Ct as NoiseGeneratorSettings,Ft as NoiseInterpolator,kt as NoiseOctaves,R as NoiseParameters,Mt as NoiseSampler,Bt as NoiseSamplingSettings,St as NoiseSettings,Et as NoiseSlideSettings,X as NormalNoise,j as PerlinNoise,H as PerlinSimplexNoise,W as Random,z as SimplexNoise,Z as Spline,_ as Structure,wt as StructureRenderer,It as StructureSettings,At as TerrainShaper,xt as TextureAtlas,J as WorldgenRandom,L as binarySearch,M as clamp,U as clampedLerp,A as getListTag,S as getOptional,y as getTag,N as lerp,T as lerp2,O as lerp3,f as read,p as readChunk,d as readCompressed,g as readRegion,c as readUncompressed,D as smoothstep,F as square,l as tagNames,a as tagTypes,b as write,P as writeChunk,v as writeCompressed,w as writeRegion,m as writeUncompressed};\n//# sourceMappingURL=deepslate.esm.js.map\n","import{useState as n,useReducer as t,useEffect as e,useLayoutEffect as r,useRef as u,useImperativeHandle as o,useMemo as i,useCallback as l,useContext as f,useDebugValue as c}from\"preact/hooks\";export*from\"preact/hooks\";import{Component as a,createElement as s,options as h,toChildArray as p,Fragment as v,render as d,hydrate as m,cloneElement as y,createRef as b,createContext as _}from\"preact\";export{createElement,createContext,createRef,Fragment,Component}from\"preact\";function C(n,t){for(var e in t)n[e]=t[e];return n}function S(n,t){for(var e in n)if(\"__source\"!==e&&!(e in t))return!0;for(var r in t)if(\"__source\"!==r&&n[r]!==t[r])return!0;return!1}function E(n){this.props=n}function g(n,t){function e(n){var e=this.props.ref,r=e==n.ref;return!r&&e&&(e.call?e(null):e.current=null),t?!t(this.props,n)||!r:S(this.props,n)}function r(t){return this.shouldComponentUpdate=e,s(n,t)}return r.displayName=\"Memo(\"+(n.displayName||n.name)+\")\",r.prototype.isReactComponent=!0,r.__f=!0,r}(E.prototype=new a).isPureReactComponent=!0,E.prototype.shouldComponentUpdate=function(n,t){return S(this.props,n)||S(this.state,t)};var w=h.__b;h.__b=function(n){n.type&&n.type.__f&&n.ref&&(n.props.ref=n.ref,n.ref=null),w&&w(n)};var R=\"undefined\"!=typeof Symbol&&Symbol.for&&Symbol.for(\"react.forward_ref\")||3911;function x(n){function t(t,e){var r=C({},t);return delete r.ref,n(r,(e=t.ref||e)&&(\"object\"!=typeof e||\"current\"in e)?e:null)}return t.$$typeof=R,t.render=t,t.prototype.isReactComponent=t.__f=!0,t.displayName=\"ForwardRef(\"+(n.displayName||n.name)+\")\",t}var N=function(n,t){return null==n?null:p(p(n).map(t))},k={map:N,forEach:N,count:function(n){return n?p(n).length:0},only:function(n){var t=p(n);if(1!==t.length)throw\"Children.only\";return t[0]},toArray:p},A=h.__e;h.__e=function(n,t,e){if(n.then)for(var r,u=t;u=u.__;)if((r=u.__c)&&r.__c)return null==t.__e&&(t.__e=e.__e,t.__k=e.__k),r.__c(n,t);A(n,t,e)};var O=h.unmount;function L(){this.__u=0,this.t=null,this.__b=null}function U(n){var t=n.__.__c;return t&&t.__e&&t.__e(n)}function D(n){var t,e,r;function u(u){if(t||(t=n()).then(function(n){e=n.default||n},function(n){r=n}),r)throw r;if(!e)throw t;return s(e,u)}return u.displayName=\"Lazy\",u.__f=!0,u}function F(){this.u=null,this.o=null}h.unmount=function(n){var t=n.__c;t&&t.__R&&t.__R(),t&&!0===n.__h&&(n.type=null),O&&O(n)},(L.prototype=new a).__c=function(n,t){var e=t.__c,r=this;null==r.t&&(r.t=[]),r.t.push(e);var u=U(r.__v),o=!1,i=function(){o||(o=!0,e.__R=null,u?u(l):l())};e.__R=i;var l=function(){if(!--r.__u){if(r.state.__e){var n=r.state.__e;r.__v.__k[0]=function n(t,e,r){return t&&(t.__v=null,t.__k=t.__k&&t.__k.map(function(t){return n(t,e,r)}),t.__c&&t.__c.__P===e&&(t.__e&&r.insertBefore(t.__e,t.__d),t.__c.__e=!0,t.__c.__P=r)),t}(n,n.__c.__P,n.__c.__O)}var t;for(r.setState({__e:r.__b=null});t=r.t.pop();)t.forceUpdate()}},f=!0===t.__h;r.__u++||f||r.setState({__e:r.__b=r.__v.__k[0]}),n.then(i,i)},L.prototype.componentWillUnmount=function(){this.t=[]},L.prototype.render=function(n,t){if(this.__b){if(this.__v.__k){var e=document.createElement(\"div\"),r=this.__v.__k[0].__c;this.__v.__k[0]=function n(t,e,r){return t&&(t.__c&&t.__c.__H&&(t.__c.__H.__.forEach(function(n){\"function\"==typeof n.__c&&n.__c()}),t.__c.__H=null),null!=(t=C({},t)).__c&&(t.__c.__P===r&&(t.__c.__P=e),t.__c=null),t.__k=t.__k&&t.__k.map(function(t){return n(t,e,r)})),t}(this.__b,e,r.__O=r.__P)}this.__b=null}var u=t.__e&&s(v,null,n.fallback);return u&&(u.__h=null),[s(v,null,t.__e?null:n.children),u]};var M=function(n,t,e){if(++e[1]===e[0]&&n.o.delete(t),n.props.revealOrder&&(\"t\"!==n.props.revealOrder[0]||!n.o.size))for(e=n.u;e;){for(;e.length>3;)e.pop()();if(e[1]<e[0])break;n.u=e=e[2]}};function T(n){return this.getChildContext=function(){return n.context},n.children}function j(n){var t=this,e=n.i;t.componentWillUnmount=function(){d(null,t.l),t.l=null,t.i=null},t.i&&t.i!==e&&t.componentWillUnmount(),n.__v?(t.l||(t.i=e,t.l={nodeType:1,parentNode:e,childNodes:[],appendChild:function(n){this.childNodes.push(n),t.i.appendChild(n)},insertBefore:function(n,e){this.childNodes.push(n),t.i.appendChild(n)},removeChild:function(n){this.childNodes.splice(this.childNodes.indexOf(n)>>>1,1),t.i.removeChild(n)}}),d(s(T,{context:t.context},n.__v),t.l)):t.l&&t.componentWillUnmount()}function I(n,t){return s(j,{__v:n,i:t})}(F.prototype=new a).__e=function(n){var t=this,e=U(t.__v),r=t.o.get(n);return r[0]++,function(u){var o=function(){t.props.revealOrder?(r.push(u),M(t,n,r)):u()};e?e(o):o()}},F.prototype.render=function(n){this.u=null,this.o=new Map;var t=p(n.children);n.revealOrder&&\"b\"===n.revealOrder[0]&&t.reverse();for(var e=t.length;e--;)this.o.set(t[e],this.u=[1,0,this.u]);return n.children},F.prototype.componentDidUpdate=F.prototype.componentDidMount=function(){var n=this;this.o.forEach(function(t,e){M(n,e,t)})};var W=\"undefined\"!=typeof Symbol&&Symbol.for&&Symbol.for(\"react.element\")||60103,P=/^(?:accent|alignment|arabic|baseline|cap|clip(?!PathU)|color|fill|flood|font|glyph(?!R)|horiz|marker(?!H|W|U)|overline|paint|stop|strikethrough|stroke|text(?!L)|underline|unicode|units|v|vector|vert|word|writing|x(?!C))[A-Z]/,V=function(n){return(\"undefined\"!=typeof Symbol&&\"symbol\"==typeof Symbol()?/fil|che|rad/i:/fil|che|ra/i).test(n)};function z(n,t,e){return null==t.__k&&(t.textContent=\"\"),d(n,t),\"function\"==typeof e&&e(),n?n.__c:null}function B(n,t,e){return m(n,t),\"function\"==typeof e&&e(),n?n.__c:null}a.prototype.isReactComponent={},[\"componentWillMount\",\"componentWillReceiveProps\",\"componentWillUpdate\"].forEach(function(n){Object.defineProperty(a.prototype,n,{configurable:!0,get:function(){return this[\"UNSAFE_\"+n]},set:function(t){Object.defineProperty(this,n,{configurable:!0,writable:!0,value:t})}})});var H=h.event;function Z(){}function Y(){return this.cancelBubble}function $(){return this.defaultPrevented}h.event=function(n){return H&&(n=H(n)),n.persist=Z,n.isPropagationStopped=Y,n.isDefaultPrevented=$,n.nativeEvent=n};var q,G={configurable:!0,get:function(){return this.class}},J=h.vnode;h.vnode=function(n){var t=n.type,e=n.props,r=e;if(\"string\"==typeof t){for(var u in r={},e){var o=e[u];\"value\"===u&&\"defaultValue\"in e&&null==o||(\"defaultValue\"===u&&\"value\"in e&&null==e.value?u=\"value\":\"download\"===u&&!0===o?o=\"\":/ondoubleclick/i.test(u)?u=\"ondblclick\":/^onchange(textarea|input)/i.test(u+t)&&!V(e.type)?u=\"oninput\":/^on(Ani|Tra|Tou|BeforeInp)/.test(u)?u=u.toLowerCase():P.test(u)?u=u.replace(/[A-Z0-9]/,\"-$&\").toLowerCase():null===o&&(o=void 0),r[u]=o)}\"select\"==t&&r.multiple&&Array.isArray(r.value)&&(r.value=p(e.children).forEach(function(n){n.props.selected=-1!=r.value.indexOf(n.props.value)})),\"select\"==t&&null!=r.defaultValue&&(r.value=p(e.children).forEach(function(n){n.props.selected=r.multiple?-1!=r.defaultValue.indexOf(n.props.value):r.defaultValue==n.props.value})),n.props=r}t&&e.class!=e.className&&(G.enumerable=\"className\"in e,null!=e.className&&(r.class=e.className),Object.defineProperty(r,\"className\",G)),n.$$typeof=W,J&&J(n)};var K=h.__r;h.__r=function(n){K&&K(n),q=n.__c};var Q={ReactCurrentDispatcher:{current:{readContext:function(n){return q.__n[n.__c].props.value}}}},X=1,nn=2,tn=3,en=4,rn=5;function un(n,t){return t()}var on=\"object\"==typeof performance&&\"function\"==typeof performance.now?performance.now.bind(performance):function(){return Date.now()},ln=\"16.8.0\";function fn(n){return s.bind(null,n)}function cn(n){return!!n&&n.$$typeof===W}function an(n){return cn(n)?y.apply(null,arguments):n}function sn(n){return!!n.__k&&(d(null,n),!0)}function hn(n){return n&&(n.base||1===n.nodeType&&n)||null}var pn=function(n,t){return n(t)},vn=v;export default{useState:n,useReducer:t,useEffect:e,useLayoutEffect:r,useRef:u,useImperativeHandle:o,useMemo:i,useCallback:l,useContext:f,useDebugValue:c,version:\"16.8.0\",Children:k,render:z,hydrate:B,unmountComponentAtNode:sn,createPortal:I,createElement:s,createContext:_,createFactory:fn,cloneElement:an,createRef:b,Fragment:v,isValidElement:cn,findDOMNode:hn,Component:a,PureComponent:E,memo:g,forwardRef:x,unstable_batchedUpdates:pn,StrictMode:v,Suspense:L,SuspenseList:F,lazy:D,__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:Q};export{ln as version,k as Children,z as render,B as hydrate,sn as unmountComponentAtNode,I as createPortal,fn as createFactory,an as cloneElement,cn as isValidElement,hn as findDOMNode,E as PureComponent,g as memo,x as forwardRef,pn as unstable_batchedUpdates,vn as StrictMode,L as Suspense,F as SuspenseList,D as lazy,Q as __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,X as unstable_ImmediatePriority,nn as unstable_UserBlockingPriority,tn as unstable_NormalPriority,en as unstable_LowPriority,rn as unstable_IdlePriority,un as unstable_runWithPriority,on as unstable_now};\n//# sourceMappingURL=compat.module.js.map\n"],"names":["n","u","i","t","r","f","e","n2","l2","u2","parentNode","removeChild","i2","t2","o2","r2","arguments","f2","length","push","children","defaultProps","v","type","props","key","ref","__k","__","__b","__e","__d","__c","__h","constructor","__v","n$1","vnode","this","context","d","indexOf","base","_","b","__r","debounceRendering","sort","n3","some","__P","c","I","__n","ownerSVGElement","T","e2","c2","s2","a2","h","p2","_2","k2","b2","m2","w2","A2","P2","Array","isArray","y","g","x","value","L","appendChild","nextSibling","insertBefore","setProperty","test","style","cssText","P","replace","toLowerCase","slice","l","addEventListener","H","$","removeEventListener","setAttribute","removeAttribute","event","v2","d2","g2","x2","contextType","__E","prototype","render","p","M","sub","state","__s","getDerivedStateFromProps","componentWillMount","componentDidMount","componentWillReceiveProps","shouldComponentUpdate","forEach","componentWillUpdate","componentDidUpdate","getChildContext","getSnapshotBeforeUpdate","m","y2","localName","nodeType","document","createTextNode","createElementNS","createElement","is","data","call","childNodes","dangerouslySetInnerHTML","attributes","name","__html","innerHTML","C","A","firstChild","s","checked","j","diffed","l3","u3","current","unmount","z","componentWillUnmount","a","getDerivedStateFromError","setState","componentDidCatch","k","forceUpdate","Promise","then","bind","resolve","setTimeout","EMPTY$1","obj","url","route2","opts","ret","reg","match","matches","split","decodeURIComponent","join","segmentize","max","Math","i$12","charAt","param","flags","plus","star","val","map","default","rank","index","path","rankSegment","rankChild","segment","customHistory","ROUTERS","subscribers","EMPTY","location","getCurrentLocation","pathname","search","canRoute","history","routeTo","didRoute","node","getAttribute","href","target","route","ctrlKey","metaKey","altKey","shiftKey","button","currentTarget","prevent","stopImmediatePropagation","stopPropagation","preventDefault","String","nodeName","toUpperCase","hasAttribute","routeFromLink","eventListenersInitialized","Router","Component$$1","getCurrentUrl","delegateLinkHandler","__proto__","Object","create","Router2","static","onChange","toChildArray","getMatchingChildren","updating","this$1","unlisten","listen","location2","splice","invoke","filter","prepareVNodeForRanking","pathRankSort","exec","newProps","cloneElement","Boolean","ref$1","active","previous","previousUrl","router","Component","Link","assign","onClick","handleLinkClick","Route","component","o","__H","w","requestAnimationFrame","t3","cancelAnimationFrame","defineProperty","Path_1","start","relativePath2","reduce","pop","[object Object]","modelArr","contextArr","end","Path","element","modelPush","contextPush","copy","newElement","startsWith","model","ModelPath","other","every","offset","fn","thisArg","_a","get","set","super","shift","Errors_1","errors","error","params","exact","equals","Symbol","iterator","Errors","str","utils","escapeString","dec2hex","dec","toString","substr","arr","Uint8Array","crypto","getRandomValues","from","DataModel_1","require$$0","require$$1","utils_1","require$$2","schema","options","_b","_c","_d","historyMax","verbose","wrapLists","initialData","DataModel","listeners","JSON","stringify","historyIndex","listener","newHistory","silentInvalidate","invalidated","loose","validate","invalidate","silent","getArray","reset","id","hexId","isNaN","last","log","parse","withModel","clear","tempErrors","add","res","entries","exports","category","enabled","keep","optional","pathPush","suggest","validationOption","hook","args","canUpdate","update","mods","__spreadValues","Mod","__spreadProps","BooleanNode","Node_1","Base","boolean","ListNode","config","min","minLength","maxLength","Infinity","between","nextIndex","navigate","parseInt","newObj","_a2","list","SwitchNode","cases","activeCase","concat","fallback","sorter","priority","matchedCases","ListNode_1","SwitchNode_1","DataModel_12","choices","switchNode","choice","isValid","XOrList","ChoiceNode","change","presetNode","objectNode","presets","keys","MapNode","validation","NumberNode","integer","color","Number","isInteger","number","Node_12","Path_12","Errors_12","utils_12","require$$3","require$$4","fields","Switch","Case","defaultFields","__restKey","getActiveFields","switchValue","relativePath","getChildModelPath","childKey","caseFields","caseKeys","pathWithContext","getModel","disableSwitchContext","includes","pathElements","activeFields","existingKeys","quoteString","filterPath","filterField","activeKeys","forcedKeys","Set","newValue","object","Reference","schemas2","transform","StringNode","isEnum","enum","isValidator","validator","collections","getValues","pool","allowTag","isDefinition","allowUnknown","additional","values","string","Hook","Registries","registry","warn","ValidationOption","__createBinding2","__createBinding","k22","enumerable","__exportStar","exports2","hasOwnProperty","require$$5","require$$6","require$$7","require$$8","require$$9","require$$10","require$$11","require$$12","require$$13","require$$14","require$$15","Collections","register","core_12","StringNode2","Reference2","ObjectNode","Name","Properties","Opt","level","forceRange","bounds","allowBinomial","choiceContext","minecraft:alternative","terms","minecraft:block_state_property","block","properties","minecraft:damage_source_properties","predicate","minecraft:entity_properties","entity","minecraft:entity_scores","scores","Range","minecraft:inverted","term","minecraft:killed_by_player","inverse","minecraft:location_check","offsetX","offsetY","offsetZ","minecraft:match_tool","minecraft:random_chance","chance","minecraft:random_chance_with_looting","looting_multiplier","minecraft:reference","minecraft:table_bonus","enchantment","chances","minecraft:time_check","period","minecraft:weather_check","raining","thundering","Common_12","StateChoice","item","tag","count","durability","potion","nbt","enchantments","levels","fluid","position","biome","feature","dimension","light","LocationFields","stat","minecraft:mined","minecraft:crafted","minecraft:used","minecraft:broken","minecraft:picked_up","minecraft:dropped","minecraft:killed","minecraft:killed_by","minecraft:custom","gamemode","advancements","recipes","stats","amplifier","duration","ambient","visible","absolute","horizontal","team","distance","is_on_fire","is_sneaking","is_sprinting","is_swimming","is_baby","equipment","player","effects","is_explosion","is_fire","is_magic","is_projectile","is_lightning","bypasses_armor","bypasses_invulnerability","bypasses_magic","source_entity","direct_entity","dealt","taken","blocked","Advancement","core_1","Common_1","Predicates_1","display","icon","title","description","background","frame","show_toast","announce_to_chat","hidden","parent","criteria","requirements","rewards","function","loot","experience","requirement","trigger","conditions","minecraft:bee_nest_destroyed","num_bees_inside","minecraft:bred_animals","partner","child","minecraft:brewed_potion","minecraft:changed_dimension","to","minecraft:channeled_lightning","victims","minecraft:construct_beacon","minecraft:consume_item","minecraft:cured_zombie_villager","villager","zombie","minecraft:effects_changed","minecraft:enter_block","minecraft:enchanted_item","minecraft:entity_hurt_player","damage","minecraft:entity_killed_player","killing_blow","minecraft:filled_bucket","minecraft:fishing_rod_hooked","minecraft:hero_of_the_village","minecraft:inventory_changed","slots","empty","occupied","full","items","minecraft:item_durability_changed","delta","minecraft:killed_by_crossbow","unique_entity_types","minecraft:levitation","minecraft:location","minecraft:nether_travel","entered","exited","minecraft:placed_block","minecraft:player_hurt_entity","minecraft:player_killed_entity","minecraft:recipe_unlocked","recipe","minecraft:safely_harvest_honey","minecraft:slept_in_bed","minecraft:slide_down_block","minecraft:shot_crossbow","minecraft:summoned_entity","minecraft:tame_animal","minecraft:used_ender_eye","minecraft:used_totem","minecraft:villager_trade","minecraft:voluntary_exile","Condition","ObjectOrList","condition","ConditionCases","LootContext","Map","requires","allows","LootTable","LootContext_1","functionsAndConditions","functions","contextMap","collectionID","getNode","getAvailableOptions","providedContext","tableType","LootTableTypes","conditionSwtichNode","compileSwitchNode","LootConditions","functionSwtichNode","LootFunctions","entitySourceSwtichNode","LootEntitySources","copySourceSwtichNode","LootCopySources","pools","rolls","bonus_rolls","weightMod","weight","quality","minecraft:alternatives","minecraft:dynamic","minecraft:group","minecraft:item","minecraft:loot_table","minecraft:sequence","minecraft:tag","expand","minecraft:apply_bonus","formula","parameters","bonusMultiplier","extra","probability","minecraft:copy_name","source","minecraft:copy_nbt","ops","getter","op","minecraft:copy_state","minecraft:enchant_randomly","minecraft:enchant_with_levels","treasure","minecraft:exploration_map","destination","decoration","zoom","search_radius","skip_existing_chunks","minecraft:fill_player_head","minecraft:limit_count","limit","minecraft:looting_enchant","minecraft:set_attributes","modifiers","minecraft:set_contents","minecraft:set_count","minecraft:set_damage","minecraft:set_loot_table","seed","minecraft:set_lore","lore","minecraft:set_name","minecraft:set_nbt","minecraft:set_stew_effect","attribute","amount","operation","slot","StringOrList","PackMcmeta","pack","pack_format","Recipe","minecraft:crafting_shaped","group","pattern","result","minecraft:crafting_shapeless","ingredients","minecraft:smelting","ingredient","cookingtime","minecraft:blasting","minecraft:smoking","minecraft:campfire_cooking","minecraft:stonecutting","minecraft:smithing","addition","Tags","TagBase","required","TextComponent","getSimpleString","text","parseFloat","isFinite","CommonFields","bold","italic","underlined","strikethrough","obfuscated","insertion","clickEvent","action","change_page","copy_to_clipboard","open_file","open_url","run_command","leadingSlash","allowPartial","suggest_command","hoverEvent","show_text","show_item","module","show_entity","translate","with","score","isScoreHolder","objective","selector","keybind","storage","interpret","schemas","Advancement_1","Condition_1","LootTable_1","PackMcmeta_1","Recipe_1","Tags_1","TextComponent_1","initCommonSchemas","initPredicatesSchemas","initAdvancementSchemas","initConditionSchemas","initLootTableSchemas","initPackMcmetaSchemas","initRecipeSchemas","initTagsSchemas","initTextComponentSchemas","__setModuleDefault","__importStar","mod","__esModule","lib","Collections_1","schemas_1","CollectionRegistry","initCollections","getSchemas_1","SchemaRegistry","initSchemas","ultrawarm","natural","piglin_safe","respawn_anchor_works","bed_works","has_raids","has_skylight","has_ceiling","coordinate_scale","ambient_light","logical_height","infiniburn","bedrock_roof_position","bedrock_floor_position","sea_level","disable_mob_generation","noise","density_factor","density_offset","simplex_surface_noise","random_density_offset","size_horizontal","size_vertical","height","sampling","xz_scale","y_scale","xz_factor","y_factor","top_slide","size","bottom_slide","default_block","default_fluid","spread","maxSpread","ObjectOrPreset","minecraft:overworld","DefaultDimensionType","minecraft:the_nether","shrunk","fixed_time","minecraft:the_end","DefaultNoiseSettings","minecraft:nether","minecraft:end","island_noise_override","minecraft:amplified","amplified","minecraft:caves","minecraft:floating_islands","EntityPredicate","minecraft:item_used_on_block","minecraft:player_generates_container_loot","loot_table","minecraft:player_interacted_with_entity","minecraft:target_hit","projectile","shooter","signal_strength","minecraft:thrown_item_picked_up_by_entity","Dimension","NoPreset","DimensionTypePresets","generator","minecraft:noise","settings","NoiseSettingsPresets","biome_source","minecraft:fixed","minecraft:multi_noise","preset","altitude_noise","temperature_noise","humidity_noise","weirdness_noise","biomes","minecraft:checkerboard","scale","minecraft:vanilla_layered","large_biomes","legacy_biome_init_layer","minecraft:flat","lakes","features","layers","structures","floor","random","altitude","temperature","humidity","weirdness","firstOctave","amplitudes","DimensionType","Predicates","smokey","vehicle","targeted_entity","fishing_hook","in_open_water","font","contents","Biome","surface_builder","depth","downfall","precipitation","temperature_modifier","player_spawn_friendly","creature_spawn_probability","sky_color","fog_color","water_color","water_fog_color","grass_color","foliage_color","grass_color_modifier","ambient_sound","mood_sound","sound","tick_delay","block_search_extent","additions_sound","tick_chance","music","min_delay","max_delay","replace_current_music","particle","starts","spawners","minCount","maxCount","spawn_costs","energy_budget","charge","carvers","Carver","Decorator","RangeConfig","maximum","bottom_offset","top_offset","ChanceConfig","CountConfig","UniformInt","minecraft:carving_mask","step","minecraft:chance","minecraft:count","minecraft:count_extra","extra_count","extra_chance","minecraft:count_multilayer","minecraft:count_noise","noise_level","below_noise","above_noise","minecraft:count_noise_biased","noise_to_count_ratio","noise_factor","noise_offset","minecraft:decorated","outer","inner","minecraft:depth_average","baseline","minecraft:fire","minecraft:glowstone","minecraft:lava_lake","minecraft:range","minecraft:range_biased","minecraft:range_very_biased","minecraft:water_lake","ProcessorList","processors","processor_type","rules","location_predicate","predicate_type","input_predicate","minecraft:block_age","mossiness","minecraft:block_ignore","blocks","minecraft:block_rot","integrity","minecraft:gravity","heightmap","minecraft:rule","position_predicate","output_state","output_nbt","posTestFields","min_dist","max_dist","min_chance","max_chance","minecraft:axis_aligned_linear_pos","axis","minecraft:linear_pos","minecraft:block_match","minecraft:blockstate_match","block_state","minecraft:random_block_match","minecraft:random_blockstate_match","minecraft:tag_match","Feature","RandomPatchConfig","can_replace","project","need_water","xspread","yspread","zspread","tries","state_provider","block_placer","whitelist","blacklist","DiskConfig","radius","half_height","targets","HugeMushroomConfig","cap_provider","stem_provider","foliage_radius","OreConfig","Feature2","minecraft:bamboo","minecraft:basalt_columns","reach","minecraft:block_pile","decorator","minecraft:delta_feature","rim","rim_size","minecraft:disk","minecraft:emerald_ore","minecraft:end_gateway","exit","minecraft:end_spike","crystal_invulnerable","crystal_beam_target","spikes","centerX","centerZ","guarded","minecraft:fill_layer","minecraft:flower","minecraft:forest_rock","minecraft:huge_brown_mushroom","minecraft:huge_fungus","hat_state","decor_state","stem_state","valid_base_block","planted","minecraft:huge_red_mushroom","minecraft:ice_patch","minecraft:iceberg","minecraft:lake","minecraft:nether_forest_vegetation","minecraft:netherrack_replace_blobs","minecraft:no_bonemeal_flower","minecraft:no_surface_ore","minecraft:ore","minecraft:random_patch","minecraft:random_boolean_selector","feature_false","feature_true","minecraft:random_selector","minecraft:sea_pickle","minecraft:seagrass","minecraft:simple_block","to_place","place_on","place_in","place_under","minecraft:simple_random_selector","minecraft:spring_feature","rock_count","hole_count","requires_block_below","valid_blocks","minecraft:tree","max_water_depth","ignore_vines","minimum_size","trunk_provider","leaves_provider","trunk_placer","base_height","height_rand_a","height_rand_b","foliage_placer","minecraft:blob_foliage_placer","minecraft:bush_foliage_placer","minecraft:fancy_foliage_placer","minecraft:jungle_foliage_placer","minecraft:mega_pine_foliage_placer","crown_height","minecraft:pine_foliage_placer","minecraft:spruce_foliage_placer","trunk_height","decorators","minecraft:alter_ground","provider","minecraft:beehive","minecraft:cocoa","min_clipped_height","minecraft:two_layers_feature_size","lower_size","upper_size","minecraft:three_layers_feature_size","upper_limit","middle_size","minecraft:rotated_block_provider","minecraft:simple_state_provider","minecraft:weighted_state_provider","minecraft:column_placer","min_size","extra_size","NoiseSettings","stronghold","spacing","separation","salt","StructureFeature","templatePoolConfig","start_pool","minecraft:bastion_remnant","minecraft:buried_treasure","minecraft:mineshaft","minecraft:ocean_ruin","biome_temp","large_probability","cluster_probability","minecraft:pillager_outpost","minecraft:ruined_portal","portal_type","minecraft:shipwreck","is_beached","minecraft:village","SurfaceBuilder","top_material","under_material","underwater_material","snowy","TemplatePool","Processors","elements","element_type","projection","minecraft:feature_pool_element","minecraft:legacy_single_pool_element","minecraft:list_pool_element","minecraft:single_pool_element","worldgen","Biome_1","Carver_1","Decorator_1","Feature_1","NoiseSettings_1","ProcessorList_1","StructureFeature_1","SurfaceBuilder_1","TemplatePool_1","initBiomeSchemas","initCarverSchemas","initDecoratorSchemas","initFeatureSchemas","initNoiseSettingsSchemas","initProcessorListSchemas","initStructureFeatureSchemas","initSurfaceBuilderSchemas","initTemplatePoolSchemas","WorldSettings","generate_features","bonus_chest","dimensions","Dimension_1","DimensionType_1","worldgen_1","WorldSettings_1","initDimensionTypeSchemas","initDimensionSchemas","initWorldgenSchemas","initWorldSettingsSchemas","minecraft:lightning_strike","lightning","bystander","minecraft:using_item","min_y","noise_caves_enabled","aquifers_enabled","deepslate_enabled","Bounds","ObjectWithType","directType","directPath","directDefault","objectDefault","defaultCase","minecraft:constant","minecraft:uniform","minecraft:binomial","minecraft:score","minecraft:context","minecraft:storage","min_inclusive","max_exclusive","minecraft:clamped_normal","mean","deviation","minecraft:trapezoid","plateau","FloatProvider","max_inclusive","minecraft:biased_to_bottom","minecraft:clamped","IntProvider","above_bottom","below_top","minecraft:very_biased_to_bottom","entitySourceNode","minecraft:value_check","range","copySourceNode","minecraft:set_banner_pattern","patterns","append","minecraft:set_enchantments","ItemModifier","FunctionCases","conditionIDSwtichNode","functionIDSwtichNode","_p","looking_at","stepping_on","passenger","lightning_bolt","blocks_set_on_fire","entity_struck","separator","CanyonConfig","vertical_rotation","shape","distance_factor","thickness","width_smoothness","horizontal_radius_factor","vertical_radius_default_factor","vertical_radius_center_factor","CaveConfig","horizontal_radius_multiplier","vertical_radius_multiplier","floor_level","yScale","lava_level","debug_settings","debug_mode","air_state","water_state","lava_state","barrier_state","minecraft:canyon","minecraft:cave","minecraft:nether_cave","minecraft:cave_surface","surface","floor_to_ceiling_search_range","minecraft:heightmap","minecraft:heightmap_spread_double","minecraft:water_depth_threshold","minecraft:protected_blocks","TargetBlockState","discard_chance_on_air_exposure","VegetationPatchConfig","vertical_range","extra_bottom_block_chance","extra_edge_column_chance","vegetation_chance","xz_radius","replaceable","ground_state","vegetation_feature","minecraft:decorated_flower","minecraft:dripstone_cluster","max_stalagmite_stalactite_height_diff","height_deviation","dripstone_block_layer_thickness","density","wetness","chance_of_dripstone_column_at_max_distance_from_center","max_distance_from_edge_affecting_chance_of_dripstone_column","max_distance_from_center_affecting_height_bias","minecraft:fossil","max_empty_corners_allowed","fossil_structures","overlay_structures","fossil_processors","overlay_processors","minecraft:geode","filling_provider","inner_layer_provider","alternate_inner_layer_provider","middle_layer_provider","outer_layer_provider","inner_placements","cannot_replace","invalid_blocks","filling","inner_layer","middle_layer","outer_layer","crack","generate_crack_chance","base_crack_size","crack_point_offset","noise_multiplier","use_potential_placements_chance","use_alternate_layer0_chance","placements_require_layer0_alternate","outer_wall_distance","distribution_points","point_offset","min_gen_offset","max_gen_offset","invalid_blocks_threshold","minecraft:glow_lichen","search_range","chance_of_spreading","can_place_on_floor","can_place_on_ceiling","can_place_on_wall","can_be_placed_on","minecraft:growing_plant","direction","allow_water","height_distribution","body_provider","head_provider","minecraft:large_dripstone","column_radius","height_scale","max_column_radius_to_cave_height_ratio","stalactite_bluntness","stalagmite_bluntness","wind_speed","min_radius_for_wind","min_bluntness_for_wind","minecraft:replace_single_block","minecraft:root_system","required_vertical_space_for_tree","root_radius","root_placement_attempts","root_column_max_height","hanging_root_radius","hanging_roots_vertical_span","hanging_root_placement_attempts","allowed_vertical_water_for_tree","root_replaceable","root_state_provider","hanging_root_state_provider","minecraft:scattered_ore","minecraft:small_dripstone","max_placements","empty_space_search_radius","max_offset_from_origin","chance_of_taller_dripstone","force_dirt","dirt_provider","sapling_provider","foliage_provider","minecraft:bending_trunk_placer","bend_length","min_height_for_leaves","minecraft:random_spread_foliage_placer","foliage_height","leaf_placement_attempts","minecraft:underwater_magma","floor_search_range","placement_radius_around_floor","placement_probability_per_valid_position","minecraft:vegetation_patch","minecraft:waterlogged_vegetation_patch","minecraft:randomized_int_state_provider","property","min_surface_level","noodle_caves_enabled","ore_veins_enabled","minecraft:nether_fossil","ItemModifier_1","initItemModifierSchemas","DefaultStructureSettings","minecraft:igloo","minecraft:mansion","minecraft:jungle_pyramid","minecraft:stronghold","minecraft:desert_pyramid","minecraft:fortress","minecraft:endcity","minecraft:swamp_hut","minecraft:monument","octaves","erosion","continentalness","use_legacy_random","ClimateParameter","minecraft:block_filter","allowed","disallowed","minecraft:block_survives_filter","minecraft:surface_relative_threshold","NoiseProvider","MIN_VALUE","minecraft:dual_noise_provider","variety","InclusiveRange","slow_noise","slow_scale","states","minecraft:noise_threshold_provider","threshold","high_chance","default_state","low_states","high_states","minecraft:noise_provider","rfdc_1","circles","refs","refsNew","proto","Date","cloneArray","cloneProto","o22","cur","ArrayBuffer","isView","copyBuffer","clone","a22","rfdcCircles","Buffer","buffer","byteOffset","buf","len","extra_lbits","extra_dbits","extra_blbits","bl_order","static_ltree","zero$1","static_dtree","D_CODES$1","_dist_code","_length_code","MAX_MATCH$1","base_length","base_dist","static_tree","extra_bits","extra_base","elems","max_length","has_stree","static_l_desc","static_d_desc","static_bl_desc","dyn_tree","stat_desc","max_code","d_code","dist","put_short","pending_buf","pending","send_bits","bi_valid","bi_buf","send_code","tree","bi_reverse","code","gen_codes","bl_count","next_code","MAX_BITS$1","bits","init_block","LITERALS$1","dyn_ltree","dyn_dtree","bl_tree","END_BLOCK","opt_len","static_len","last_lit","bi_windup","smaller","_n2","_m2","pqdownheap","heap","j2","heap_len","compress_block","ltree","dtree","lc","lx","d_buf","l_buf","build_tree","desc","stree","heap_max","xbits","overflow","scan_tree","curlen","prevlen","nextlen","max_count","min_count","REP_3_6","REPZ_3_10","REPZ_11_138","send_tree","static_init_done","_tr_stored_block$1","stored_len","header","window","subarray","trees","_tr_init","LENGTH_CODES$1","L_CODES$1","StaticTreeDesc","l_desc","TreeDesc","d_desc","bl_desc","_tr_stored_block","_tr_flush_block","opt_lenb","static_lenb","max_blindex","strm","data_type","black_mask","detect_data_type","BL_CODES$1","build_bl_tree","strategy","lcodes","dcodes","blcodes","rank2","_tr_tally","lit_bufsize","_tr_align","STATIC_TREES","adler32_1","adler","pos","s1","crcTable","Uint32Array","table","makeTable","crc32_1","crc","messages","2","1","0","-1","-2","-3","-4","-5","-6","constants$2","Z_NO_FLUSH","Z_PARTIAL_FLUSH","Z_SYNC_FLUSH","Z_FULL_FLUSH","Z_FINISH","Z_BLOCK","Z_TREES","Z_OK","Z_STREAM_END","Z_NEED_DICT","Z_ERRNO","Z_STREAM_ERROR","Z_DATA_ERROR","Z_MEM_ERROR","Z_BUF_ERROR","Z_NO_COMPRESSION","Z_BEST_SPEED","Z_BEST_COMPRESSION","Z_DEFAULT_COMPRESSION","Z_FILTERED","Z_HUFFMAN_ONLY","Z_RLE","Z_FIXED","Z_DEFAULT_STRATEGY","Z_BINARY","Z_TEXT","Z_UNKNOWN","Z_DEFLATED","Z_NO_FLUSH$2","Z_FULL_FLUSH$1","Z_FINISH$3","Z_BLOCK$1","Z_OK$3","Z_STREAM_END$3","Z_STREAM_ERROR$2","Z_DATA_ERROR$2","Z_BUF_ERROR$1","Z_DEFAULT_COMPRESSION$1","Z_DEFAULT_STRATEGY$1","Z_DEFLATED$2","err","errorCode","msg","zero","HASH","prev","hash_shift","hash_mask","flush_pending","avail_out","output","pending_out","next_out","total_out","flush_block_only","block_start","strstart","put_byte","putShortMSB","read_buf","avail_in","input","next_in","wrap","total_in","longest_match","cur_match","chain_length","max_chain_length","scan","best_len","prev_length","nice_match","w_size","MAX_MATCH","_win","wmask","w_mask","strend","scan_end1","scan_end","good_match","lookahead","match_start","fill_window","_w_size","more","window_size","hash_size","head","insert","ins_h","deflate_fast","flush","hash_head","bflush","match_length","max_lazy_match","MIN_MATCH","deflate_slow","max_insert","prev_match","match_available","good_length","max_lazy","nice_length","max_chain","func","configuration_table","Config","max_block_size","pending_buf_size","max_start","status","gzhead","gzindex","method","last_flush","w_bits","hash_bits","Uint16Array","HEAP_SIZE","MAX_BITS","deflateResetKeep","deflateReset","deflateInit2","windowBits","memLevel","DeflateState","deflate_1$2","deflateInit","deflateSetHeader","deflate","beg","old_flush","hcrc","comment","time","os","level_flags","charCodeAt","bstate","deflate_huff","deflate_rle","deflateEnd","deflateSetDictionary","dictionary","dictLength","tmpDict","avail","next","deflateInfo","_has","common","sources","TypeError","chunks","chunk","STR_APPLY_UIA_OK","fromCharCode","apply","_utf8len","q2","strings","TextEncoder","encode","c22","m_pos","str_len","buf_len","TextDecoder","decode","out","utf16buf","c_len","buf2binstring","zstream","toString$1","Z_NO_FLUSH$1","Z_FINISH$2","Z_OK$2","Z_STREAM_END$2","Z_DEFLATED$1","chunkSize","opt","raw","gzip","ended","Error","dict","_dict_set","Deflate$1","flush_mode","_flush_mode","onData","onEnd","inffast","_in","_out","dmax","wsize","whave","wnext","s_window","hold","lcode","dcode","lmask","dmask","here","from_source","lencode","distcode","lenbits","distbits","mode","sane","lbase","lext","dbase","dext","inftrees","lens","lens_index","codes","table_index","work","incr","fill","low","mask","sym","root","curr","drop","left","used","huff","base_index","MAXBITS","offs","here_bits","here_op","here_val","extra_index","Z_FINISH$1","Z_OK$1","Z_STREAM_END$1","Z_NEED_DICT$1","Z_STREAM_ERROR$1","Z_DATA_ERROR$1","Z_MEM_ERROR$1","zswap32","havedict","check","total","wbits","ncode","nlen","ndist","have","lendyn","distdyn","back","was","inflateResetKeep","Int32Array","inflateReset","inflateReset2","inflateInit2","InflateState","lenfix","distfix","virgin","fixedtables","updatewindow","src","inflate_1$2","inflateInit","inflate","put","last_bits","last_op","last_val","hbuf","order","done","xflags","extra_len","inflateEnd","inflateGetHeader","inflateSetDictionary","dictid","inflateInfo","gzheader","Inflate$1","last_avail_out","next_out_utf8","tail","utf8str","UP","DOWN","NORTH","EAST","SOUTH","WEST","R","rt","yt","At","St","Bt","Et","Ct","It","kt","ALL","normal","towards","S","e3","B","readObject","readString","readMap","AIR","minY","E","SIZE","palette","findIndex","WIDTH","sections","sectionsCount","maxY","maxSection","minSection","getSectionIndex","getBlockState","getOrCreateSection","setBlockState","N","fromBlockPos","fromLong","BigInt","minBlockX","minBlockZ","maxBlockX","maxBlockZ","readNumber","readInt","readBoolean","readArray","t4","fromEntries","compose","xo","nextDouble","yo","zo","nextInt","F2","G2","getCornerNoise3D","S2","B2","E2","C2","I2","R2","gradDot","GRADIENT","sqrt","sampleAndLerp","O","D","noiseLevels","V","consume","lowestFreqInputFactor","pow","lowestFreqValueFactor","sample","minLimitNoise","maxLimitNoise","mainNoise","i3","getOctaveNoise","i4","c3","r3","o3","U","first","second","valueFactor","X","INPUT_FACTOR","fromJson","setSeed","W","nextLong","MULTIPLIER","MODULUS_MASK","INCREMENT","advance","MODULUS_BITS","FLOAT_MULTIPLIER","DOUBLE_MULTIPLIER","coordinate","locations","derivatives","rotate","up","down","north","east","south","west","s3","a3","Param","F","ParamPoint","TargetPoint","Parameters","things","build","CHILDREN_PER_NODE","e4","e5","s4","space","abs","bucketize","area","toArray","thing","RTree","RNode","buildSpace","union","RSubTree","RLeaf","Rt","find","_t","factor","peaks","peaksAndValleys","point","continents","ridges","nearWater","Z","addPoint","t5","h2","d3","f3","p3","m3","cellCountY","cellCountZ","cellMinY","filler","noise000","noise001","noise100","noise101","noise010","noise011","noise110","noise111","valueXZ00","valueXZ10","valueXZ01","valueXZ11","valueZ0","valueZ1","minCellX","minCellZ","slice0","Ft","allocateSlice","slice1","fillSlice","cellWidth","cellHeight","biomeSource","shapeOverride","useLegacyRandom","fork","blendedNoise","Y","temperatureNoise","J","humidityNoise","continentalnessNoise","erosionNoise","weirdnessNoise","offsetNoise","mountainPeakNoise","getOffset","Mt","computeDimensionDensity","getTerrainShape","xzScale","xzFactor","yFactor","samplePeakNoise","computeInitialDensity","applySlide","densityFactor","densityOffset","topSlide","bottomSlide","ySize","xzSize","cellCountXZ","sampler","fillNoiseColumn","initializeForFirstCellX","advanceCellX","selectCellYZ","minBlockY","updateForY","n4","updateForX","u4","calculateValue","baseState","swapSlices","defaultBlock","seaLevel","defaultFluid","displayName","isReactComponent","__f","useSimplexSurfaceNoise","randomDensityOffset","islandNoiseOverride","isAmplified","bedrockRoofPosition","bedrockFloorPosition","disableMobGeneration","aquifersEnabled","noiseCavesEnabled","deepslateEnabled","oreVeinsEnabled","noodleCavesEnabled","isPureReactComponent","__u","__R","__O","delete","revealOrder","reverse","for","configurable","writable","cancelBubble","defaultPrevented","persist","isPropagationStopped","isDefaultPrevented","nativeEvent","G","class","multiple","selected","defaultValue","className","$$typeof","K","performance","now"],"mappings":"IAAIA,EAAIC,EAAEC,EAAEC,0bAAIC,EAAE,GAAGC,EAAE,GAAGC,EAAE,oEAAoE,WAAWC,EAAEC,WAAWC,KAAKD,IAAIC,GAAGD,EAAEC,UAAUF,EAAE,WAAWA,OAAOC,EAAED,EAAEG,cAAcF,EAAEG,YAAYJ,GAAG,WAAWA,EAAEC,EAAEC,OAAOG,EAAEC,EAAEC,EAAEC,EAAEC,UAAUC,EAAE,OAAOH,KAAKN,EAAE,OAAOM,EAAEF,EAAEJ,EAAEM,GAAG,OAAOA,EAAED,EAAEL,EAAEM,GAAGG,EAAEH,GAAGN,EAAEM,MAAME,UAAUE,OAAO,MAAMT,EAAE,CAACA,GAAGK,EAAE,EAAEA,EAAEE,UAAUE,OAAOJ,MAAMK,KAAKJ,EAAED,OAAO,MAAAL,MAAYW,SAASX,GAAG,mBAAmBF,GAAG,MAAAA,EAAQc,iBAAiBP,KAAKP,EAAEc,kBAAa,IAASJ,EAAEH,OAAOA,GAAGP,EAAEc,aAAaP,WAAWQ,EAAEf,EAAEU,EAAEL,EAAEC,EAAE,MAAM,WAAWL,EAAEC,EAAEG,EAAEC,EAAEC,OAAOC,EAAE,CAACQ,KAAKf,EAAEgB,MAAMf,EAAEgB,IAAIb,EAAEc,IAAIb,EAAEc,IAAI,KAAKC,GAAG,KAAKC,IAAI,EAAEC,IAAI,KAAKC,SAAI,EAAOC,IAAI,KAAKC,IAAI,KAAKC,iBAAY,EAAOC,IAAI,MAAArB,IAAUd,EAAEmC,IAAIrB,UAAU,MAAAsB,EAAQC,OAAOrC,EAAEqC,MAAMtB,GAAGA,EAAoC,WAAWR,UAAUA,EAAEa,SAAS,WAAWb,EAAEC,QAAQgB,MAAMjB,EAAE+B,KAAKC,QAAQ/B,EAAE,WAAWD,EAAEC,MAAM,MAAAA,SAAeD,EAAEqB,GAAGY,EAAEjC,EAAEqB,GAAGrB,EAAEqB,GAAGD,IAAIc,QAAQlC,GAAG,GAAG,aAAaE,EAAED,EAAED,EAAEoB,IAAIT,OAAOV,OAAO,SAASD,EAAEoB,IAAInB,KAAK,MAAMC,EAAEqB,WAAWrB,EAAEqB,UAAU,mBAAmBvB,EAAEgB,KAAKiB,EAAEjC,GAAG,KAAK,WAAWA,OAAOC,EAAEC,KAAK,SAASF,EAAEqB,KAAK,MAAArB,EAAQyB,IAAI,KAAKzB,EAAEuB,IAAIvB,EAAEyB,IAAIU,KAAK,KAAKlC,EAAE,EAAEA,EAAED,EAAEoB,IAAIT,OAAOV,OAAO,SAASD,EAAEoB,IAAInB,KAAK,MAAMC,EAAEqB,IAAI,GAAGA,IAAIvB,EAAEyB,IAAIU,KAAKjC,EAAEqB,iBAAiBa,EAAEpC,IAAI,WAAWC,KAAKA,EAAEuB,QAAQA,KAAI,IAAK9B,EAAEkB,KAAKX,KAAKoC,EAAEC,OAAO1C,IAAIH,EAAE8C,wBAAwB9C,EAAE8C,oBAAoB5C,GAAG0C,GAAG,qBAAqBrC,EAAEqC,EAAEC,IAAI5C,EAAEiB,UAAUjB,EAAE8C,MAAK,SAASC,EAAExC,UAAUwC,EAAEb,IAAIN,IAAIrB,EAAE2B,IAAIN,OAAM5B,EAAE,GAAGM,EAAE0C,MAAK,SAASD,OAAOxC,EAAEC,EAAEG,EAAEC,EAAEC,EAAEC,IAAIgB,cAAciB,GAAGb,KAAKL,OAAOtB,EAAE0C,SAAS,MAAMC,EAAE,GAAGtC,IAAIsB,IAAItB,EAAEsB,IAAI,EAAEiB,EAAErC,EAAEF,EAAED,EAAEJ,EAAE6C,SAAI,IAAAtC,EAAWuC,gBAAgB,MAAMzC,EAAEoB,IAAI,CAACnB,GAAG,KAAKL,EAAE,MAAAK,EAAQ0B,EAAE3B,GAAGC,EAAED,EAAEoB,KAAKsB,EAAE9C,EAAEI,GAAGA,EAAEiB,KAAKhB,GAAG6B,EAAE9B,QAAO,WAAWN,EAAEC,EAAEC,EAAEG,EAAEC,EAAEC,EAAE0C,EAAEC,EAAEC,EAAEC,OAAOC,EAAEC,EAAEC,EAAEC,EAAEC,EAAEC,EAAEC,EAAEC,EAAEvD,GAAGA,EAAEe,KAAKtB,EAAE+D,EAAED,EAAEjD,WAAWT,EAAEkB,IAAI,GAAGiC,EAAE,EAAEA,EAAEpD,EAAEU,OAAO0C,OAAO,SAASnD,EAAEkB,IAAIiC,GAAG,SAASpD,EAAEoD,KAAK,kBAAkBG,EAAE,KAAK,iBAAiBA,GAAG,iBAAiBA,GAAG,iBAAiBA,EAAEzC,EAAE,KAAKyC,EAAE,KAAK,KAAKA,GAAGM,MAAMC,QAAQP,GAAGzC,EAAEiD,EAAE,CAACnD,SAAS2C,GAAG,KAAK,KAAK,MAAMA,EAAElC,IAAI,EAAEP,EAAEyC,EAAExC,KAAKwC,EAAEvC,MAAMuC,EAAEtC,IAAI,KAAKsC,EAAE5B,KAAK4B,GAAG,IAAIA,EAAEnC,GAAGnB,EAAEsD,EAAElC,IAAIpB,EAAEoB,IAAI,EAAE,UAAUsC,EAAEP,KAAKE,GAAGC,EAAEtC,KAAKqC,EAAErC,KAAKsC,EAAExC,OAAOuC,EAAEvC,OAAOqC,QAAG,WAAgBC,EAAE,EAAEA,EAAEO,EAAEP,IAAI,OAAOM,EAAEN,KAAKE,EAAEtC,KAAKqC,EAAErC,KAAKsC,EAAExC,OAAOuC,EAAEvC,KAAK,GAAGsC,QAAG,UAAe,OAAOtD,EAAEwD,EAAED,EAAEA,GAAG1D,EAAES,EAAEC,EAAE0C,EAAEC,EAAEC,EAAEC,GAAGK,EAAED,EAAEjC,OAAOiC,EAAErC,MAAMoC,EAAEpC,KAAKmC,UAAU,IAAIC,EAAEpC,KAAKwC,EAAE/C,KAAK2C,EAAEpC,IAAI,KAAKqC,GAAGG,EAAE/C,KAAK0C,EAAEE,EAAE/B,KAAKgC,EAAED,IAAI,MAAMC,GAAG,MAAMC,MAAMD,GAAG,mBAAmBD,EAAExC,MAAM,MAAMwC,EAAEpC,KAAKoC,EAAEpC,MAAMmC,EAAEnC,IAAIoC,EAAEhC,IAAI2B,EAAEc,EAAET,EAAEL,EAAEnD,GAAGmD,EAAEe,EAAElE,EAAEwD,EAAED,EAAEK,EAAEH,EAAEN,GAAGC,GAAG,WAAAlD,EAAac,KAAK,mBAAmBd,EAAEc,SAASQ,IAAI2B,GAAGnD,EAAEmE,MAAM,IAAIhB,GAAGI,EAAEhC,KAAK4B,GAAGA,EAAEhD,YAAYH,MAAMiC,EAAEsB,QAAQrD,EAAEqB,IAAImC,EAAEL,EAAEQ,EAAER,KAAK,MAAMO,EAAEP,KAAK,mBAAmBnD,EAAEc,MAAM,MAAM4C,EAAEP,GAAG9B,KAAKqC,EAAEP,GAAG9B,KAAKrB,EAAEsB,QAAQA,IAAIS,EAAE5B,EAAEgD,EAAE,IAAIe,EAAER,EAAEP,GAAGO,EAAEP,QAAQM,MAAMN,EAAE,EAAEA,EAAEM,EAAEhD,OAAO0C,MAAMM,EAAEN,GAAGM,IAAIN,GAAGM,IAAIN,IAAI,WAAWrD,EAAEC,EAAEC,OAAOG,EAAEC,MAAMD,EAAE,EAAEA,EAAEL,EAAEoB,IAAIT,OAAON,OAAOL,EAAEoB,IAAIf,QAAQgB,GAAGrB,EAAEC,EAAE,mBAAmBK,EAAEU,KAAKiD,EAAE3D,EAAEL,EAAEC,GAAGgE,EAAEhE,EAAEI,EAAEA,EAAEN,EAAEoB,IAAId,EAAEiB,IAAItB,WAAWA,EAAE,WAAWD,EAAEC,UAAUA,EAAEA,GAAG,GAAG,MAAAD,GAAS,kBAAkBA,UAAU+D,QAAQ/D,GAAGA,EAAE0C,MAAK,SAASD,KAAKA,EAAExC,MAAKA,EAAEW,KAAKZ,IAAIC,EAAE,WAAWD,EAAEC,EAAEC,EAAEG,EAAEC,EAAEC,OAAOC,EAAEE,EAAEuC,UAAK,IAAShD,EAAEuB,MAAMvB,EAAEuB,IAAIvB,EAAEuB,SAAI,UAAe,MAAAtB,GAASI,GAAGC,GAAG,MAAMD,EAAEH,gBAAgB,MAAAI,GAASA,EAAEJ,aAAaH,IAAIqE,YAAY/D,GAAGE,EAAE,SAAS,KAAKE,EAAEH,EAAE0C,EAAE,KAAKvC,EAAE4D,cAAcrB,EAAE5C,EAAEM,OAAOsC,GAAG,KAAKvC,GAAGJ,YAAYiE,aAAajE,EAAEC,GAAGC,EAAED,cAAS,IAAAC,EAAWA,EAAEF,EAAEgE,YAAuO,WAAWtE,EAAEC,EAAEC,GAAG,MAAMD,EAAE,GAAGD,EAAEwE,YAAYvE,EAAEC,GAAGF,EAAEC,GAAG,MAAMC,EAAE,GAAG,iBAAiBA,GAAGH,EAAE0E,KAAKxE,GAAGC,EAAEA,EAAE,KAAK,WAAWF,EAAEC,EAAEC,EAAEG,EAAEC,OAAOC,OAAO,UAAAN,KAAe,iBAAiBC,IAAIwE,MAAMC,QAAQzE,MAAM,IAAI,iBAAiBG,MAAMqE,MAAMC,QAAQtE,EAAE,IAAIA,MAAMJ,KAAKI,KAAKJ,KAAKC,GAAG0E,EAAE5E,EAAE0E,MAAMzE,EAAE,OAAOC,MAAMD,KAAKC,KAAKA,EAAED,KAAKI,EAAEJ,IAAI2E,EAAE5E,EAAE0E,MAAMzE,EAAEC,EAAED,YAAY,MAAAA,EAAQ,IAAI,MAAMA,EAAE,KAAKA,OAAOA,EAAE4E,QAAQ,WAAW,KAAK5E,EAAEA,EAAE6E,gBAAgB9E,EAAEC,EAAE6E,cAAcC,MAAM,GAAG9E,EAAE8E,MAAM,GAAG/E,EAAEgF,MAAMA,EAAE,IAAIhF,EAAEgF,EAAE/E,EAAEM,GAAGL,EAAEA,EAAEG,GAAGL,EAAEiF,iBAAiBhF,EAAEM,EAAE2E,EAAEC,EAAE5E,GAAGP,EAAEoF,oBAAoBnF,EAAEM,EAAE2E,EAAEC,EAAE5E,WAAW,4BAA4BN,EAAE,IAAIK,IAAIL,EAAE4E,QAAQ,aAAa,KAAKA,QAAQ,SAAS,aAAa,SAAA5E,GAAY,SAASA,GAAG,SAASA,GAAG,aAAAA,GAAgB,aAAAA,GAAgBA,KAAKD,QAAQC,GAAG,MAAMC,EAAE,GAAGA,gBAAgBuC,IAAI,mBAAmBvC,IAAI,MAAMA,KAAI,IAAKA,GAAG,MAAAD,EAAQ,IAAI,MAAMA,EAAE,IAAID,EAAEqF,aAAapF,EAAEC,GAAGF,EAAEsF,gBAAgBrF,KAAK,WAAWA,QAAQ+E,EAAE/E,EAAEe,MAAK,GAAIvB,EAAE8F,MAAM9F,EAAE8F,MAAMtF,GAAGA,GAAG,WAAWA,QAAQ+E,EAAE/E,EAAEe,MAAK,GAAIvB,EAAE8F,MAAM9F,EAAE8F,MAAMtF,GAAGA,GAAG,WAAWA,EAAEC,EAAEG,EAAEC,EAAEC,EAAEC,EAAEE,EAAEuC,EAAEE,OAAOC,EAAEoC,EAAEnC,EAAEoC,EAAElC,EAAEC,EAAEC,EAAEiC,EAAE/B,EAAEgC,EAAE/B,EAAEC,EAAE3D,EAAEc,aAAQ,IAASd,EAAEyB,mBAAmB,KAAK,MAAMtB,EAAEqB,QAAQrB,EAAEqB,IAAIuB,EAAE/C,EAAEqB,IAAIlB,EAAEkB,IAAIrB,EAAEwB,IAAI,KAAKlB,EAAE,CAACyC,OAAOxD,EAAE6B,MAAM8B,EAAElD,YAAY,mBAAmB2D,EAAE,IAAI6B,EAAExF,EAAEe,MAAM0C,KAAKE,EAAE+B,cAActF,EAAE8C,EAAE3B,KAAKkE,EAAEvC,EAAEO,EAAEA,EAAE1C,MAAMkD,MAAMf,EAAE/B,GAAGf,EAAED,EAAEoB,IAAIgC,KAAKvD,EAAEuB,IAAIpB,EAAEoB,KAAKJ,GAAGmE,EAAEK,mBAAmBhC,GAAGA,EAAEiC,UAAUC,OAAO7F,EAAEuB,IAAI+D,EAAE,IAAI3B,EAAE6B,EAAEC,MAAMlE,IAAI+D,EAAE,IAAIQ,EAAEN,EAAEC,GAAGH,EAAE7D,YAAYkC,EAAE2B,EAAEO,OAAOE,GAAGtC,GAAGA,EAAEuC,IAAIV,GAAGA,EAAEvE,MAAMyE,EAAEF,EAAEW,UAAUA,MAAM,IAAIX,EAAExD,QAAQ2D,EAAEH,EAAE1C,IAAIxC,EAAE+C,EAAEmC,EAAEhE,KAAI,EAAGgE,EAAE9D,IAAI,IAAI,MAAM8D,EAAEY,QAAQA,IAAIZ,EAAEW,OAAO,MAAAtC,EAAQwC,6BAA6BD,KAAKZ,EAAEW,UAAUC,IAAIxD,EAAE,GAAG4C,EAAEY,MAAMxD,EAAE4C,EAAEY,IAAIvC,EAAEwC,yBAAyBX,EAAEF,EAAEY,OAAOX,EAAED,EAAEvE,MAAMsC,EAAEiC,EAAEW,MAAM9C,EAAE,MAAMQ,EAAEwC,0BAA0B,MAAAb,EAAQc,oBAAoBd,EAAEc,qBAAqB,MAAMd,EAAEe,mBAAmBf,EAAE9D,IAAId,KAAK4E,EAAEe,uBAAuB,IAAI,MAAA1C,EAAQwC,0BAA0BX,IAAID,GAAG,MAAMD,EAAEgB,2BAA2BhB,EAAEgB,0BAA0Bd,EAAEC,IAAIH,EAAEjE,KAAK,MAAMiE,EAAEiB,wBAAuB,IAAKjB,EAAEiB,sBAAsBf,EAAEF,EAAEY,IAAIT,IAAIzF,EAAE0B,MAAMvB,EAAEuB,IAAI,GAAGX,MAAMyE,EAAEF,EAAEW,MAAMX,EAAEY,IAAIlG,EAAE0B,MAAMvB,EAAEuB,QAAQJ,KAAI,GAAIgE,EAAE5D,IAAI1B,EAAEA,EAAEqB,IAAIlB,EAAEkB,IAAIrB,EAAEkB,IAAIf,EAAEe,IAAIlB,EAAEkB,IAAIsF,SAAQ,SAAS1G,SAASqB,GAAGnB,MAAKsF,EAAE9D,IAAIf,QAAQD,EAAEE,KAAK4E,WAAW,MAAMA,EAAEmB,qBAAqBnB,EAAEmB,oBAAoBjB,EAAEF,EAAEY,IAAIT,GAAG,MAAMH,EAAEoB,oBAAoBpB,EAAE9D,IAAId,MAAK,aAAagG,mBAAmBnB,EAAElC,EAAEC,QAAOxB,QAAQ2D,EAAEH,EAAEvE,MAAMyE,EAAEF,EAAEW,MAAMX,EAAEY,OAAO3G,EAAE6C,MAAMc,EAAElD,GAAGsF,EAAEhE,KAAI,EAAGgE,EAAE5D,IAAI1B,EAAEsF,EAAE7C,IAAI1C,EAAEmD,EAAEoC,EAAEO,OAAOP,EAAEvE,MAAMuE,EAAEW,MAAMX,EAAExD,SAASwD,EAAEW,MAAMX,EAAEY,IAAI,MAAAZ,EAAQqB,oBAAoBjE,EAAEA,EAAE,GAAGtC,GAAGkF,EAAEqB,oBAAoBxD,GAAG,MAAAmC,EAAQsB,4BAA4BtB,EAAEsB,wBAAwBrB,EAAElC,IAAIK,EAAE,MAAMR,GAAGA,EAAEpC,OAAOgD,GAAG,MAAAZ,EAAQlC,IAAIkC,EAAEnC,MAAMJ,SAASuC,EAAE2D,EAAE9G,EAAE6D,MAAMC,QAAQH,GAAGA,EAAE,CAACA,GAAG1D,EAAEG,EAAEC,EAAEC,EAAEC,EAAEE,EAAEuC,EAAEE,GAAGqC,EAAErD,KAAKjC,EAAEqB,IAAIrB,EAAEwB,IAAI,KAAK8D,EAAE9D,IAAIf,QAAQD,EAAEE,KAAK4E,GAAG/B,MAAMoC,IAAIL,EAAEnE,GAAG,MAAMmE,EAAEjE,KAAI,OAAQ,MAAMf,GAAGN,EAAE0B,MAAMvB,EAAEuB,OAAOR,IAAIf,EAAEe,IAAIlB,EAAEqB,IAAIlB,EAAEkB,KAAKrB,EAAEqB,IAA2Q,SAAWvB,EAAEC,EAAEC,EAAEG,EAAEC,EAAEC,EAAE0C,EAAEC,OAAOE,EAAEoC,EAAEnC,EAAE2D,EAAE1D,EAAEpD,EAAEe,MAAMwE,EAAExF,EAAEgB,MAAMsC,EAAEtD,EAAEe,KAAKwC,EAAE,KAAK,QAAAD,OAAc,GAAI,MAAAhD,OAAaiD,EAAEjD,EAAEI,OAAO6C,UAAUjD,EAAEiD,UAAUxD,MAAMoD,EAAE6D,WAAW1D,EAAE,GAAGH,EAAE8D,WAAW,GAAG9D,EAAE7C,EAAEiD,GAAG,cAAc,MAAMxD,EAAE,IAAI,OAAAuD,SAAgB4D,SAASC,eAAe3B,KAAKnF,EAAE6G,SAASE,gBAAgB,6BAA6B9D,GAAG4D,SAASG,cAAc/D,EAAEkC,EAAE8B,IAAI9B,GAAGlF,EAAE,KAAK2C,GAAE,KAAM,OAAAK,MAAakC,GAAGvC,GAAGlD,EAAEwH,OAAO/B,MAAM+B,KAAK/B,OAAO,IAAIlF,EAAEA,GAAGT,EAAEiF,MAAM0C,KAAKzH,EAAE0H,YAAYlC,KAAKtF,EAAEe,OAAOpB,GAAG8H,wBAAwBtE,EAAEoC,EAAEkC,yBAAyBzE,EAAE,IAAI,MAAA3C,MAAY+C,EAAE,GAAG0D,EAAE,EAAEA,EAAEhH,EAAE4H,WAAWjH,OAAOqG,MAAMhH,EAAE4H,WAAWZ,GAAGa,MAAM7H,EAAE4H,WAAWZ,GAAG7C,UAAUqB,YAAYnC,EAAEyE,QAAQtC,EAAEsC,QAAQzE,EAAEyE,SAAS9H,EAAE+H,eAAeA,UAAU1E,GAAGA,EAAEyE,QAAQ,QAA34H,SAAW9H,EAAEC,EAAEC,EAAEG,EAAEC,OAAOC,MAAMA,KAAKL,EAAE,aAAaK,GAAG,QAAAA,GAAWA,KAAKN,GAAG+H,EAAEhI,EAAEO,EAAE,KAAKL,EAAEK,GAAGF,OAAOE,KAAKN,KAAK,mBAAmBA,EAAEM,IAAI,aAAAA,GAAgB,QAAQA,GAAG,UAAAA,GAAa,YAAYA,GAAGL,EAAEK,KAAKN,EAAEM,IAAIyH,EAAEhI,EAAEO,EAAEN,EAAEM,GAAGL,EAAEK,GAAGF,GAA2rH4H,CAAEjI,EAAEyF,EAAEnC,EAAEhD,EAAE4C,GAAGG,IAAIjC,IAAI,WAAWoC,EAAEvD,EAAEgB,MAAMJ,SAASkG,EAAE/G,EAAE8D,MAAMC,QAAQP,GAAGA,EAAE,CAACA,GAAGvD,EAAEC,EAAEG,EAAEC,GAAG,kBAAkBiD,EAAEhD,EAAE0C,EAAEjD,EAAEkI,WAAWhF,GAAG,MAAM3C,MAAMiD,EAAEjD,EAAEI,OAAO6C,KAAK,MAAMjD,EAAEiD,IAAI2E,EAAE5H,EAAEiD,kBAAkBiC,QAAG,OAAYA,EAAEtB,aAAanE,EAAEmE,OAAO,aAAAZ,IAAiBC,IAAIwE,EAAEhI,EAAE,QAAQwD,EAAEF,EAAEa,OAAM,GAAI,YAAYsB,QAAG,OAAYA,EAAE2C,UAAU5E,IAAIxD,EAAEoI,SAASJ,EAAEhI,EAAE,UAAUwD,EAAEF,EAAE8E,SAAQ,WAAYpI,EAA9zCqI,CAAEhI,EAAEkB,IAAIrB,EAAEG,EAAEC,EAAEC,EAAEC,EAAEE,EAAEyC,MAAM1D,EAAE6I,SAASlF,EAAElD,SAASqI,KAAK3G,IAAI,SAAS,MAAMpB,OAAOe,IAAI0B,EAAE/C,EAAEwB,MAAMyB,EAAE3C,EAAEA,EAAE0B,QAAQe,IAAI,MAAMxD,EAAE8B,IAAIgH,EAAErI,EAAEG,IAAI,WAAWJ,EAAEC,KAAKuB,KAAKhC,EAAEgC,IAAIvB,EAAED,GAAGA,EAAEyC,MAAK,SAAS8F,SAASA,EAAE9G,IAAI8G,EAAE9G,IAAI,GAAGzB,EAAEyC,MAAK,SAAS1C,KAAKyH,KAAKe,YAAWD,KAAKhH,IAAIgH,EAAEC,EAAE5G,SAAikC,WAAW3B,EAAEC,EAAEG,OAAO,mBAAmBJ,EAAEA,EAAEC,GAAGD,EAAEwI,QAAQvI,QAAQqI,KAAKhH,IAAIgH,EAAElI,IAAI,WAAWJ,EAAEC,EAAEG,OAAOC,EAAEC,EAAEC,KAAKf,EAAEiJ,SAASjJ,EAAEiJ,QAAQzI,MAAMA,EAAEkB,SAASsH,SAASnI,EAAEmI,UAAUxI,EAAEsB,KAAKoH,EAAErI,EAAE,KAAKJ,IAAIG,GAAG,mBAAmBJ,EAAEe,SAAS,SAASf,EAAEsB,MAAMtB,EAAEsB,IAAItB,EAAEuB,SAAI,EAAO,SAASvB,EAAEwB,KAAK,IAAInB,EAAEsI,2BAA2BA,6BAA6BL,KAAKhH,IAAIgH,EAAErI,KAAKiC,KAAK7B,EAAEqC,IAAI,QAAQrC,EAAEL,EAAEmB,QAAQZ,EAAE,EAAEA,EAAEF,EAAEK,OAAOH,MAAMA,IAAI4D,EAAE9D,EAAEE,GAAGN,EAAEG,GAAG,MAAME,GAAG4H,EAAE5H,GAAG,WAAWP,EAAEC,EAAEC,UAAU6B,KAAKJ,YAAY3B,EAAEE,GAAG,WAAWD,EAAEC,EAAEG,OAAOC,EAAEC,EAAE0C,IAAI5B,IAAI5B,EAAE4B,GAAGpB,EAAEC,GAAGK,KAAK,mBAAmBF,GAAG,KAAKA,GAAGA,EAAEe,KAAKlB,EAAEkB,IAAI6B,EAAE,GAAGJ,EAAE3C,EAAED,IAAIK,GAAGD,GAAGH,GAAGkB,IAAIyH,EAAE7E,EAAE,KAAK,CAAC/D,IAAIM,GAAGV,EAAEA,OAAE,IAAAK,EAAW6C,iBAAiBzC,GAAGD,EAAE,CAACA,GAAGE,EAAE,KAAKL,EAAEgI,WAAWpI,EAAEiF,MAAM0C,KAAKvH,EAAEwH,YAAY,KAAKzE,GAAG3C,GAAGD,EAAEA,EAAEE,EAAEA,EAAEgB,IAAIrB,EAAEgI,WAAW5H,GAAG0C,EAAEC,EAAEhD,GAAsvBR,EAAE,CAAC8B,IAAI,SAASvB,EAAEC,WAAWC,EAAEG,EAAEC,EAAEL,EAAEA,EAAEoB,UAAUpB,EAAEwB,OAAOvB,EAAEmB,aAAanB,EAAEyB,cAAc,MAAAtB,EAAQyI,6BAA6BC,SAAS1I,EAAEyI,yBAAyB9I,IAAIM,EAAEJ,EAAEsB,KAAK,MAAAtB,EAAQ8I,sBAAsBA,kBAAkBhJ,GAAGM,EAAEJ,EAAEsB,KAAKlB,SAASJ,EAAE2F,IAAI3F,QAAQqI,KAAKA,QAAQvI,GAAG4B,IAAI,GAAyDoE,EAAEF,UAAUiD,SAAS,SAAS/I,EAAEC,OAAOC,IAAI,MAAA6B,KAAWqE,KAAKrE,KAAKqE,MAAMrE,KAAKoE,MAAMpE,KAAKqE,IAAIrE,KAAKqE,IAAIxD,EAAE,GAAGb,KAAKoE,OAAO,mBAAmBnG,MAAMA,EAAE4C,EAAE,GAAG1C,GAAG6B,KAAKd,QAAQjB,GAAG4C,EAAE1C,EAAEF,GAAG,MAAAA,GAAS+B,KAAKH,SAASG,KAAKL,IAAId,KAAKX,GAAGgJ,EAAElH,QAAQiE,EAAEF,UAAUoD,YAAY,SAASlJ,QAAQ4B,WAAWL,KAAI,EAAGvB,GAAG+B,KAAKL,IAAId,KAAKZ,GAAGiJ,EAAElH,QAAQiE,EAAEF,UAAUC,OAAO/B,EAAEtE,EAAE,GAAGC,EAAE,mBAAmBwJ,QAAQA,QAAQrD,UAAUsD,KAAKC,KAAKF,QAAQG,WAAWC,WAAWlH,EAAEC,IAAI,ECEjoT,IAAIkH,EAAU,GAEd,WAAgBC,EAAKxI,WAEXZ,KAAKY,IACTZ,GAAKY,EAAMZ,UAEToJ,EAGR,WAAcC,EAAKC,EAAOC,OAIxBC,EAHGC,EAAM,wBACT5G,EAAIwG,EAAIK,MAAMD,GACdE,EAAU,MAEP9G,GAAKA,EAAE,WACNI,EAAIJ,EAAE,GAAG+G,MAAM,KACV5J,EAAE,EAAGA,EAAEiD,EAAE3C,OAAQN,IAAK,KAC1BG,EAAI8C,EAAEjD,GAAG4J,MAAM,OACXC,mBAAmB1J,EAAE,KAAO0J,mBAAmB1J,EAAEuE,MAAM,GAAGoF,KAAK,QAGnEC,EAAWV,EAAI7E,QAAQiF,EAAK,OAC1BM,EAAWT,GAAS,YACxBU,EAAMC,KAAKD,IAAIX,EAAI/I,OAAQgJ,EAAMhJ,QAC5B4J,EAAI,EAAGA,EAAIF,EAAKE,OACpBZ,EAAMY,IAA+B,MAAvBZ,EAAMY,GAAKC,OAAO,GAAU,KACzCC,EAAQd,EAAMY,GAAK1F,QAAQ,gBAAiB,IAC/C6F,KAAeH,GAAKR,MAAM,YAAcP,GAAS,IAAM,GACvDmB,GAAQD,EAAMxI,QAAQ,KACtB0I,GAAQF,EAAMxI,QAAQ,KACtB2I,EAAMnB,EAAIa,IAAQ,OACdM,IAAQD,MAAe1I,QAAQ,KAAK,GAAKyI,GAAO,IAC9C,aAGCF,GAASP,mBAAmBW,GAChCF,GAAQC,EAAM,GACTH,GAASf,EAAI3E,MAAMwF,GAAKO,IAAIZ,oBAAoBC,KAAK,oBAItDR,EAAMY,KAAOb,EAAIa,GAAM,IACzB,gBAIW,IAAfX,EAAKmB,UAAwB,IAANlB,IACpBG,EAGR,WAAsB5G,EAAGK,UAEtBL,EAAE4H,KAAOvH,EAAEuH,KAAQ,EAClB5H,EAAE4H,KAAOvH,EAAEuH,QACV5H,EAAE6H,MAAQxH,EAAEwH,MAKjB,WAAgCnJ,EAAOmJ,YAChCA,MAAQA,IACRD,KAgBP,SAAmBlJ,UACXA,EAAMb,MAAM8J,QAAU,GALhBG,EAKyBpJ,EAAMb,MAAMiK,KAJ3Cd,EAAWc,GAAMJ,IAAIK,GAAahB,KAAK,KAD/C,IAAce,EAZAE,CAAUtJ,GAChBA,EAAMb,MAGd,WAAoByI,UACZA,EAAI7E,QAAQ,eAAgB,IAAIoF,MAAM,KAG9C,WAAqBoB,SACM,KAAnBA,EAAQb,OAAO,GAAW,EAAI,MAAMtI,QAAQmJ,EAAQb,OAAOa,EAAQ1K,OAAO,KAAQ,EAAI,EAW9F,IAAI2K,EAAgB,KAEhBC,EAAU,GAEVC,EAAc,GAEdC,EAAQ,GAcZ,iBACK/B,QAUI,OATJ4B,GAAiBA,EAAcI,SAC5BJ,EAAcI,SAEZJ,GAAiBA,EAAcK,mBACjCL,EAAcK,qBAGI,oBAAXD,SAAyBA,SAAWD,GAEhCG,UAAY,OAAWC,QAAU,IAKpD,WAAenC,EAAK7E,eACF,IAAZA,OAA6B,GAEjB,iBAAN6E,GAAkBA,EAAIA,QACtBA,EAAI7E,UACR6E,EAAIA,KAaZ,SAAkBA,WACRrJ,EAAEkL,EAAQ5K,OAAQN,QACtBkL,EAAQlL,GAAGyL,SAASpC,UAAe,SAEjC,EAbHoC,CAASpC,IArCd,SAAgBA,EAAK1I,QACN,IAATA,MAAuB,QAExBsK,GAAiBA,EAActK,KACpBA,GAAM0I,GAEK,oBAAVqC,SAAyBA,QAAQ/K,EAAK,kBAC7CA,EAAK,SAAS,KAAM,KAAM0I,IA+B3BA,EAAK7E,EAAU,UAAY,QAG5BmH,GAAQtC,GAchB,YAAiBA,WACZuC,GAAW,EACN5L,EAAE,EAAGA,EAAEkL,EAAQ5K,OAAQN,KACD,IAA1BkL,EAAQlL,GAAG2L,QAAQtC,QACX,WAGJa,EAAIiB,EAAY7K,OAAQ4J,OACpBA,GAAKb,UAEXuC,EAIR,YAAuBC,MAEjBA,GAASA,EAAKC,kBAEfC,EAAOF,EAAKC,aAAa,QAC5BE,EAASH,EAAKC,aAAa,aAGvBC,GAASA,EAAKrC,MAAM,WAAYsC,GAAWA,EAAOtC,MAAM,qBAGtDuC,EAAMF,IAId,YAAyBnJ,QACpBA,EAAEsJ,SAAWtJ,EAAEuJ,SAAWvJ,EAAEwJ,QAAUxJ,EAAEyJ,UAAuB,IAAXzJ,EAAE0J,kBAC5C1J,EAAE2J,eAAiB3J,EAAEoJ,QAAUtK,MACtC8K,GAAQ5J,GAIhB,YAAiBA,UACZA,IACCA,EAAE6J,4BAA8BA,2BAChC7J,EAAE8J,mBAAqBA,oBACzBC,mBAEI,EAIR,YAA6B/J,QAExBA,EAAEsJ,SAAWtJ,EAAEuJ,SAAWvJ,EAAEwJ,QAAUxJ,EAAEyJ,UAAuB,IAAXzJ,EAAE0J,aAEtDrM,EAAI2C,EAAEoJ,aAE8B,MAAnCY,OAAO3M,EAAE4M,UAAUC,eAAuB7M,EAAE6L,aAAa,QAAS,IACjE7L,EAAE8M,aAAa,oBAEfC,GAAc/M,UACVuM,GAAQ5J,UAGR3C,EAAEA,EAAEH,aAIf,IAAImN,IAA4B,EAiB7B,IAACC,GAAU,SAAUC,cACPvM,KACFwG,KAAK1F,KAAMd,GACpBA,EAAM8K,YACO9K,EAAM8K,cAGlB5F,MAAQ,CACZuD,IAAKzI,EAAMyI,KAAO+D,KAtBhBH,KAE0B,mBAAnBrI,mBACLqG,oBACa,YAAY,cACpBmC,yBAGO,QAASC,SAEC,UAkBvBF,MAAsBG,UAAYH,KAChC1H,UAAY8H,OAAOC,OAAQL,GAAgBA,EAAa1H,aACxDA,UAAUnE,YAAcmM,IAExBhI,UAAUW,sBAAwB,SAAgCxF,UACrD,IAAfA,EAAM8M,SACH9M,EAAMyI,MAAM3H,KAAKd,MAAMyI,KAAOzI,EAAM+M,WAAWjM,KAAKd,MAAM+M,aAI3DlI,UAAUgG,SAAW,SAAmBpC,OAC1C7I,EAAWoN,EAAalM,KAAKd,MAAMJ,iBAChCkB,KAAKmM,oBAAoBrN,EAAU6I,GAAK,GAAO/I,OAAS,KAIzDmF,UAAUkG,QAAU,SAAkBtC,QACvCX,SAAS,CAAEW,IAAAA,QAEZuC,EAAWlK,KAAK+J,SAASpC,UAGxB3H,KAAKoM,eAAiBjF,cAEpB+C,KAGDnG,UAAUQ,mBAAqB,aAC7B1F,KAAKmB,WACRoM,UAAW,KAGVrI,UAAUS,kBAAoB,eAChC6H,EAASrM,KAETuJ,SACE+C,SAAW/C,EAAcgD,QAAO,SAAUC,KACvCvC,QAAS,MAAeJ,UAAY,OAAgBC,QAAU,cAGlEsC,UAAW,KAGVrI,UAAU8C,qBAAuB,WACZ,mBAAhB7G,KAAKsM,eAA8BA,aACtCG,OAAOjD,EAAQrJ,QAAQH,MAAO,MAGhC+D,UAAUa,oBAAsB,gBACjCwH,UAAW,KAGVrI,UAAUc,mBAAqB,gBAChCuH,UAAW,KAGVrI,UAAUoI,oBAAsB,SAA8BrN,EAAU6I,EAAK+E,UAC5E5N,EACL6N,OAAOC,GACPnM,KAAKoM,GACL9D,KAAK,SAAUhJ,OACXkI,EAAU6E,EAAKnF,EAAK5H,EAAMb,MAAMiK,KAAMpJ,EAAMb,UAC5C+I,EAAS,KACG,IAAXyE,EAAkB,KACjBK,EAAW,CAAEpF,IAAAA,EAAUM,QAAAA,YACpB8E,EAAU9E,UACV8E,EAAS3N,WACT2N,EAAS5N,IDpTkpQ,SAAWlB,EAAEC,EAAEC,OAAOG,EAAEC,EAAEC,EAAEC,EAAEC,UAAUC,EAAEkC,EAAE,GAAG5C,EAAEiB,WAAWV,KAAKN,EAAE,OAAOM,EAAEF,EAAEJ,EAAEM,GAAG,OAAOA,EAAED,EAAEL,EAAEM,GAAGG,EAAEH,GAAGN,EAAEM,MAAME,UAAUE,OAAO,MAAMT,EAAE,CAACA,GAAGK,EAAE,EAAEA,EAAEE,UAAUE,OAAOJ,MAAMK,KAAKJ,EAAED,WAAW,MAAAL,MAAYW,SAASX,GAAGa,EAAEf,EAAEgB,KAAKN,EAAEL,GAAGL,EAAEkB,IAAIZ,GAAGN,EAAEmB,IAAI,MCqT54Q4N,CAAajN,EAAOgN,UAErBhN,MAEN4M,OAAOM,YAGLlJ,UAAUC,OAAS,SAAiB5E,EAAK8N,OAC3CpO,EAAWM,EAAIN,SACfmN,EAAW7M,EAAI6M,SACftE,EAAMuF,EAAMvF,IAEZwF,EAASnN,KAAKmM,oBAAoBD,EAAapN,GAAW6I,GAAK,GAE/DjB,EAAUyG,EAAO,IAAM,KAEvBC,EAAWpN,KAAKqN,mBAChB1F,IAAMyF,SACJC,YAAc1F,EACG,mBAAXsE,KACD,CACRqB,OAAQtN,KACR2H,IAAAA,EACAyF,SAAAA,EACAD,OAAAA,EACAzG,QAAAA,KAKIA,GAGDqF,EAnHM,CAoHZwB,GAEEC,GAAO,SAAUtO,UACpBqG,EAAc,IAAKkI,EAAO,CAAEC,QAASC,IAAmBzO,KAKzDsM,GAAO/B,YAAcA,EACrB+B,GAAOE,cAAgBA,EACvBF,GAAOjB,MAAQA,EACfiB,GAAOA,OAASA,GAChBA,GAAOoC,MANK,SAAU1O,UAAgBqG,EAAcrG,EAAM2O,UAAW3O,IAOrEsM,GAAOgC,KAAOA,GACdhC,GAAOsB,KAAOA,ECrWmB,IAAIjP,GAAEF,GAAEG,GAAEgQ,GAAE,EAAElQ,GAAE,GAAGiD,GAAEnD,EAAE6B,IAAIxB,GAAEL,EAAE6C,IAAIvC,GAAEN,EAAE6I,OAAOO,GAAEpJ,EAAEgC,IAAIV,GAAEtB,EAAEiJ,QAAQ,YAAWpI,EAAEE,KAAKkB,KAAKjC,EAAEiC,IAAIhC,GAAEY,EAAEuP,IAAGrP,GAAGqP,GAAE,MAAMxP,EAAEX,GAAEoQ,SAAQA,IAAI,CAACzO,GAAG,GAAGK,IAAI,YAAYpB,GAAGD,EAAEgB,GAAGV,QAAQN,EAAEgB,GAAGT,KAAK,IAAIP,EAAEgB,GAAGf,GAAG,YAAWN,UAAU6P,GAAE,EAAS,SAAW7P,EAAEQ,EAAED,OAAOF,EAAE0G,GAAEnH,KAAI,UAAUS,EAAET,EAAEI,EAAEK,EAAEoB,QAAQJ,GAAG,CAACd,EAAEA,EAAEC,GAAGuP,QAAE,EAAOvP,GAAG,SAASiC,OAAOnC,EAAED,EAAET,EAAES,EAAEgB,GAAG,GAAGoB,KAAKpB,GAAG,KAAKf,MAAMe,GAAG,CAACf,EAAED,EAAEgB,GAAG,IAAIhB,EAAEoB,IAAIsH,SAAS,OAAO1I,EAAEoB,IAAI/B,IAAGW,EAAEgB,GAAvL2E,CAAE+J,GAAE/P,GAAsL,YAAWQ,EAAED,OAAOF,EAAE0G,GAAEnH,KAAI,IAAIH,EAAE2G,KAAK6C,GAAE5I,EAAEyP,IAAIvP,OAAOc,GAAGb,EAAEH,EAAEyP,IAAIvP,EAAEb,GAAEoQ,IAAIpO,IAAId,KAAKP,IAAsF,YAAWL,UAAU6P,GAAE,EAAE5N,IAAE,iBAAiB,CAACwG,QAAQzI,KAAI,IAA8G,YAAWA,EAAEE,OAAOM,EAAEuG,GAAEnH,KAAI,UAAUqJ,GAAEzI,EAAEsP,IAAI5P,OAAOmB,GAAGrB,IAAIQ,EAAEsP,IAAI5P,EAAEM,EAAEkB,IAAI1B,GAAGQ,EAAEa,GAAG,YAAWrB,EAAEM,UAAUuP,GAAE,EAAE5N,IAAE,kBAAkBjC,IAAGM,GAAmL,YAAWN,OAAOQ,EAAEuG,GAAEnH,KAAI,IAAIW,EAAEyE,YAAWxE,EAAEa,GAAGrB,EAAEN,GAAEsJ,uBAAsBA,kBAAkB,SAASvG,KAAKpB,IAAIb,EAAEa,GAAGoB,GAAGlC,EAAE,GAAGkC,KAAK,CAAClC,EAAE,GAAG,aAAa,QAAG,KAAU,iBAAemG,SAAQ,SAASpG,MAAMA,EAAEqC,UAAUmN,IAAIpO,IAAIgF,QAAQzC,IAAG3D,EAAEwP,IAAIpO,IAAIgF,QAAQ2B,IAAG/H,EAAEwP,IAAIpO,IAAI,SAASxB,KAAK4P,IAAIpO,IAAI,GAAGjC,EAAE8B,IAAIrB,EAAEI,EAAEsB,SAAQjC,GAAE,GAAGF,EAAE6B,IAAI,SAAStB,MAAK,KAAK4C,IAAGA,GAAE5C,IAAIP,EAAE6C,IAAI,SAAStC,OAAMF,GAAEE,GAAGJ,GAAE,MAAMY,MAAKR,EAAEyB,KAAKqO,UAAUpO,IAAIgF,QAAQzC,IAAGzD,EAAEkB,IAAIgF,QAAQ2B,IAAG7H,EAAEkB,IAAI,KAAKjC,EAAE6I,OAAO,SAAShI,OAAMP,GAAEO,OAAOC,EAAED,EAAEmB,OAAOlB,EAAEuP,KAAKvP,EAAEuP,IAAIpO,IAAIf,SAAS,IAAIhB,GAAEiB,KAAKL,IAAIV,KAAIJ,EAAEuQ,4BAA2BvQ,EAAEuQ,wBAAwB,SAAShQ,OAAOiQ,EAAE/P,EAAE,wBAAwBM,GAAG6B,IAAG6N,qBAAqBD,GAAG1G,WAAWvJ,IAAIQ,EAAE+I,WAAWrJ,EAAE,YAAW8P,sBAAsB9P,MAAMgE,KAAIxE,QAAE,GAAQD,EAAEgC,IAAI,SAASnB,EAAEJ,KAAKwC,MAAK,SAASuN,SAASvO,IAAIgF,QAAQzC,IAAGgM,EAAEvO,IAAIuO,EAAEvO,IAAIgN,QAAO,SAAS1O,UAAUA,EAAEqB,IAAIgH,GAAErI,YAAWQ,KAAKkC,MAAK,SAAS1C,KAAK0B,QAAQA,IAAI,OAAMxB,EAAE,GAAGT,EAAE8B,IAAIf,EAAEyP,EAAErO,SAAQiH,IAAGA,GAAEvI,EAAEJ,IAAIT,EAAEiJ,QAAQ,SAASpI,OAAMS,GAAET,OAAOJ,EAAEI,EAAEmB,OAAOvB,GAAGA,EAAE4P,UAAUA,IAAIzO,GAAGqF,QAAQzC,UAASgM,KAAK1O,IAAI0O,EAAE/P,EAAE0B,OAAO,IAAIS,GAAE,mBAAmB2N,sBAAsB,YAAWhQ,OAAOM,EAAEZ,GAAE,mBAAmBM,EAAEyB,KAAKzB,EAAEyB,MAAM/B,GAAEY,EAAE,YAAWN,OAAOM,EAAEZ,KAAI+B,IAAIzB,EAAEqB,KAAK3B,GAAEY,EAAE,YAAWN,EAAEM,UAAUN,GAAGA,EAAEW,SAASL,EAAEK,QAAQL,EAAEoC,MAAK,SAASuN,EAAE/P,UAAU+P,IAAIjQ,EAAEE,MAAK,YAAWF,EAAEM,SAAS,mBAAmBA,EAAEA,EAAEN,GAAGM,0KCC/1EsN,OAAOuC,eAAeC,GAAS,aAAc,CAAEjM,OAAO,8CACI,kBAC1D,SAAsBkM,EAAOC,UAClBA,EAAaC,QAAO,CAACrF,EAAMjI,IACpB,QAANA,EACOiI,EAAKsF,MAGLtF,EAAKtK,KAAKqC,EAAErC,OAExByP,IAMP,SAKII,YAAYC,EAAUC,QACbD,SAAWA,MAAAA,EAA2CA,EAAW,QACjEC,WAAaA,MAAAA,EAA+CA,EAAa,GAKlFF,cACW1O,KAAK2O,SAAS3O,KAAK2O,SAAS/P,OAAS,GAKhD8P,MAAMJ,EAAOO,UACF,IAAIC,GAAK9O,KAAK2O,SAAS3L,MAAMsL,EAAOO,GAAM7O,KAAK4O,YAK1DF,eACW,IAAII,GAAK9O,KAAK2O,SAAS3L,MAAM,GAAIhD,KAAK4O,YAKjDF,aACW,IAAII,GAAK9O,KAAK2O,SAAS3L,MAAM,MAAQhD,KAAK4O,YAMrDF,KAAKK,UACM/O,KAAKgP,UAAUD,GAASE,YAAYF,GAM/CL,UAAUK,UACC,IAAID,GAAK,IAAI9O,KAAK2O,SAAUI,GAAU,IAAI/O,KAAK4O,aAM1DF,YAAYK,MACe,iBAAZA,SACA/O,KAAKkP,aACVC,EAAaJ,EAAQK,WAAW,cAAgBL,EAAQ/L,MAAM,IAAM+L,SACnE,IAAID,GAAK,IAAI9O,KAAK2O,UAAW,IAAI3O,KAAK4O,WAAYO,IAE7DT,cACW,IAAII,GAAK,IAAI9O,KAAK2O,UAAW,IAAI3O,KAAK4O,aAEjDF,kBACW1O,KAAK2O,SAMhBD,UAAUW,UACC,IAAIC,GAAUD,EAAOrP,MAEhC0O,oBACW1O,KAAK4O,WAMhBF,OAAOa,UACIA,EAAMZ,SAAS/P,SAAWoB,KAAK2O,SAAS/P,QACxC2Q,EAAMZ,SAASa,OAAM,CAAC/L,EAAGnF,IAAMmF,IAAMzD,KAAK2O,SAASrQ,KAM9DoQ,WAAWa,WACHvP,KAAK2O,SAAS/P,OAAS2Q,EAAMZ,SAAS/P,SAEnC2Q,EAAMZ,SAASa,OAAM,CAAC/L,EAAGnF,IAAMmF,IAAMzD,KAAK2O,SAASrQ,KAM9DoQ,SAASa,SACCE,EAASzP,KAAK2O,SAAS/P,OAAS2Q,EAAMZ,SAAS/P,eACjD6Q,EAAS,IAENF,EAAMZ,SAASa,OAAM,CAAC/L,EAAGnF,IAAMmF,IAAMzD,KAAK2O,SAASc,EAASnR,KAEvEoQ,kBACW1O,KAAK2O,SACP5F,QAAuB,iBAAN7H,EAAkB,IAAIA,IAAM,IAAIA,OACjDkH,KAAK,IACLtF,QAAQ,MAAO,IAExB4L,QAAQgB,EAAIC,UACD3P,KAAK2O,SAAShK,QAAQ+K,EAAIC,YAG1Bb,GACf,iBAAwBA,GACpBJ,YAAYW,EAAOlG,SACTA,MAAAA,OAAmC,EAASA,EAAKwF,SAAUxF,MAAAA,OAAmC,EAASA,EAAKyF,iBAC7GS,MAAQA,EAEjBX,kBACW1O,KAAKqP,MAMhBX,UACQkB,SACyB,UAAhB5P,KAAKqP,aAA0B,IAAPO,OAAgB,EAASA,EAAGC,IAAI7P,MAKzE0O,IAAItM,OACIwN,EACkB,UAAhB5P,KAAKqP,aAA0B,IAAPO,GAAyBA,EAAGE,IAAI9P,KAAMoC,GAKxEsM,MAAMJ,EAAOO,UACF,IAAIS,GAAUtP,KAAKqP,MAAOU,MAAM/M,MAAMsL,EAAOO,IAKxDH,eACW,IAAIY,GAAUtP,KAAKqP,MAAOU,MAAMC,SAK3CtB,aACW,IAAIY,GAAUtP,KAAKqP,MAAOU,MAAMtB,OAM3CC,KAAKK,UACM/O,KAAKgP,UAAUD,GAASE,YAAYF,GAM/CL,UAAUK,UACC,IAAIO,GAAUtP,KAAKqP,MAAOU,MAAMf,UAAUD,IAMrDL,YAAYK,UACD,IAAIO,GAAUtP,KAAKqP,MAAOU,MAAMd,YAAYF,IAEvDL,cACW,IAAIY,GAAUtP,KAAKqP,MAAOU,MAAMb,sBAG3BI,aCjMpBzD,OAAOuC,eAAe6B,GAAS,aAAc,CAAE7N,OAAO,mBACrC,EAIjB,SACIsM,mBACSwB,OAAS,GAElBxB,IAAIvF,EAAMgH,KAAUC,eACXF,OAAOrR,KAAK,CAAEsK,KAAAA,EAAMgH,MAAAA,EAAOC,OAAAA,KACzB,EAEX1B,IAAIvF,EAAMkH,GAAQ,UACPA,EAAQrQ,KAAKkQ,OAAOvD,WAAYzL,EAAEiI,KAAKmH,OAAOnH,KAC/CnJ,KAAKkQ,OAAOvD,WAAYzL,EAAEiI,KAAKiG,WAAWjG,KAEpDuF,gBACW1O,KAAKkQ,OAEhBxB,aACSwB,OAAS,GAElBxB,eACW1O,KAAKkQ,OAAOtR,SAErB2R,OAAOC,sBACMtP,KAAKlB,KAAKkQ,aACXhP,aAIDuP,aC9BjB,YAAsBC,UACXA,EAAI5N,QAAQ,UAAW,QAHlC+I,OAAOuC,eAAeuC,GAAS,aAAc,CAAEvO,OAAO,iDACO,kBAItCwO,kBACvB,SAAqBF,SACV,IAAIE,GAAaF,OAG5B,MAAMG,GAAWC,QAAeA,EAAIC,SAAS,KAAKC,oBAClD,SAAepS,EAAS,QAChBqS,EAAM,IAAIC,WAAWtS,EAAS,iBAC3BuS,OAAOC,gBAAgBH,GACvBlP,MAAMsP,KAAKJ,EAAKJ,IAASzI,KAAK,KCdzCyD,OAAOuC,eAAekD,GAAS,aAAc,CAAElP,OAAO,sBAClC,EACpB,MAAMiM,GAASkD,GACTtB,GAAWuB,GACXC,GAAUC,GAIhB,SAIIhD,YAAYiD,EAAQC,OACZhC,EAAIiC,EAAIC,EAAIC,OACXC,WAA6F,UAA1EJ,MAAAA,OAAyC,EAASA,EAAQI,kBAA+B,IAAPpC,EAAgBA,EAAK,QAC1HqC,QAAuF,UAAvEL,MAAAA,OAAyC,EAASA,EAAQK,eAA4B,IAAPJ,GAAgBA,OAC/GK,UAA2F,UAAzEN,MAAAA,OAAyC,EAASA,EAAQM,iBAA8B,IAAPJ,GAAgBA,OACnHH,OAASA,QACRlM,EAAwF,UAA3EmM,MAAAA,OAAyC,EAASA,EAAQO,mBAAgC,IAAPJ,EAAgBA,EAAKJ,EAAO3I,eAC7HvD,KAAOzF,KAAKkS,UAAYE,GAAUF,UAAUzM,GAAQA,OACpD4M,UAAY,QACZnC,OAAS,IAAID,GAASQ,YACtBzG,QAAU,CAACsI,KAAKC,UAAUvS,KAAKyF,YAC/B+M,aAAe,EAMxB9D,YAAY+D,QACHJ,UAAUxT,KAAK4T,GAMxB/D,eAAe+D,SACLvJ,EAAQlJ,KAAKqS,UAAUlS,QAAQsS,GACjCvJ,WACKmJ,UAAU5F,OAAOvD,EAAO,GAOrCwF,mBACUgE,EAAaJ,KAAKC,UAAUvS,KAAKyF,MACnCzF,KAAKgK,QAAQhK,KAAKwS,gBAAkBE,SAC/BF,cAAgB,OAChBxI,QAAQyC,OAAOzM,KAAKwS,aAAcxS,KAAKgS,WAAYU,GACpD1S,KAAKgK,QAAQpL,OAASoB,KAAKgS,kBACtBhI,QAAQyC,OAAO,EAAG,QAClB+F,cAAgB,SAGxBG,mBAKTjE,wBACS2D,UAAU1N,aACPzG,EAAE0U,eACAA,YAAY5S,MACd9B,EAAEgS,UACAA,OAAOlQ,KAAKkQ,WAO1BxB,MAAMtM,EAAOyQ,QACJpN,KAAOrD,OACP0Q,SAASD,QACTE,aAOTrE,IAAIvF,OACIgB,EAAOnK,KAAKyF,cACXd,qBACY,IAATwF,SACOA,IACPnK,KAAKkS,WAA0B,iBAANhR,EAClBiJ,EAAKjJ,GAAGiJ,KAGRA,EAAKjJ,MAGbiJ,EAOXuE,IAAIvF,EAAM/G,EAAO4Q,MACkB,IAA3B7J,EAAK8J,WAAWrU,wBACXsU,MAAM9Q,GAAO,OAGlB+H,EAAOnK,KAAKyF,OACXgJ,MAAM9J,kBACS,IAAZwF,EAAKjJ,IAAuC,iBAAZiJ,EAAKjJ,IAAsC,iBAAZiJ,EAAKjJ,KAChElB,KAAKkS,WAA0B,iBAANhR,IACpBA,GAAK,CAAEiJ,KAAM,GAAIgJ,GAAI1B,GAAQ2B,WAG7BlS,GAAK,MAGdlB,KAAKkS,WAA0B,iBAANhR,EAClBiJ,EAAKjJ,GAAGiJ,KAGRA,EAAKjJ,MAGP,OAATiJ,SAEU,IAAV/H,GAAyC,iBAAVA,GAAsBiR,MAAMjR,GAChC,iBAAhB+G,EAAKmK,SACP7G,OAAOtD,EAAKmK,OAAQ,UAGlBnJ,EAAKhB,EAAKmK,QAGhBtT,KAAKkS,WAAoC,iBAAhB/I,EAAKmK,SAC9BnK,EAAKmK,QAAU,CAAEnJ,KAAM/H,EAAO+Q,GAAI1B,GAAQ2B,WAG1CjK,EAAKmK,QAAUlR,EAEpB4Q,IAEAhT,KAAKiS,iBACGsB,IAAI,MAAOpK,EAAK4H,WAAYuB,KAAKC,UAAUnQ,SAElD0Q,UAAS,QACTC,eAKTrE,OACQ1O,KAAKwS,aAAe,SACfA,cAAgB,OAChB/M,KAAO6M,KAAKkB,MAAMxT,KAAKgK,QAAQhK,KAAKwS,oBACpCM,UAAS,QACTH,oBAMbjE,OACQ1O,KAAKwS,aAAexS,KAAKgK,QAAQpL,OAAS,SACrC4T,cAAgB,OAChB/M,KAAO6M,KAAKkB,MAAMxT,KAAKgK,QAAQhK,KAAKwS,oBACpCM,UAAS,QACTH,oBAMbjE,SAASmE,OACDjD,QACEzG,GAAO,IAAIkF,GAAOS,MAAO2E,UAAUzT,WACpCkQ,OAAOwD,aACPjO,KAA2G,UAA9FzF,KAAK2R,OAAOmB,SAAS3J,EAAMnJ,KAAKyF,KAAMzF,KAAKkQ,OAAQ,CAAE2C,MAAAA,EAAOX,UAAWlS,KAAKkS,mBAAiC,IAAPtC,EAAgBA,EAAK,GAEjJlB,MAAMvF,EAAMgH,KAAUC,SACZuD,EAAa,IAAI1D,GAASQ,SACrBmD,IAAIzK,EAAMgH,EAAOC,QACvBiC,UAAU1N,aACPzG,EAAEgS,UACAA,OAAOyD,uBAGJvR,MACTL,MAAMC,QAAQI,UACPA,EAAM2G,SAAU,CACnBoB,KAAMnK,KAAKkS,UAAUzO,GACrB0P,GAAI1B,GAAQ2B,eAGM,iBAAVhR,GAAgC,OAAVA,EAAgB,OAC5CyR,EAAM,iBACLC,QAAQ1R,GAAO2G,KAAI,EAAEtH,EAAGgC,QACvBhC,GAAKzB,KAAKkS,UAAUzO,MAErBoQ,SAGAzR,gBAICgQ,6BC9MbhE,kBAAwB,aAAc,CAAEhM,OAAO,YACvC2R,OAAcA,OAAcA,OAAcA,aAAe,UACxD,CACZ9U,KAAM,IAAM,OACZ+U,SAAU,OACVhL,QAAS,OACTiL,QAAS,KAAM,EACfC,KAAM,KAAM,EACZC,SAAU,KAAM,EAChBzF,kBAAoB1O,MACpBoU,SAAW7S,GAAMA,EACjB8S,QAAS,IAAM,GACfvB,SAAU,CAACtR,EAAGiC,IAAMA,EACpB6Q,iBAAkB,OAClB5F,KAAK6F,EAAMpL,KAASqL,UAAeD,EAAKnU,KAAK,CAAE+J,KAAMnK,MAAQmJ,KAASqL,IACtEC,UAAW,KAAM,EACjBC,OAAQ,IAAM,WAEJ,CAACvK,EAAMwK,IAAUC,OACxBzK,GAA0B,mBAATwK,EAAsBA,EAAKxK,GAAQwK,UAE7C,CAACxV,EAAKgL,IAAS4J,GAAQc,IAAI1K,EAAM,CAC3C8J,QAAU1S,QAA4B,IAAtBA,EAAE1C,KAAKM,GAAK0Q,wBAEnB1F,UACF2K,OACA3K,GADA,CAEHgK,SAAU,KAAM,sBAIVhK,UACH2K,OACA3K,GADA,CAEH+J,KAAM,KAAM,eClCpBrI,OAAOuC,eAAe2G,GAAS,aAAc,CAAE3S,OAAO,wBAChC,EACtB,MAAMkP,GAAcC,GACdyD,GAASxD,kBAIO,IACXsD,OACAE,GAAOC,MADP,CAEHhW,KAAM,IAAM,UACZ+J,QAAS,KAAM,EACfqL,QAAS,IAAM,CAAC,QAAS,QACzB3F,SAASvF,EAAM/G,EAAO8N,EAAQ0B,UACtBA,EAAQiB,OAA0B,kBAAVzQ,MAChBwP,EAAQM,UAAYZ,GAAYc,UAAUF,UAAUlS,KAAKgJ,WAAahJ,KAAKgJ,WAElE,kBAAV5G,QAAiC,IAAVA,KACvBwR,IAAIzK,EAAM,0BAEd/G,GAEXsM,KAAK6F,EAAMpL,KAASqL,OACZ5E,SAC4B,UAAlB2E,EAAKW,eAA4B,IAAPtF,EAAgBA,EAAK2E,EAAKnU,MAAMsF,KAAK6O,EAAM,CAAEpK,KAAMnK,MAAQmJ,KAASqL,sBCxBxH3I,OAAOuC,eAAe+G,GAAS,aAAc,CAAE/S,OAAO,qBACnC,EACnB,MAAMkP,GAAcC,GACdyD,GAASxD,eACI,CAAC1S,EAAUsW,SACtBxF,EAAIiC,QACFwD,EAAkF,UAAtED,MAAAA,OAAuC,EAASA,EAAOE,iBAA8B,IAAP1F,EAAgBA,EAAK,EAC/GtH,EAAkF,UAAtE8M,MAAAA,OAAuC,EAASA,EAAOG,iBAA8B,IAAP1D,EAAgBA,EAAK2D,EAAAA,EAC/GC,gBAAkD,EAASL,EAAOE,0BAAsD,EAASF,EAAOG,kBACtIT,OACDE,GAAOC,MADN,CAEJhW,KAAM,IAAM,OACZ+J,QAAS,kBAA8C,EAASoM,EAAOE,WAAa,IAAIvT,MAAMsT,IAAMtM,QAASjK,EAASkK,YAAa,GACnI0F,SAASvF,EAAMD,SACLwM,EAAYxM,EAAQ,SACLC,EAAK8J,WACTrU,QAAU8W,EAChB1V,KAEJlB,EAAS6W,SAASxM,EAAMuM,IAEnCtB,UAASjL,EAAMD,IACJC,EAAKtK,KAAK+W,SAAS1M,EAAM6H,aAAa9B,YAAY,SAE7DP,SAASvF,EAAM/G,EAAO8N,EAAQ0B,UACtBA,EAAQiB,QAAU9Q,MAAMC,QAAQI,OACxBwP,EAAQM,UAAYZ,GAAYc,UAAUF,UAAUlS,KAAKgJ,WAAahJ,KAAKgJ,WAElFjH,MAAMC,QAAQI,IAIVqT,MAAkB7W,OAASyW,GAAOjT,EAAMxD,OAAS0J,GAClD+M,IAAQ/M,IACDsL,IAAIzK,EAAM,iCAAkC/G,EAAMxD,OAAQyW,KAG1DzB,IAAIzK,EAAM,mCAAoC/G,EAAMxD,OAAQyW,EAAK/M,GAGvElG,EAAMxD,OAASyW,IACbzB,IAAIzK,EAAM,mCAAoC/G,EAAMxD,OAAQyW,GAE9DjT,EAAMxD,OAAS0J,KACbsL,IAAIzK,EAAM,kCAAmC/G,EAAMxD,OAAQ0J,GAE/DlG,EAAM2G,KAAI,CAACrB,EAAKwB,WACb2M,EAAS/W,EAASgU,SAAS3J,EAAKtK,KAAKqK,GAAQ0I,EAAQM,UAAYxK,EAAIyC,KAAOzC,EAAKwI,EAAQ0B,UACxFA,EAAQM,UAAY,CAAE/H,KAAM0L,EAAQ1C,GAAIzL,EAAIyL,IAAO0C,SAnBnDjC,IAAIzK,EAAM,uBACV/G,IAqBfsM,KAAK6F,EAAMpL,KAASqL,OACZsB,SACyB,UAAfvB,EAAKwB,YAAyB,IAAPD,EAAgBA,EAAKvB,EAAKnU,MAAMsF,KAAK6O,EAAM,CAAEpK,KAAMnK,KAAMlB,SAAAA,EAAUsW,OAAQA,MAAAA,EAAuCA,EAAS,IAAMjM,KAASqL,iBCrD3L3I,OAAOuC,eAAe4H,GAAS,aAAc,CAAE5T,OAAO,uBACjC,EACrB,MAAM4S,GAASzD,iBAIO0E,GACXnB,OACAE,GAAOC,MADP,CAEHvG,KAAKvF,UACMnJ,KAAKkW,WAAW/M,GAAM,GACxBgB,KAAKlL,KAAKkK,IAEnBuF,SAASvF,UACEnJ,KAAKkW,WAAW/M,GAAM,GACxBgB,KAAK6J,SAAS7K,IAEvBH,QAAS,IAAMiN,EAAM,GAAG9L,KAAKnB,UAC7B0F,SAASvF,EAAMD,OACP0G,QACE8F,EAAYxM,EAAQ,SACkC,UAA/ClJ,KAAKkW,WAAW/M,EAAKnG,MAAM,EAAG0S,WAAgC,IAAP9F,OAAgB,EAASA,EAAGzF,KAAKwL,SAASxM,EAAMD,IAExHwF,SAASvF,EAAMhK,OACPyQ,EAAIiC,SACwG,UAAlE,UAA3B7R,KAAKkW,WAAW/M,UAA0B,IAAPyG,OAAgB,EAASA,EAAGzF,KAAKiK,SAASjL,EAAMhK,UAAyB,IAAP0S,EAAgBA,EAAK1I,GAEjJuF,QAAQvF,EAAM/G,OACNwN,EAAIiC,SACyG,UAAnE,UAA3B7R,KAAKkW,WAAW/M,UAA0B,IAAPyG,OAAgB,EAASA,EAAGzF,KAAKkK,QAAQlL,EAAM/G,UAA2B,IAAPyP,EAAgBA,EAAKoE,EACzItJ,WAAYxL,EAAE6G,MAAMmB,KACpBJ,QAAS5H,EAAEgJ,KAAKkK,QAAQlL,EAAM/G,KAC9BoM,QAAO,CAACjN,EAAGJ,IAAMI,EAAE4U,OAAOhV,MAEnCuN,SAASvF,EAAM/G,EAAO8N,EAAQ0B,OACtBzQ,EAAInB,KAAKkW,WAAW/M,eACd,IAANhI,EACOiB,EAEJjB,EAAEgJ,KAAK2I,SAAS3J,EAAM/G,EAAO8N,EAAQ0B,IAEhDlD,iBAAiBvF,OACTyG,SACoC,UAA3B5P,KAAKkW,WAAW/M,UAA0B,IAAPyG,OAAgB,EAASA,EAAGzF,KAAKmK,iBAAiBnL,IAEtGuF,WAAWvF,EAAMiN,SACPC,EAAS,CAAChV,EAAGK,SAAYkO,EAAIiC,SAAkC,UAAhBnQ,EAAE4U,gBAA6B,IAAP1G,EAAgBA,EAAK,IAA4B,UAAhBvO,EAAEiV,gBAA6B,IAAPzE,EAAgBA,EAAK,IACrJ0E,EAAeN,EAAMtJ,WAAYxL,EAAE6G,MAAMmB,KAAO1I,KAAK4V,UACvDD,GAAoC,IAAxBG,EAAa3X,OAClBqX,EAAMxV,KAAK4V,GAAQ,GAEtBE,EAAa3X,OAAS,EAAI2X,EAAa,QAAK,GAExD7H,KAAK6F,EAAMpL,KAASqL,UACTxU,KAAKkW,WAAW/M,GAAM,GACxBgB,KAAKoK,KAAKA,EAAMpL,KAASqL,yBCvDnCpG,iBAAwB,aAAc,CAAEhM,OAAO,qBAC7B2R,eAAuBA,eAAuBA,kBAAqB,QACtFyC,EAAajF,GACbkF,EAAejF,GACfkF,EAAchF,gBAIC,CAACiF,EAASvB,WAWrBwB,EAAaH,EAAaT,WAAWW,EAAQ5N,SAAU,CACzD9J,KAAMkC,EAAElC,KACRqX,SAAUnV,EAAEmV,SACZtO,MAAQmB,GAbI,EAAC0N,EAAQzU,QACjByU,EAAO7O,aACA6O,EAAO7O,MAAM5F,UAEhByU,EAAO5X,UACN,cAAe8C,MAAMC,QAAQI,OAC7B,eAAkC,iBAAVA,IAAuBL,MAAMC,QAAQI,yBAC3CA,IAAUyU,EAAO5X,OAM3B6X,CAAQ3V,EAAGgI,EAAK0G,OACjC1F,KAAMhJ,EAAEgJ,iBAEL2K,OACA8B,GADA,CAEHlI,SAASvF,EAAM/G,EAAO8N,EAAQ0B,OACtBiF,EAASD,EAAWV,WAAW/M,GAAM,UACrC0N,EAAO1M,KAAKgK,WACL/R,EAEJyU,EAAO1M,KAAK2I,SAAS3J,EAAM/G,EAAO8N,EAAQ0B,IAErDlD,KAAK6F,EAAMpL,KAASqL,OACZ5E,SAC2B,UAAjB2E,EAAKsC,cAA2B,IAAPjH,EAAgBA,EAAK2E,EAAKnU,MAAMsF,KAAK6O,EAAM,CAAEpK,KAAMnK,KAAM2W,QAAAA,EAASvB,OAAQA,MAAAA,EAAuCA,EAAS,GAAIwB,WAAAA,GAAczN,KAASqL,aAIlMuC,EAAWnT,GAAO,CAACuG,EAAMiL,IACpBrB,EAAQiD,WAAW,CACtB,CACI/X,KAAM2E,EACNuG,KAAAA,EACA8M,OAAQ,CAACxT,EAAGmO,SAAkBhC,SAA2B,UAAVnM,EAAE,UAAuB,IAAPmM,EAAgBA,gBAAgD,EAASgC,EAAQM,WAAawE,EAAYtE,UAAUF,UAAU/H,EAAKnB,WAAamB,EAAKnB,YAE1N,CACI/J,KAAM,OACNkL,KAAMqM,EAAWrB,SAAShL,GAC1B8M,UAAaxT,EAAI,CAACA,GAAK,KAE5B2R,kBAEgB2B,EAAQ,yBACRA,EAAQ,2BACN,CAACG,EAAYC,EAAYC,IACvCrD,EAAQiD,WAAW,CACtB,CACI/X,KAAM,SACNqX,SAAU,EACVnM,KAAM+M,EACND,UAAapL,OAAOwL,KAAKD,GAAS,IAEtC,CACInY,KAAM,SACNkL,KAAMgN,EACNF,eAAmBrH,SAAiC,UAAhBwH,EAAQ3T,UAAuB,IAAPmM,EAAgBA,EAAKwH,EAAQvL,OAAOwL,KAAKD,GAAS,uBCnE1HvL,OAAOuC,eAAekJ,GAAS,aAAc,CAAElV,OAAO,oBACpC,EAClB,MAAM4S,GAASzD,GACTD,GAAcE,cAIF,CAAC6F,EAAMvY,EAAUsW,IACxBN,OACAE,GAAOC,MADP,CAEHhW,KAAM,IAAM,MACZ+J,QAAS,KAAO,IAChB0F,SAASvF,EAAMD,SACLwM,EAAYxM,EAAQ,SACLC,EAAK8J,WACTrU,QAAU8W,EAChB1V,KAEJlB,EAAS6W,SAASxM,EAAMuM,IAEnCtB,UAASjL,EAAMhK,IACJgK,EAAK6F,UAAU7P,GAE1BkV,QAAUlL,GAASkO,EAAKhD,QAAQlL,EAAM,IACtCuF,SAASvF,EAAM/G,EAAO8N,EAAQ0B,MACtBA,EAAQiB,OAA0B,iBAAVzQ,MAChBwP,EAAQM,UAAYZ,GAAYc,UAAUF,UAAUlS,KAAKgJ,WAAahJ,KAAKgJ,WAEzE,OAAV5G,GAAmC,iBAAVA,WAClBwR,IAAIzK,EAAM,yBACV/G,MAEPyR,EAAM,iBACHwD,KAAKjV,GAAOuC,eACVmO,SAAS3J,EAAM1H,EAAGyO,EAAQ0B,KAC3BnQ,GAAK3C,EAASgU,SAAS3J,EAAKtK,KAAK4C,GAAIW,EAAMX,GAAIyO,EAAQ0B,MAExDiC,GAEXnF,iBAAiBvF,OACTyG,SACgF,UAAvEwF,MAAAA,OAAuC,EAASA,EAAOmC,kBAA+B,IAAP3H,EAAgBA,EAAKyH,EAAK/C,iBAAiBnL,EAAKtK,KAAK,MAErJ6P,KAAK6F,EAAMpL,KAASqL,OACZ5E,SACwB,UAAd2E,EAAKxL,WAAwB,IAAP6G,EAAgBA,EAAK2E,EAAKnU,MAAMsF,KAAK6O,EAAM,CAAEpK,KAAMnK,KAAMqX,KAAAA,EAAMvY,SAAAA,EAAUsW,OAAQA,MAAAA,EAAuCA,EAAS,IAAMjM,KAASqL,gBC7ChM3I,OAAOuC,eAAeoJ,GAAS,aAAc,CAAEpV,OAAO,uBACjC,EACrB,MAAMkP,GAAcC,GACdyD,GAASxD,iBACO4D,QACdxF,EAAIiC,EAAIC,QACN2F,kBAAkD,EAASrC,EAAOsC,QAA0F,UAApEtC,MAAAA,OAAuC,EAASA,EAAOqC,eAA4B,IAAP7H,GAAgBA,EACpLyF,gBAA8C,EAASD,EAAOsC,OAAS,EAA0E,UAAhEtC,MAAAA,OAAuC,EAASA,EAAOC,WAAwB,IAAPxD,EAAgBA,OACzKvJ,gBAA8C,EAAS8M,EAAOsC,OAAS,SAAiF,UAAhEtC,MAAAA,OAAuC,EAASA,EAAO9M,WAAwB,IAAPwJ,EAAgBA,EAAK0D,EAAAA,EACrLC,OAA2E,kBAAzB,EAASL,EAAOC,WAAuF,kBAAzB,EAASD,EAAO9M,YAC/IwM,OACAE,GAAOC,MADP,CAEHhW,KAAM,IAAM,SACZ+J,QAAS,IAAMqM,EAAM,EAAIA,EAAM,EAC/B3G,SAASvF,EAAM/G,EAAO8N,EAAQ0B,UACtBA,EAAQiB,OAA0B,iBAAVzQ,MAChBwP,EAAQM,UAAYZ,GAAYc,UAAUF,UAAUlS,KAAKgJ,WAAahJ,KAAKgJ,WAElE,iBAAV5G,IACAwR,IAAIzK,EAAM,yBAEZsO,IAAYE,OAAOC,UAAUxV,KAC3BwR,IAAIzK,EAAM,0BAEZsM,MAAoBJ,GAAOjT,EAAQkG,KACjCsL,IAAIzK,EAAM,qCAAsC/G,EAAOiT,EAAK/M,GAE9DlG,EAAQiT,IACNzB,IAAIzK,EAAM,qCAAsC/G,EAAOiT,GAEzDjT,EAAQkG,KACNsL,IAAIzK,EAAM,oCAAqC/G,EAAOkG,GAE1DlG,GAEXsM,KAAK6F,EAAMpL,KAASqL,OACZsB,SAC2B,UAAjBvB,EAAKsD,cAA2B,IAAP/B,EAAgBA,EAAKvB,EAAKnU,MAAMsF,KAAK6O,EAAM,CAAEpK,KAAMnK,KAAMyX,QAAAA,EAASpC,IAAAA,EAAK/M,IAAAA,EAAKmN,QAAAA,EAASL,OAAQA,MAAAA,EAAuCA,EAAS,IAAMjM,KAASqL,qCCrCxMpG,iBAAwB,aAAc,CAAEhM,OAAO,iBACjC2R,OAAeA,cAAiB,QAC/C+D,EAASvG,GACTwG,EAASvG,GACTwG,EAAWtG,GACXuG,EAAUC,GACVxB,EAAcyB,YACH5H,OAAO,iBACTA,OAAO,qBACD,CAAC6H,EAAQhD,mBACoDtD,UAA7DuG,QAAS1L,GAASkF,IAAQyG,MAAOrC,GAA4BnE,EAAlByG,gKAAkBzG,EAAlB,CAAnD0G,KAA0BA,OAC7BC,EAAmBtP,YACN,IAAXwD,SACO4L,QACLG,EAAcX,EAAOY,aAAaxP,EAAMwD,GAAQkD,MAChDqG,EAAaD,EAAMyC,UAClB9D,OAAK2D,GAAkBrC,IAE5B0C,EAAoB,CAACzP,EAAM0P,SACzB/C,QACE4C,EAAc/L,EAASoL,EAAOY,aAAaxP,EAAMwD,GAAQkD,WAAQ,EACjEiJ,EAAanM,GAAwC,UAAxBsJ,EAAMyC,UAAiC,IAAP5C,EAAgBA,EAAW,GACxFiD,EAAWlN,OAAOwL,KAAKyB,GACvBE,gBAA0D,EAAS5D,EAAOnV,SAC5E,IAAI8X,EAAOzI,UAAUnG,EAAK8P,WAAY,IAAIlB,EAAOjJ,KAAK3F,EAAK8J,WAAY,CAACmC,EAAOnV,WAAakJ,wBAChC,EAASiM,EAAO8D,uBAAyBR,GAAeK,EAASI,SAASN,GACtIG,EAAgB/J,YAAYyJ,GAAeM,GACzBna,KAAKga,WAEvB/D,OACDgD,EAAO7C,MADN,CAEJhW,KAAM,IAAM,SACZ+U,SAAU,IAAMoB,MAAAA,OAAuC,EAASA,EAAOpB,SACvEhL,QAAS,KAAO,IAChB0F,cACW1O,KAAKmU,YAEhBzF,SAASvF,EAAMD,SACLwM,EAAYxM,EAAQ,EACpBkQ,EAAejQ,EAAK8J,cACtBmG,EAAaxa,QAAU8W,SAChB1V,WAGLmK,EADesO,EAAgBtP,EAAKnG,MAAM,EAAG0S,IACzB0D,EAAa1D,WAChCvL,MAAAA,OAAmC,EAASA,EAAKwL,SAASxM,EAAMuM,IAE3EtB,UAASjL,EAAMhK,IACJyZ,EAAkBzP,EAAMhK,EAAI4R,YAEvCrC,QAAQvF,EAAM/G,SACJiX,EAAeZ,EAAgBtP,GAC/BmQ,EAAezN,OAAOwL,KAAsB,iBAAVjV,EAAqBA,EAAQ,WAC9DyJ,OAAOwL,KAAKgC,GACd1M,WAAY0M,EAAa5X,GAAGwS,QAAQ9K,KACpCwD,YAAa2M,EAAaH,SAAS1X,KACnCsH,IAAIkP,EAAQsB,cAErB7K,SAASvF,EAAM/G,EAAO8N,EAAQ0B,MACtBA,EAAQiB,OAA0B,iBAAVzQ,MAChBwP,EAAQM,UAAYwE,EAAYtE,UAAUF,UAAUlS,KAAKgJ,WAAahJ,KAAKgJ,WAElE,iBAAV5G,GAAgC,OAAVA,WACtBwR,IAAIzK,EAAM,yBACV/G,MAEPiX,EAAed,KACf5L,EAAQ,OACF6M,EAAazB,EAAOY,aAAaxP,EAAMwD,OACzC+L,EAAcc,EAAW3J,SACzB1G,EAAKmH,OAAOkJ,EAAW/K,OAAQ,OACzBgL,EAAcD,EAAWlG,SACjBiF,EAAckB,GAAa3G,SAAS3J,EAAKtK,KAAK4a,GAAcrX,EAAMqX,GAAc,IAAIzB,EAASvH,OAAUmB,KAE1GgD,OAAKyE,GAAiBpD,EAAMyC,UAEzCgB,EAAa7N,OAAOwL,KAAKgC,GACzBM,EAAaD,EAAW/M,YAAa0M,EAAa5X,GAAG0S,aACrDkD,EAAO,IAAIuC,IAAI,IAAID,KAAe9N,OAAOwL,KAAKjV,SAChDyR,EAAM,YACLlP,gBACG+U,EAAWP,SAAS1X,GAAI,KACnB4X,EAAa5X,GAAGwS,QAAQ9K,gBAEvB0Q,EAAWR,EAAa5X,GAAGqR,SAAS3J,EAAKtK,KAAK4C,GAAIW,EAAMX,GAAIyO,EAAQ0B,IACrEyH,EAAa5X,GAAGyS,QAAUmF,EAAa5X,GAAG0S,kBAC1B,OACTpS,MAAMC,QAAQ6X,IAAiC,IAApBA,EAASjb,QACpCib,EAASja,cAAgBiM,QAA2C,IAAjCA,OAAOwL,KAAKwC,GAAUjb,eAC1DiV,EAAIpS,MAGPA,GAAKoY,IACJZ,WAAWnJ,IAAI3G,EAAKtK,KAAK4C,GAAIoY,GAAU,WAI5CpY,GAAKW,EAAMX,MAGhBoS,GAEXnF,KAAK6F,EAAMpL,KAASqL,OACZsB,SAC2B,UAAjBvB,EAAKuF,cAA2B,IAAPhE,EAAgBA,EAAKvB,EAAKnU,MAAMsF,KAAK6O,EAAM,CAAEpK,KAAMnK,KAAMoY,OAAQG,EAAenD,OAAQA,MAAAA,EAAuCA,EAAS,GAAIzI,OAAAA,EAAQsJ,MAAAA,EAAOwC,gBAAAA,EAAiBG,kBAAAA,GAAqBzP,KAASqL,sBCxG7P3I,OAAOuC,eAAe2L,GAAS,aAAc,CAAE3X,OAAO,sBAClC,eACA,CAAC4X,EAASrI,KAAY,CACtCjD,KAAKvF,UACM6Q,EAAQnK,IAAI8B,GAAQ1S,KAAKqI,KAAKtH,KAA9Bga,CAAoC7Q,IAE/CuF,SAASvF,UACE6Q,EAAQnK,IAAI8B,GAAQqC,SAAS1M,KAAKtH,KAAlCga,CAAwC7Q,IAEnDuF,iBACWsL,EAAQnK,IAAI8B,GAAQ3I,QAAQ1B,KAAKtH,KAAjCga,IAEXC,WAAU9Q,EAAM/G,IACL4X,EAAQnK,IAAI8B,GAAQsI,UAAU9Q,EAAM/G,GAE/CsM,QAAQvF,UACG6Q,EAAQnK,IAAI8B,GAAQsC,QAAQ3M,KAAKtH,KAAjCga,CAAuC7Q,IAElDuF,cACWsL,EAAQnK,IAAI8B,GAAQuC,KAAK5M,KAAKtH,KAA9Bga,IAEXtL,kBACWsL,EAAQnK,IAAI8B,GAAQwC,SAAS7M,KAAKtH,KAAlCga,IAEXtL,SAASvF,EAAMD,UACJ8Q,EAAQnK,IAAI8B,GAAQgE,SAASrO,KAAKtH,KAAlCga,CAAwC7Q,EAAMD,IAEzDwF,SAASvF,EAAMhK,UACJ6a,EAAQnK,IAAI8B,GAAQyC,SAAS9M,KAAKtH,KAAlCga,CAAwC7Q,EAAMhK,IAEzDuP,QAAQvF,EAAM/G,UACH4X,EAAQnK,IAAI8B,GAAQ0C,QAAQ/M,KAAKtH,KAAjCga,CAAuC7Q,EAAM/G,IAExDsM,SAASvF,EAAM/G,EAAO8N,EAAQ0B,UACnBoI,EAAQnK,IAAI8B,GAAQmB,SAASxL,KAAKtH,KAAlCga,CAAwC7Q,EAAM/G,EAAO8N,EAAQ0B,IAExElD,iBAAiBvF,UACN6Q,EAAQnK,IAAI8B,GAAQ2C,iBAAiBhN,KAAKtH,KAA1Cga,CAAgD7Q,IAE3DuF,KAAK6F,EAAMpL,KAASqL,UACTwF,EAAQnK,IAAI8B,GAAQ4C,KAAKjN,KAAKtH,KAA9Bga,CAAoCzF,EAAMpL,KAASqL,IAE9D9F,WAAWvF,EAAMiN,UACN4D,EAAQnK,IAAI8B,GAAQuE,WAAW5O,KAAKtH,KAApCga,CAA0C7Q,EAAMiN,IAE3D1H,UAAUvF,EAAM/G,UACL4X,EAAQnK,IAAI8B,GAAQ8C,UAAUnN,KAAKtH,KAAnCga,CAAyC7Q,EAAM/G,IAE1DsM,OAAOvF,EAAM/G,UACF4X,EAAQnK,IAAI8B,GAAQ+C,OAAOpN,KAAKtH,KAAhCga,CAAsC7Q,EAAM/G,gBCjD3DyJ,OAAOuC,eAAe8L,GAAS,aAAc,CAAE9X,OAAO,uBACjC,EACrB,MAAM4S,GAASzD,GACTE,GAAUD,GACVF,GAAcI,GACdyI,GAAU/X,QACRwN,WACuB,UAAXxN,SAA0B,IAAPwN,OAAgB,EAASA,EAAGwK,OAE7DC,GAAejY,QACbwN,WACuB,UAAXxN,SAA0B,IAAPwN,OAAgB,EAASA,EAAG0K,0BAK9C,CAACC,EAAanF,WACzBoF,EAAYL,GAAO/E,GACM,iBAAhBA,EAAOgF,KACZ,SAAYxK,SAA6G,UAA5F2K,MAAAA,OAAiD,EAASA,EAAY1K,IAAIuF,EAAOgF,aAA0B,IAAPxK,EAAgBA,EAAK,IACtJ,IAAMwF,EAAOgF,KACwD,2BAA/B,EAAShF,EAAOkF,WACtB,iBAAvBlF,EAAOhF,OAAOqK,KAClBrF,EAAOhF,OAAOqK,KAAKrL,WAAW,KAC3B,SAAYQ,SAA6H,UAA5G2K,MAAAA,OAAiD,EAASA,EAAY1K,IAAIuF,EAAOhF,OAAOqK,KAAKzX,MAAM,WAAwB,IAAP4M,EAAgBA,EAAK,IACtK,SAAYA,SAAoH,UAAnG2K,MAAAA,OAAiD,EAASA,EAAY1K,IAAIuF,EAAOhF,OAAOqK,aAA0B,IAAP7K,EAAgBA,EAAK,IACjK,IAAMwF,EAAOhF,OAAOqK,KACxB,IAAM,UACT3F,OACAE,GAAOC,MADP,CAEHhW,KAAM,IAAM,SACZ+J,QAAS,IAAM,GACf0F,SAASvF,EAAM/G,EAAO8N,EAAQ0B,MACtBA,EAAQiB,OAA0B,iBAAVzQ,SACP8P,UAAYZ,GAAYc,UAAUF,UAAUlS,KAAKgJ,WAAahJ,KAAKgJ,iBAAc,GAEjF,iBAAV5G,WACAwR,IAAIzK,EAAM,yBACV/G,KAEPiY,GAAYjF,KACa,aAArBA,EAAOkF,WAA4BlY,EAAMxD,OAAS,IAAMwD,EAAM+W,SAAS,SAClD,MAAb/W,EAAM,GACR,cAAgBA,EAAMY,MAAM,GAC5B,aAAeZ,GAEA,aAArBgT,EAAOkF,YAA4D,iBAAvBlF,EAAOhF,OAAOqK,MAAqBrF,EAAOhF,OAAOqK,KAAKrL,WAAW,MAC5GgG,EAAOhF,OAAOsK,UAAyB,MAAbtY,EAAM,IACjCgT,EAAOhF,OAAOuK,cACdvF,EAAOhF,OAAOwK,sBACPxY,KAGV+X,GAAO/E,IAAWA,EAAOyF,kBACnBzY,QAEL0Y,EAASN,WACXM,EAAOlc,OAAS,IAAMkc,EAAO3B,SAAS/W,MAC/BwR,IAAIzK,EAAM,4BAA6B/G,GAE3CA,GAEXiS,QAAS,IAAMmG,IAAYzR,IAAI0I,GAAQ8H,aACvCjF,qBACW+F,GAAYjF,GAAUA,OAAS,EAE1C1G,KAAK6F,EAAMpL,KAASqL,OACZ5E,SAC2B,UAAjB2E,EAAKwG,cAA2B,IAAPnL,EAAgBA,EAAK2E,EAAKnU,MAAMsF,KAAK6O,EAAM,CAAEpK,KAAMnK,KAAMwa,UAAAA,EAAWpF,OAAAA,GAAUjM,KAASqL,iBCpE1I3I,OAAOuC,eAAe4M,GAAS,aAAc,CAAE5Y,OAAO,cCAtDyJ,OAAOuC,eAAe6M,GAAS,aAAc,CAAE7Y,OAAO,iDACA,oBAItD,MACIsM,mBACSwM,SAAW,GAEpBxM,SAASyE,EAAIhJ,QACJ+Q,SAAS/H,GAAMhJ,EAExBuE,IAAIyE,SACMhJ,EAAOnK,KAAKkb,SAAS/H,eACd,IAAThJ,WACQgG,MAAM,2BAA2BgD,+BAEtChJ,0BAOf,MACIuE,mBACSwM,SAAW,GAEpBxM,SAASyE,EAAI4C,QACJmF,SAAS/H,GAAM4C,EAExBrH,IAAIyE,SACM4C,EAAO/V,KAAKkb,SAAS/H,eACd,IAAT4C,WACQoF,KAAK,+BAA+BhI,+BAEzC4C,MAAAA,EAAmCA,EAAO,eCpCzDlK,OAAOuC,eAAegN,GAAS,aAAc,CAAEhZ,OAAO,oBCAlDiZ,EAAmBrb,IAAQA,GAAKsb,yBAA4BxP,OAAU,SAAStN,EAAGmD,EAAGF,EAAG8Z,QAC7E,IAAPA,MAAuB9Z,UACpB2M,eAAe5P,EAAG+c,EAAI,CAAEC,YAAY,EAAM3L,IAAK,kBAAoBlO,EAAEF,OAC1E,SAASjD,EAAGmD,EAAGF,EAAG8Z,QACT,IAAPA,MAAuB9Z,KACzB8Z,GAAM5Z,EAAEF,KAEVga,EAAgBzb,IAAQA,GAAKyb,cAAiB,SAAS9Z,EAAG+Z,WACjDna,KAAKI,EAAa,YAANJ,GAAoBma,EAAQC,eAAepa,MAAoBma,EAAS/Z,EAAGJ,WAE7F6M,iBAAwB,aAAc,CAAEhM,OAAO,MACzCmP,GAA8BwC,KAC9BvC,GAAyBuC,KACzBrC,GAA2BqC,KAC3BmE,GAAyBnE,KACzBoE,GAAgCpE,KAChC6H,GAA+B7H,KAC/B8H,GAA6B9H,KAC7B+H,GAA4B/H,KAC5BgI,GAA+BhI,KAC/BiI,GAA+BjI,KAC/BkI,GAA8BlI,KAC9BmI,GAA+BnI,KAC/BoI,GAA+BpI,KAC/BqI,GAAmBrI,KACnBsI,GAAyBtI,KACzBuI,GAA+BvI,wBC1B5ClI,OAAOuC,eAAemO,GAAS,aAAc,CAAEna,OAAO,4BAC5B,qBAC1B,SAAyBmY,KACTiC,SAAS,sBAAuB,CACxC,+BACA,yBACA,0BACA,8BACA,gCACA,6BACA,yBACA,kCACA,4BACA,2BACA,wBACA,+BACA,iCACA,0BACA,+BACA,gCACA,uBACA,8BACA,oCACA,+BACA,uBACA,qBACA,0BACA,yBACA,+BACA,iCACA,4BACA,0BACA,iCACA,yBACA,6BACA,4BACA,wBACA,iBACA,2BACA,uBACA,2BACA,gCAEQA,SAAS,uBAAwB,CACzC,kBACA,iBACA,gBACA,uBACA,yBACA,qBACA,kBACA,wBAEQA,SAAS,sBAAuB,CACxC,wBACA,qBACA,sBACA,8BACA,iCACA,uBACA,qCACA,2BACA,0BACA,uBACA,0BACA,0BACA,uCACA,wBACA,6BACA,mCAEQA,SAAS,qBAAsB,CACvC,sBACA,uBACA,qBACA,qBACA,oBACA,2BACA,yBACA,6BACA,gCACA,4BACA,wBACA,0BACA,4BACA,6BACA,sBACA,qBACA,uBACA,wBACA,4BACA,gCAEQA,SAAS,YAAa,CAC9B,oBACA,sBACA,8BACA,wBACA,uBACA,gBACA,yBACA,sBACA,eACA,qBACA,0BACA,sBACA,iCAEQA,SAAS,oBAAqB,CACtC,mBACA,YACA,UACA,iBACA,iBACA,QACA,YACA,YACA,aACA,WACA,aACA,WACA,UACA,kBACA,cAEQA,SAAS,YAAa,CAC9B,sBACA,uBACA,wBAEQA,SAAS,UAAW,CAC5B,mBACA,aACA,WACA,WACA,cACA,WACA,cACA,iBACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,gBACA,WACA,WACA,2BACA,eACA,iBACA,YACA,2BACA,iBACA,mBACA,YACA,wBACA,aACA,kBACA,wBACA,cAEQA,SAAS,OAAQ,CACzB,WACA,UACA,OACA,QACA,OACA,WAEQA,SAAS,WAAY,CAC7B,WACA,WACA,YACA,gBAEQA,SAAS,gBAAiB,CAClC,OACA,gBACA,SACA,oBAEQA,SAAS,cAAe,CAChC,eACA,OACA,SACA,oBAEQA,SAAS,iCAAkC,CACnD,gCACA,sCACA,0BAEQA,SAAS,iBAAkB,CACnC,UACA,WACA,SACA,QACA,aACA,cACA,WACA,eACA,iBACA,oBACA,QACA,eACA,gBACA,iBACA,oBACA,gBACA,cACA,cACA,cACA,oBACA,cACA,gBACA,cACA,eACA,eACA,aACA,mBAEQA,SAAS,eAAgB,CACjC,MACA,iBACA,aACA,gBACA,YACA,qBACA,WACA,cACA,OACA,cACA,iBACA,oBACA,SACA,gBACA,cACA,qBACA,eACA,SACA,kBACA,wBACA,OACA,YACA,aACA,WACA,UACA,kBACA,gBACA,aACA,WACA,cACA,aACA,SACA,OACA,OACA,QACA,WACA,YACA,SACA,sBAEQA,SAAS,oBAAqB,CACtC,kBACA,kBACA,oBACA,qBACA,oBACA,mBACA,iBACA,mBACA,+BACA,+BACA,oBACA,+DCtRDpO,iBAAwB,aAAc,CAAEhM,OAAO,wBAC1B2R,QAAgBA,sBAAyB,QAC/D0I,EAASlL,gCACYyI,EAASO,SAC1BmC,EAAaD,EAAOvC,WAAW5S,UAAK,EAAWiT,GAC/CoC,EAAYF,EAAO1C,UAAUzS,UAAK,EAAW0S,KAC3CwC,SAAS,cAAeC,EAAO5H,IAAI4H,EAAOG,WAAW,CACzDC,KAAMH,EAAW,CAAEpC,UAAW,WAAYlK,OAAQ,CAAEqK,KAAM,WAC1DqC,WAAYL,EAAOM,IAAIN,EAAOnF,QAAQoF,IAAcA,IAAc,CA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wB,GAAmBoK,OAAO8P,eAAejW,KAAKysB,EAAK1wB,OAAoBosB,EAAQsE,EAAK1wB,aACzGosB,EAAQsE,GACpBtE,GAEXhiB,OAAOuC,eAAeikB,GAAS,aAAc,CAAEjwB,OAAO,IACtD,4CAA8C,EAC9C,MAAMghB,GAAS7R,GACT+gB,GAAgB9gB,GAChB+gB,GAAY7gB,GAClB,sBAAsBwgB,GAAaha,IAMnC,yBALA,iBACUqC,EAAc,IAAI6I,GAAOoP,6BACjBC,gBAAgBlY,GACvBA,GAsBXmY,iBALA,SAAoBnY,SACVP,EAAU,IAAIoJ,GAAOuP,yBACjBC,YAAY5Y,EAASO,GACxBP,iMChDXnO,OAAOuC,eAAemO,GAAS,aAAc,CAAEna,OAAO,4BAC5B,qBAC1B,SAAyBmY,KACTiC,SAAS,sBAAuB,CACxC,+BACA,yBACA,0BACA,8BACA,gCACA,6BACA,yBACA,kCACA,4BACA,2BACA,wBACA,+BACA,iCACA,0BACA,+BACA,gCACA,uBACA,8BACA,oCACA,+BACA,+BACA,uBACA,qBACA,0BACA,yBACA,4CACA,+BACA,0CACA,iCACA,4BACA,0BACA,yBACA,6BACA,4BACA,wBACA,uBACA,iBACA,4CACA,2BACA,uBACA,2BACA,gCAEQA,SAAS,YAAa,CAC9B,sBACA,uBACA,wBAEQA,SAAS,iBAAkB,CACnC,sBACA,uBACA,wBAEQA,SAAS,UAAW,CAC5B,mBACA,aACA,WACA,WACA,cACA,WACA,cACA,iBACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,gBACA,WACA,WACA,2BACA,eACA,iBACA,YACA,2BACA,iBACA,mBACA,YACA,wBACA,aACA,kBACA,wBACA,cAEQA,SAAS,OAAQ,CACzB,WACA,UACA,OACA,QACA,OACA,WAEQA,SAAS,WAAY,CAC7B,WACA,WACA,YACA,gBAEQA,SAAS,0BAA2B,CAC5C,sBACA,mBACA,gBACA,sBACA,kBACA,iCAEQA,SAAS,gBAAiB,CAClC,OACA,gBACA,SACA,oBAEQA,SAAS,cAAe,CAChC,eACA,OACA,SACA,oBAEQA,SAAS,iCAAkC,CACnD,gCACA,sCACA,0BAEQA,SAAS,iBAAkB,CACnC,UACA,WACA,SACA,QACA,aACA,cACA,WACA,eACA,iBACA,oBACA,QACA,eACA,gBACA,iBACA,oBACA,gBACA,cACA,cACA,cACA,oBACA,cACA,gBACA,cACA,eACA,eACA,aACA,mBAEQA,SAAS,cAAe,CAChC,kBACA,kBACA,iBACA,UACA,WACA,QACA,iBACA,UACA,YACA,WACA,gBACA,aACA,mBACA,gBACA,YACA,aACA,YACA,cAEQA,SAAS,eAAgB,CACjC,MACA,iBACA,aACA,gBACA,YACA,qBACA,WACA,cACA,OACA,cACA,iBACA,oBACA,SACA,gBACA,cACA,qBACA,eACA,SACA,kBACA,wBACA,OACA,YACA,aACA,WACA,UACA,kBACA,gBACA,aACA,WACA,cACA,aACA,SACA,OACA,OACA,QACA,WACA,YACA,SACA,sBAEQA,SAAS,8BAA+B,CAChD,mBACA,yBACA,8BACA,mBACA,yBACA,0BACA,4BACA,2BACA,2BACA,wBACA,uBACA,kBACA,6BACA,qBACA,wBACA,iCACA,kCACA,kCACA,iCACA,iCACA,yBACA,sCACA,kCACA,0BACA,yCACA,uCACA,qBACA,kBACA,wBACA,sBACA,wBACA,sBACA,gCACA,wBACA,iCACA,uBACA,sBACA,gCACA,+BACA,+BACA,sBACA,2BACA,0BACA,mCACA,yBACA,yBACA,wBACA,gCACA,4CACA,qCACA,wBACA,mBACA,6BACA,4BACA,sBACA,gCACA,8BACA,sBACA,sBACA,yBACA,2BACA,wBACA,gCACA,wBACA,sBACA,sBACA,sBACA,uBACA,iCACA,6BACA,sBACA,wBACA,yBACA,sCACA,2BACA,yBACA,0BACA,yBACA,yBACA,gBACA,yBACA,2BACA,qBACA,6BACA,6BACA,wBACA,wBACA,qBACA,wBACA,4BACA,2BACA,4BACA,qBACA,wBACA,8BACA,uBACA,yBACA,qBACA,sBACA,sBACA,8BACA,8BACA,yBACA,0BACA,6BACA,kCACA,+BACA,iCACA,mCACA,gCACA,yBACA,gCACA,8BACA,qCACA,4BACA,uBACA,iCACA,+BACA,+BACA,+BACA,8BACA,gCACA,gCACA,8BACA,6BACA,wBACA,0BACA,+BACA,4BACA,sCACA,oCACA,mCACA,6BACA,4BACA,8BACA,+BACA,6BACA,6BACA,qBACA,qBACA,uBACA,yBACA,sBACA,iBACA,6BACA,+BACA,gCACA,gCACA,+BACA,+BACA,uBACA,0BACA,+BACA,+BACA,0BACA,4BACA,2BACA,4BACA,2BACA,0BACA,iCACA,iCACA,0BACA,yBACA,+BACA,wBACA,wBACA,yBACA,yBACA,mBACA,kCACA,uBACA,6BACA,wBACA,+BACA,wBACA,8BACA,yBACA,gCACA,2BACA,0BACA,oCACA,wBACA,2BACA,kBACA,gCACA,kCACA,qCACA,iCACA,yBACA,8BAEQA,SAAS,wCAAyC,CAC1D,4BACA,4BACA,2BACA,qBACA,qBACA,kBACA,2BACA,oBACA,2BACA,sBACA,qBACA,0BACA,4BACA,4BACA,6BACA,iCACA,iCACA,mCACA,iCACA,gCACA,gCACA,0BACA,8BACA,sBACA,uBACA,sBACA,2BACA,2BACA,4BACA,0BACA,8BAEQA,SAAS,sCAAuC,CACxD,qBACA,0BACA,2BACA,mBACA,gBACA,4BACA,yBACA,sBACA,6BACA,kBACA,8BACA,uBACA,qBACA,qBACA,mBACA,iBACA,uBACA,8BACA,6BACA,kBACA,kBACA,0BACA,gCAEQA,SAAS,iBAAkB,CACnC,QACA,SACA,gBACA,SACA,MACA,SACA,OACA,WACA,SACA,OACA,QACA,SACA,QACA,UACA,QACA,QACA,cAEQA,SAAS,iBAAkB,CACnC,kBACA,4BACA,cACA,iBACA,gBACA,uBAEQA,SAAS,kBAAmB,CACpC,MACA,aAEQA,SAAS,oBAAqB,CACtC,kBACA,kBACA,oBACA,qBACA,oBACA,mBACA,iBACA,mBACA,+BACA,+BACA,oBACA,+DCngBDpO,iBAAwB,aAAc,CAAEhM,OAAO,wBAC1B2R,aAAqBA,QAAgBA,uBAA+BA,uBAA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EAAU,IAAIoJ,GAAOuP,yBACjBC,YAAY5Y,EAASO,GACxBP,iMChDXnO,OAAOuC,eAAemO,GAAS,aAAc,CAAEna,OAAO,4BAC5B,qBAC1B,SAAyBmY,KACTiC,SAAS,sBAAuB,CACxC,+BACA,yBACA,0BACA,8BACA,gCACA,6BACA,yBACA,kCACA,4BACA,2BACA,wBACA,+BACA,iCACA,0BACA,+BACA,gCACA,uBACA,8BACA,oCACA,+BACA,+BACA,uBACA,6BACA,qBACA,0BACA,yBACA,4CACA,+BACA,0CACA,iCACA,4BACA,0BACA,yBACA,6BACA,2BACA,4BACA,wBACA,uBACA,iBACA,4CACA,2BACA,uBACA,uBACA,2BACA,gCAEQA,SAAS,YAAa,CAC9B,sBACA,uBACA,wBAEQA,SAAS,iBAAkB,CACnC,sBACA,uBACA,wBAEQA,SAAS,UAAW,CAC5B,mBACA,aACA,WACA,WACA,cACA,WACA,cACA,iBACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,gBACA,WACA,WACA,2BACA,eACA,iBACA,YACA,2BACA,iBACA,mBACA,YACA,wBACA,aACA,kBACA,wBACA,cAEQA,SAAS,OAAQ,CACzB,WACA,UACA,OACA,QACA,OACA,WAEQA,SAAS,WAAY,CAC7B,WACA,WACA,YACA,gBAEQA,SAAS,0BAA2B,CAC5C,sBACA,mBACA,gBACA,sBACA,kBACA,iCAEQA,SAAS,gBAAiB,CAClC,OACA,SACA,gBACA,oBAEQA,SAAS,cAAe,CAChC,eACA,OACA,SACA,oBAEQA,SAAS,iCAAkC,CACnD,gCACA,sCACA,0BAEQA,SAAS,iBAAkB,CACnC,UACA,WACA,SACA,QACA,aACA,cACA,WACA,eACA,iBACA,oBACA,QACA,eACA,gBACA,iBACA,oBACA,gBACA,cACA,cACA,cACA,oBACA,cACA,gBACA,cACA,eACA,eACA,aACA,mBAEQA,SAAS,cAAe,CAChC,kBACA,kBACA,iBACA,UACA,WACA,QACA,iBACA,UACA,YACA,WACA,gBACA,aACA,mBACA,gBACA,YACA,aACA,YACA,cAEQA,SAAS,eAAgB,CACjC,MACA,iBACA,aACA,gBACA,YACA,qBACA,WACA,cACA,OACA,cACA,iBACA,oBACA,SACA,gBACA,cACA,qBACA,eACA,SACA,kBACA,wBACA,OACA,YACA,aACA,WACA,UACA,kBACA,gBACA,aACA,WACA,cACA,aACA,SACA,OACA,OACA,QACA,WACA,YACA,SACA,sBAEQA,SAAS,8BAA+B,CAChD,mBACA,yBACA,8BACA,mBACA,yBACA,0BACA,4BACA,2BACA,2BACA,wBACA,uBACA,kBACA,6BACA,qBACA,wBACA,iCACA,kCACA,kCACA,iCACA,iCACA,yBACA,sCACA,kCACA,0BACA,yCACA,uCACA,qBACA,kBACA,wBACA,sBACA,wBACA,sBACA,gCACA,wBACA,iCACA,uBACA,sBACA,gCACA,+BACA,+BACA,sBACA,2BACA,0BACA,mCACA,yBACA,yBACA,wBACA,gCACA,4CACA,qCACA,wBACA,mBACA,6BACA,4BACA,sBACA,gCACA,8BACA,sBACA,sBACA,yBACA,2BACA,wBACA,gCACA,wBACA,sBACA,sBACA,sBACA,uBACA,iCACA,6BACA,sBACA,wBACA,yBACA,sCACA,2BACA,yBACA,0BACA,yBACA,yBACA,gBACA,yBACA,2BACA,qBACA,6BACA,6BACA,wBACA,wBACA,qBACA,wBACA,4BACA,2BACA,4BACA,qBACA,wBACA,8BACA,uBACA,yBACA,qBACA,sBACA,sBACA,8BACA,8BACA,yBACA,0BACA,6BACA,kCACA,+BACA,iCACA,mCACA,gCACA,yBACA,gCACA,8BACA,qCACA,4BACA,uBACA,iCACA,+BACA,+BACA,+BACA,8BACA,gCACA,gCACA,8BACA,6BACA,wBACA,0BACA,+BACA,4BACA,sCACA,oCACA,mCACA,6BACA,4BACA,8BACA,+BACA,6BACA,6BACA,qBACA,qBACA,uBACA,yBACA,sBACA,iBACA,6BACA,+BACA,gCACA,gCACA,+BACA,+BACA,uBACA,0BACA,+BACA,+BACA,0BACA,4BACA,2BACA,4BACA,2BACA,0BACA,iCACA,iCACA,0BACA,yBACA,+BACA,wBACA,wBACA,yBACA,yBACA,mBACA,kCACA,uBACA,6BACA,wBACA,+BACA,wBACA,8BACA,yBACA,gCACA,2BACA,0BACA,oCACA,wBACA,2BACA,kBACA,gCACA,kCACA,qCACA,iCACA,yBACA,8BAEQA,SAAS,wCAAyC,CAC1D,4BACA,4BACA,2BACA,qBACA,qBACA,kBACA,2BACA,oBACA,2BACA,sBACA,qBACA,0BACA,4BACA,4BACA,6BACA,iCACA,iCACA,mCACA,iCACA,gCACA,gCACA,0BACA,8BACA,sBACA,uBACA,sBACA,2BACA,2BACA,4BACA,0BACA,8BAEQA,SAAS,sCAAuC,CACxD,qBACA,0BACA,2BACA,mBACA,gBACA,4BACA,yBACA,sBACA,6BACA,kBACA,8BACA,uBACA,qBACA,qBACA,mBACA,iBACA,uBACA,8BACA,6BACA,kBACA,kBACA,0BACA,gCAEQA,SAAS,iBAAkB,CACnC,QACA,SACA,gBACA,SACA,MACA,SACA,OACA,WACA,SACA,OACA,QACA,SACA,QACA,UACA,QACA,QACA,cAEQA,SAAS,iBAAkB,CACnC,kBACA,4BACA,cACA,iBACA,gBACA,uBAEQA,SAAS,kBAAmB,CACpC,MACA,aAEQA,SAAS,oBAAqB,CACtC,kBACA,kBACA,oBACA,qBACA,oBACA,mBACA,iBACA,mBACA,+BACA,+BACA,oBACA,sBAEQA,SAAS,iBAAkB,CACnC,OACA,qBACA,sBACA,kBACA,mBACA,gBACA,aACA,cACA,eACA,gBACA,gBACA,mBACA,kBACA,gBACA,QACA,iBACA,kBACA,eACA,mBACA,gBACA,gBACA,oBACA,mBACA,iBACA,SACA,UACA,gBACA,kBACA,sBACA,yBACA,SACA,eACA,WACA,cACA,SACA,QACA,UACA,QACA,SACA,SACA,aAEQA,SAAS,YAAa,CAC9B,QACA,SACA,UACA,aACA,SACA,OACA,OACA,OACA,aACA,OACA,SACA,OACA,QACA,QACA,MACA,2BCnkBR3Q,OAAOuC,eAAe+U,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A,QACA,OACA,WAEQA,SAAS,WAAY,CAC7B,WACA,WACA,YACA,gBAEQA,SAAS,gBAAiB,CAClC,OACA,SACA,gBACA,oBAEQA,SAAS,cAAe,CAChC,eACA,OACA,SACA,oBAEQA,SAAS,iCAAkC,CACnD,gCACA,sCACA,0BAEQA,SAAS,iBAAkB,CACnC,UACA,WACA,SACA,QACA,aACA,cACA,WACA,eACA,iBACA,oBACA,QACA,eACA,gBACA,iBACA,oBACA,gBACA,cACA,cACA,cACA,oBACA,cACA,gBACA,cACA,eACA,eACA,aACA,mBAEQA,SAAS,cAAe,CAChC,kBACA,kBACA,iBACA,UACA,WACA,QACA,iBACA,UACA,YACA,WACA,gBACA,aACA,mBACA,gBACA,YACA,aACA,YACA,cAEQA,SAAS,eAAgB,CACjC,MACA,iBACA,aACA,gBACA,YACA,qBACA,WACA,cACA,OACA,cACA,iBACA,oBACA,SACA,gBACA,cACA,qBACA,eACA,SACA,kBACA,wBACA,OACA,YACA,aACA,WACA,UACA,kBACA,gBACA,aACA,WACA,cACA,aACA,SACA,OACA,OACA,QACA,WACA,YACA,SACA,sBAEQA,SAAS,iBAAkB,CACnC,QACA,SACA,gBACA,SACA,MACA,SACA,OACA,WACA,WACA,SACA,OACA,QACA,SACA,QACA,UACA,QACA,QACA,UACA,kBAEQA,SAAS,iBAAkB,CACnC,kBACA,4BACA,cACA,iBACA,gBACA,uBAEQA,SAAS,kBAAmB,CACpC,MACA,aAEQA,SAAS,oBAAqB,CACtC,kBACA,kBACA,oBACA,qBACA,oBACA,mBACA,iBACA,mBACA,+BACA,+BACA,oBACA,sBAEQA,SAAS,iBAAkB,CACnC,OACA,qBACA,sBACA,kBACA,mBACA,gBACA,aACA,cACA,eACA,gBACA,gBACA,mBACA,kBACA,gBACA,QACA,iBACA,kBACA,eACA,mBACA,gBACA,gBACA,oBACA,mBACA,iBACA,SACA,UACA,gBACA,kBACA,sBACA,yBACA,SACA,eACA,WACA,cACA,SACA,QACA,UACA,QACA,SACA,S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"}